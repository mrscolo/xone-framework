{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/propComponents/Breadcrumb.vue?6bb7","webpack:///./src/components/propComponents/Button.vue?8977","webpack:///./src/components/uiComponents/Offline.vue?5f44","webpack:///./src/composables/appData/Exceptions/Exception.js","webpack:///./src/components/uiComponents/Camera.vue?ef48","webpack:///./src/components/dragAndDrop/DragControl.vue?041d","webpack:///./src/composables/appData/Utils/StringBuilder.js","webpack:///./src/components/uiComponents/Loader.vue?e4a5","webpack:///./src/components/propComponents/contentsComponents/PictureMap.vue?cd43","webpack:///./src/components/Row.vue?61df","webpack:///./src/composables/appData/Connection/JSONConnection/XoneJSONConnectionData.js","webpack:///./src/components/propComponents/Image.vue?8c2d","webpack:///./src/composables/appData/XoneScripts/ScriptContext.js","webpack:///./src/composables/appData/Connection/WebCore/XoneWebCoreConnection.js","webpack:///./src/composables/appData/Connection/WebCore/XoneWebCoreConnectionData.js","webpack:///./src/components/propComponents/LinkedSearchInline.vue?2373","webpack:///./src/composables/appData/Collections/HashMap/Hashtable.js","webpack:///./src/composables/appData/Utils/NumberUtils.js","webpack:///./src/components/uiComponents/Toast.vue?6f5b","webpack:///./src/composables/appData/Utils/CXoneNameValuePair.js","webpack:///./src/composables/XoneAppHandler.js","webpack:///./src/composables/helperFunctions/UrlHelper.js","webpack:///./src/composables/appData/Utils/TextUtils.js","webpack:///./src/components/propComponents/contentsComponents/ContentsRow.vue?95fc","webpack:///./src/components/propComponents/inputComponents/Checkbox.vue?13ef","webpack:///./src/composables/appData/Utils/ConnectionStringUtils.js","webpack:///./src/composables/appData/Utils/ObjectDeveloper.js","webpack:///./src/composables/appData/Collections/Vector.js","webpack:///./src/composables/appData/core/Localization/XoneMessageHolder.js","webpack:///./src/composables/appData/Xml/SAXImpl/SaxDocument.js","webpack:///./src/composables/appData/Xml/JSONImpl/XmlDocument.js","webpack:///./src/components/Prop.vue?3e21","webpack:///./src/composables/XoneUI.js","webpack:///./src/composables/appData/Utils/ObjUtils.js","webpack:///./src/composables/appData/Exceptions/IllegalArgumentException.js","webpack:///./src/composables/appData/Exceptions/NullPointerException.js","webpack:///./src/App.vue","webpack:///./src/components/uiComponents/Toast.vue","webpack:///./src/components/uiComponents/Toast.vue?ffcc","webpack:///./src/components/uiComponents/SnackBar.vue","webpack:///./src/components/uiComponents/SnackBar.vue?7616","webpack:///./src/components/uiComponents/Loader.vue","webpack:///./src/components/uiComponents/Loader.vue?1521","webpack:///./src/components/uiComponents/MsgBox.vue","webpack:///./src/components/uiComponents/MsgBox.vue?b551","webpack:///./src/components/uiComponents/Camera.vue","webpack:///./src/components/uiComponents/Camera.vue?1b3d","webpack:///./src/components/uiComponents/Url.vue","webpack:///./src/components/propComponents/Button.vue","webpack:///./src/composables/DragAndDrop.js","webpack:///./src/components/propComponents/Button.vue?a692","webpack:///./src/components/uiComponents/Url.vue?1e64","webpack:///./src/components/uiComponents/Offline.vue","webpack:///./src/components/uiComponents/Offline.vue?e255","webpack:///./src/components/dragAndDrop/SelectedControl.vue","webpack:///./src/components/dragAndDrop/SelectedControl.vue?9966","webpack:///./src/components/dragAndDrop/OverControl.vue","webpack:///./src/components/dragAndDrop/OverControl.vue?9ecf","webpack:///./src/components/dragAndDrop/DragControl.vue","webpack:///./src/components/dragAndDrop/DragControl.vue?ff3b","webpack:///./src/composables/XoneAnimation.js","webpack:///./src/composables/helperFunctions/FontsHelper.js","webpack:///./src/App.vue?5299","webpack:///./src/router/index.js","webpack:///./src/components/Container.vue","webpack:///./src/components/Row.vue","webpack:///./src/components/Row.vue?7426","webpack:///./src/components/Column.vue","webpack:///./src/components/Column.vue?6652","webpack:///./src/components/Prop.vue","webpack:///./src/components/propComponents/Input.vue","webpack:///./src/components/propComponents/LinkedSearchInline.vue","webpack:///./src/components/propComponents/LinkedSearchInline.vue?d028","webpack:///./src/components/propComponents/inputComponents/Checkbox.vue","webpack:///./src/components/propComponents/inputComponents/Checkbox.vue?c3fd","webpack:///./src/components/propComponents/Input.vue?ae01","webpack:///./src/components/propComponents/Image.vue","webpack:///./src/components/propComponents/Image.vue?3485","webpack:///./src/components/propComponents/Contents.vue","webpack:///./src/components/propComponents/contentsComponents/ContentsRow.vue","webpack:///./src/components/propComponents/contentsComponents/ContentsRow.vue?e543","webpack:///./src/components/propComponents/contentsComponents/Map.vue","webpack:///./src/composables/helperFunctions/MapHelper.js","webpack:///./src/composables/helperFunctions/ColorHelper.js","webpack:///./src/components/propComponents/contentsComponents/Map.vue?3ac0","webpack:///./src/components/propComponents/contentsComponents/Calendar.vue","webpack:///./src/composables/helperFunctions/DateHelper.js","webpack:///./src/components/propComponents/contentsComponents/Calendar.vue?3933","webpack:///./src/components/propComponents/contentsComponents/ChartBar.vue","webpack:///./src/composables/helperFunctions/ChartsHelper.js","webpack:///./src/composables/helperFunctions/ChartHelper.js","webpack:///./src/components/propComponents/contentsComponents/ChartBar.vue?e0c9","webpack:///./src/components/propComponents/contentsComponents/ChartPie.vue","webpack:///./src/components/propComponents/contentsComponents/ChartPie.vue?9783","webpack:///./src/components/propComponents/contentsComponents/PictureMap.vue","webpack:///./src/components/propComponents/contentsComponents/PictureMap.vue?2d2f","webpack:///./src/components/propComponents/Contents.vue?9500","webpack:///./src/components/propComponents/Web.vue","webpack:///./src/components/propComponents/Web.vue?d23e","webpack:///./src/components/propComponents/Video.vue","webpack:///./src/components/propComponents/Video.vue?def9","webpack:///./src/components/propComponents/Breadcrumb.vue","webpack:///./src/components/propComponents/Breadcrumb.vue?6ca5","webpack:///./src/components/Prop.vue?160b","webpack:///./src/components/Container.vue?60d7","webpack:///./src/composables/XoneFileManager.js","webpack:///./src/composables/XonePDF.js","webpack:///./src/composables/XoneClipboard.js","webpack:///./src/composables/XoneSystemSettings.js","webpack:///./src/composables/XoneDebugTools.js","webpack:///./src/composables/ScriptGlobalObjects.js","webpack:///./src/main.js","webpack:///./src/composables/appData/Utils/StringUtils.js","webpack:///./src/composables/helperFunctions/StringHelper.js","webpack:///./src/composables/appData/Connection/WebCore/XoneWebCoreResulset.js","webpack:///./src/composables/SwipeHandler.js","webpack:///./src/composables/appData/Manager/FileManager.js","webpack:///./src/composables/ContentsLoaderHandler.js","webpack:///./src/components/uiComponents/MsgBox.vue?29e7","webpack:///./src/composables/appData/Parsers/SQL/QueryTable.js","webpack:///./src/composables/appData/Parsers/SQL/QueryField.js","webpack:///./src/composables/appData/Parsers/SQL/SqlParser.js","webpack:///./src/composables/appData/core/CSS/XoneCssParser.js","webpack:///./src/composables/appData/Helpers/BufferedReader.js","webpack:///./src/composables/appData/core/CSS/CssParseException.js","webpack:///./src/composables/appData/core/CSS/XoneCssRule.js","webpack:///./src/composables/appData/Utils/Calendar.js","webpack:///./src/composables/appData/Manager/FileLoaderBrowser.js","webpack:///./src/components/Coll.vue","webpack:///./src/components/Groups.vue","webpack:///./src/components/Groups.vue?3380","webpack:///./src/composables/helperFunctions/GroupsHelper.js","webpack:///./src/components/Coll.vue?6242","webpack:///./src/composables/appData/Connection/XoneConnDataFlags.js","webpack:///./src/composables/appData/Utils/Guid.js","webpack:///./src/composables/appData/Connection/XoneConnectionData.js","webpack:///./src/components/Groups.vue?9aca","webpack:///./src/composables/appData/Utils/SqlType.js","webpack:///./src/components/uiComponents/SnackBar.vue?18e8","webpack:///./src/composables/appData/Manager/FileLoaderNodeJS.js","webpack:///./src/components/propComponents/Web.vue?3e08","webpack:///./src/composables/Firebase.js","webpack:///./src/composables/AppDataHandler.js","webpack:///./src/composables/appData/Xml/JSONImpl/XmlAttributes.js","webpack:///./src/App.vue?7b4e","webpack:///./src/components/propComponents/Contents.vue?4f14","webpack:///./src/components/propComponents/contentsComponents/ChartPie.vue?1ba3","webpack:///./src/composables/appData/Utils/XmlUtils.js","webpack:///./src/components/propComponents/contentsComponents/Map.vue?0420","webpack:///./src/components/uiComponents/Url.vue?903a","webpack:///./src/components/dragAndDrop/OverControl.vue?077b","webpack:///./src/composables/appData/Exceptions/XoneGenericException.js","webpack:///./src/composables/appData/Exceptions/IllegalStateException.js","webpack:///./src/composables/appData/Connection/JSONConnection/XoneJSONResulset.js","webpack:///./src/composables/appData/Connection/JSONConnection/XoneJSONConnection.js","webpack:///./src/composables/XoneAttributesHandler.js","webpack:///./src/composables/appData/Extensions/Extensions.js","webpack:///./src/components/propComponents/Input.vue?2b16","webpack:///./src/components/propComponents/contentsComponents/Calendar.vue?fb9a","webpack:///./src/components/Column.vue?9e00","webpack:///./src/composables/appData/Xml/JSONImpl/XmlNodeList.js","webpack:///./src/composables/appData/Xml/JSONImpl/XmlNode.js","webpack:///./src/composables/helperFunctions/MobileBrowserHelper.js","webpack:///./src/components/Coll.vue?4b3d","webpack:///./src/composables/appData/Exceptions/XoneValidationException.js","webpack:///./src/composables/appData/core/XoneDataObject.js","webpack:///./src/composables/appData/Connection/Test/XoneTestResulset.js","webpack:///./src/composables/helperFunctions/DeviceHelper.js","webpack:///./src/components/propComponents/contentsComponents/ChartBar.vue?4b39","webpack:///./src/components/Container.vue?880d","webpack:///./src/composables/appData/core/XoneError.js","webpack:///./src/composables/appData/Exceptions/XoneMessageKeys.js","webpack:///./src/composables/appData/core/XoneBrowseData.js","webpack:///./src/composables/appData/Utils/DataUtils.js","webpack:///./src/composables/appData/core/Macros/MacrosEvaluator.js","webpack:///./src/composables/appData/core/XoneCompany.js","webpack:///./src/composables/appData/Utils/Base64.js","webpack:///./src/composables/appData/Utils/HashUtils.js","webpack:///./src/composables/appData/core/XoneUser.js","webpack:///./src/composables/appData/core/XoneLookupObject.js","webpack:///./src/composables/appData/Utils/ScriptUtils.js","webpack:///./src/composables/appData/core/XoneDataCollection.js","webpack:///./src/components/propComponents/Video.vue?0cf1","webpack:///./src/composables/helperFunctions/ImageHelper.js","webpack:///./src/composables/appData/xone/source/scripts/__SCRIPT_WRAPPER__.js","webpack:///./src/composables/XoneViewsHandler.js","webpack:///./src/components/dragAndDrop/SelectedControl.vue?6c20","webpack:///./src/composables/appData/Connection/GPSConnection/XoneGPSResulset.js","webpack:///./src/composables/appData/Connection/GPSConnection/XoneGPSConnection.js","webpack:///./src/composables/appData/Connection/GPSConnection/XoneGPSConnectionData.js","webpack:///./src/composables/appData/Transform/UIAttributes.js","webpack:///./src/composables/appData/Transform/UITransform.js","webpack:///./src/composables/appData/Utils/Utils.js","webpack:///./src/composables/appData/core/XoneApplication.js","webpack:///./src/composables/appData/XoneScripts/XOneJavascript.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","jsonpScriptSrc","p","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","Exception","this","m_message","getSimpleName","StringBuilder","text","m_data","Array","from","StringUtils","SafeToString","join","index","item","add","toString","position","charAt","XoneJSONConnectionData","context","Name","Owner","m_context","m_connection","XoneJSONConnection","getConnString","getName","ReadOnly","GetNewConnection","Connection","XoneTestResulset","cn","GetCurrentConnection","args","executeQueryAsync","countAsync","Sentence","Replicate","executeAsync","Collection","OperName","Rows","FieldName","Value","startsWith","TableName","KeyName","RowIdFieldName","RowId","tableName","RowID","XoneConnectionData","ScriptContext","HostCollection","m_object","m_coll","XoneDataObject","getOwnerCollection","m_lstLocalIncludes","ParamName","ParamValue","m_lstParams","Hashtable","IsEmptyString","put","delete","ActionNode","xna","SelectNodes","forEach","strName","isArray","ExtractArguments","CXoneNameValuePair","count","xarg","getAttrValue","Utils","PROP_ATTR_NAME","String","format","SetParam","XoneWebCoreConnection","sConnectionString","m_token","m_idsUrl","sUrlAddress","parseConnectionString","readBearerTokenAsync","token","TextUtils","isEmpty","fetch","method","headers","Authorization","body","JSON","stringify","response","json","hasError","parser","GetFields","toJSON","entries","collName","keys","GetSqlType","SqlType","SQLTYPE_SELECT","coll","action","where","GetWhereSentence","SQLTYPE_UPDATE","SQLTYPE_INSERT","getDataFromParser","getKeys","SQLTYPE_DELETE","MaxRows","tmp","SqlParser","ParseSqlString","executeNonQuery","formatOnlineData","bld","append","sUsername","sPassword","expires_in","Date","access_token","getAuthData","expire","setSeconds","getSeconds","XoneWebCoreResulset","assign","rs","populate","sConnection","parameters","ConnectionStringUtils","bIsLoginCall","ParseBoolValue","bIsJWTCall","sToken","EMPTY_STRING","nFlags","FLAG_XONEJSONODATA","FLAG_XONEJSONSQL","FLAG_XONEJSONCUSTOM","nTimeout","NumberUtils","SafeToInt","nSecurityLevel","trim","endsWith","substring","sMethod","sEndpoint","sAction","DEFAULT_ACTION_NAME","sAuthAction","DEFAULT_AUTHACTION_NAME","sContentType","DEFAULT_CONTENT_TYPE","bIsSqlQuery","bPostUrlEncode","bIsCertificatePinningEnabled","sLocalCertPath","bAuthenticate","sAuthenticationUsername","sAuthenticationPassword","bUseRemoteBroker","sRemoteMapped","sRemoteDest","bAllowUnsafeCertificates","parameter","OperType","values","whereClause","flags","cryptoData","login","pass","XoneWebCoreConnectionData","m_strConnString","res","_map","Map","_pointer","size","done","obj","substr","has","set","clear","iterator","str","Number","parseFloat","nDefault","ObjUtils","IsNothing","retValue","parseInt","isInteger","AppHandler","_instance","_version","appData","_appData","setAppNode","_orientation","_sizeConditions","_appNode","getAppNode","width","height","isNaN","setGlobalMacro","setVisualConditions","setSizeConditions","deviceId","localStorage","getItem","setItem","generateUniqueDeviceId","attributes","attrs","getDeviceId","Intl","DateTimeFormat","resolvedOptions","locale","split","language","countryCode","navigator","platform","vendor","getAppValueWithConditions","version","isMobile","getValue","attr","attribute","app","attributeNode","childs","find","items","map","filter","conditions","includes","filteredItems","sizeConditions","ex","getUrlParams","stringSearch","search","location","indexOf","parse","replace","decodeURIComponent","onErrorFunc","getPreviewObjects","sourcePath","urlParams","xmlString","cssString","jsString","v","xml","css","js","decode","decompress","doc","parseXoneXml","isPreview","fileManagerProperties","querySelector","fileManager","readFileAsync","filePath","sWA","AppData","Ui","Self","SelfDataColl","User","Func","Arguments","ui","self","selfDataColl","user","XArguments","eval","arg0","arg1","localeCompare","keyValuePair","sParameter","toLowerCase","ObjectDeveloper","strDateSep","strAMPM","dtTime","Datemask","ForceNulls","strMask","vt","GetTypeTag","OBJ_TYPE_DATE","OBJ_TYPE_CALENDAR","SafeToCalendar","NullPointerException","equals","Calendar","MONTH","DAY_OF_MONTH","YEAR","HOUR_OF_DAY","MINUTE","SECOND","contains","Replace","HOUR","NATIVE_TYPE_INT","NATIVE_TYPE_LONG","NATIVE_TYPE_BOOL","SafeToBool","OBJ_TYPE_NULL","NATIVE_TYPE_DOUBLE","NATIVE_TYPE_FLOAT","OBJ_TYPE_STRING","ONESECOND","ONEMINUTE","ONEHOUR","ONEDAY","ONEWEEK","ONEMONTH","ONEYEAR","Vector","objLru","remove","XoneMessageHolder","LangName","m_strLangName","m_lstMessages","Key","sDefault","containsKey","Source","isr","printStackTrace","closeSafely","Line","x","strKey","strValue","closeable","close","SaxDocument","require","SaxParser","cb","lastNode","sText","onStartDocument","onEndDocument","onStartElementNS","localName","prefix","uri","namespaces","bIndex","bFirstNode","XmlAttributes","getIndex","XmlNode","rootNode","onEndElementNS","elem","setText","getParentNode","onCharacters","chars","onCdata","cdata","log","onComment","msg","onWarning","onError","sPath","useTranslation","_a","_b","parseString","m_hndDoc","m_rootNode","node","XmlDocument","_doLogin","_msgBoxCallback","_customMsgBoxCallback","_hideLoaderCallback","_showGroupCallback","_showLoaderCallback","_showToastCallback","_showSnackbarCallback","_startCameraCallback","_xoneDataObject","_lastGpsPosition","setDoLogin","callback","setOpenUrlCallback","openUrlCallback","setMsgBoxCallback","msgBoxCallback","setCustomMsgBoxCallback","customMsgBoxCallback","setHideLoaderCallback","hideLoaderCallback","setShowGroupCallback","showGroupCallback","setShowLoaderCallback","showLoaderCallback","setShowToastCallback","showToastCallback","setShowSnackbarCallback","showSnackbarCallback","setStartCameraCallback","startCameraCallback","setXoneDataObject","xoneDataObject","_mapNotifications","XoneUI","title","description","dtStart","dtEnd","PropName","CaptureObjectName","xoneView","getView","clearDrawing","id","notification","DestinationLatitude","DestinationLongitude","SourceLatitude","SourceLongitude","Mode","StrokeColor","Prop","NodeName","delay","executeMethodAfterDelay","executeNode","AppDataHandler","deletelastBreadcrumb","history","back","clearBreadcrumbs","coords","latitude","longitude","accuracy","altitude","heading","timestamp","speed","DataObject","groupId","hideLoader","WebViewPropName","ScriptText","packageName","PackageName","ExtrasParam","isOnlyWebLayout","webLayout","xoneAppHandler","getWebLayout","addNewXoneDataObject","nextTick","entryPoint","getAppData","getEntryPointCollection","getCurrentVisualConditions","Lines","userName","getVariables","password","PhoneNumber","Message","Title","Sound","Vibrate","NumberRepeat","playSoundAndVibrate","msgBox","param","pushXoneDataObject","openEditView","element","style","display","click","Mask","Url","open","Extensions","inputElement","fileTypes","accept","onchange","uploadFile","files","fileName","targetProperty","finally","sound","Sounds","vibrate","ContinuePlaying","Audio","play","Data","Size","Level","Type","Width","Height","Path","Align","Dither","PageNumber","exitApp","webkitSpeechRecognition","SpeechRecognition","isXoneDataObject","isObject","onRecognize","recognition","continuous","interimResults","maxAlternatives","onresult","results","transcript","onspeechend","stop","start","Props","props","refresh","ContentName","Row","refreshRow","refreshSelectedRow","FileName","To","Cc","Subject","Attachments","Phone","Text","FeedMode","Language","Max","LedColor","LedOn","LedOff","Position","image","JSONObject","animationIn","animationInDuration","animationOut","animationOutDuration","Orientation","TextStatusBar","doNotification","Notification","permission","dismissNotification","icon","onclick","Function","requestPermission","params","showLoader","Seconds","speechSynthesis","speechSynthesisUtterance","SpeechSynthesisUtterance","lang","speak","TimeOut","Interval","Flags","geolocation","stopGps","getCurrentPosition","enableHighAccuracy","maximumAge","pos","_startGpsTimeout","startGps","PrinterType","NativeObject","Codes","Target","BackgroundImage","ScreenOrientation","file","generateUniqueId","formData","FormData","processData","contentType","catch","True","xoneUI","IsNumeric","oldVal","dt","getTime","setHours","setMinutes","setMilliseconds","SafeToComplexDate","toDateString","getHours","padStart","getMinutes","getOnlyTime","sep","sDate","regex","getInstance","sSeparator","getDateSeparator","Boolean","NOT_NATIVE_TYPE","IllegalArgumentException","class","containerWidth","containerHeight","webLayoutBreadcrumb","breadcrumb","isLayout","toastElements","to","toast","setup","duration","__exports__","snackBarElements","snackBar","actionTextColor","onSnackBarActionPressed","actionText","color","textColor","actionMethod","hideSnackBar","isLoaderVisible","state","visible","isCustomMsgbox","ref","onClick","btn1","btn2","msgboxBreadcrumb","objectInfo","components","Coll","btnOkElement","focus","isAccepted","layout","getBreadcrumbs","isMsgbox","isContents","isMsgBox","onMsgBoxOptionSelected","removeBreadcrumb","dataObject","isCameraVisible","isNotSupported","isVideoRecorded","isPhotoTook","autoplay","controls","isRecording","isTypePhoto","takePhoto","isTypeVideo","recordVideo","stream","videoElement","photoPreviewElement","videoPreviewElement","newValue","mediaDevices","enumerateDevices","getUserMedia","audio","video","srcObject","getTracks","track","videoTimeout","mediaRecorder","chunks","blobValue","imageWidth","offsetWidth","imageHeight","offsetHeight","canvas","overflow","getContext","drawImage","toBlob","blob","newImg","Image","URL","createObjectURL","revokeObjectURL","innerHTML","MediaRecorder","options","mimeType","isTypeSupported","ondataavailable","onstop","Blob","url","loading","disabled","locked","isExecutingOnClick","editInRow","isDisableEdit","noEditInRow","onTouchStart","onTouchEnd","onFocus","labelWidth","DragAndDrop","_isDesigner","_isDragging","_dragControl","parentElement","_designPadding","_selectedControl","_overControl","_overControls","pushOverControl","setOverControl","addOverControl","removeOverControl","preventDefault","stopPropagation","setSelectedControl","required","default","paddings","btnElement","fitSizeToContainer","isResized","doFit","fitHeightToContainer","fitWidthToContainer","xoneControl","addControl","lastBreadcrumb","breadcrumbId","activeGroup","imgPath","resolveImage","lastOpacity","hasPadding","top","right","bottom","left","opacity","animate","Button","isOnline","addEventListener","setOnline","setOffline","removeEventListener","onLine","isDesigner","isGroup","onMouseLeave","controlName","onParentButtonClick","onDragStart","onDragEnd","selectedControl","getSelectedControl","getBoundingClientRect","classList","setIsDragging","cursor","getIsDesigner","border","getBorderSelected","appPath","onMouseClick","overControl","getOverControl","vue","getBorderOver","isDragging","containerSelected","moveCursorTo","cursorCoordinates","containersInfo","containerInfo","onMouseEnter","getIsDragging","dragControl","getDragControl","isContainer","control","y","positionY","positionX","containerAux","aux","lastElementChild","firstElementChild","selectorSize","_widthFactor","_heightFactor","setWidthFactor","setHeightFactor","XoneAnimation","_animate","_target","_callback","_options","_keyframes","fill","initAnimate","scale","transform","setRelativeScaleX","setRelativeScaleY","setRelativeX","setRelativeY","alpha","iterations","setRotation","easing","addFontFaces","newStyle","getAppPath","createTextNode","origin","Toast","SnackBar","Loader","MsgBox","Camera","Offline","SelectedControl","OverControl","DragControl","XoneAppHandler","getVersion","router","route","isWebLayout","routeBreadcrumbs","isContentsRow","appWidth","appHeight","resizeTimeout","isInputFocused","onResize","allowZoom","isFirstTime","zoom","devicePixelRatio","innerWidth","innerHeight","orientation","setVisualConditionsMacros","widthFactor","heightFactor","displayScreenThresholds","showBreadcrumbs","XoneApplication","setAppData","setUserInterface","getConfig","config","path","debugging","previewObjects","previewFileManager","previewSWA","IniciarApp","FileManager","apiUrl","clientId","clientSecret","idsUrl","appSize","getAppSize","isScaleFontsize","webFontFactor","getWebFontFactor","setInmutableMacros","doLogin","doAutoLogin","ignoreEntryPoint","launchEntryPoint","paramsObj","getCollection","dataCollection","ExecuteCollAction","getIsAutoLogon","getAutoLogonUser","getAutoLogonPwd","getLoginCollectionName","routeTo","render","createWebHashHistory","process","routes","component","createRouter","group","keepAspectRatio","framebox","xone-name","onScroll","$event","onMouseDown","onDragOver","isDisableVisible","rows","row","iRow","xone-parent","column","iColumn","controlHeight","controlGrowHeight","controlWidth","controlGrowWidth","isActive","viewMode","model","attrKey","isInput","inputType","checkboxSize","isButton","isImage","isWeb","isVideo","isBreadcrumb","isDisabled","isLinked","floatingTooltip","multiLine","onInput","propValue","maxlength","fixedText","onChange","onFocusChanged","onKeyPress","step","numberStep","onLinkedSearchButtonClick","onAttachButtonClick","isLinkedSearchVisible","onSelectedItem","linkedSearchPosition","tooltip","for","isMouseOnInput","onHide","filterModel","onBlur","onFilterSelected","filteredRows","rowItem","iRows","iColumns","textAlign","emits","emit","mapColValues","getFieldPropertyValue","linkedTo","mapCol","mapFld","mapFilter","mapLinkFilter","setPosition","mapValue","xoneDataCollection","getControlProps","propAttributes","getPropAttributes","getLayout","setLinkFilter","setFilter","startBrowse","getCurrentItem","moveNext","divElement","rightPosition","topPosition","maxWidthPosition","heightPosition","elementHasScroll","scrollWidth","client","scrollHeight","clientHeight","imgChecked","imgUnchecked","onCheckboxCheckedChange","isRadio","radioGroup","objectIndex","prop","checked","onRadioCheckedChange","checkboxElement","radioElement","recordIndex","autosave","save","showSnackbar","changeModelValue","querySelectorAll","imageSize","getScaledSize","imgWidth","imgHeight","backgroundImageChecked","backgroundImageUnchecked","backgroundImageCheckedDisabled","imgCheckedDisabled","backgroundImageUncheckedDisabled","imgUncheckedDisabled","changeOpacity","Checkbox","LinkedSearchInline","linkedField","onChangeModelValue","textAreaElement","fitGrowTextArea","toXoneDate","atob","keyPressed","isExecutingAction","onEditorAction","executeMethod","executeBindedEvent","oldValue","btoa","onTextChanged","DoRunScriptAsync","newText","oldText","isFocused","floatingTooltipTransform","linkedSearchElement","calculateLinkedSearchButtonPosition","pickFile","allowedExtensions","onLabelClick","readOnly","draggable","alt","clearCanvas","imgElement","signaturePad","signElement","isRouterView","isMapView","fitHeight","isCalendarView","isPictureMapView","isChartView","isChartBar","isChartPie","contentsRowsInfo","rowInfo","isGridView","galleryColumns","isSlideView","isExpanView","rowsLength","isLoading","noDataMsg","isRowLoaded","visibilityBit","onContentsRowClick","onDataObjectChange","expanControl","isExpanded","contents","containerAttributes","getContainerAttributes","fixed","drawerOrientation","selectedItem","isOnContentsRowClickExecuting","ExecuteNode","onExpanItemSelected","doLoadAsync","isFirstLoad","recordId","setRecordId","ID","loadedRowsLength","setCloneOnPush","getLayoutAsync","expanLayout","setLayout","colorView","cellEvenColor","cellOddColor","cellSelectedBgColor","setRefresh","isExpandedView","m_xmlNode","backgroundColor","m_browserData","m_lstOrderedList","showLayers","onMouseWheel","showMarkerButton","onMarkerButtonClick","keyLayers","layer","checkIsLayerSelected","changeMapLayer","apiThunderforest","getMapLayers","L","streets","tileLayer","maxZoom","subdomains","hybrid","terrain","satellite","standard","attribution","bright","dark","worldImagery","noLabel","humanitary","smooth","outdoors","openTopoMap","cyclist","transport","neighbourhood","carto","watercolor","minZoom","ext","worldTopoMap","terrainLabels","onlyLabel","darkMatterOnlyLabels","positronOnlyLabels","cartoDVoyagerOnlyLabels","replaceLayerName","getDefaultMapLayer","loadLeaflet","lCssElement","lJsElement","lrmCssElement","lrmJsElement","Icon","Default","imagePath","normalizeWebColor","HEX2RGB","hex","shorthandRegex","g","b","exec","Color","Math","round","clamp","angle","PI","sin","cos","multiply","matrix","newR","newG","newB","linear","slope","intercept","h","max","min","Solver","baseColor","targetHSL","hsl","reusedColor","solveNarrow","solveWide","sort","a","loss","A","best","Infinity","initial","spsa","wide","A1","iters","gamma","bestLoss","deltas","highArgs","lowArgs","k","ck","pow","random","lossDiff","ak","fix","idx","filters","invert","sepia","saturate","hueRotate","brightness","contrast","colorHSL","abs","fmt","multiplier","currentMapTileLayer","mapLayers","markers","polyLines","polygons","Set","drawLine","lineStyle","points","LatLng","dashArray","firstpolyline","Polyline","weight","smoothFactor","addTo","drawArea","fillcolor","pattern","dataCoords","polygon","fillColor","drawRoute","Args","Routing","waypoints","latLng","sourceLatitude","sourceLongitude","destinationLatitude","destinationLongitude","routeWhileDragging","showAlternatives","clearLines","removeLayer","clearAreas","loadMap","getContents","loadAll","rowDataObject","drawMarkers","withFitBounds","bounds","LATITUD","LONGITUD","iconUrl","shadowUrl","iconSize","iconAnchor","marker","on","fitBounds","clearLayers","_layers","clearRoutes","removeControl","currentMapLayerName","_zoom","setZoom","setView","clearArea","clearAllAreas","clearLine","clearAllLines","clearAllRoutes","clearRoute","removeArea","area","zoomTo","flyTo","setMapType","zoomToBounds","flyToBounds","weekDays","day","dateItems","onDateSelected","pad","number","getFullYear","getMonth","getDate","monthDays","firstWeekDayOfMonth","getDay","lastWeekDayOfMonth","previusMonth","year","month","nextMonth","isSameDate","date","weekStart","region","regionSat","match","regionSun","languageSat","languageSun","weekStartLocale","parts","addDays","days","setDate","getWeekDays","isLongFormat","weekdayDateMap","weekday","dateFrom","dateTo","calendarElement","contentsItems","changeMonth","executeCollAction","currentDate","moveTo","setVariables","drawMonth","loadDataAsync","swipeHandler","SwipeHandler","init","previusMonthDate","previusMonthDay","isCurrentMonth","weekEnd","nextMonthDay","nextMonthDate","currentContentsFilter","getFilter","contentsItem","contentsDate","itemIndex","currentMonth","weekdaysLongname","hexToRgbA","test","loadChart","ctx","refreshTimeOut","myChart","updateChartTimeout","gridLines","refreshTime","labels","datasets","categoryNames","categoryTitles","categoryColors","barThickness","chartSerieTitle","dataset","label","borderColor","borderWidth","createChart","update","Chart","responsive","maintainAspectRatio","legend","elements","point","radius","scales","xAxes","stacked","yAxes","ticks","beginAtZero","animation","getElementById","updateChart","serieColor","chartName","chartTitle","cutoutPercentage","modifyZoom","hideRange","orient","containerElementSize","scaledX","scaledY","onItemSelected","contentsImage","calculateContainerAspectRatioSize","scaleFactorX","scaleFactorY","contentsElement","scrollTo","scrollLeft","scrollTop","behavior","dragAllowedTimeout","picturemapElement","isGrabbing","mouseDownHandler","clientX","clientY","clearInterval","mouseMoveHandler","mouseUpHandler","buttons","dx","dy","mouseLeaveHandler","mouseWheel","deltaY","xCoord","yCoord","iconOff","iconOn","iconWidth","iconHeigth","iconText","iconTextColor","iconMarkColor","iconTouchColor","contentsImgSize","imgSize","scaleFactor","scaleItems","dataValue","valueOff","imgWidthOff","imgHeightOff","valueOn","imgWidthOn","imgHeightOn","rgb","solver","solve","filterOff","warn","filterOn","zIndex","getItemFactorX","zoomFactor","scaledWidth","getItemFactorY","scaledHeight","scaleItem","scaledImgWidthOff","scaledImgHeightOff","selected","ContentsRow","ChartBar","ChartPie","PictureMap","isSpecial","offsetTop","observerHeight","ResizeObserver","observe","disconnect","contentsLoaderHelper","rowsPerPage","getIsLoading","setNoDataMsg","showNoData","noDataText","getRowsLength","bindOnScrollEvent","firstGroup","lastRefreshActionId","refreshActionId","loadRows","loadRowsInfo","isDrawer","isBeforeEditExecuted","getContentsRowsInfo","scrollBy","scrollToTop","scrollToBottom","isInGroup","gridTemplateColumns","pointerEvents","autoslideInterval","currentSlideIndex","autoslideDelay","setInterval","offsetLeft","scrollTimeout","onScrollEvent","isUrl","srcdoc","breadcrumbFontSize","onBreadcrumbClick","query","getBreadcrumbColor","breadcrumbSelectedForeColor","breadcrumbForeColor","getBreadcrumbFontSize","breadcrumbSelectedFontSize","ButtonProp","InputProp","Input","ImageProp","Contents","WebProp","Web","VideoProp","Video","Breadcrumb","propElement","attributesModel","watchAttributes","disableVisible","evalFormula","calculateImgSize","imgPathSize","finalImgSize","margins","floatingTop","getScaledPosition","floating","floatingLeft","disableEdit","postOnchange","mouseEnter","mouseLeave","mouseDown","mouseMove","isDesignerPropSelected","borderDesignSelected","borderDesignOver","getBorderPropOver","Column","newObj","clone","doModelReactive","contentsRowbreadcrumbId","newXoneView","validNodes","rowsArr","controlAttributes","newLine","clearEmptyContainers","parent","isMouseOver","setIsLoaded","containerElement","flexGrow","flexShrink","fixJustifyCenter","align","observerWidth","clientWidth","doFix","justifyContent","getBorderContainerOver","XoneFileManager","http","XMLHttpRequest","send","status","download","XonePDF","clearPDF","_template","lastChild","newWindow","write","_name","container","flexDirection","alignItems","_templateAbsolute","outerHTML","print","_width","_height","elementAbsolute","cloneNode","margin","prepend","font","_font","fontStyle","_fontStyle","alignment","_alignment","fontSize","_fontSize","fontColor","_fontColor","columns","_currentTableNewLine","_currentTableColumns","tableElement","_currentTable","createRow","createColumns","_cellBorder","rowElement","_divs","columnElement","lineSize","background","html","minWidth","widths","cellBorder","borderStyle","borderTop","borderRight","borderBottom","borderLeft","firstChild","childNodes","setCellBorder","createText","createImage","imageElement","textElement","marginLeft","checkElement","innerText","addText","fontWeight","clipboard","XoneClipboard","readText","writeText","XoneSystemSettings","deviceIdCount","deviceId0","androidId","XoneDebugTools","createObject","$http","dataFunction","errorFunction","_","fetchOptions","post","XOneOCR","fingerprintManager","replica","Animation","systemSettings","xoneSystemSettings","createBookmark","browser","bookmarks","dragAndDrop","setIsDesigner","createApp","App","use","Container","mount","serviceWorker","register","obsolete","replaceState","pushState","viewportmeta","content","XoneApp","HTMLElement","customElements","define","ch","strSQL","bDefault","equalsIgnoreCase","text1","text2","XONE_EMPTY_STRING","XONE_METHOD_DEFAULT","generateRandomString","loremIpsum","DOMParser","parseFromString","createTestingDataGeneration","generateTestingData","dataColl","propName","floor","compress","asArray","wc","dictionary","uncompressed","w","ASCII","dictSize","fromCharCode","compressed","entry","charCodeAt","connection","m_stringData","m_maxRows","m_keys","isResultset","m_nIterate","m_options","fetchDataAsync","fld","ordinal","nType","resolverField","SafeToDouble","SafeToDate","page","cache","callbackFunction","isSwipeable","touchobj","changedTouches","dist","startX","pageX","startY","pageY","startTime","elapsedTime","_allowedTime","_xThreshhold","_yThreshhold","touchElement","touchStart","passive","touchEnd","FileManagerOnline","xmlhttp","setRequestHeader","readyState","responseText","encoding","st","arrayBuffer","buffer","decoder","TextDecoder","readFileSync","ContentsLoaderHelper","elementName","setPaginationSize","reset","computed","isLoadingRowsInfo","rowsPerPageByObjectId","checkLoadScroll","lockLoadRowsInfo","mapDivElements","allRecordsLoaded","isCheckingRowsVisibility","timeoutOnScroll","checkScrollElementsVisibility","checkLoadRowsInfo","scrollElementsVisibilityTimeout","outerHeight","checkGroupIsVisible","isFluidLoad","fluidLoad","isLock","rowsPerLoad","loadByObjectId","newRowsNumber","end","resetLoadRows","iData","isLoaded","hasScroll","some","groupElement","eJoinType","QueryField","AliasName","m_strField","m_strAlias","QueryTable","Alias","m_bUseParrentisisAtJoins","m_strTableName","m_strTableAlias","m_bUsePrefix","m_joinType","eLeftJoin","m_secondTable","m_bTranslateJoins","setTranslateJoins","m_strJoinCondition","strTmp","TranslatedJoinTableName","openParent","closeParent","getTableName","getJoinCondition","getAlias","strJoin","eRightJoin","eInnerJoin","strOut","getTranslatedJoinConditions","ParserStatus","PARSER_KEYWORD","PARSER_COMPLETE","PARSER_DELETE_EXPECTING_FROM","PARSER_DELETE_EXPECTING_TABLE","PARSER_DELETE_EXPECTING_WHERE","PARSER_DELETE_WHERE","PARSER_INSERT_EXPECTING_INTO","PARSER_INSERT_EXPECTING_TABLE","PARSER_INSERT_EXPECTING_FIELDS_BEGIN","PARSER_INSERT_EXPECTING_FIELD_NAME","PARSER_INSERT_EXPECTING_FIELD_SEPARATOR","PARSER_INSERT_EXPECTING_VALUES","PARSER_INSERT_EXPECTING_VALUES_BEGIN","PARSER_INSERT_EXPECTING_VALUE","PARSER_INSERT_EXPECTING_VALUE_SEPARATOR","PARSER_UPDATE_EXPECTING_TABLE","PARSER_UPDATE_EXPECTING_SET","PARSER_UPDATE_EXPECTING_FIELD_NAME","PARSER_UPDATE_EXPECTING_EQUAL_SIGN","PARSER_UPDATE_EXPECTING_FIELD_VALUE","PARSER_UPDATE_EXPECTING_SEPARATOR","PARSER_UPDATE_EXPECTING_WHERE","PARSER_UPDATE_WHERE","Messages","m_strReservedWords","m_bSurroundUnions","SqlParserFromParser","m_strRowIdFieldName","m_sqlType","SQLTYPE_UNKNOWN","m_lstFields","m_lstFieldsType","m_lstSelectFields","m_messages","getMessageHolder","GetRowIdFieldName","m_strTable","GetTableName","m_strWhere","entrySet","m_strSentence","GetSentence","strRID","m_strRowId","removeChars","m_bIsUnionQuery","Force","SetFieldValue","m_nParserIndex","m_strCurrentToken","Field","strToken","GetNextToken","bStringToken","GetMessage","XoneMessageKeys","SYS_MSG_SQL_SYNTAXERROR","IsSeparator","SYS_MSG_SQL_INCOMPLETETOKEN","nParOpen","GetNextSpacedToken","compareTo","m_status","strTmpToken","PeekNextSpacedToken","IsReservedWord","Token","compareToIgnoreCase","nTmpParserIndex","PeekNextToken","Index","cStringToken","bNormalize","strSrcFld","strDstFld","strVal","EMPTY","GetRowId","SetWhereSentence","lstFields","lstValues","GetNextValueToken","strField","NULL_VALUE","bRowIdField","bNextValueIsRowId","strKeyword","bIsPar","bParseOk","nOpenPars","BeginParse","ParseInsertStatement","ParseUpdateStatement","ParserDeleteStatement","SQLTYPE_ERROR","ParseSelectStatement","strSql","strFields","strValues","nStep","nOpenPar","nInitPar","bAddTable","bField","bAlias","bTable","strAlias","strTable","nTableStep","nJoinOpenPar","nTableOpenPar","strPrevToken","bOpenJoinFormula","jt","nLen","GetNextSqlToken","getIsUnionQuery","AddUnionQuery","AddField","m_bDistinct","AddTable","m_strGroupBy","m_strOrderBy","m_strHaving","m_lstUnionQueries","newQuery","SetSqlType","CopyData","Clear","bTextStart","nTokIdxTo","RegenerateInsert","RegenerateDelete","RegenerateUpdate","RegenerateSelect","strQuery","RegenerateUnionQuery","m_tableFrom","GetFieldList","getSecondTable","RegenerateSql","FieldValue","FieldType","PriorityMap","nRemaining","IsFormula","GetFieldValue","table","getQueryFields","field","getTableFrom","CopyTable","getDistinct","getGroupBySentence","getOrderBySentence","getHavingSentence","Table","next","getActualName","getJoinType","TableAlias","JoinCondition","JoinType","tbl","bPrefix","setSecondTable","setJoinCondition","setUsePrefix","ClearUnions","FieldAlias","f","strOpers","clean","ParseStates","BufferedReader","m_pointer","m_lines","CssParseException","nLine","sLine","XoneCssRule","sSelectorName","m_strName","m_bundleRules","sRuleKey","sRuleValue","XoneCssParser","sName","is","sEncoding","bStrictMode","m_bStrictMode","line","br","startPos","readLine","strLine","parseState","ExpectingSelector","states","strSelector","strRuleKey","strRuleValue","cssRule","nPosition","nLineLength","sCurrentCharacter","m_strValidChars","GettingSelector","ExpectingCommentOpenComplete","GettingComment","ExpectingCommentClose","pop","ExpectingOpenBrace","ExpectingRuleKey","GettingRuleKey","moveToNextToken","ExpectingRuleValue","GettingRuleValue","addRule","sNextCharacter","sbMessage","PARCELABLE_VERSION","BUNDLE_KEY_DATA","BUNDLE_KEY_CRC","setTime","m_date","ALL_STYLES","AM","AM_PM","APRIL","AUGUST","DATE","DAY_OF_WEEK","DAY_OF_WEEK_IN_MONTH","DAY_OF_YEAR","DECEMBER","DST_OFFSET","ERA","FEBRUARY","FIELD_COUNT","FRIDAY","JANUARY","JULY","JUNE","LONG","LONG_FORMAT","LONG_STANDALONE","MARCH","MAY","MILLISECOND","MONDAY","NARROW_FORMAT","NARROW_STANDALONE","NOVEMBER","OCTOBER","PM","SATURDAY","SEPTEMBER","SHORT","SHORT_FORMAT","SHORT_STANDALONE","SUNDAY","THURSDAY","TUESDAY","UNDECIMBER","WEDNESDAY","WEEK_OF_MONTH","WEEK_OF_YEAR","ZONE_OFFSET","fs","fileManagerOnline","FileLoaderBrowser","bIsCryptoFile","existsSync","groups","fixedTop","noTab","tabs","onGroupsHeaderHeightChanged","groupAnimation","contentElementHeight","groupsHeaderHeight","drawers","showLeft","showRight","closeDrawers","drawerLeft","drawerRight","fixedBottom","changeGroup","groupsElement","getCollGroups","xoneAttributesHandler","showGroup","isToggle","isHide","tabGroup","scroll","leftDrawerGroup","rightDrawerGroup","slideGroup","currentGroup","groupIndex","newGroup","getDrawersWidth","drawerLeftElement","drawerRightElement","setDrawersWidth","leftWidth","rightWidth","watchEffect","currentWindowWidth","watchContentElementSize","contentsElementHeight","fixedTopElement","fixedBottomElement","resize","resizeContentElementSize","onMounted","watch","inject","Groups","getDataObject","hideGroup","toggleGroup","contentElement","groupSwipe","XoneConnDataFlags","PREFIX_MODIFIED","CONNSTRING_MODIFIED","ROWIDFIELD_MODIFIED","SQLFIELD_MODIFIED","ROWIDLEN_MODIFIED","OPERIDLEN_MODIFIED","DATEMASK_MODIFIED","TABLEQUOTE_MODIFIED","FIELDQUOTE_MODIFIED","SUBQUERIES_MODIFIED","Guid","guid","TypeError","isGuid","other","validator","gen","out","RegExp","m_strPrefix","m_strTableQuoteOpen","m_strTableQuoteClose","m_strFieldQuoteOpen","m_strFieldQuoteClose","MAIN_CONNECTION","m_owner","m_developer","m_strSqlFieldName","m_nOperIdLength","m_nRowIdLength","m_lstInitStrings","m_extendedProperties","m_nFlags","m_xmlNodeData","m_bSupportsTransactions","m_strPlatform","m_platform","SelectSingleNode","GetNodeValue","setPrefix","setTableQuoteOpen","setTableQuoteClose","setFieldQuoteOpen","setFieldQuoteClose","setDatemask","m_bIsReplicating","m_nMid","m_nDbId","m_strDatemask","m_bSubqueries","RetryCount","ChkGroup","Prefiltered","mn","ent","usr","getCompany","GetObjectIdString","getEntIdColl","getEntIdLevel","getEntIdOwner","getCurrency","getUser","getUserIdColl","GenerateRowId","getDevelopedPrefix","DevelopObjectValue","ZeroCalendarTime","ObjectName","str1","strPrefix","Prefix","ExecuteParsedSql","Platform","FileLoaderNodeJS","pushToken","getFirebaseConfig","worker","postMessage","initFirebase","firebaseConfig","vapidKey","firebase","initializeApp","messaging","getToken","firebaseToken","onPushRegisteredFunctions","onPushRegisteredFunction","onMessage","payload","notification_id","notification_title","notification_message","onClickFunction","showNotification","onPushReceivedFunctions","onPushReceivedFunction","onPushRegistrationFailureFunctions","registerPush","onPushRegistrationFailureFunction","setOnPushRegisteredFunction","setOnPushRegistrationFailureFunction","setOnPushReceivedFunction","getObjectIndex","isReactive","getCloneOnPush","getHashId","createIfNull","getParent","getOwnerObject","exit","logout","pushValueAndExit","arg","openEditViewAndExit","_breadcrumbs","_dataObjectsMap","keepLayout","cleardataObjectsMap","reverse","xoneHashId","objectType","addObject","CreateObject","getProperties","addItem","addDataObject","expiration","expires","toUTCString","cookie","cookies","seen","WeakSet","_attributes","AttrName","sAttrName","attrName","XmlUtils","getNodeAttr","defaultValue","getChildNodes","MACRO_DEFAULT","XoneGenericException","extra","m_code","m_extra","IllegalStateException","XoneJSONResulset","m_sentence","sAppName","sExecutionPath","m_clientId","m_clientSecret","m_url","_isScaleFontsize","_webFontFactor","setIsScaleFontsize","setWebFontFactor","XoneAttributesHandler","htmlElement","maxHeight","maxWidth","isLine","num","convertUnits","tPadding","rPadding","bPadding","lPadding","tabTPadding","tabRPadding","tabBPadding","tabLPadding","tMargin","rMargin","bMargin","lMargin","textBorder","textBorderTop","textBorderRight","textBorderBottom","textBorderLeft","attributeSize","containerSize","u","mask","img","getContainerAlign","getPropAlign","bgColor","textForeColor","foreColor","borderCornerRadius","borders","getBorders","getFontSize","buttonOption","calendarViewMode","cellBgColor","cellBorderColor","cellForeColor","cellOtherMonthBgColor","cellSelectedBorderColor","cellSelectedForeColor","elevation","fieldSize","getFloating","fontBold","getImage","checkType","isVisible","isNodeVisible","labelAlign","getLabelAlign","labelBox","labelwidth","lines","getMargins","minHeight","getPaddings","paginationSize","showInline","showInlineKeyboard","textBgColor","textBgColorDisabled","textOverflow","textFontSize","textForeColorDisabled","tooltipColor","tooltipForeColor","getPropType","wrap","getAnimationIn","scrollOrientation","tabBgColor","tabFontSize","tabForecolor","tabPaddings","getTabPaddings","tabSelectedForecolor","lowerCaseMethod","formula","dataModel","fFunction","_mapFormulaFunctions","operators","replacedOperators","replaceOperator","operator","oper","order","stFinal","resolveAttr","foreignKey","newAttrs","dMKey","resolveMapModels","attrValue","objView","bindedEvents","fieldName","eventName","objItem","toLocaleLowerCase","pr","XmlNodeList","nodes","setPrototypeOf","nodeName","bFound","areEquals","attrExists","defaultAttr","defaultAttrValue","events","serialVersionUID","m_children","m_childrenNodes","m_parent","m_attrs","addChild","lstEvents","COLL_COLL","addFastChild","AddPropToRoot","PROP_ATTR_GROUP","PROP_NAME","PROP_ATTR_FRAME","PROP_ATTR_CONTENTNAME","formatKey","m_cachePropNodes","m_cacheContainersNodes","m_cacheOtherNodes","m_strText","mergeObj","nodename","attrname","child","obj1","obj2","attr1","findNodeAttr","attr2","nums","getChildren","curobj","isEquNode","setValue","isequ","mergeAttrs","hasChildNodes","nums2","childs2","obj1child","findSameChild","sValue","deleteAttribute","cacheNames","sKey","m_allChildren","addNode","NewChild","Before","addToCache","After","Original","NewNode","nIndex","Remove","objResult","AttrValue","Exist","SelectNodesInt3","CheckCacheConditions","SelectNodesHashExist","list","strAttr","SelectNodesHash2","nodeList","SelectNodesHash4","SelectSingleNodeInt1","SelectSingleNodeIntExist","SelectSingleNodeInt3","CheckIfCacheExists","SelectSingleNodeHash4","Exists","SelectSingleNodeHashExist","nodesName","userAgent","XoneValidationException","OwnerCollection","m_nSetValDepth","m_model","UNIQUE_ID","m_bIsLoading","m_bNewObject","m_lstNormalProperties","m_lstOldValues","m_lstDirtyProperties","m_lstXlatProperties","m_lstDevelopedXlatProperties","m_bPropagateDirty","m_lstLinkItems","m_lstVariables","m_lstContents","m_lstDevelopingFields","getOwnerApp","m_lstCachedAttributes","m_lstOverridenFieldPropertyValueAttributes","mMapSysOrder","m_reactLayout","m_formulaLocker","addObjectProperties","_this","getNormalValue","getMultipleKey","getIdFieldName","addSingleProperty","getNodeList","m_bDirty","rule","CreateNew","m_bIsCreating","getSpecial","CollPropertyValue","FieldExists","m_bUseTimestamp","m_bForceCurrChanges","m_bXlatExist","nCount","createNode","getNode","getParentCollection","bAlways","EvaluateNodeRules","ExecuteNodeAction","m_bDependent","sb","SYS_MSG_GENERALFAIL","sExtraMessage","concat","ExecuteNodeActions","Node","Scopes","Action","DoSetVal","Parameters","scopesList","prepareContext","scripts","RunScriptAsync","funcNames","slang","argsName","argsValue","strType","vl","GetNodeAttr","SYS_MSG_OBJ_SETVALFAIL","FieldPropertyValue","GetValueFromString","unlock","MACRO_TAG","properties","nd","PROP_ATTR_INDEX","isIndexed","ClearContents","getColumnCount","strFieldName","resolveFieldName","getColumnName","objVal","getTypeFromXml","PropType","LoadObjectContents","getStringKey","m_strObjectId","m_lObjectId","m_bReadOnly","GetMultipleKeyString","setDirty","OnLoad","ContentsName","cnt","ContentsFromProp","RegisterError","nobj","getError","getNumber","Load","setFull","actions","OnChange","loadNode","sDetails","onchangeNode","strOldChgField","m_strChangeField","cnode","SearchCollName","strCollName","objId","strId","m_bContentsLoaded","LoadContents","FunctionName","exist","contNode","appColl","SYS_MSG_OBJ_LOADCONTENTFAIL_01","newColl","CreateClone","SYS_MSG_OBJ_LOADCONTENTFAIL_02","AddContentsColl","setSort","sMessage","setOwnerObject","getObjectName","bRemoveQuotes","ReplaceFieldValueMacros","PrepareSqlString","GetClientIdColl","owner","IsInt","SuppressQuotes","SYS_MSG_OBJ_REPLFLDVALUEMACROFAIL","strRpl","bEvaluate","sVal","Develop","m_bIsCurrentItem","bOldVal","GetRawPropertyValue","SafeToLong","ClearAllVariables","getKeyFields","PutItem","strProtect","bMask","bUpdate","bForce","bUpdated","m_bChangesMade","PutBitmappedProperty","AdjustDate","AdjustMonthYear","FormatAcc","toUpperCase","FormatCCC","AdjustAccNumber","ParseDateString","currentContext","ProtectString","m_bIsCloning","setNormalValue","bCheck","EqualObj","m_dtTimeStamp","PreprocessValue","SetPropertyValue","RestoreMappedFields","SYS_MSG_OBJ_PUTITEMFAIL","reason","postNewValue","GetBitmappedProperty","GetFormulaProperty","IsFormulaProperty","IsBitProperty","v1","v2","PropertyTitle","GetNormalProperty","str2","getDeferredLoad","GetCurrentItemValue","strLinkedTo","getConnection","IsOuterJoinSupported","AdjustNullValue","ProcessValue","linked","bit","PROP_ATTR_TITLE","strLinkedField","DevelopXlatProperties","SYS_MSG_OBJ_PROCESSVALFAIL","GetWeekDayName","UnprotectString","IsFloat","dbl","ownerCollection","GetItem","getRowIdFieldName","visibility","UITransform","ItemName","NodePropertyValue","QualifyField","MapField","DatabaseField","strFieldFrom","strFieldTo","fieldValue","mapfld","SYS_MSG_OBJ_RESTOREMAPFLDFAIL_03","getData","setUseObjectsInRestore","mapcolValues","GetPropertyValue","strSrch","bSearchDB","bXlatExist","RestoreMapColValues","vl2","nullObj","bRetain","bClearColl","DoRestoreMapValues","strtmp","ownercoll","getUseObjectsInRestore","getObject","GetResultSet","SYS_MSG_OBJ_RESTOREMAPFLDFAIL_01","RestoreTranslatedValues","getFull","m_bIsRestoring","SYS_MSG_OBJ_RESTOREMAPFLDFAIL_02","SYS_MSG_OBJ_NOXLATTARGET","SYS_MSG_OBJ_XLATMISSINGFLD","TargetField","strCnt","strCmpType","bUseThis","xlrNode","contList","xrnode","propNode","GetNode","vl1","getClass","StringValue","UseDatemask","strSysDateMask","strDay","strMonth","strYear","nFormat","EvaluateAllMacros","strDatemask","getDatemask","strComponents","getSysDatemask","setLayoutFieldPropertyValue","propiedad","atributo","addToEvaluated","addEvaluatedAttributesList","postNewFieldProperty","sID","valor","sVariableName","getVariable","SafeGetVariableList","setVariable","bNew","IsNew","jsonObject","loadFromJsonObject","sPropertyName","propertyValue","contentCollection","loadFromJsonArray","collection","jsonArray","itemDataObject","Evento","Funcion","indice","getFixedUpdateObjectName","getFixedObjectName","strCmd","strChkID","strPK","strRowID","strIDString","lPossibleKey","bNeedRowID","bTransacted","conn","bNoId","sentence","SetTableName","bStringKey","bMultipleKey","bIncremental","HasEscapeChars","EscapeString","reverseResolveFieldName","PROP_ATTR_EMBED","SetFieldType","getId","addkey","getIsDebugging","isDebugMode","DebugLog","TAG_DATABASE_LOG","ExecuteSqlStringAsync","getRowId","getIsReplicating","IsUniqueRowId","idval","writeConsoleString","bReplicate","supportsTransactions","beginTrans","acceptsParsedSentences","ExecuteParsedSqlAsync","rollBack","save_result","pushValue","retrievesAutonumericKeys","sRowIDQuoted","RetrieveNumericKey","e2","CreateRecordset","ExecuteSqlString","SYS_MSG_OBJ_SAVEFAIL","getIdFieldType","SYS_MSG_OBJ_SAVEFAIL_02","bResult","se","bDelete","bDeleteActions","m_bFollowRules","CanDelete","ExecuteDeleteActions","SYS_MSG_OBJ_DELETEOBJFAIL_01","sRowidName","SYS_MSG_OBJ_DELETEOBJFAIL_02","deleteNode","EvaluateRule","SYS_MSG_OBJ_CANNOTDELETE","AfterActions","PARSE_NODE_NAME","PARSE_EXPECTING_OPEN_PAR","PARSE_PARAM_VALUE","PARSE_EXPECTING_COMMA","m_parsed","getResolvedName","check","opera","XoneError","m_description","m_failedSql","failedSql","SYS_MSG_DATASRCFAIL","SYS_MSG_FILENOTFOUND","SYS_MSG_FILENOTFOUND_01","SYS_MSG_FORMULAERROR","SYS_MSG_COLL_CIRCULARCOLLDEF","SYS_MSG_COLL_UNDEFINEDFIELD","SYS_MSG_COLL_NONAME","SYS_MSG_COLL_CANNOTCREATEOBJ","SYS_MSG_COLL_SQLPARSEERROR","SYS_MSG_COLL_SQLPARSEERROR_01","SYS_MSG_COLL_CANNOTQUALIFY","SYS_MSG_COLL_XPROPVALUEFAIL","SYS_MSG_COLL_PREPARESQLFAIL","SYS_MSG_COLL_COLLCONNOPENERR","SYS_MSG_COLL_LOADALLFAIL_02","SYS_MSG_COLL_LOADALLFAIL_03","SYS_MSG_COLL_CREATECLONEFAIL","SYS_MSG_COLL_GETROWCOUNTFAIL","SYS_MSG_COLL_EXECUTENODEFAIL","SYS_MSG_COLL_EMBEDFILTERFAIL","SYS_MSG_COLL_LOOKUPOBJFAIL_02","SYS_MSG_COLL_LOOKUPOBJFAIL_03","SYS_MSG_COLL_EVALMACROFAIL_01","SYS_MSG_COLL_EVALMACROFAIL_02","SYS_MSG_COLL_FIELDEXISTSFAIL","SYS_MSG_COLL_LOADCURRITEMFAIL_01","SYS_MSG_OBJ_GENERATEFLDFAIL","SYS_MSG_OBJ_CREATEFAIL_01","SYS_MSG_OBJ_CREATEFAIL_02","SYS_MSG_OBJ_CREATEFAIL_03","SYS_MSG_OBJ_COPYPROPFAIL","SYS_MSG_OBJ_LINKFAIL_01","SYS_MSG_OBJ_LINKFAIL_02","SYS_MSG_OBJ_GETNORMALPROPFAIL","SYS_MSG_OBJ_EXECUTEMETHODFAIL_01","SYS_MSG_OBJ_EXECUTEMETHODFAIL_02","SYS_MSG_OBJ_GETFORMULAPROPFAIL_01","SYS_MSG_OBJ_GETFORMULAPROPFAIL_02","SYS_MSG_OBJ_GETEXTFORMULAFAIL","SYS_MSG_OBJ_CHKUNIQFLDFAIL_01","SYS_MSG_OBJ_CHKUNIQFLDFAIL_02","SYS_MSG_OBJ_UPDDEPTHFAIL_01","SYS_MSG_OBJ_UPDDEPTHFAIL_02","SYS_MSG_OBJ_UPDATECNTFAIL","SYS_MSG_OBJ_DOLINKFAIL","SYS_MSG_OBJ_SETFLDVALFAIL","SYS_MSG_OBJ_MAPVALFAIL","SYS_MSG_OBJ_EXECCOMPSQLFAIL_01","SYS_MSG_OBJ_EXECCOMPSQLFAIL_02","SYS_MSG_OBJ_RULEFAIL","SYS_MSG_OBJ_RULEFAIL_02","SYS_MSG_OBJ_FAILIFNULLFAIL","SYS_MSG_OBJ_EOFRULEFAIL","SYS_MSG_OBJ_COMPARENUMBERFAIL","SYS_MSG_OBJ_INCORRECTVALUE","SYS_MSG_CONN_CONNFACTORY","SYS_MSG_CONN_LOADERROR","SYS_MSG_CONN_RPLLOADERROR","SYS_MSG_CONN_INCORRECVALUE","SYS_MSG_CONN_INNERCMDNULL","SYS_MSG_CONN_INVALIDACTION","SYS_MSG_CONN_CMDNOTINITIALIZED","SYS_MSG_CONN_CONNNOTINITIALIZED","SYS_MSG_CONN_CLIENTFILENOTFOUND","SYS_MSG_CONN_SQLSYNTAXERROR","SYS_MSG_CONN_SQLPARSEERROR","SYS_MSG_CONN_INVALIDPARAMVAL","SYS_MSG_CONN_QUEUEINSERTERROR_01","SYS_MSG_CONN_QUEUEINSERTERROR_02","SYS_MSG_CONN_INCORRECTPARAM_01","SYS_MSG_CONN_INCORRECTPARAM_02","SYS_MSG_CONN_INVALIDCONNSTRING","SYS_MSG_APP_CANNOTCREATEMAINCONN","SYS_MSG_APP_OPENCONNERROR","SYS_MSG_APP_LOGONNOUSERCOLL","SYS_MSG_APP_LOGONUSERNOTFOUND","SYS_MSG_APP_UNKNOWNSYSMACRO","SYS_MSG_APP_ONLOGONFAILED","SYS_MSG_APP_ENTIDLEVELFAILED_01","SYS_MSG_APP_NOCOMPANYCOLL","SYS_MSG_APP_NOCOMPANY","SYS_MSG_XERR_UNKNOWNMETHOD","SYS_MSG_CTX_STAKUNDERFLOW","SYS_MSG_USR_READONLYFIELD","SYS_MSG_SQL_STRIPFIELDERROR","SYS_MSG_SQL_ADDFIELDERROR","SYS_MSG_SQL_EMPTYBUFFERERROR","SYS_MSG_DBG_LINKDISCONNECTED","SYS_MSG_VBS_BADPARAMCOUNT","MovePtrType","DataUtils","DataSource","getInt","RsReadLong","getString","MacrosEvaluator","ownerApp","ownerColl","m_lstMacros","m_parsedMacros","m_ownerApp","m_ownerColl","MacroName","m_evaluatedMacros","toObject","accessString","n2","macroName","MacroValue","parsedAccessString","BrowseData","getParsedAccessString","clearParsedAccessString","DestColl","setMacro","EvalLookupMacro","strLookupMacroName","getLookupMacroName","k1","k2","strMacro","bEval","EvaluateMacro","bIsFilter","PrepareFilter","getCurrentCompany","CreateRecordsetAsync","ReplaceCustomOper","rules","strScope","XoneCompany","Base64","encode","input","chr1","chr2","chr3","enc1","enc2","enc3","enc4","output","_utf8_encode","_keyStr","_utf8_decode","string","utftext","c2","c3","HashUtils","algorithm","encodeBytes","createHash","digest","buff","XoneUser","m_strHashType","m_strEncode","UserData","strPwd","strObjPwd","XoneLookupObject","KeySearch","val1","getAccessString","ResolveFilters","swhere","sSort","getSort","ParseMacros","macros","getMacros","loadall","strPk","Options","nPkType","bStringPk","ObjectList","bNewObject","bLoadOk","bVolatile","objFind","XoneBrowseData","m_dataColl","m_lookupObject","m_lstObjectList","m_lstObjectLru","m_lstFieldMappings","m_currentStart","m_currentLength","m_nCurrentIndex","m_bIsFetchDataRunning","DataColl","m_strConnectionName","aProps","getOwnPropertyNames","bProps","Item","bAdd","m_lstCopyList","old","isEquivalent","removeElement","nThreshold","m_bIsSpecial","m_nBrowseLength","GetObject","GetObjectInt","SearchDb","GetObjectSring","GenerateKeySearch","strKeySearch","GenerateSearchSql","IsSqlPrefiltered","LookupObject","arg2","SearchCriteria","CountAsync","CountRecords","bIsSpecial","PrepareSpecialCollection","LoadCurrentItem","EndBrowse","m_nCurrentRow","ClearCurrentItem","acceptsEmptyQueries","bDebug","m_rs","MoveFirst","AddOpenColl","strAccString","prefiltered","getCount","m_bSingleObject","bUseRaw","ApplyFilters","tmpSql","m_parsedAccessString","ParseAccessString","lparser","clearQueryFields","EmbedFilters","getUnionQueries","m_nMaxRows","m_nBrowseOrder","MovePtr","MOVE_PTR_FIRST","MOVE_PTR_NEXT","MOVE_PTR_LAST","MOVE_PTR_PREV","bClear","m_bHasTopRow","m_pTopRowItem","bHasNext","RemoveOpenColl","getConnectionName","cancelProcesses","getMessage","nOrder","bPrefiltered","bCheckOwner","bParseSQL","bSingleObject","PrepareSort","AddItem","getXmlNode","constructor","Sort","strFldName","QuoteFieldName","getLinkFilter","GenerateRowID","cd","strSrcFilter","strColl","strUserIDColl","strFilter","getIdColl","getMID","FormatKeyValue","IsLinkedField","strFilters","sql","Filter","uq","strWhere","bGroup","strPrevFilter","setHavingSentence","IncludeWhere","Subquery","DevelopCollFilters","DevelopFilterMacros","keySearch","bIsField","bFieldComplete","bIsTextToken","IsClosingToken","strInvalid","IsNotFieldName","GetQualifyCache","BitProps","FormulaProps","strQualifier","queryFields","bReturn","m_pCurrentItem","m_bDeferredLoad","EOF","setIsCurrentItem","ScriptUtils","xmlNode","strNodeName","parentList","insert","XoneDataCollection","source","m_version","m_strPk","m_nPkType","m_bLocked","m_macrosEvaluator","m_lstKeyFields","m_lstFormulaProps","m_lstBitProps","m_cachePlatformNodes","xprop","GetCollPropValueCache","getPlatform","platNode","CheckIfEvaluated","strAttrVal","hasStylesheets","strClass","FindStylesheetByClassName","clsArr","cls","getRuleValue","strParentCollection","strMsg","getHierarchyXml","merge","BaseNode","sbCacheTag","NodePropertyValueBase","PLATFORM_NAME","GroupId","GroupPropertyValue","ncache","GetCollPropUndefinedValues","getDbmsTag","strPlatform","ee","xl","xn","LoadConnection","parentCollection","ExtractConnections","TAG_FRAMEWORK","bLoadLayouts","bisIndexed","bObjLoadAll","bDeferredLoad","getSubqueries","m_strLinkFilter","m_strSort","strAccessString","strProgId","strClassName","getFirstParentCollection","nMaxRows","strObjectName","strUpdateObject","bHasXlatProps","lst","GetLocalObject","UseFilters","findObject","isUniqueRowID","FixObjectName","AccessString","getMacro","initialize","addToColl","GetClassName","CheckClassName","OnCreate","m_bUseObjectsInRestore","strProp","getText","bButton","ObjectIndex","sTypeName","PROP_TYPE_STRING","PROP_TYPE_INTEGER","PROP_TYPE_DATE","PROP_TYPE_RESULTSET","sTypeFirstLetter","PROP_TYPE_DOUBLE","ClearCollection","m_bIsClearing","m_bFull","m_strFilter","m_pOwnerObject","CopyMacros","CopyVariables","loadAllAsync","MoveNext","isFull","browseLength","ActionName","doRunScript","scope","strScript","strLang","strFunctionName","aScripts","aFunctionsName","xs","getDefaultLanguage","GetParams","GenerateFunctionName","FunctionParams","WrapGetItem","setFollowRules","deleteObject","removeItem","CheckNullParameters","CheckIncorrectParamRange","jsParams","loadFromJson","setAppPath","mapPaths","getImagePath","initialPath","checkNumber","mapPathName","finalPath","getImagePathAndSize","__SCRIPT_WRAPPER","appDataVal","uiVal","selfVal","functionString","__SCRIPT_WRAPPERASYNC","selfDataCollVal","GetPosGPS","tipo","auxcollobj","latitud","longitud","distinta","collGPS","STATUS","HGPS","getCurrentEnterprise","colltracking","objtracking","PosicionamientoGPS","coordenadas","setMaxWaitDialog","updateWaitDialog","veces","objGPS","ComprobarConexion","conexion","RESULTADO","endBrowse","bBreakUpdateGpsLoop","allMarkers","startUpdateGpsLoop","myPromise","bien","mal","ventana","actualizarGps","showToast","refreshValue","stopUpdateGpsLoop","startGpsCallback","timeBetweenUpdates","minimumMetersDistanceRange","foreground","startGpsInterval","comprobarEstadoGps","sDeviceOs","getGlobalMacro","nStatus","checkGpsStatus","askUserForGpsPermission","collGps","objCollGps","MAP_LONGITUD","MAP_LATITUD","MAP_ALTITUD","ALTITUD","MAP_VELOCIDAD","VELOCIDAD","MAP_RUMBO","RUMBO","MAP_FGPS","FGPS","MAP_HGPS","MAP_STATUS","MAP_SATELITES","SATELITES","MAP_FUENTE","FUENTE","MAP_PRECISION","PRECISION","onMapClicked","evento","mapControl","getControl","addMarker","onMapLongClicked","onMarkerDraggedEnd","nResult","onMapReady","onLocationReady","onLocationChanged","onDistanceMeter","distance","showMarkers","nLength","setVisible","hideMarkers","setMarkersDraggable","bDraggable","setDraggable","removeMarkers","doChangeMapPois","sMapControl","mapContent","lock","doRefresh","sControl","getUserLocation","userLocation","isUserLocationEnabled","enableUserLocation","disableUserLocation","drawLine2","strokeColor","locations","strokeWidth","drawEncodeArea","toEncoded","showPoisMenu","hidePoisMenu","togglePoisMenu","zoomToEncodeData","zoomToMyLocation","restrictMapToBounds","startDistanceMeter","startMarkerIcon","endMarkerIcon","stopDistanceMeter","testInexistente","newObject","NOMBRE","DIRECCION","distanceTo","nMeters","GpsTools","getAddressFromPosition","locality","subLocality","adminArea","subAdminArea","features","country","street","address","postal","containsLocation","getLastKnownLocation","bearing","time","encoded","sEncoded","lstCoords","doFollowUserLocation","bFollow","setFollowUserLocation","doSetMapType","sMapType","AddTableCellText","pdf","cellText","leftBorder","topBorder","rightBorder","bottomBorder","addCellText","GeneratePDFDocument","pdf01","setFont","setFontSize","setFontStyle","setFontColor","createTable","setTableCellWidths","setAlignment","addTable","MAP_PDFSERIE","MAP_PDFFECHA","MAP_PDFNUMERO","cstr","MAP_PDFTEXT","addImageSetXY","flattenPdf","launchPDF","stdate","VBScriptSupport","safeToString","now","len","cint","replacement","escapeRegularExpression","mDate","safeToDate","iLen","mid","iEnd","inStr","strSearch","charSearchFor","lcase","isString","ucase","delimiter","dateDiff","sPeriod","mDate1","mDate2","nDiff","dateAdd","nNumber","setYear","getYear","setMonth","vbSupport","isNothing","isSomething","getClassName","isFloatNumber","isIntegerNumber","isNumber","isFinite","isEmptyString","isDate","replaceAll","sSource","sSearch","sReplacement","ponerCallbackNfc","nfc","XOneNFC","setOnTagDiscoveredCallback","tagNfcEncontrado","getHexId","isTechnologyAvailable","setType","ndefMessage","getNdefMessage","allRecords","getAllRecords","record","sMimeType","getMimeType","MAP_DATA","connect","readNfcV","enableDnieReader","MAP_CAN_NUMBER","readProfileData","readUserImage","readSignatureImage","canNumber","onDnieRead","dnieReadResult","MAP_TEXT","getDniNumber","getDocumentType","getSurname","getDateOfBirth","getDateOfExpiry","getNationality","getIssuer","getOptionalData","getSex","getBirthPlace","getAddress","getCustodyInfo","getIcaoName","getOtherInfo","getProfession","getPhone","getTitle","getSummary","MAP_USER_IMAGE","getUserImage","getFilesPath","MAP_SIGNATURE_IMAGE","getSignatureImage","onDnieReadError","sReadError","onProgressUpdated","nProgress","disableDnieReader","generatePdfDemo","permissions","fromHtml","signPdfDemo","fm","fileExists","MAP_PIN","readSignatureCertificate","pin","sSourcePdf","sSignedPdf","signPdfWithKey","getSignatureKey","getSignatureCertificateChain","sendSignedPdf","sendMail","inicializarCal","cCal","fecha","objCalendario","stDia","Right","FECHA","HORAINI","HORAFIN","TIPO","DESCRIPCION","ShowMessageDebug","stmsg","appdata","lockContents","listContents","inicializeChats","MAP_GRUPOSEL","MAP_VERFLOTANTE","MAP_RECORDON","MAP_PHONE","MAP_USERLOGIN","LOGIN","MAP_FOTO_FONDO","createChat","userFrom","userTo","USUARIO","USUARIO2","openChat","mSelf","MAP_INDICESEL","MAP_IDCHATSEL","MAP_IMGTIPO","MAP_IMAGEN","MAP_CHATTITULO","MAP_TITULO","MAP_CCUSUARIO","openListUser","createSearchIndex","refreshAll","closeListUser","salir","failWithMessage","irGrupo","setTimeRecording","sTime","executeActionAfterDelay","AccionesChatEspecial","parametro","makePhoneCall","MAP_TIPO","startCamera","MAP_SHOWADDTEXT","MAP_TIMERECORD","startAudioRecord","stopAudioRecord","setFieldPropertyValue","MAP_TITLE","sendMessage","doSearch","AccionesChat","openFile","MAP_FOTO","MAP_VOZ","colMUser","isFromUser","CollCV","ObjCV","USUARIOTO","USUARIOFROM","MENSAJE","IDCHAT","startReplica","addUserMessage","ROWID","fillMessagesContent","cant","colMsg","sRowid","omuser","msgVoz","lastIndexOf","MAP_ADJUNTO","MAP_FECHAHORA","MAP_COLORVIEW","MAP_FORECOLOR","MAP_FORECOLORFECHA","MAP_ESPACIO","MAP_IMAGE","grupo","literales","iniciarLiterales","stVersionLog","stScreensRework","stNewSup","stMustIndicateWarehouse","repeat","MAP_OBJETO_HIJO","pdfGlobal","addZero","doAuthLogout","OAuth2","withOptions","authority","clientID","persistenceKey","responseType","redirectUri","doAuthLogin","authenticate","onSuccess","doLoginNew","MAP_USER","MAP_PASSWORD","onLoginSuccessful","onLoginFailed","doLogout","funcionesFecha","diasSemana","anio","mes","diames","ms","getMilliseconds","GMTminutes","getTimezoneOffset","mensaje","dUTC","anioUTC","getUTCFullYear","mesUTC","getUTCMonth","diamesUTC","getUTCDate","diasemanaUTC","getUTCDay","hUTC","getUTCHours","mUTC","getUTCMinutes","sUTC","getUTCSeconds","msUTC","getUTCMilliseconds","tUTC","UTC","mensajeUTC","strUTC","strDate","strLocaleDate","toLocaleString","strLocaleDateOnly","toLocaleDateString","strTime","toTimeString","strLocaleTime","toLocaleTimeString","strIso","toISOString","sJson","mensajeString","userMsgBox","collMsgBox","createClone","objMsgBox","MAP_MENSAJE","frameScroll","MAP_SHOWOVERSCROLL","EscanearMatricula","RutaImagen","ocr","scanLicensePlate","EscanearTexto","scanText","prev","execNode","MAP_GROUP","goPage","MAP_TOTAL_PAGES","val","formatDateTime","hours","minutes","ampm","Left","testClick","scanAvailableNetworks","MAP_LOADING","wifiManager","WifiManager","isWifiAdapterEnabled","onWifiNetworksFound","OBJETO","wifiNetworks","orden","wifi","isOpen","getSsid","getNetworkSecurity","saberSiWifiGuardada","MAP_ESTADO","MAP_ORDEN","MAP_IDESTADO","wifiInfo","getActiveWifiInfo","MAP_SSID","MAP_SECURITY","doSort","lstSaved","listSavedNetworks","GenerarPDFBasico","nameFile","createGrid","setEncryption","showGridDebug","getVerticalPosition","setTableWidth","addTableSetXY","addRectangle","AddCellTexttable","Pdf01","nColumT","nColum","isFinLine","textLine","addNewLine","CreatePDF","getEmptyFromNull","GenerarPDF1","addCellImage","CrearPdf_Factura","beginHeader","endHeader","beginFooter","pagina","getCurrentPage","endFooter","newPage","addTextLine","addTextSetX","getStrFill","stProp","stRelleno","nChar","stCad","getBoolStr","GenerarPDFChecks","CODSERVICIO","MAP_USUARIO","HORA","posY","interlineado","addCheckboxSetXY","FECHAUR4","FECHAUR5","texto","fieldPropertyValue","FIRMA1","FIRMA2","FIRMA3","setTextStyle","stfont","ststyle","stalign","stsize","stcolor","GenerarPDF3","margenIzq","margenSup","GenerarPDF3Apaisado","setLanguage","DevolverIframeVideoYoutube","sUrlYoutube","objeto","urlIndice","urlIndiceSiguenteParametro","doRegisterNewFingerprint","sPublicKey","getPublicKey","PUBLICKEY","onFailure","nError","sErrorMessage","launchFingerprintSettings","setCallback","listen","doRegisterNewFingerprintIOS","launch","doFingerprintAuth","getUserByPublicKey","stopListening","hacerLogin","PWD","doFingerprintAuthIOS","usuario","contrasenna","collUser","objUser","getOS","collUsuarios","testReplica","sResult","testConnection","testAuthentication","doDRCamera","imgFile","onCancelled","jstestClick","handleError","eventoOnTextChanged","FiltraMarcados","MAP_BUSCAR_TEXT","eventoOnFocusChanged","MAP_DESCRIPCIONEVENTO","eventoOnFocusChanged3","MAP_DESCRIPCIONEVENTO3","jstestClickNode","scrollArrow","miparam","MAP_VALORVER","MAP_ATTSHOWOVERSCROLL","sysMessage","codigo","processReplicatorQueue","liveResponse","EnviarMail","adjunto","men","MAP_CORREO","MAP_ASUNTO","MAP_CUERPO","ok","MAP_VISIBLE","MAP_TEXTAT","CodigoBarras","MAP_TIPOCB","MAP_CHECKBOX1","MAP_CHECKBOX2","startScanner","takePicture","filename","saveToGallery","onFinished","sFileName","quality","MAP_CAMERA_QUALITY","maxDuration","withMicAudio","MAP_RECORDING","stopRecording","startPreview","stopPreview","isOpened","bOpened","isCameraOpened","isAutoFocus","bAutoFocus","getSupportedAspectRatios","allAspectRatios","doSetOnCodeScanned","setOnCodeScanned","doSetFlashMode","sFlashMode","setFlashMode","doToggleFlashMode","getFlashMode","doToggleCamera","sCamera","getCamera","setCamera","doToggleAutoFocus","setAutoFocus","XoneViewsHandler","viewsMap","getXoneDataObject","xoneHashIds","xoneViewsHandler","cleanRemovedViews","XoneView","addView","_bindedEvents","bindedEvent","clearBreadcrumbsFromXoneHashId","XoneControl","XoneGPSResulset","XoneGPSConnection","SafeToHours","getTestResult","XoneGPSConnectionData","executeQuery","UI_ATTRIBUTES","frame","tooltipForecolor","COLOR_ATTRIBUTES","FAST_ATTR_RESOLVER","fetchFastAttrResolver","normalized","original","PROP_ATTR_VISIBLE","isPropNode","developValue","normailzeWebAttribute","retDefault","evaluateMacro","getArrayValue","macro","companycolor","DEFAULT_BGCOLOR","forecolor","DEFAULT_FORECOLOR","attrXoneName","resolvedAttrName","m_fastResolver","sFunctionName","nExpectedCount","nMinimumParameterCount","nMaximumParameterCount","sUserName","sExceptionMessage","FAIL_EXITAPP","FAIL_EXIT","FAIL_LOGIN","MACRO_LOGIN_START","MACRO_LOGIN_USERCOLL","MACRO_LOGIN_NEWUSER","MACRO_LOGIN_NEWPASS","MACRO_LOGIN_COLL_OBJECT_INDEX","MACRO_STARTREPLICA","PROP_DEFAULT_FIELDSIZE","PROP_DEFAULT_LABELWIDTH","PROP_DEFAULT_CONTENTLINES","TRUE_VALUE","FALSE_VALUE","DEFAUT_FILES_PATH","DATE_SEPARATOR","HOUR_SEPARATOR","DANISH_HOUR_SEPARATOR","LAST_EXECUTED_APP_FILE_NAME","LAST_EXECUTED_APP_FIELD_NAME","LAST_EXECUTED_USER_FIELD_NAME","LICENSE_FIELD_NAME","SERVER_FIELD_NAME","TAG_MAPPINGFILE","TAG_APPNODE","PROP_ATTR_TYPE","MASK_EDIT_VISIBLE","MASK_LIST_VISIBLE","MASK_CONTENT_VISIBLE","MASK_DROPDOWN_VISIBLE","COLL_COLLPROPS","COLL_LOGIN_COLL","COLL_LOGOFF_COLL","m_lstCollections","m_lstCollPropValueCaches","m_bCacheAttrValues","_objectID","m_PushExit","m_strAppName","m_lstConnections","m_lstSysCollNames","m_lstQualifyCaches","m_objectDeveloper","m_strConsole","m_lstParamStack","m_lstGlobalMacros","m_nDebugPort","m_dbgLocker","m_lstCssList","m_lstCollPropUndefinedValues","m_lstConditionCssList","m_strFixedVisualCondition","m_strVisualConditions","m_lstOpenColls","bIsCharWidthCompatibility","bIsImageValuePriorized","m_lstVisualCondDescriptors","m_lstCachedScripts","m_globalItems","m_bLoadLayouts","m_lstCollExceptions","getCollExceptions","m_lstPropExceptions","getPropExceptions","m_error","m_isBrowser","global","isBrowser","m_loader","sCollectionName","m_lstEvaluatedAttributes","m_ui","getObjectHost","getCollectionHost","__proto__","m_strUserIdColl","m_user","m_currency","m_strEntIdLevel","m_strEntIdColl","m_strEntIdOwner","NodeData","setOperIdLength","setRowIdLength","strConnString","parsedConnectionString","strProvider","strProgID","GPSConnectionData","JSONConnectionData","addExtendedProperty","GetRawStringField","sDateMask","sRowidFieldName","setRowIdFieldName","sSqlFieldName","setSqlFieldName","SetPlatform","setNodeData","setIsReplicating","m_nMasterMid","setMID","setDBID","CreateConnection","AddConnection","ConnectionName","CheckIncorrectParamCount","jsObject","bIsGoogleSignOn","sEntryPointCollection","dataCollEntryPoint","setOverridenEntryPoint","logonUser","loggedUser","loginException","getXOneScriptObjects","mapRuntimeObjects","setLastAppExecutedField","XOneJavascript","run","getThrowableMessage","runAsync","scriptContext","injectJavaObject","getUserInterface","paramsNames","UserName","Password","errorMessage","silentMode","getSysCollection","usercol","objuser","removeExtendedProperty","objparams","ValidateUserCredentials","strUserPwd","ObjectItem","objcomp","LoadCompanyData","SysName","CollName","GetSysCollName","loginCollection","loginCollectionDefault","mapLoginCollections","getValuesByConditions","condition","getCurrentVisualConditionsDescriptors","sLoginColl","loginCollNode","getConfigFile","entryPointCollection","entryPointDefault","mapEntryPointCollections","sCondition","sOverridenEntryPointCollection","lstVisualConditions","sVisualCondition","userCollection","clearCompanyData","codePath","scriptWrapper","connString","m_fileManager","m_strAppPath","appXml","m_jsonConfigFile","LoadConfigFile","Initialize","ConnString","mainConn","setConnString","m_strObjectPrefix","m_bIsReady","executionPath","appSource","m_nVersionMapping","Deserialize","m_xmlConfigFile","getRootNode","LoadAppFile","LoadAppNode","xmlDocument","m_xmlAppNode","xapp","m_strDefaultLanguage","m_bDebug","m_bSqlProfilerMode","m_bLogMemoryUsage","sScriptOptimizationLevel","isDebuggable","m_nScriptOptimizationLevel","xcns","xc","strSysName","strCharsetEncoding","strCondition","LoadAndSaveNewCssFile","m_bHasStylesheets","addEntryPointCollection","selectSingleNode","addLoginCollection","LoadNewCssFile","LoadFile","getSourcePath","mIsEncryptFiles","hashCode","LoadCollection","collProps","LoadExternalCollection","second","first","m_company","collCache","nodeTypeCache","nodeNameCache","NodeType","nStart","nEnd","lstCombinations","CreateVisualCombinations","Parts","StartIndex","EndIndex","Destination","sTmp","IsFixed","ClearCaches","ParseVisualConditions","m_strFilesPath","updateVisualConditionsFromMacro","mapCopy","Company","m_bExternalEntIdColl","m_bExternalEntIdLevel","m_bExternalEntIdOwner","m_strEntTable","m_strEntPk","m_nEntPkType","GenerateEntIdColl","GenerateEntIdLevel","GenerateEntIdOwner","PrepareUserMacrosSqlString","ClassName","lstCssParsers","cssParser","FindStylesheetByClassNameList","lstDescriptors","sDescriptor","FindStylesheetByClassAttrList","listCss","getRuleBySelector","strBase","base","CssList","Code","Description","setNumber","setDescription","setFailedSql","SourceNode","oldNode","replaceChild","m_bSelectiveReplication","sClassId","objData","param0","booleano"],"mappings":"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","file":"js/app.5ab0011d.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({\"about\":\"about\",\"coll\":\"coll\"}[chunkId]||chunkId) + \".\" + {\"about\":\"ffa656fe\",\"coll\":\"62140de2\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"coll\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({\"about\":\"about\",\"coll\":\"coll\"}[chunkId]||chunkId) + \".\" + {\"about\":\"31d6cfe0\",\"coll\":\"06c9389b\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/xone-framework/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Breadcrumb.vue?vue&type=style&index=0&id=54d926b6&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Button.vue?vue&type=style&index=0&id=47c93105&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Offline.vue?vue&type=style&index=0&id=375b8507&scoped=true&lang=css\"","export class Exception {\n    /**\n     *\n     */\n    constructor(message) {\n        this.m_message = message;\n    }\n    getClass() {\n        return { getSimpleName: () => \"Exception\" };\n    }\n    getMessage() {\n        return this.m_message;\n    }\n}\n\n//# sourceMappingURL=Exception.js.map\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Camera.vue?vue&type=style&index=0&id=71a77362&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./DragControl.vue?vue&type=style&index=0&id=49901515&scoped=true&lang=css\"","import StringUtils from \"./StringUtils\";\nexport default class StringBuilder {\n    /**\n     *\n     */\n    constructor(text = \"\") {\n        this.m_data = Array.from(text);\n    }\n    append(value) {\n        let text = StringUtils.SafeToString(value);\n        this.m_data.push(text);\n        return this;\n    }\n    toString() {\n        return this.m_data.join(\"\");\n    }\n    insert(index, item) {\n        this.m_data.add(index, item);\n    }\n    length() {\n        return this.toString().length;\n    }\n    isEmpty() {\n        return this.m_data.length === 0;\n    }\n    charAt(position) {\n        return this.toString().charAt(position);\n    }\n}\n\n//# sourceMappingURL=StringBuilder.js.map\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Loader.vue?vue&type=style&index=0&id=2873404c&scoped=true&lang=css\"","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./PictureMap.vue?vue&type=style&index=0&id=4a338f92&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Row.vue?vue&type=style&index=0&id=86b0c20e&scoped=true&lang=css\"","import XoneTestResulset from \"../Test/XoneTestResulset\";\nimport XoneConnectionData from \"../XoneConnectionData\";\nimport XoneJSONConnection from \"./XoneJSONConnection\";\nexport default class XoneJSONConnectionData extends XoneConnectionData {\n    /**\n     * Crea una conexión a base de datos\n     *\n     * @param Name  Nombre de la conexión.\n     * @param Owner Aplicación a la cual pertenece esta conexión.\n     */\n    constructor(context, Name, Owner) {\n        super(Name, Owner);\n        this.m_context = context;\n        // K11101001: Utilizar SESSIONID numérico para mejorar el rendimiento de la maquinaria.\n        // this.m_nSessionIdCounter = new AtomicLong(0);\n        // // A14011501: Optimizaciones para obtener claves numéricas de conexiones sqlite y demás.\n        // this.m_nLastInsertedId = new ThreadLocal<>();\n        // this.m_nLastRecordsAffected = new ThreadLocal<>();\n        // this.m_strLastInsertedTable = new ThreadLocal<>();\n        // // TODO ADD TAG\n        // // Nos creamos el holder para el statement...\n        // this.m_stmt = {}; // new ThreadLocal<>();\n    }\n    /**\n     * TRUE si el DBMS soporta la sintaxis TOP x\n     *\n     * @return Esta función posiblemente no se redefina en esta plataforma.\n     */\n    TopAllowed() {\n        return false;\n    }\n    /**\n     * TRUE si el DBMS soporta la sintaxis LIMIT x\n     *\n     * @return Mirar arriba plis.\n     */\n    LimitAllowed() {\n        return false;\n    }\n    /**\n     * TRUE si la conexión tiene caracteres para escapear cadenas de caracteres.\n     *\n     * @return Devuelve TRUE si hay caracteres en la lista para sustituir.\n     */\n    HasEscapeChars() {\n        return false;\n    }\n    /**\n     * A11092601: Modificaciones para mejorar el soporte de conexiones remotas y demás.\n     * Devuelve TRUE si la conexión acepta sentencias SQL parseadas para su ejecución o para queries.\n     *\n     * @return\n     */\n    acceptsParsedSentences() {\n        return true;\n    }\n    acceptsEmptyQueries() {\n        return false;\n    }\n    /**\n     * A11092601: Modificaciones para mejorar el soporte de conexiones remotas y demás.\n     * Devuelve TRUE si la conexión permite recuperar un ID autonumérico dado un ROWID.\n     *\n     * @return\n     */\n    retrievesAutonumericKeys() {\n        return false;\n    }\n    /**\n     * Obtiene una conexión física a la fuente de datos que encapsula esta clase. Es de obligatoria redefinición por los derivados de esta clase.\n     *\n     * @return Devuelve una nueva conexión de datos (o la misma si solo se emplea una)\n     * @throws Exception\n     */\n    GetNewConnection(ReadOnly = false) {\n        return this.m_connection = new XoneJSONConnection(this.getConnString(), this.getName());\n    }\n    GetCurrentConnection(ReadOnly = false) {\n        if (this.m_connection)\n            return this.m_connection;\n        return this.GetNewConnection(ReadOnly);\n    }\n    /**\n     * Crea un conjunto de datos sin conexión original. Para ello crea una local y la devuelve como\n     * parte del conjunto que la cierra cuando lo cierran a él\n     *\n     * @param Sentence Sentencia SQL que se ejecuta para obtener el conjunto de datos.\n     * @return Devuelve un conjunto de datos o NULL si algo falla.\n     * @throws Exception\n     */\n    /// public CreateRecordset(Sentence:string): IResultSet {\n    //     return this.CreateRecordset(null, Sentence);\n    // }\n    /**\n     * A11092601: Modificaciones para mejorar el soporte de conexiones remotas y demás.\n     * Ejecuta una sentencia SQL parseada que devuelve datos.\n     *\n     * @param Sentence\n     * @return\n     * @throws Exception\n     */\n    /// public CreateRecordset(Sentence:any): IResultSet{\n    //     return this.CreateRecordset(null, Sentence);\n    // }\n    /**\n     * Crea un objeto de acceso a datos (recordset) para leer los datos de un objeto\n     *\n     * @param Connection Conexión que se quiere usar para abrir la fuente de datos. NULL para crear una local y usarla solamente para esta función.\n     * @param Sentence   Setencia SQL (SELECT) que se quiere ejecutar para abrir la fuente de datos.\n     * @param MaxRows    Máximo de registros para no usar el que tiene por defecto la clase.\n     * @return Devuelve el conjunto de datos creado o NULL si algo falla.\n     * @throws Exception\n     */\n    /// public abstract CreateRecordset(Connection Connection, String Sentence, int MaxRows): IResultSet;\n    /**\n     * A11092601: Modificaciones para mejorar el soporte de conexiones remotas y demás.\n     * Esta implementación permite la ejecución de sentencias SQL parseadas con anterioridad.\n     *\n     * @param Connection\n     * @param Sentence\n     * @param MaxRows\n     * @return\n     * @throws Exception\n     */\n    /// public abstract ResultSet CreateRecordset(Connection: IConnection | string, ...args?:any) throws Exception;\n    /*\n     * TODO ADD TAG 17042014: Luis Un recordset a partir de la clase de parametros\n     */\n    CreateRecordset(Connection, ...args) {\n        return new XoneTestResulset(Connection);\n        // if (typeof Connection == 'string' ) {\n        //     return this.GetCurrentConnection().executeQuery(Connection as string);\n        // }\n        // return null;\n    }\n    /*\n     * TODO ADD TAG 17042014: Luis Un recordset a partir de la clase de parametros\n     */\n    async CreateRecordsetAsync(Connection, ...args) {\n        if (typeof Connection == 'string') {\n            let cn = this.GetCurrentConnection();\n            return await cn.executeQueryAsync(Connection, ...args);\n        }\n        return null;\n    }\n    /*\n     * TODO ADD TAG 17042014: Luis Un recordset a partir de la clase de parametros\n     */\n    async CountAsync(Connection, ...args) {\n        if (typeof Connection == 'string') {\n            return await this.GetCurrentConnection().countAsync(Connection, ...args);\n        }\n        return null;\n    }\n    /**\n     * Crea un objeto de acceso a datos (recordset) para leer los datos de un objeto\n     *\n     * @param Connection Conexión que se quiere usar para abrir la fuente de datos. NULL para crear una local y usarla solamente para esta función.\n     * @param Sentence   Setencia SQL (SELECT) que se quiere ejecutar para abrir la fuente de datos.\n     * @return Devuelve el conjunto de datos creado o NULL si algo falla.\n     * @throws Exception\n     */\n    //public abstract ResultSet CreateRecordset(Connection Connection, String Sentence) throws Exception;\n    /**\n     * A11092601: Modificaciones para mejorar el soporte de conexiones remotas y demás.\n     * Ejecuta una sentencia SQL parseada que devuelve datos.\n     *\n     * @param conn\n     * @param Sentence\n     * @return\n     * @throws Exception\n     */\n    /// public abstract ResultSet CreateRecordset(Connection conn, SqlParser Sentence) throws Exception;\n    /**\n     * Ejecuta una sentencia SQL dentro de la conexión que manipula este objeto. No lleva conexión física como parámetro porque crea una temporal, trabaja con ella y la cierra.\n     * <p>\n     * K11092601: ExecuteSqlString y similares deben devolver un objeto, que puede ser ResultSet.\n     * Cambiar el tipo de resultado.\n     *\n     * @param Sentence Sentencia SQL que se quiere ejecutar.\n     * @return Devuelve TRUE si la ejecución de la sentencia SQL es correcta.\n     * @throws Exception\n     */\n    // public ExecuteSqlString(Sentence: string): any {\n    //     return ExecuteSqlString(null, Sentence, true);\n    // }\n    /**\n     * A10090601:\tIncluir el mecanismo de réplica selectiva por colecciones a la maquinaria.\n     * Ejecuta un SQL sin replicar\n     * <p>\n     * K11092601: ExecuteSqlString y similares deben devolver un objeto, que puede ser ResultSet.\n     * Cambiar el tipo de resultado.\n     */\n    // public Object ExecuteLocalSqlString(String Sentence) throws Exception {\n    //     return ExecuteSqlString(null, Sentence, false);\n    // }\n    /**\n     * A11092601: Modificaciones para mejorar el soporte de conexiones remotas y demás.\n     * Ejecuta una sentencia SQL parseada con réplica.\n     * <p>\n     * K11092601: ExecuteSqlString y similares deben devolver un objeto, que puede ser ResultSet.\n     * Cambiar el tipo de resultado.\n     *\n     * @param Sentence\n     * @return\n     * @throws Exception\n     */\n    // public Object ExecuteParsedSql(SqlParser Sentence) throws Exception {\n    //     return ExecuteParsedSql(null, Sentence, true);\n    // }\n    /**\n     * Ejecuta una sentencia SQL dentro de la conexión que manipula este objeto.\n     * A10090601:\tIncluir el mecanismo de réplica selectiva por colecciones a la maquinaria.\n     * Un parámetro para decir si replica.\n     * <p>\n     * K11092601: ExecuteSqlString y similares deben devolver un objeto, que puede ser ResultSet.\n     * Cambiar el tipo de resultado\n     *\n     * @param Connection Conexión de datos que se quiere usar para ejecutar la sentencia. NULL para crear una temporal, ejecutar la sentencia y cerrarla.\n     * @param Sentence   Sentencia SQL que se va a ejecutar.\n     * @param Replicate  TRUE si replica.\n     * @return Devuelve TRUE si la sentencia se ejecuta correctamente.\n     * @throws SQLException\n     * @throws Exception\n     */\n    ExecuteSqlString(Connection, Sentence, Replicate, ...args) {\n        return 0;\n    }\n    async ExecuteSqlStringAsync(Connection, Sentence, Replicate, ...args) {\n        return await this.GetCurrentConnection().executeAsync(Sentence, 100, ...args);\n    }\n    /**\n     * A11092601: Modificaciones para mejorar el soporte de conexiones remotas y demás.\n     * Esta implementación opcional permite ejecutar una sentencia SQL parseada en vez de una cadena SQL.\n     * <p>\n     * K11092601: ExecuteSqlString y similares deben devolver un objeto, que puede ser ResultSet.\n     * Cambiar el tipo de resultado.\n     *\n     * @param Connection\n     * @param Sentence\n     * @param Replicate\n     * @return\n     * @throws SQLException\n     * @throws Exception\n     */\n    ExecuteParsedSql(Connection, Sentence, Replicate, ...args) {\n        return 0;\n    }\n    async ExecuteParsedSqlAsync(Connection, Sentence, Replicate, ...args) {\n        return await this.GetCurrentConnection().executeAsync(Sentence, 100, ...args);\n    }\n    /**\n     * Reemplaza el valor del operador específico dentro de la cadena SQL que se pasa como parámetro.\n     *\n     * @param Collection Colección con la que se está trabajando.\n     * @param Sentence   Sentencia SQL o cadena en la cual se quiere sustituir el operador.\n     * @param OperName   Nombre del operador que se quiere sustituir.\n     * @return Devuelve la sentencia original con el operador sustituido.\n     * @throws Exception\n     */\n    ReplaceCustomOper(Collection, Sentence, OperName) {\n        return Sentence;\n    }\n    /**\n     * Inserta una sentencia TOP dentro del SQL que se pasa como parámetro. Colocada aquí para mantener compatibilidad de interfaces\n     * pero no se implementará en esta plataforma.\n     *\n     * @param Sentence Sentencia SQL que se quiere modificar.\n     * @param Rows     Cantidad de filas que se quiere limitar en el TOP x o LIMIT x\n     * @return La misma sentencia pasada como parámetro.\n     */\n    InsertTop(Sentence, Rows) {\n        return Sentence;\n    }\n    /**\n     * Dado un nombre de campo lo formatea usando los caracteres de inicio y fin de campo.\n     *\n     * @param FieldName Nombre del campo a formatear.\n     * @return Devuelve el nombre del campo encerrado en sus secuencias de inicio y fin de campo.\n     */\n    QuoteFieldName(FieldName) {\n        return FieldName;\n    }\n    /**\n     * Dado un nombre de tabla u otro tipo de objeto de base de datos, lo devuelve formateado con su prefijo si este está definido.\n     *\n     * @param ObjectName Nombre de tabla u objeto en general de la base de datos para arreglar con el prefijo.\n     * @return Devuelve el nombre de objeto ya desarrollado con su prefijo si aplica.\n     */\n    // public String FixObjectName(String ObjectName):string {\n    //     return FixObjectName(ObjectName, null);\n    // }\n    /**\n     * Dada una cadena sustituye los caracteres para los cuales se hayan definido secuencias de escape por dichas secuencias.\n     *\n     * @param Value Cadena en la cual se van a sustituir los caracteres por secuencias de escape.\n     * @return Devuelve la cadena original con los caracteres sustituidos por sus secuencias de escape.\n     */\n    EscapeString(Value) {\n        if (Value.startsWith('\\''))\n            return Value;\n        return `\\'${Value}\\'`;\n    }\n    /**\n     * Genera un ROWID para la conexión actual. Emplea los criterios de número de tabla, MID, DBID, etc.\n     *\n     * @param TableName Nombre de la tabla para la cual se quiere generar el ROWID.\n     * @return Devuelve un ROWID respetando los valores de réplica y el tamaño del campo ROWID.\n     */\n    //public GenerateRowId(TableName:string):string {return Guid.create().toString();}\n    /**\n     * Desarrolla el valor de un objeto y lo devuelve como cadena lista para insertar en un SQL o un filtro\n     *\n     * @param Value Valor que se quiere desarrollar. Se usará la máscara de fecha de la conexión.\n     * @return CAdena representando el valor del objeto para escribir en una sentencia SQL o un filtro de datos.\n     */\n    // public DevelopObjectValue(Value:any):string {\n    //     return DevelopObjectValue(Value, true);\n    // }\n    /**\n     * Esta función se emplea para cerrar conexiones locales si es que las tiene. No necesariamente tiene por qué\n     * usarse para terminar la clase, simplemente cuando se quiera cerrar o destruir los objetos locales.\n     */\n    Terminate() { }\n    /**\n     * Si el DBMS soporta left outer joins\n     */\n    IsOuterJoinSupported() { return false; }\n    /**\n     * A11092601: Modificaciones para mejorar el soporte de conexiones remotas y demás.\n     * Devuelve una clave numérica dada una tabla y un ROWID. Permite abstraer la obtención de la clave autonumérica\n     * en conexiones que no son offline.\n     *\n     * @param TableName\n     * @param RowIdFieldName\n     * @return\n     * @throws Exception\n     */\n    RetrieveNumericKey(TableName, KeyName, RowIdFieldName, RowId) { return 0; }\n    /**\n     * A11092601: Modificaciones para mejorar el soporte de conexiones remotas y demás.\n     * Esta función permite calcular si un ROWID es único dentro de la conexión de datos.\n     *\n     * @param tableName\n     * @param RowID\n     * @return\n     * @throws Exception\n     */\n    isUniqueRowID(tableName, RowID) { return true; }\n    // A11120701: Mecanismo para exponer el DBMS de una conexión.\n    // Expone el tipo de DBMS que tiene debajo esta conexión. Obligatorio implementar.\n    getDbmsTag() { return \"OnlineJSON\"; }\n    ;\n}\n\n//# sourceMappingURL=XoneJSONConnectionData.js.map\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Image.vue?vue&type=style&index=0&id=dec9e398&scoped=true&lang=css\"","import Hashtable from \"../Collections/HashMap/Hashtable\";\nimport { XoneDataObject } from \"../core/XoneDataObject\";\nimport CXoneNameValuePair from \"../Utils/CXoneNameValuePair\";\nimport StringUtils from \"../Utils/StringUtils\";\nimport { Utils } from \"../Utils/Utils\";\nexport default class ScriptContext {\n    /**\n     * Construye un contexto de colección.\n     * @param HostCollection\t\tColección en cuyo contexto se ejecuta el script.\n     */\n    constructor(HostCollection) {\n        /**\n         *  Objeto en cuyo contexto se ejecuta el script\n         */\n        this.m_object = null;\n        /**\n         *  Colección en cuyo contexto se ejecuta el script\n         */\n        this.m_coll = null;\n        if (HostCollection instanceof XoneDataObject) {\n            this.m_object = HostCollection;\n            this.m_coll = HostCollection.getOwnerCollection();\n        }\n        else\n            this.m_coll = HostCollection;\n        // K10090801:\tCarga de includes locales en los nodos de acciones.\n        this.m_lstLocalIncludes = new Array();\n    }\n    /**\n     * @return\t\tDevuelve el objeto en el cual se ejecuta el script al que se refiere este contexto.\n     */\n    getObjectHost() {\n        return this.m_object;\n    }\n    /**\n     * @return\t\tDevuelve la colección en la cual se ejecuta el script al que se refiere este contexto.\n     */\n    getCollectionHost() {\n        return this.m_coll;\n    }\n    // Lista con los nombres de ficheros include de este contexto\n    // Devuelve la lista de includes locales.\n    // K10090801:\tCarga de includes locales en los nodos de acciones.\n    // La lista no es de cadenas\n    getLocalIncludes() {\n        return this.m_lstLocalIncludes;\n    }\n    /**\n     * A12081701: Mecanismo para pasar parámetros a un nodo de acción.\n     * Setea un parámetro para el script cuyo contexto tenemos. Los parámetros se podrán usar dentro del script\n     * como variables dentro del scope global.\n     *\n     * @param ParamName\t\t\tNombre del parámetro. No puede coincidir con ningún valor reservado.\n     * @param ParamValue\t\tValor del parámetro. Cualquier cosa.\n     */\n    SetParam(ParamName, ParamValue) {\n        if (this.m_lstParams == null)\n            this.m_lstParams = new Hashtable();\n        if (StringUtils.IsEmptyString(ParamName))\n            return;\n        if (ParamValue != null)\n            this.m_lstParams.put(ParamName, ParamValue);\n        else\n            this.m_lstParams.delete(ParamName);\n    }\n    /**\n     * A12081701: Mecanismo para pasar parámetros a un nodo de acción.\n     * Expone la lista de parámetros para poder sacarlos y meterlos en el contexto.\n     *\n     * @return La lista de parámetros o NULL si no hay parámetros.\n     */\n    GetParams() {\n        return this.m_lstParams;\n    }\n    /**\n     * L02102015: Sobrecargar ExtracArguments para poder usar Actionode null\n     * K13080701: La ejecución de scripts con argumentos a nivel de colección falta en algunos casos.\n     * Dado un contexto de script y una lista de argumentos saca los nombres de parámetros del nodo y\n     * coloca los argumentos en el contexto...\n     *\n     * @param Arguments\n     */\n    // public void ExtractArguments(Object[] Arguments) {\n    //     ExtractArguments(null,Arguments);\n    // }\n    ExtractArguments(ActionNode, ...args) {\n        if (!args)\n            return;\n        let xna = null;\n        if (ActionNode != null)\n            xna = ActionNode.SelectNodes(\"param\");\n        args.forEach((value, i) => {\n            let strName = null;\n            if (Array.isArray(value)) {\n                this.ExtractArguments(ActionNode, ...value);\n            }\n            else {\n                if (value instanceof CXoneNameValuePair) { // Vienen los dos\n                    //let nvp = (CXoneNameValuePair)value;\n                    strName = value.Name;\n                    value = value.Value;\n                } // Vienen los dos\n                else { // Sacar del XML\n                    if (xna != null && i < xna.count()) { // Tenemos valor\n                        let xarg = xna.get(i);\n                        // Sacar el nombre\n                        strName = xarg.getAttrValue(Utils.PROP_ATTR_NAME);\n                    } // Tenemos valor\n                    if (StringUtils.IsEmptyString(strName))\n                        strName = String.format(\"Param%d\", i + 1);\n                } // Sacar del XML\t\n                this.SetParam(strName, value);\n            }\n        }); // Puede haber más parámetros que valores\n    }\n}\n\n//# sourceMappingURL=ScriptContext.js.map\n","import { Exception } from \"../../Exceptions/Exception\";\nimport { SqlParser } from \"../../Parsers/SQL/SqlParser\";\nimport ConnectionStringUtils from \"../../Utils/ConnectionStringUtils\";\nimport NumberUtils from \"../../Utils/NumberUtils\";\nimport SqlType from \"../../Utils/SqlType\";\nimport StringBuilder from \"../../Utils/StringBuilder\";\nimport StringUtils from \"../../Utils/StringUtils\";\nimport TextUtils from \"../../Utils/TextUtils\";\nimport { Utils } from \"../../Utils/Utils\";\nimport XoneJSONConnection from \"../JSONConnection/XoneJSONConnection\";\nimport XoneWebCoreResulset from \"./XoneWebCoreResulset\";\nexport default class XoneWebCoreConnection {\n\t/**\n\t *\n\t */\n\tconstructor(sConnectionString) {\n\t\tthis.m_token = null;\n\t\t// Unos valore por defecto\n\t\tthis.m_idsUrl = \"https://ids.xonedev.cloud/connect/token\";\n\t\tthis.sUrlAddress = \"https://web.xonedev.cloud/api/itf/DoAction\";\n\t\tthis.parseConnectionString(sConnectionString);\n\t}\n\texecuteUpdateAsync(Sentence) {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tasync executeNonQuery(data) {\n\t\tvar token = await this.readBearerTokenAsync();\n\t\tif (TextUtils.isEmpty(token)) throw new Exception(\"No Auth\");\n\t\t// var parser=new SqlParser(\"ROWID\");\n\t\t// parser.ParseSqlString(Sentence as string);\n\t\t// var data= {\n\t\t//     coll: args[0],\n\t\t//     action: \"select\",\n\t\t//     where: parser.GetWhereSentence()\n\t\t// };\n\t\tconst response = await fetch(this.sUrlAddress, {\n\t\t\tmethod: \"POST\",\n\t\t\t//mode: 'no-cors', // no-cors, *cors, same-origin\n\t\t\t// cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n\t\t\t//credentials: 'omit', // include, *same-origin, omit\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\tAuthorization: \"Bearer \" + token,\n\t\t\t},\n\t\t\t//redirect: 'follow', // manual, *follow, error\n\t\t\t// referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n\t\t\tbody: JSON.stringify(data),\n\t\t});\n\t\tconst result = await response.json();\n\t\tif (result.hasError === true) throw new Exception(result.err);\n\t\treturn 1;\n\t}\n\tgetDataFromParser(parser) {\n\t\t// amiyares 20/08/2021: reemplazo el valor \"NULL\" por null\n\t\tconst data = parser.GetFields().toJSON();\n\t\tObject.entries(data).forEach(([key, value]) => {\n\t\t\tif (value === \"NULL\") data[key] = null;\n\t\t});\n\t\treturn data;\n\t}\n\tformatOnlineData(parser, collName, keys) {\n\t\tif (parser.GetSqlType() == SqlType.SQLTYPE_SELECT) {\n\t\t\treturn {\n\t\t\t\tcoll: collName,\n\t\t\t\taction: \"select\",\n\t\t\t\twhere: parser.GetWhereSentence(),\n\t\t\t};\n\t\t}\n\t\tif (parser.GetSqlType() == SqlType.SQLTYPE_UPDATE || parser.GetSqlType() == SqlType.SQLTYPE_INSERT) {\n\t\t\treturn {\n\t\t\t\tcoll: collName,\n\t\t\t\taction: \"write\",\n\t\t\t\tdata: this.getDataFromParser(parser),\n\t\t\t\tkeys: parser.getKeys(),\n\t\t\t\twhere: parser.GetWhereSentence(),\n\t\t\t};\n\t\t}\n\t\tif (parser.GetSqlType() == SqlType.SQLTYPE_DELETE) {\n\t\t\treturn {\n\t\t\t\tcoll: collName,\n\t\t\t\taction: \"drop\",\n\t\t\t\tdata: this.getDataFromParser(parser),\n\t\t\t\tkeys: parser.getKeys(),\n\t\t\t\twhere: null,\n\t\t\t};\n\t\t}\n\t\treturn {};\n\t\t// if (parser.GetSqlType() == SqlType.SQLTYPE_INSERT) {\n\t\t//     return {\n\t\t//         coll: collName,\n\t\t//         action: \"write\",\n\t\t//         data: this.getDataFromParser(parser),\n\t\t//         keys: parser.getKeys(),\n\t\t//         data: this.getDataFromParser(parser)\n\t\t//     };\n\t\t// }\n\t}\n\tasync executeAsync(Sentence, MaxRows, ...args) {\n\t\tif (typeof Sentence == \"string\") {\n\t\t\tlet tmp = new SqlParser(\"ROWID\");\n\t\t\ttmp.ParseSqlString(Sentence);\n\t\t\tSentence = tmp;\n\t\t}\n\t\treturn await this.executeNonQuery(this.formatOnlineData(Sentence, args[0], args[1]));\n\t}\n\tgetAuthData() {\n\t\tlet bld = new StringBuilder(\"client_id=\");\n\t\tbld.append(this.sUsername);\n\t\tbld.append(\"&client_secret=\");\n\t\tbld.append(this.sPassword);\n\t\tbld.append(\"&grant_type=client_credentials\");\n\t\treturn bld.toString();\n\t}\n\tasync readBearerTokenAsync() {\n\t\tif (this.m_token != null) {\n\t\t\tif (this.m_token.expires_in > new Date()) return this.m_token.access_token;\n\t\t}\n\t\t// if (this.sUrlAddress.indexOf('localhost') > 0)\n\t\t//     return 'FORTEST';\n\t\tconst response = await fetch(this.m_idsUrl, {\n\t\t\tmethod: \"POST\",\n\t\t\t//mode: \"no-cors\",\n\t\t\t// cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n\t\t\t// credentials: 'same-origin', // include, *same-origin, omit\n\t\t\theaders: {\n\t\t\t\t//'Content-Type': 'application/json',\n\t\t\t\t\"Content-Type\": \"application/x-www-form-urlencoded\",\n\t\t\t},\n\t\t\t//redirect: 'follow', // manual, *follow, error\n\t\t\t//referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n\t\t\tbody: this.getAuthData(),\n\t\t});\n\t\tlet token = await response.json();\n\t\tif (token.error) {\n\t\t\tconsole.error(token.error);\n\t\t\treturn (this.m_token = null);\n\t\t}\n\t\tvar expire = new Date();\n\t\texpire.setSeconds(expire.getSeconds() + token.expires_in);\n\t\tthis.m_token = token;\n\t\tthis.m_token.expires_in = expire;\n\t\treturn token.access_token;\n\t\t//   return response.then((value)=> {\n\t\t//     return value.json().then((token)=> {\n\t\t//         if (token.error) {\n\t\t//             console.error(token.error);\n\t\t//             return this.m_token=null;\n\t\t//         }\n\t\t//         var expire=new Date();\n\t\t//         expire.setSeconds(expire.getSeconds()+token.expires_in);\n\t\t//         this.m_token=token;\n\t\t//         this.m_token.expires_in=expire;\n\t\t//         return token.access_token;\n\t\t//     })\n\t\t//     .catch((reason)=>{\n\t\t//         console.error(reason);\n\t\t//         return null;\n\t\t//     }); // parses JSON response into native JavaScript objects\n\t\t//   })\n\t\t//   .catch((reason)=> {\n\t\t//       console.error(reason);\n\t\t//       throw new Exception(reason);\n\t\t//   })\n\t}\n\texecuteQuery() {\n\t\treturn new XoneWebCoreResulset();\n\t}\n\tasync fetchDataAsync(data) {\n\t\tvar token = await this.readBearerTokenAsync(); //\n\t\tif (TextUtils.isEmpty(token)) throw new Exception(\"No Auth\");\n\t\t// var parser = new SqlParser(\"ROWID\");\n\t\t// parser.ParseSqlString(Sentence as string);\n\t\t// var data = {\n\t\t//     //count:args.length>0?args[0]:false,\n\t\t//     //coll: args.length>1?args[1]:\"\",\n\t\t//     action: \"select\",\n\t\t//     where: parser.GetWhereSentence(),\n\t\t//     sort: parser.getOrderBySentence()\n\t\t//     //page: args.length>2?args[2]:{}\n\t\t// };\n\t\t// data = { ...data, ...options };\n\t\tconst response = await fetch(this.sUrlAddress, {\n\t\t\tmethod: \"POST\",\n\t\t\t//mode: 'no-cors', // no-cors, *cors, same-origin\n\t\t\t// cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n\t\t\t//credentials: 'omit', // include, *same-origin, omit\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\tAuthorization: \"Bearer \" + token,\n\t\t\t},\n\t\t\t//redirect: 'follow', // manual, *follow, error\n\t\t\t// referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n\t\t\tbody: JSON.stringify(data),\n\t\t});\n\t\treturn await response.json();\n\t}\n\tasync executeQueryAsync(Sentence, ...args) {\n\t\t// var parser = new SqlParser(\"ROWID\");\n\t\t// parser.ParseSqlString(Sentence as string);\n\t\tvar data = {\n\t\t\taction: \"select\",\n\t\t};\n\t\tdata = Object.assign(Object.assign({}, data), args[0]);\n\t\tvar rs = new XoneWebCoreResulset(this, data);\n\t\treturn await rs.populate();\n\t}\n\t// async executeQueryAsyncOld(Sentence: any, ...args): Promise<IResultSet> {\n\t//     var token = await this.readBearerTokenAsync();\n\t//     if (TextUtils.isEmpty(token))\n\t//         throw new Exception(\"No Auth\");\n\t//     var parser = new SqlParser(\"ROWID\");\n\t//     parser.ParseSqlString(Sentence as string);\n\t//     var data = {\n\t//         //count:args.length>0?args[0]:false,\n\t//         //coll: args.length>1?args[1]:\"\",\n\t//         action: \"select\",\n\t//         where: parser.GetWhereSentence(),\n\t//         sort: parser.getOrderBySentence()\n\t//         //page: args.length>2?args[2]:{}\n\t//     };\n\t//     this.m_data = { ...data, ...args[0] };\n\t//     const response = await fetch(this.m_url, {\n\t//         method: 'POST', // *GET, POST, PUT, DELETE, etc.\n\t//         //mode: 'no-cors', // no-cors, *cors, same-origin\n\t//         // cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n\t//         //credentials: 'omit', // include, *same-origin, omit\n\t//         headers: {\n\t//             'Content-Type': 'application/json',\n\t//             \"Authorization\": \"Bearer \" + token\n\t//             // 'Content-Type': 'application/x-www-form-urlencoded',\n\t//         },\n\t//         //redirect: 'follow', // manual, *follow, error\n\t//         // referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n\t//         body: JSON.stringify(this.m_data) // body data type must match \"Content-Type\" header\n\t//     });\n\t//     const result = await response.json();\n\t//     return this.m_resulset = new XoneWebCoreResulset(result.data);\n\t//     // return this.readBearerTokenAsync().then((token) => {\n\t//     //     if (TextUtils.isEmpty(token))\n\t//     //         throw new Exception(\"No Auth\");\n\t//     //     var parser=new SqlParser(\"ROWID\");\n\t//     //     parser.ParseSqlString(Sentence as string);\n\t//     //     var data= {\n\t//     //         coll: args[0],\n\t//     //         action: \"select\",\n\t//     //         where: parser.GetWhereSentence()\n\t//     //     };\n\t//     //     const response = fetch(this.m_url, {\n\t//     //         method: 'POST', // *GET, POST, PUT, DELETE, etc.\n\t//     //         mode: 'no-cors', // no-cors, *cors, same-origin\n\t//     //         // cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n\t//     //         //credentials: 'omit', // include, *same-origin, omit\n\t//     //         headers: {\n\t//     //         'Content-Type': 'application/json',\n\t//     //         \"Authorization\": \"Bearer \"+token\n\t//     //         // 'Content-Type': 'application/x-www-form-urlencoded',\n\t//     //         },\n\t//     //         //redirect: 'follow', // manual, *follow, error\n\t//     //         // referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n\t//     //         body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\t//     //     });\n\t//     //     return response.then((value)=>\n\t//     //             value.json().then((result)=>\n\t//     //                 new XoneWebCoreResulset(result.data)))\n\t//     //             .catch((reason)=> {\n\t//     //                 console.error(reason);\n\t//     //                 return null;\n\t//     //             });\n\t//     // });\n\t// }\n\tasync countAsync(...args) {\n\t\t// var token = await this.readBearerTokenAsync();\n\t\t// if (TextUtils.isEmpty(token))\n\t\t//     throw new Exception(\"No Auth\");\n\t\t// var parser = new SqlParser(\"ROWID\");\n\t\t// parser.ParseSqlString(Sentence as string);\n\t\tvar data = {\n\t\t\taction: \"count\",\n\t\t};\n\t\tdata = Object.assign(Object.assign({}, data), args[0]);\n\t\tvar rs = new XoneWebCoreResulset(this, data);\n\t\treturn await rs.populate();\n\t\t// const response = await fetch(this.m_url, {\n\t\t//     method: 'POST', // *GET, POST, PUT, DELETE, etc.\n\t\t//     //mode: 'no-cors', // no-cors, *cors, same-origin\n\t\t//     // cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n\t\t//     //credentials: 'omit', // include, *same-origin, omit\n\t\t//     headers: {\n\t\t//         'Content-Type': 'application/json',\n\t\t//         \"Authorization\": \"Bearer \" + token\n\t\t//         // 'Content-Type': 'application/x-www-form-urlencoded',\n\t\t//     },\n\t\t//     //redirect: 'follow', // manual, *follow, error\n\t\t//     // referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n\t\t//     body: JSON.stringify(this.m_data) // body data type must match \"Content-Type\" header\n\t\t// });\n\t\t// const result = await response.json();\n\t\t// return this.m_resulset = new XoneWebCoreResulset(result.data);\n\t}\n\tparseConnectionString(sConnection) {\n\t\tlet parameters = ConnectionStringUtils.parseConnectionString(sConnection);\n\t\tthis.bIsLoginCall = StringUtils.ParseBoolValue(parameters.get(\"logincall\"));\n\t\t// TAG 20050201: Luis: Permitir una primera aproximacion a authorization por JWT\n\t\t// En el connstring debe ponerse jwtcall=true y el token que se tenga\n\t\tthis.bIsJWTCall = StringUtils.ParseBoolValue(parameters.get(\"jwtcall\"));\n\t\tthis.sToken = StringUtils.SafeToString(parameters.get(\"token\"), Utils.EMPTY_STRING);\n\t\tthis.nFlags =\n\t\t\tthis.nFlags |\n\t\t\t(StringUtils.ParseBoolValue(parameters.get(\"odataformat\")) ? XoneJSONConnection.FLAG_XONEJSONODATA : XoneJSONConnection.FLAG_XONEJSONSQL);\n\t\tthis.nFlags =\n\t\t\tthis.nFlags |\n\t\t\t(StringUtils.ParseBoolValue(parameters.get(\"customformat\")) ? XoneJSONConnection.FLAG_XONEJSONCUSTOM : XoneJSONConnection.FLAG_XONEJSONSQL);\n\t\tthis.nTimeout = NumberUtils.SafeToInt(parameters.get(\"timeout\"), 60);\n\t\tthis.nSecurityLevel = NumberUtils.SafeToInt(parameters.get(\"security level\"), 0);\n\t\tthis.sUrlAddress = parameters.get(\"data source\");\n\t\tif (this.sUrlAddress != null) {\n\t\t\tthis.sUrlAddress = this.sUrlAddress.trim();\n\t\t\tif (this.sUrlAddress.endsWith(\"?\")) {\n\t\t\t\tthis.sUrlAddress = this.sUrlAddress.substring(0, this.sUrlAddress.length - 1);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.sUrlAddress = Utils.EMPTY_STRING;\n\t\t}\n\t\tthis.m_idsUrl = parameters.get(\"ids\") || this.m_idsUrl;\n\t\t//this.m_url=this.sUrlAddress;\n\t\tthis.sMethod = parameters.get(\"method\");\n\t\tif (this.sMethod == null) {\n\t\t\tthis.sMethod = \"POST\";\n\t\t}\n\t\tthis.sUsername = parameters.get(\"xoneuser\");\n\t\tif (this.sUsername == null) {\n\t\t\tthis.sUsername = Utils.EMPTY_STRING;\n\t\t}\n\t\tthis.sPassword = parameters.get(\"xonepass\");\n\t\tif (this.sPassword == null) {\n\t\t\tthis.sPassword = Utils.EMPTY_STRING;\n\t\t}\n\t\tthis.sEndpoint = parameters.get(\"endpoint\");\n\t\tif (this.sEndpoint == null) {\n\t\t\tthis.sEndpoint = Utils.EMPTY_STRING;\n\t\t}\n\t\t// TAG 20050208: Luis: Permitir customizar mas las colecciones online\n\t\t// en el connstring se puede poner Action=nombreaccion y AuthAction=nombreaccionauth\n\t\tthis.sAction = StringUtils.SafeToString(parameters.get(\"action\"), XoneJSONConnection.DEFAULT_ACTION_NAME);\n\t\tthis.sAuthAction = StringUtils.SafeToString(parameters.get(\"authaction\"), XoneJSONConnection.DEFAULT_AUTHACTION_NAME);\n\t\tthis.sContentType = StringUtils.SafeToString(parameters.get(\"content-type\"), XoneJSONConnection.DEFAULT_CONTENT_TYPE);\n\t\tthis.bIsSqlQuery = StringUtils.ParseBoolValue(parameters.get(\"sqlquery\"), true);\n\t\t// TAG: 0604201601 nuevo parametro en el connstring para poder codeficar el cupero del post en formato key=valeu&key=vale\n\t\tthis.bPostUrlEncode = StringUtils.ParseBoolValue(parameters.get(\"postencode\"), false);\n\t\tthis.bIsCertificatePinningEnabled = StringUtils.ParseBoolValue(parameters.get(\"enablecertificatepinning\"));\n\t\tthis.sLocalCertPath = StringUtils.SafeToString(parameters.get(\"localcertificatepath\"));\n\t\t// Para la autenticacion remota, puede ser por conexion o por llamada del script del metodo\n\t\tthis.bAuthenticate = StringUtils.ParseBoolValue(parameters.get(\"auth\"), false);\n\t\tif (this.bAuthenticate) {\n\t\t\tthis.sAuthenticationUsername = parameters.get(\"user id\");\n\t\t\tthis.sAuthenticationPassword = parameters.get(\"password\");\n\t\t}\n\t\tthis.bUseRemoteBroker = StringUtils.ParseBoolValue(parameters.get(\"remote broker\"), false);\n\t\tthis.sRemoteMapped = StringUtils.SafeToString(parameters.get(\"remote mapped\"));\n\t\tthis.sRemoteDest = StringUtils.SafeToString(parameters.get(\"remote destination\"));\n\t\tthis.bAllowUnsafeCertificates = StringUtils.ParseBoolValue(parameters.get(\"allowunsafecertificates\"), false);\n\t}\n\tcreateStatement() {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tisClosed() {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tcommit() {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tbeginTrans() {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\trollback() {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\texecute(parameter, MaxRows) {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\texecuteUpdate(Sentence) {\n\t\treturn 0;\n\t}\n\texecuteOperation(OperType, tableName, values, whereClause) {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tgetDBMS() {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\touterJoinsSupported() {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tacceptsParsedSentences() {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tacceptsEmptyQueries() {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tLastRowsAffected() {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tLastInsertedRowId() {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tcancelProcesses(flags) {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tsetCryptoData(cryptoData) {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tgetCryptoData() {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tcryptoSupported() {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tgetTokenFromAuth(login, pass) {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n}\n\n//# sourceMappingURL=XoneWebCoreConnection.js.map\n","import XoneTestResulset from \"../Test/XoneTestResulset\";\nimport XoneConnectionData from \"../XoneConnectionData\";\nimport XoneWebCoreConnection from \"./XoneWebCoreConnection\";\nexport default class XoneWebCoreConnectionData extends XoneConnectionData {\n\t/**\n\t * Crea una conexión a base de datos\n\t *\n\t * @param Name  Nombre de la conexión.\n\t * @param Owner Aplicación a la cual pertenece esta conexión.\n\t */\n\tconstructor(context, Name, Owner) {\n\t\tsuper(Name, Owner);\n\t\tthis.m_context = context;\n\t\t// K11101001: Utilizar SESSIONID numérico para mejorar el rendimiento de la maquinaria.\n\t\t// this.m_nSessionIdCounter = new AtomicLong(0);\n\t\t// // A14011501: Optimizaciones para obtener claves numéricas de conexiones sqlite y demás.\n\t\t// this.m_nLastInsertedId = new ThreadLocal<>();\n\t\t// this.m_nLastRecordsAffected = new ThreadLocal<>();\n\t\t// this.m_strLastInsertedTable = new ThreadLocal<>();\n\t\t// // TODO ADD TAG\n\t\t// // Nos creamos el holder para el statement...\n\t\t// this.m_stmt = {}; // new ThreadLocal<>();\n\t}\n\t/**\n\t * TRUE si el DBMS soporta la sintaxis TOP x\n\t *\n\t * @return Esta función posiblemente no se redefina en esta plataforma.\n\t */\n\tTopAllowed() {\n\t\treturn false;\n\t}\n\t/**\n\t * TRUE si el DBMS soporta la sintaxis LIMIT x\n\t *\n\t * @return Mirar arriba plis.\n\t */\n\tLimitAllowed() {\n\t\treturn false;\n\t}\n\t/**\n\t * TRUE si la conexión tiene caracteres para escapear cadenas de caracteres.\n\t *\n\t * @return Devuelve TRUE si hay caracteres en la lista para sustituir.\n\t */\n\tHasEscapeChars() {\n\t\treturn false;\n\t}\n\t/**\n\t * A11092601: Modificaciones para mejorar el soporte de conexiones remotas y demás.\n\t * Devuelve TRUE si la conexión acepta sentencias SQL parseadas para su ejecución o para queries.\n\t *\n\t * @return\n\t */\n\tacceptsParsedSentences() {\n\t\treturn true;\n\t}\n\tacceptsEmptyQueries() {\n\t\treturn false;\n\t}\n\t/**\n\t * A11092601: Modificaciones para mejorar el soporte de conexiones remotas y demás.\n\t * Devuelve TRUE si la conexión permite recuperar un ID autonumérico dado un ROWID.\n\t *\n\t * @return\n\t */\n\tretrievesAutonumericKeys() {\n\t\treturn false;\n\t}\n\t/**\n\t * Obtiene una conexión física a la fuente de datos que encapsula esta clase. Es de obligatoria redefinición por los derivados de esta clase.\n\t *\n\t * @return Devuelve una nueva conexión de datos (o la misma si solo se emplea una)\n\t * @throws Exception\n\t */\n\tGetNewConnection(ReadOnly = false) {\n\t\treturn (this.m_connection = new XoneWebCoreConnection(this.m_strConnString));\n\t}\n\tGetCurrentConnection(ReadOnly = false) {\n\t\tif (this.m_connection) return this.m_connection;\n\t\treturn this.GetNewConnection(ReadOnly);\n\t}\n\t/**\n\t * Crea un conjunto de datos sin conexión original. Para ello crea una local y la devuelve como\n\t * parte del conjunto que la cierra cuando lo cierran a él\n\t *\n\t * @param Sentence Sentencia SQL que se ejecuta para obtener el conjunto de datos.\n\t * @return Devuelve un conjunto de datos o NULL si algo falla.\n\t * @throws Exception\n\t */\n\t/// public CreateRecordset(Sentence:string): IResultSet {\n\t//     return this.CreateRecordset(null, Sentence);\n\t// }\n\t/**\n\t * A11092601: Modificaciones para mejorar el soporte de conexiones remotas y demás.\n\t * Ejecuta una sentencia SQL parseada que devuelve datos.\n\t *\n\t * @param Sentence\n\t * @return\n\t * @throws Exception\n\t */\n\t/// public CreateRecordset(Sentence:any): IResultSet{\n\t//     return this.CreateRecordset(null, Sentence);\n\t// }\n\t/**\n\t * Crea un objeto de acceso a datos (recordset) para leer los datos de un objeto\n\t *\n\t * @param Connection Conexión que se quiere usar para abrir la fuente de datos. NULL para crear una local y usarla solamente para esta función.\n\t * @param Sentence   Setencia SQL (SELECT) que se quiere ejecutar para abrir la fuente de datos.\n\t * @param MaxRows    Máximo de registros para no usar el que tiene por defecto la clase.\n\t * @return Devuelve el conjunto de datos creado o NULL si algo falla.\n\t * @throws Exception\n\t */\n\t/// public abstract CreateRecordset(Connection Connection, String Sentence, int MaxRows): IResultSet;\n\t/**\n\t * A11092601: Modificaciones para mejorar el soporte de conexiones remotas y demás.\n\t * Esta implementación permite la ejecución de sentencias SQL parseadas con anterioridad.\n\t *\n\t * @param Connection\n\t * @param Sentence\n\t * @param MaxRows\n\t * @return\n\t * @throws Exception\n\t */\n\t/// public abstract ResultSet CreateRecordset(Connection: IConnection | string, ...args?:any) throws Exception;\n\t/*\n\t * TODO ADD TAG 17042014: Luis Un recordset a partir de la clase de parametros\n\t */\n\tCreateRecordset(Connection, ...args) {\n\t\treturn new XoneTestResulset(Connection);\n\t\t// if (typeof Connection == 'string' ) {\n\t\t//     return this.GetCurrentConnection().executeQuery(Connection as string);\n\t\t// }\n\t\t// return null;\n\t}\n\t/*\n\t * TODO ADD TAG 17042014: Luis Un recordset a partir de la clase de parametros\n\t */\n\tasync CreateRecordsetAsync(Connection, ...args) {\n\t\tif (typeof Connection == \"string\") {\n\t\t\tconst res = await this.GetCurrentConnection().executeQueryAsync(Connection, ...args);\n\t\t\treturn res;\n\t\t}\n\t\treturn null;\n\t}\n\t/*\n\t * TODO ADD TAG 17042014: Luis Un recordset a partir de la clase de parametros\n\t */\n\tasync CountAsync(Connection, ...args) {\n\t\tif (typeof Connection == \"string\") {\n\t\t\treturn await this.GetCurrentConnection().countAsync(Connection, ...args);\n\t\t}\n\t\treturn null;\n\t}\n\t/**\n\t * Crea un objeto de acceso a datos (recordset) para leer los datos de un objeto\n\t *\n\t * @param Connection Conexión que se quiere usar para abrir la fuente de datos. NULL para crear una local y usarla solamente para esta función.\n\t * @param Sentence   Setencia SQL (SELECT) que se quiere ejecutar para abrir la fuente de datos.\n\t * @return Devuelve el conjunto de datos creado o NULL si algo falla.\n\t * @throws Exception\n\t */\n\t//public abstract ResultSet CreateRecordset(Connection Connection, String Sentence) throws Exception;\n\t/**\n\t * A11092601: Modificaciones para mejorar el soporte de conexiones remotas y demás.\n\t * Ejecuta una sentencia SQL parseada que devuelve datos.\n\t *\n\t * @param conn\n\t * @param Sentence\n\t * @return\n\t * @throws Exception\n\t */\n\t/// public abstract ResultSet CreateRecordset(Connection conn, SqlParser Sentence) throws Exception;\n\t/**\n\t * Ejecuta una sentencia SQL dentro de la conexión que manipula este objeto. No lleva conexión física como parámetro porque crea una temporal, trabaja con ella y la cierra.\n\t * <p>\n\t * K11092601: ExecuteSqlString y similares deben devolver un objeto, que puede ser ResultSet.\n\t * Cambiar el tipo de resultado.\n\t *\n\t * @param Sentence Sentencia SQL que se quiere ejecutar.\n\t * @return Devuelve TRUE si la ejecución de la sentencia SQL es correcta.\n\t * @throws Exception\n\t */\n\t// public ExecuteSqlString(Sentence: string): any {\n\t//     return ExecuteSqlString(null, Sentence, true);\n\t// }\n\t/**\n\t * A10090601:\tIncluir el mecanismo de réplica selectiva por colecciones a la maquinaria.\n\t * Ejecuta un SQL sin replicar\n\t * <p>\n\t * K11092601: ExecuteSqlString y similares deben devolver un objeto, que puede ser ResultSet.\n\t * Cambiar el tipo de resultado.\n\t */\n\t// public Object ExecuteLocalSqlString(String Sentence) throws Exception {\n\t//     return ExecuteSqlString(null, Sentence, false);\n\t// }\n\t/**\n\t * A11092601: Modificaciones para mejorar el soporte de conexiones remotas y demás.\n\t * Ejecuta una sentencia SQL parseada con réplica.\n\t * <p>\n\t * K11092601: ExecuteSqlString y similares deben devolver un objeto, que puede ser ResultSet.\n\t * Cambiar el tipo de resultado.\n\t *\n\t * @param Sentence\n\t * @return\n\t * @throws Exception\n\t */\n\t// public Object ExecuteParsedSql(SqlParser Sentence) throws Exception {\n\t//     return ExecuteParsedSql(null, Sentence, true);\n\t// }\n\t/**\n\t * Ejecuta una sentencia SQL dentro de la conexión que manipula este objeto.\n\t * A10090601:\tIncluir el mecanismo de réplica selectiva por colecciones a la maquinaria.\n\t * Un parámetro para decir si replica.\n\t * <p>\n\t * K11092601: ExecuteSqlString y similares deben devolver un objeto, que puede ser ResultSet.\n\t * Cambiar el tipo de resultado\n\t *\n\t * @param Connection Conexión de datos que se quiere usar para ejecutar la sentencia. NULL para crear una temporal, ejecutar la sentencia y cerrarla.\n\t * @param Sentence   Sentencia SQL que se va a ejecutar.\n\t * @param Replicate  TRUE si replica.\n\t * @return Devuelve TRUE si la sentencia se ejecuta correctamente.\n\t * @throws SQLException\n\t * @throws Exception\n\t */\n\tExecuteSqlString(Connection, Sentence, Replicate, ...args) {\n\t\treturn 0;\n\t}\n\tasync ExecuteSqlStringAsync(Connection, Sentence, Replicate, ...args) {\n\t\treturn await this.GetCurrentConnection().executeAsync(Sentence, 100, ...args);\n\t}\n\t/**\n\t * A11092601: Modificaciones para mejorar el soporte de conexiones remotas y demás.\n\t * Esta implementación opcional permite ejecutar una sentencia SQL parseada en vez de una cadena SQL.\n\t * <p>\n\t * K11092601: ExecuteSqlString y similares deben devolver un objeto, que puede ser ResultSet.\n\t * Cambiar el tipo de resultado.\n\t *\n\t * @param Connection\n\t * @param Sentence\n\t * @param Replicate\n\t * @return\n\t * @throws SQLException\n\t * @throws Exception\n\t */\n\tExecuteParsedSql(Connection, Sentence, Replicate, ...args) {\n\t\treturn 0;\n\t}\n\tasync ExecuteParsedSqlAsync(Connection, Sentence, Replicate, ...args) {\n\t\treturn await this.GetCurrentConnection().executeAsync(Sentence, 100, ...args);\n\t}\n\t/**\n\t * Reemplaza el valor del operador específico dentro de la cadena SQL que se pasa como parámetro.\n\t *\n\t * @param Collection Colección con la que se está trabajando.\n\t * @param Sentence   Sentencia SQL o cadena en la cual se quiere sustituir el operador.\n\t * @param OperName   Nombre del operador que se quiere sustituir.\n\t * @return Devuelve la sentencia original con el operador sustituido.\n\t * @throws Exception\n\t */\n\tReplaceCustomOper(Collection, Sentence, OperName) {\n\t\treturn Sentence;\n\t}\n\t/**\n\t * Inserta una sentencia TOP dentro del SQL que se pasa como parámetro. Colocada aquí para mantener compatibilidad de interfaces\n\t * pero no se implementará en esta plataforma.\n\t *\n\t * @param Sentence Sentencia SQL que se quiere modificar.\n\t * @param Rows     Cantidad de filas que se quiere limitar en el TOP x o LIMIT x\n\t * @return La misma sentencia pasada como parámetro.\n\t */\n\tInsertTop(Sentence, Rows) {\n\t\treturn Sentence;\n\t}\n\t/**\n\t * Dado un nombre de campo lo formatea usando los caracteres de inicio y fin de campo.\n\t *\n\t * @param FieldName Nombre del campo a formatear.\n\t * @return Devuelve el nombre del campo encerrado en sus secuencias de inicio y fin de campo.\n\t */\n\tQuoteFieldName(FieldName) {\n\t\treturn FieldName;\n\t}\n\t/**\n\t * Dado un nombre de tabla u otro tipo de objeto de base de datos, lo devuelve formateado con su prefijo si este está definido.\n\t *\n\t * @param ObjectName Nombre de tabla u objeto en general de la base de datos para arreglar con el prefijo.\n\t * @return Devuelve el nombre de objeto ya desarrollado con su prefijo si aplica.\n\t */\n\t// public String FixObjectName(String ObjectName):string {\n\t//     return FixObjectName(ObjectName, null);\n\t// }\n\t/**\n\t * Dada una cadena sustituye los caracteres para los cuales se hayan definido secuencias de escape por dichas secuencias.\n\t *\n\t * @param Value Cadena en la cual se van a sustituir los caracteres por secuencias de escape.\n\t * @return Devuelve la cadena original con los caracteres sustituidos por sus secuencias de escape.\n\t */\n\tEscapeString(Value) {\n\t\tif (Value.startsWith(\"'\")) return Value;\n\t\treturn `\\'${Value}\\'`;\n\t}\n\t/**\n\t * Genera un ROWID para la conexión actual. Emplea los criterios de número de tabla, MID, DBID, etc.\n\t *\n\t * @param TableName Nombre de la tabla para la cual se quiere generar el ROWID.\n\t * @return Devuelve un ROWID respetando los valores de réplica y el tamaño del campo ROWID.\n\t */\n\t//public GenerateRowId(TableName:string):string {return Guid.create().toString();}\n\t/**\n\t * Desarrolla el valor de un objeto y lo devuelve como cadena lista para insertar en un SQL o un filtro\n\t *\n\t * @param Value Valor que se quiere desarrollar. Se usará la máscara de fecha de la conexión.\n\t * @return CAdena representando el valor del objeto para escribir en una sentencia SQL o un filtro de datos.\n\t */\n\t// public DevelopObjectValue(Value:any):string {\n\t//     return DevelopObjectValue(Value, true);\n\t// }\n\t/**\n\t * Esta función se emplea para cerrar conexiones locales si es que las tiene. No necesariamente tiene por qué\n\t * usarse para terminar la clase, simplemente cuando se quiera cerrar o destruir los objetos locales.\n\t */\n\tTerminate() {}\n\t/**\n\t * Si el DBMS soporta left outer joins\n\t */\n\tIsOuterJoinSupported() {\n\t\treturn false;\n\t}\n\t/**\n\t * A11092601: Modificaciones para mejorar el soporte de conexiones remotas y demás.\n\t * Devuelve una clave numérica dada una tabla y un ROWID. Permite abstraer la obtención de la clave autonumérica\n\t * en conexiones que no son offline.\n\t *\n\t * @param TableName\n\t * @param RowIdFieldName\n\t * @return\n\t * @throws Exception\n\t */\n\tRetrieveNumericKey(TableName, KeyName, RowIdFieldName, RowId) {\n\t\treturn 0;\n\t}\n\t/**\n\t * A11092601: Modificaciones para mejorar el soporte de conexiones remotas y demás.\n\t * Esta función permite calcular si un ROWID es único dentro de la conexión de datos.\n\t *\n\t * @param tableName\n\t * @param RowID\n\t * @return\n\t * @throws Exception\n\t */\n\tisUniqueRowID(tableName, RowID) {\n\t\treturn true;\n\t}\n\t// A11120701: Mecanismo para exponer el DBMS de una conexión.\n\t// Expone el tipo de DBMS que tiene debajo esta conexión. Obligatorio implementar.\n\tgetDbmsTag() {\n\t\treturn \"OnlineWebCore\";\n\t}\n}\n\n//# sourceMappingURL=XoneWebCoreConnectionData.js.map\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./LinkedSearchInline.vue?vue&type=style&index=0&id=37329dfa&scoped=true&lang=css\"","export default class Hashtable {\n    constructor() {\n        this._map = new Map();\n        this._pointer = 0;\n    }\n    get length() {\n        return this._map.size;\n    }\n    next() {\n        if (this._pointer < this._map.size) {\n            return {\n                done: false,\n                value: this._map[this._pointer++]\n            };\n        }\n        else {\n            return {\n                done: true,\n                value: null\n            };\n        }\n    }\n    toJSON() {\n        let obj = Object.create(null);\n        this._map.forEach((value, key) => {\n            if (typeof value == 'string' && value.startsWith(\"'\") && value.endsWith(\"'\"))\n                obj[key] = value.substr(1, value.length - 2);\n            else\n                obj[key] = value;\n        });\n        return obj;\n    }\n    values() {\n        return Array.from(this._map.values());\n    }\n    keys() {\n        return Array.from(this._map.keys());\n    }\n    entrySet() {\n        return Array.from(this._map.entries());\n    }\n    get entries() {\n        return this._map;\n    }\n    isEmpty() {\n        return this._map.size === 0;\n    }\n    containsKey(key) {\n        return this._map.has(key);\n    }\n    get(key) {\n        return this._map.get(key);\n    }\n    delete(key) {\n        return this._map.delete(key);\n    }\n    put(key, value) {\n        if (value === null && this._map.has(key))\n            this._map.delete(key);\n        else\n            this._map.set(key, value);\n    }\n    clear() {\n        this._map.clear();\n    }\n    toObject() {\n        const obj = {};\n        this._map.forEach((value, key) => (obj[key] = value));\n        return obj;\n    }\n    [Symbol.iterator]() {\n        return this._map.entries();\n    }\n}\n\n//# sourceMappingURL=Hashtable.js.map\n","import ObjUtils from \"./ObjUtils\";\nimport StringUtils from \"./StringUtils\";\nexport default class NumberUtils {\n    static SafeToLong(value) {\n        return this.SafeToInt(value);\n    }\n    static SafeToDouble(str) {\n        if (!str || str === null)\n            return 0;\n        return Number.parseFloat(StringUtils.SafeToString(str));\n    }\n    static SafeToBool(Value) {\n        if (Value === null)\n            return false;\n        return StringUtils.ParseBoolValue(Value.toString());\n    }\n    static SafeToInt(str, nDefault = 0) {\n        if (ObjUtils.IsNothing(str))\n            return nDefault;\n        try {\n            let retValue = Number.parseInt(StringUtils.SafeToString(str));\n            return Number.isInteger(retValue) ? retValue : nDefault;\n        }\n        catch (e) {\n            console.error(e);\n            return nDefault;\n        }\n    }\n}\n\n//# sourceMappingURL=NumberUtils.js.map\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Toast.vue?vue&type=style&index=0&id=0e840586&scoped=true&lang=css\"","export default class CXoneNameValuePair {\n    constructor(name, value) {\n        this.Name = name;\n        this.Value = value;\n    }\n}\n\n//# sourceMappingURL=CXoneNameValuePair.js.map\n","import { XoneApplication } from \"./appData/core/XoneApplication\";\nimport XmlNode from \"./appData/Xml/JSONImpl/XmlNode\";\nimport { isMobile } from \"./helperFunctions/MobileBrowserHelper\";\nimport { generateUniqueDeviceId } from \"./helperFunctions/StringHelper\";\n\n/**\n * @typedef {Object} AppSize\n * @property {number} width\n * @property {number} height\n */\n\n/**\n * Handler App node Class\n */\nclass AppHandler {\n\t/**\n\t * _instance\n\t * @type{AppHandler}\n\t */\n\tstatic _instance;\n\n\t/**\n\t * appData\n\t * @type {XoneApplication}\n\t */\n\t_appData;\n\n\t/**\n\t * appNode\n\t * @type {XmlNode}\n\t */\n\t_appNode;\n\n\t/**\n\t * orientation\n\t * @type {string}\n\t */\n\t_orientation;\n\n\t/**\n\t * sizeConditions\n\t * @type {string}\n\t */\n\t_sizeConditions;\n\n\t/**\n\t * _version\n\t * @type {string}\n\t */\n\t_version = \"1.0.1.3\";\n\n\tconstructor() {\n\t\tif (AppHandler._instance) return AppHandler._instance;\n\t\tAppHandler._instance = this;\n\t}\n\n\tgetVersion() {\n\t\treturn this._version;\n\t}\n\n\t/**\n\t * @param {XoneApplication} appData\n\t */\n\tsetAppData(appData) {\n\t\tthis._appData = appData;\n\t\tthis.setAppNode();\n\t}\n\n\t/** @returns {string} */\n\tget orientation() {\n\t\treturn this._orientation;\n\t}\n\n\t/** @returns {string} */\n\tget sizeConditions() {\n\t\treturn this._sizeConditions;\n\t}\n\n\t// Set app node\n\tsetAppNode() {\n\t\tthis._appNode = this._appData.getAppNode();\n\t}\n\n\t// Get App width / height\n\n\t/**\n\t * Get App Size\n\t * @returns {AppSize}\n\t */\n\tgetAppSize() {\n\t\tconst width = this._appNode.getAttrValue(\"web-resolution-width\") || this._appNode.getAttrValue(\"resolution-width\");\n\t\tconst height = this._appNode.getAttrValue(\"web-resolution-height\") || this._appNode.getAttrValue(\"resolution-height\");\n\t\tif (isNaN(width) || isNaN(height)) {\n\t\t\tconsole.error(\"resolution-width and resolution-height must be numeric in <app></app>\");\n\t\t\treturn { width: null, height: null };\n\t\t}\n\t\treturn {\n\t\t\twidth: Number(width),\n\t\t\theight: Number(height),\n\t\t};\n\t}\n\n\t/**\n\t * Set Visual Conditions / Visual Macros\n\t * @param {Number} width\n\t * @param {Number} height\n\t */\n\tsetVisualConditionsMacros(width, height) {\n\t\t// Width / Height\n\t\tthis._appData.setGlobalMacro(\"##SCREEN_RESOLUTION_WIDTH##\", width.toString());\n\t\tthis._appData.setGlobalMacro(\"##SCREEN_RESOLUTION_HEIGHT##\", width.toString());\n\t\t// Orientation\n\t\tthis._orientation = width > height ? \"horizontal\" : \"vertical\";\n\t\tthis._appData.setGlobalMacro(\"##CURRENT_ORIENTATION##\", this._orientation);\n\t\t// VisualConditions\n\t\t// Breakpoints:\n\t\t// Extra Small\txs\tUp to 599px\n\t\t// Small\tsm\tUp to 1023px\n\t\t// Medium\tmd\tUp to 1439px\n\t\t// Large\tlg\tUp to 1919px\n\t\t// Extra Large\txl\tBigger than 1920px\n\t\tthis._appData.setVisualConditions(this._sizeConditions, false);\n\t\tthis.setSizeConditions(width);\n\t}\n\n\tsetSizeConditions(width) {\n\t\tthis._sizeConditions = width < 600 ? \"xs\" : width < 1024 ? \"sm\" : width < 1440 ? \"md\" : width < 1920 ? \"lg\" : \"xl\";\n\t}\n\n\t/**\n\t * Generate a GUID as a DeviceId\n\t * @returns {string}\n\t */\n\tgetDeviceId() {\n\t\tlet deviceId = localStorage.getItem(\"_deviceId\");\n\t\tif (!deviceId) localStorage.setItem(\"_deviceId\", (deviceId = generateUniqueDeviceId()));\n\t\treturn deviceId;\n\t}\n\n\t/**\n\t * Set appData inmutable Macros\n\t */\n\tsetInmutableMacros() {\n\t\tconst attributes = this._appNode.attrs;\n\n\t\tif (!attributes) {\n\t\t\tconsole.error(\"Not found <app></app>\");\n\t\t\treturn;\n\t\t}\n\n\t\tconst deviceId = this.getDeviceId();\n\t\tconst [language, countryCode] = Intl.DateTimeFormat().resolvedOptions().locale.split(\"-\");\n\t\tconst { platform, vendor } = navigator;\n\n\t\tthis._appData.setGlobalMacro(\"##DEVICE_OS##\", \"web\");\n\t\tthis._appData.setGlobalMacro(\"##DEVICE_OSVERSION##\", platform);\n\t\tthis._appData.setGlobalMacro(\"##DEVICE_MODEL##\", vendor);\n\t\tthis._appData.setGlobalMacro(\"##VERSION##\", this.getAppValueWithConditions(\"version\") ?? \"1\");\n\t\tthis._appData.setGlobalMacro(\"##DEVICEID##\", deviceId);\n\t\tthis._appData.setGlobalMacro(\"##CURRENT_LANGUAGE##\", language);\n\t\tthis._appData.setGlobalMacro(\"##CURRENT_COUNTRY_CODE##\", countryCode);\n\t\tthis._appData.setGlobalMacro(\"##FRAME_VERSION##\", \"v1\");\n\t\tthis._appData.setGlobalMacro(\"##FRAME_VERSION_CODE##\", this.version);\n\t\tthis._appData.setGlobalMacro(\"##IS_MOBILE##\", isMobile());\n\n\t\tthis._appData.setGlobalMacro(\"##LIVEUPDATE_VERSION##\", \"0\");\n\t\tthis._appData.setGlobalMacro(\"##DEVICE_MANUFACTURER##\", \"web\");\n\t\tthis._appData.setGlobalMacro(\"##DEVICE_TYPE##\", \"web\");\n\t\tthis._appData.setGlobalMacro(\"##MID##\", \"-1\");\n\t\tthis._appData.setGlobalMacro(\"##DEVICE_OSVERSION##\", \"web\");\n\t\tthis._appData.setGlobalMacro(\"##CURRENT_DENSITY##\", \"1\");\n\t\tthis._appData.setGlobalMacro(\"##CURRENT_DENSITY_VALUE##\", \"1\");\n\t}\n\n\t/**\n\t * Get autologon attribute\n\t * @returns {boolean}\n\t */\n\tgetIsAutoLogon() {\n\t\treturn this._appNode.attrs.getValue(\"autologon\") === \"true\";\n\t}\n\n\t/**\n\t * Get autologon-user attribute\n\t * @returns {boolean}\n\t */\n\tgetAutoLogonUser() {\n\t\treturn this._appNode.attrs.getValue(\"autologon-user\") || \"admin\";\n\t}\n\n\t/**\n\t * Get autologon-pwd attribute\n\t * @returns {boolean}\n\t */\n\tgetAutoLogonPwd() {\n\t\treturn this._appNode.attrs.getValue(\"autologon-pwd\") || \"\";\n\t}\n\n\t/**\n\t * isScaleFontsize\n\t * @returns {boolean}\n\t */\n\tisScaleFontsize() {\n\t\treturn this.getAppValueWithConditions(\"scale-fontsize\") === \"true\";\n\t}\n\n\t/**\n\t * getWebFontFactor\n\t * @returns {string}\n\t */\n\tgetWebFontFactor() {\n\t\treturn this.getAppValueWithConditions(\"web-font-factor\");\n\t}\n\n\t// getEntryPoint() {\n\t//   return this.getAppValueWithConditions(\"entry-point\");\n\t// }\n\n\t// getLoginColl() {\n\t//   return this.getAppValueWithConditions(\"login-coll\");\n\t// }\n\n\tgetWebLayout() {\n\t\treturn this.getAppValueWithConditions(\"web-layout\");\n\t}\n\n\tgetAppValueWithConditions(attr) {\n\t\ttry {\n\t\t\t// get login-coll from attribute\n\t\t\tlet attribute = this._appNode.getAttrValue(attr);\n\n\t\t\t// get appNode\n\t\t\tconst app = this._appNode.toJSON().app;\n\n\t\t\t// get login-coll node\n\t\t\tconst attributeNode = app.childs.find((e) => e[attr]);\n\t\t\tif (!attributeNode || !attributeNode[attr]) return attribute;\n\n\t\t\t// login-coll items\n\t\t\tconst items = attributeNode[attr].childs\n\t\t\t\t.map((e) => e.item)\n\t\t\t\t.filter((e) => {\n\t\t\t\t\tconst conditions = e.attributes.conditions;\n\t\t\t\t\treturn conditions === \"\" || conditions.includes(\"web\");\n\t\t\t\t});\n\n\t\t\t// filter size conditions\n\t\t\tlet filteredItems = items.filter((e) => {\n\t\t\t\tconst conditions = e.attributes.conditions.split(\":\");\n\t\t\t\treturn conditions.includes(this.sizeConditions);\n\t\t\t});\n\n\t\t\t// filter orientation\n\t\t\tfilteredItems = (filteredItems.length !== 0 || items).filter((e) => {\n\t\t\t\tconst conditions = e.attributes.conditions.split(\":\");\n\t\t\t\treturn conditions.includes(this._orientation);\n\t\t\t});\n\n\t\t\treturn (filteredItems.length !== 0 || items)[0].attributes.name;\n\t\t} catch (ex) {\n\t\t\tconsole.error(`Error in getAppValueWithConditions: ${ex}`);\n\t\t}\n\t}\n}\n\nexport default new AppHandler();\n","import { decode } from \"js-base64\";\nimport { parseXoneXml } from \"./StringHelper\";\n\n/**\n * @param {string} stringSearch\n * @returns\n */\nexport const getUrlParams = (stringSearch) => {\n\ttry {\n\t\tconst search = location.href.slice(location.href.indexOf(stringSearch) + stringSearch.length);\n\t\treturn JSON.parse('{\"' + search.replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}', function (key, value) {\n\t\t\treturn key === \"\" ? value : decodeURIComponent(value);\n\t\t});\n\t} catch {\n\t\treturn onErrorFunc(\"Error getting url params\");\n\t}\n};\n\nexport const getPreviewObjects = (sourcePath) => {\n\tconst urlParams = getUrlParams(\"preview?\");\n\tlet xmlString, cssString, jsString;\n\ttry {\n\t\tconst [xml, css, js] = urlParams.v.split(\"|\");\n\t\tif (xml)\n\t\t\t// @ts-ignore\n\t\t\txmlString = decode(xml).decompress();\n\t\tif (css)\n\t\t\t// @ts-ignore\n\t\t\tcssString = decode(css).decompress();\n\t\tif (js)\n\t\t\t// @ts-ignore\n\t\t\tjsString = decode(js).decompress();\n\t} catch {}\n\n\tif (!xmlString || !xmlString.toString().includes(\"<group\"))\n\t\txmlString = `<coll name=\"test\" notab=\"true\"><group name=\"group1\" id=\"1\"></group></coll>`;\n\n\t/** @type {Document|null} */\n\tconst doc = xmlString ? parseXoneXml(`<xml>${xmlString}</xml>`) : null;\n\tif (!cssString) cssString = \"prop{}\";\n\tlocalStorage.setItem(sourcePath + \"/default.css\", cssString);\n\n\twindow.isPreview = true;\n\n\tconst fileManagerProperties = {};\n\tfileManagerProperties[`${sourcePath}/app.xml`] = `\n                <xml>\n                    <app prefix=\"gen\" version=\"0.0.0.1\" resolution-height=\"1280\" resolution-width=\"720\" companycolor=\"#FFFFFF\"\n                        autologon=\"true\"\n                        entry-point=\"${doc ? doc.querySelector(\"coll\").getAttribute(\"name\") : \"\"}\" >\n                        ${cssString ? '<style url=\"default.css\" />' : \"\"}\n                    </app>\n                </xml>`;\n\tfileManagerProperties[`${sourcePath}/mappings.xne`] = `\n                <xml>\n                    <collprops type=\"general\">\n                        <coll name=\"Empresas\" sql=\"SELECT * FROM gen_empresas\" objname=\"empresa\" updateobj=\"empresa\" progid=\"ASGestion.CASEmpresa\">\n                            <group name=\"General\" id=\"1\">\n                                <prop name=\"CODIGO\" visible=\"3\" type=\"N\" fieldsize=\"4\" autosearch=\"true\" />\n                                <prop name=\"NOMBRE\" visible=\"3\" type=\"T\" size=\"100\" fieldsize=\"24\" />\n                            </group>\n                        </coll>\n                        <coll name=\"Usuarios\" sql=\"SELECT * FROM gen_usuarios\" objname=\"usuarios\" updateobj=\"usuarios\" progid=\"ASGestion.CASUser\">\n                        <group name=\"General\" id=\"1\">\n                            <prop name=\"IDEMPRESA\" visible=\"0\" type=\"N\" mapcol=\"Empresas\" mapfld=\"ID\" />\n                            <prop name=\"LOGIN\" visible=\"3\" type=\"T\" fieldsize=\"10\" fixed-text=\"true\" size=\"10\" />\n                            <prop name=\"PWD\" type=\"T\" fieldsize=\"10\" fixed-text=\"true\" size=\"10\" />\n                            <prop name=\"NOMBRE\" visible=\"3\" type=\"T\" fieldsize=\"30\" fixed-text=\"true\" size=\"30\" />\n                            <prop name=\"USERTYPE\" type=\"T\" fieldsize=\"30\" fixed-text=\"true\" size=\"50\" />\n                        </group>\n                        <create>\n                            <action name=\"setval\" field=\"IDEMPRESA\" value=\"##ENTID##\" />\n                        </create>\n                        </coll>\n                        ${xmlString}\n                    </collprops>\n                </xml>\n                `;\n\tfileManagerProperties[`${fileManagerProperties}/default.css`] = cssString;\n\n\treturn {\n\t\tfileManager: {\n\t\t\treadFileAsync: async (filePath) => {\n\t\t\t\treturn fileManagerProperties[filePath];\n\t\t\t},\n\t\t},\n\t\tsWA: async (AppData, Ui, Self, SelfDataColl, User, Func, Arguments) => {\n\t\t\tlet appData = AppData,\n\t\t\t\tui = Ui,\n\t\t\t\tself = Self,\n\t\t\t\tselfDataColl = SelfDataColl,\n\t\t\t\tuser = User,\n\t\t\t\tXArguments = Arguments;\n\n\t\t\treturn new Promise((resolve) =>\n\t\t\t\teval(`\n                (async()=>{\n                    ${jsString}\n                    ${Func}\n                    resolve()\n                    })();\n                    `)\n\t\t\t);\n\t\t},\n\t};\n};\n","export default class TextUtils {\n    static equals(arg0, arg1) {\n        if (arg0 == null)\n            return false;\n        return arg0.localeCompare(arg1) === 0;\n    }\n    static isEmpty(text) {\n        return (!text || text === '');\n    }\n}\n\n//# sourceMappingURL=TextUtils.js.map\n","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ContentsRow.vue?vue&type=style&index=0&id=2eaf9004&lang=css\"","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Checkbox.vue?vue&type=style&index=0&id=20e563e6&scoped=true&lang=css\"","import Hashtable from \"../Collections/HashMap/Hashtable\";\nexport default class ConnectionStringUtils {\n    /**\n     * Parsea una cadena de conexión y devuelve un HashMap con su set de clave/valor.\n     *\n     * @param sConnectionString Cadena de conexión en bruto.\n     * @return HashMap con los valores parseados.\n     */\n    static parseConnectionString(sConnectionString) {\n        const keyValuePair = new Hashtable();\n        sConnectionString.split(\";\").forEach(sParameter => {\n            let item = sParameter.split('=');\n            item.length > 1 && keyValuePair.put(item[0].trim().toLowerCase(), item.length > 0 ? item[1].trim() : \"\");\n            //             let separatorIndex = sParameter.indexOf('=');\n            //             if (separatorIndex != -1 && (sParameter.length > (separatorIndex + 1))) {\n            //                 let sKey = sParameter.substring(0, separatorIndex).toLowerCase();\n            //                 if (!TextUtils.isEmpty(sKey)) {\n            //                     sKey = sKey.trim();\n            //                 }\n            //                 let sValue = sParameter.substring(separatorIndex + 1);\n            //                 if (!TextUtils.isEmpty(sValue)) {\n            //                     sValue = sValue.trim();\n            //                 }\n            // //                if (keyValuePair.containsKey(sKey)) {\n            // //                    throw new RuntimeException(\"Duplicate key \" + sKey + \" in connection string \" + sConnectionString);\n            // //                }\n            //                 keyValuePair.put(sKey, sValue);\n            // }\n        });\n        return keyValuePair;\n    }\n}\n\n//# sourceMappingURL=ConnectionStringUtils.js.map\n","import NullPointerException from \"../Exceptions/NullPointerException\";\nimport Calendar from \"./Calendar\";\nimport NumberUtils from \"./NumberUtils\";\nimport ObjUtils from \"./ObjUtils\";\nimport StringUtils from \"./StringUtils\";\nexport default class ObjectDeveloper {\n    /**\n     * Devuelve una cadena con el valor de un objeto desarrollado\n     *\n     * @param Value      Valor que se quiere desarrollar\n     * @param Datemask   Máscara de fecha con la que se quiere formatear.\n     * @param ForceNulls TRUE para forzar un valor NULL en caso de que el objeto sea nulo\n     * @return Devuelve una cadena con el objeto desarrollado listo para poner en un filtro o un SQL.\n     */\n    DevelopObjectValue(Value, Datemask = \"ymd\", ForceNulls = true) {\n        let str, strDateSep, strAMPM;\n        let strMask = Datemask;\n        let dtTime;\n        let n;\n        //\n        // Buscar la máscara por defecto\n        // K10052602:\tPoner como máscara de fecha por defecto la de SQLite.\n        if (0 >= strMask.length) {\n            strMask = \"ymd\";\n        }\n        //\n        // Convertir el nombre del tipo y desarrollar esto...\n        let vt = ObjUtils.GetTypeTag(Value);\n        switch (vt) {\n            case ObjUtils.OBJ_TYPE_DATE:\n            case ObjUtils.OBJ_TYPE_CALENDAR:\n                // Fecha\n                dtTime = ObjUtils.SafeToCalendar(Value);\n                if (dtTime == null) {\n                    throw new NullPointerException(\"DevelopObjectValue(): Date value is null\");\n                }\n                if (strMask.substring(0, 2).equals(\"##\")) {\n                    // Separador\n                    // F09042201:\tSubstring no funciona igual en java que en .NET Arreglar Blackberry\n                    strDateSep = strMask.substring(2, 3);\n                    strMask = strMask.substring(3, strMask.length);\n                } // Separador\n                else {\n                    strDateSep = \"'\";\n                }\n                switch (strMask) {\n                    case \"mm/dd/yyyy\":\n                    case \"mdy\": // MDY\n                        // F10052601:\tModificaciones en las funciones con meses (zero based)\n                        str = String.format(\"%s%02d/%02d/%04d %02d:%02d:%02d%s\", strDateSep, dtTime.get(Calendar.MONTH), dtTime.get(Calendar.DAY_OF_MONTH), dtTime.get(Calendar.YEAR), dtTime.get(Calendar.HOUR_OF_DAY), dtTime.get(Calendar.MINUTE), dtTime.get(Calendar.SECOND), strDateSep);\n                        break;\n                    case \"dd/mm/yyyy\":\n                    case \"dmy\": // DMY\n                        // F10052601:\tModificaciones en las funciones con meses (zero based)\n                        str = String.format(\"%s%02d/%02d/%04d %02d:%02d:%02d%s\", strDateSep, dtTime.get(Calendar.DAY_OF_MONTH), dtTime.get(Calendar.MONTH), dtTime.get(Calendar.YEAR), dtTime.get(Calendar.HOUR_OF_DAY), dtTime.get(Calendar.MINUTE), dtTime.get(Calendar.SECOND), strDateSep);\n                        break;\n                    case \"yyyy/mm/dd\":\n                    case \"ymd\": // YMD\n                        // F10052601:\tModificaciones en las funciones con meses (zero based)\n                        // F11041506: \tCambiar el campo de calendario usado para formatear fechas y horas.\n                        //str = `${strDateSep}${dtTime.get(Calendar.YEAR).toString()}-${(dtTime.get(Calendar.MONTH) ).toString().padStart(2,'0')}-${dtTime.get(Calendar.DAY_OF_MONTH).toString().padStart(2,'0')} ${dtTime.get(Calendar.HOUR_OF_DAY).toString().padStart(2,'0')}:${dtTime.get(Calendar.MINUTE).toString().padStart(2,'0')}:${dtTime.get(Calendar.SECOND).toString().padStart(2,'0')}${strDateSep}`;  String.format(\"%s%04d-%02d-%02d %02d:%02d:%02d%s\", strDateSep, dtTime.get(Calendar.YEAR), dtTime.get(Calendar.MONTH) , dtTime.get(Calendar.DAY_OF_MONTH), dtTime.get(Calendar.HOUR_OF_DAY), dtTime.get(Calendar.MINUTE), dtTime.get(Calendar.SECOND), strDateSep);\n                        str = String.format(\"%s%04d-%02d-%02d %02d:%02d:%02d%s\", strDateSep, dtTime.get(Calendar.YEAR), dtTime.get(Calendar.MONTH), dtTime.get(Calendar.DAY_OF_MONTH), dtTime.get(Calendar.HOUR_OF_DAY), dtTime.get(Calendar.MINUTE), dtTime.get(Calendar.SECOND), strDateSep);\n                        break;\n                    default:\n                        // Máscara\n                        if (strMask.contains(\"dmy\")) {\n                            // Orden dmy\n                            // F10052601:\tModificaciones en las funciones con meses (zero based)\n                            str = String.format(\"%s%02d/%02d/%04d ##TIME##%s\", strDateSep, dtTime.get(Calendar.DAY_OF_MONTH), dtTime.get(Calendar.MONTH), dtTime.get(Calendar.YEAR), strDateSep);\n                            strMask = StringUtils.Replace(strMask, \"dmy\", str);\n                        } // Orden dmy\n                        if (strMask.contains(\"mdy\")) {\n                            // Orden mdy\n                            // F10052601:\tModificaciones en las funciones con meses (zero based)\n                            str = String.format(\"%s%02d/%02d/%04d ##TIME##%s\", strDateSep, dtTime.get(Calendar.MONTH), dtTime.get(Calendar.DAY_OF_MONTH), dtTime.get(Calendar.YEAR), strDateSep);\n                            strMask = StringUtils.Replace(strMask, \"mdy\", str);\n                        } // Orden mdy\n                        if (strMask.contains(\"ymd\")) {\n                            // Orden ymd\n                            // F10052601:\tModificaciones en las funciones con meses (zero based)\n                            str = String.format(\"%s%04d-%02d-%02d ##TIME##%s\", strDateSep, dtTime.get(Calendar.YEAR), dtTime.get(Calendar.MONTH), dtTime.get(Calendar.DAY_OF_MONTH), strDateSep);\n                            strMask = StringUtils.Replace(strMask, \"ymd\", str);\n                        } // Orden ymd\n                        //\n                        // Comprobar el tipo de hora que lleva\n                        n = dtTime.get(Calendar.HOUR);\n                        if (strMask.contains(\"##PM##\")) {\n                            // Ajustar las horas y eso\n                            switch (n // Ver las horas\n                            ) {\n                                case 0:\n                                    n = 12;\n                                    strAMPM = \"PM\";\n                                    break;\n                                case 13:\n                                case 14:\n                                case 15:\n                                case 16:\n                                case 17:\n                                case 18:\n                                case 19:\n                                case 20:\n                                case 21:\n                                case 22:\n                                case 23:\n                                case 24:\n                                    n -= 12;\n                                    strAMPM = \"PM\";\n                                    break;\n                                default:\n                                    strAMPM = \"AM\";\n                                    break;\n                            } // Ver las horas\n                            strMask = StringUtils.Replace(strMask, \"##PM##\", strAMPM);\n                        } // Ajustar las horas y eso\n                        else {\n                            strAMPM = \"24\";\n                        }\n                        if (strAMPM.length > 0) {\n                            // Formatear\n                            str = String.format(\"%02d:%02d:%02d\", n, dtTime.get(Calendar.MINUTE), dtTime.get(Calendar.SECOND));\n                            ////str =NumberUtilities.toString(n, 10) +\":\" + NumberUtilities.toString(dtTime.get(Calendar.MINUTE), 10, 2) + \":\";\n                            ////str +=NumberUtilities.toString(dtTime.get(Calendar.SECOND), 10, 2);\n                        } // Formatear\n                        else {\n                            str = \"\";\n                        }\n                        strMask = StringUtils.Replace(strMask, \"##TIME##\", str);\n                        str = strMask;\n                        break;\n                }\n                break;\n            case ObjUtils.NATIVE_TYPE_INT:\n            case ObjUtils.NATIVE_TYPE_LONG:\n                str = Value.toString();\n                break;\n            case ObjUtils.NATIVE_TYPE_BOOL:\n                str = NumberUtils.SafeToBool(Value) ? \"-1\" : \"0\";\n                break;\n            case ObjUtils.OBJ_TYPE_NULL:\n                str = \"NULL\";\n                break;\n            case ObjUtils.NATIVE_TYPE_DOUBLE:\n            case ObjUtils.NATIVE_TYPE_FLOAT:\n                str = Value.toString();\n                if (str.contains(\",\")) {\n                    str = StringUtils.Replace(str, \",\", \".\");\n                }\n                break;\n            case ObjUtils.OBJ_TYPE_STRING:\n                // Las cadenas de longitud cero serán nulos, dijo el señor...\n                str = Value.toString();\n                if (StringUtils.IsEmptyString(str) && ForceNulls) {\n                    str = \"NULL\";\n                }\n                else {\n                    // Quitar las comillas simples\n                    if (str.contains(\"'\")) {\n                        str = StringUtils.Replace(str, \"'\", \"''\");\n                    }\n                    str = \"'\" + str + \"'\";\n                } // Quitar las comillas simples\n                break;\n            default:\n                str = \"NULL\";\n                break;\n        }\n        return str;\n    }\n}\n// Field descriptor #55 I\nObjectDeveloper.ONESECOND = 1000;\n// Field descriptor #55 I\nObjectDeveloper.ONEMINUTE = 60000;\n// Field descriptor #55 I\nObjectDeveloper.ONEHOUR = 3600000;\n// Field descriptor #55 I\nObjectDeveloper.ONEDAY = 86400000;\n// Field descriptor #55 I\nObjectDeveloper.ONEWEEK = 604800000;\n// Field descriptor #47 J\nObjectDeveloper.ONEMONTH = 2419200000;\n// Field descriptor #47 J\nObjectDeveloper.ONEYEAR = 31536000000;\n\n//# sourceMappingURL=ObjectDeveloper.js.map\n","export default class Vector extends Array {\n    removeElement(objLru) {\n        let index = this.indexOf(objLru);\n        (index >= 0) && this.remove(index);\n    }\n    addElement(value) {\n        this.push(value);\n    }\n}\n\n//# sourceMappingURL=Vector.js.map\n","import Hashtable from \"../../Collections/HashMap/Hashtable\";\nimport TextUtils from \"../../Utils/TextUtils\";\nexport default class XoneMessageHolder {\n    /**\n     * @param LangName Nombre o identificador de lenguaje.\n     */\n    constructor(LangName) {\n        this.m_strLangName = LangName;\n        this.m_lstMessages = new Hashtable();\n    }\n    /**\n     * Nombre o identificador del lenguaje\n     */\n    getLanguage() {\n        return this.m_strLangName;\n    }\n    /**\n     * Auxiliar para obtener el mensaje de la clave que se pasa como par�metro.\n     *\n     * @param Key     Clave del mensaje que se pasa como par�metro.\n     * @param Default Valor por defecto si no existe el mensaje.\n     * @return Devuelve la cadena con el identificador indicado o cadena vac�a si no existe.\n     */\n    GetMessage(Key, sDefault) {\n        if (!this.m_lstMessages.containsKey(Key)) {\n            return sDefault;\n        }\n        return this.m_lstMessages.get(Key);\n    }\n    /**\n     * Carga los datos de mensajes de un fichero de cadenas.\n     * Los mensajes se adicionan a los que ya haya, por lo que se pueden adicionar varios ficheros\n     * de mensajes en la misma aplicaci�n.\n     *\n     * @param Source Nombre del fichero que se quiere cargar.\n     */\n    LoadMessageFile(Source) {\n        // Cargar el fichero\n        let strLine = \"\";\n        let isr = null;\n        try {\n            // isr = new InputStreamReader(Source, \"ISO8859_1\");\n            // BufferedReader br = new BufferedReader(isr);\n            // while (null != (strLine = br.readLine())) {\n            //     // Procesar la l�nea\n            //     if (!this.ProcessLine(strLine)) {// Error\n            //         return false;\n            //     }// Error\n            // }\n            // Completo\n            return true;\n        }\n        catch (ex) {\n            ex.printStackTrace();\n            return false;\n        }\n        finally {\n            this.closeSafely(isr);\n        }\n    }\n    /**\n     * Pos eso. Se limpia el diccionario de mensajes.\n     */\n    Clear() {\n        this.m_lstMessages.clear();\n    }\n    /**\n     * Procesa la l�nea en formato clave=valor y la incorpora al diccionario interno.\n     *\n     * @param Line L�nea que se quiere procesar.\n     * @return TRUE si se reconoce el formato correctamente.\n     */\n    ProcessLine(Line) {\n        let x = Line.indexOf('=');\n        if (x < 0) {\n            return false;\n        }\n        // Obtener los dos pedazos\n        let strKey = \"\", strValue = \"\";\n        strKey = Line.substring(0, x);\n        if (x < Line.length) {\n            strValue = Line.substring(x + 1, Line.length - 1);\n        }\n        strKey = strKey.trim();\n        if (!TextUtils.isEmpty(strValue)) { // Solo si tiene valor\n            this.m_lstMessages.put(strKey, strValue);\n        } // Solo si tiene valor\n        return true;\n    }\n    closeSafely(closeable) {\n        if (closeable == null) {\n            return;\n        }\n        try {\n            closeable.close();\n        }\n        catch (ex) {\n            ex.printStackTrace();\n        }\n    }\n}\n\n//# sourceMappingURL=XoneMessageHolder.js.map\n","import XmlNode from \"../JSONImpl/XmlNode\";\nimport StringBuilder from \"../../Utils/StringBuilder\";\nimport TextUtils from \"../../Utils/TextUtils\";\nimport XmlAttributes from \"../JSONImpl/XmlAttributes\";\nexport default class SaxDocument {\n    constructor() {\n        this.xml = require(\"sax-parser\");\n        this.parser = new this.xml.SaxParser(function (cb) {\n            let lastNode;\n            //let rootNode: XmlNode;\n            let sText;\n            cb.onStartDocument(function () { });\n            cb.onEndDocument(function () { });\n            cb.onStartElementNS(function (localName, attrs, prefix, uri, namespaces) {\n                let bIndex = false;\n                let bFirstNode = (lastNode == null);\n                let attributes = new XmlAttributes(attrs);\n                if (attributes.getIndex(\"ext-file\") >= 0) {\n                    //lastNode = getIncludeNode(localName, attributes.getValue(attributes.getIndex(\"ext-file\")));\n                }\n                else {\n                    bIndex = attributes && attributes.length > 0 && !TextUtils.isEmpty(attributes.getValue(\"name\"));\n                    if (bIndex) {\n                        lastNode = new XmlNode(lastNode, localName, attributes, \"name\", attributes.getValue(\"name\"));\n                    }\n                    else {\n                        lastNode = new XmlNode(lastNode, localName, attributes);\n                    }\n                }\n                if (bFirstNode) {\n                    this.rootNode = lastNode;\n                }\n                sText = new StringBuilder();\n            });\n            cb.onEndElementNS(function (elem, prefix, uri) {\n                if (sText != null) {\n                    lastNode.setText(sText.toString());\n                    sText = null;\n                }\n                lastNode = lastNode.getParentNode();\n            });\n            cb.onCharacters(function (chars) {\n                // if (sText.indexOf(\"Contrase\") > 0) {\n                //     sText = sText.replace(\"&gt;\", \">\");\n                // }\n                if (sText != null) {\n                    sText.append(chars);\n                }\n            });\n            cb.onCdata(function (cdata) {\n                console.log(\"<CDATA>\" + cdata + \"</CDATA>\");\n            });\n            cb.onComment(function (msg) {\n                //console.log(\"<COMMENT>\" + msg + \"</COMMENT>\");\n            });\n            cb.onWarning(function (msg) {\n                console.log(\"<WARNING>\" + msg + \"</WARNING>\");\n            });\n            cb.onError(function (msg) {\n                console.log(\"<ERROR>\" + JSON.stringify(msg) + \"</ERROR>\");\n            });\n        });\n    }\n    // private lastNode: XmlNode;\n    // private rootNode: XmlNode;\n    // private sText: StringBuilder;\n    Deserialize(context, sPath, Source, useTranslation) {\n        var _a, _b;\n        this.parser.parseString(Source);\n        if ((_b = (_a = this.parser) === null || _a === void 0 ? void 0 : _a.m_hndDoc) === null || _b === void 0 ? void 0 : _b.rootNode) {\n            this.m_rootNode = this.parser.m_hndDoc.rootNode;\n        }\n    }\n    getRootNode() {\n        return this.m_rootNode;\n    }\n    createNode(node, strName) {\n        throw new Error(\"Method not implemented.\");\n    }\n}\n\n//# sourceMappingURL=SaxDocument.js.map\n","import SaxDocument from \"../SAXImpl/SaxDocument\";\nexport default class XmlDocument {\n    static getInstance() {\n        return new SaxDocument();\n        //return new DotNetJSONDocument();\n    }\n    /**\n     *\n     */\n    constructor() {\n    }\n    Deserialize(context, sPath, Source, useTranslation) {\n        throw new Error(\"Method not implemented.\");\n    }\n    getRootNode() {\n        throw new Error(\"Method not implemented.\");\n    }\n    createNode(node, strName) {\n        throw new Error(\"Method not implemented.\");\n    }\n}\n\n//# sourceMappingURL=XmlDocument.js.map\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Prop.vue?vue&type=style&index=0&id=419645a1&scoped=true&lang=css\"","import { nextTick } from \"@vue/runtime-core\";\nimport { XoneDataObject } from \"./appData/core/XoneDataObject\";\nimport AppDataHandler from \"./AppDataHandler\";\nimport { getView } from \"./XoneViewsHandler\";\nimport xoneAppHandler from \"./XoneAppHandler\";\nimport { generateUniqueId } from \"./helperFunctions/StringHelper\";\n\n// /**\n//  * _entryPointFake\n//  * @type {string}\n//  */\n// let _entryPointFake;\n\n// export const setEntryPointFake = (/** @type {string} */ value) => (_entryPointFake = value);\n\n/**\n * _doLogin\n * @type {function():Promise<void>}\n */\nlet _doLogin;\n\n/**\n * setDoLogin\n */\nexport const setDoLogin = (/** @type {function():Promise<void>} */ callback) => {\n\t_doLogin = callback;\n};\n\n/**\n * _openUrlCallback\n * @type {function}\n */\nlet _openUrlCallback;\n\n/**\n * _msgBoxCallback\n * @type {function}\n */\nlet _msgBoxCallback;\n\n/**\n * _customMsgBoxCallback\n * @type {function}\n */\nlet _customMsgBoxCallback;\n\n/**\n * _hideLoaderCallback\n * @type {function}\n */\nlet _hideLoaderCallback;\n\n/**\n * _showGroupCallback\n * @type {function}\n */\nlet _showGroupCallback;\n\n/**\n * _showLoaderCallback\n * @type {function}\n */\nlet _showLoaderCallback;\n\n/**\n * _showToastCallback\n * @type {function}\n */\nlet _showToastCallback;\n\n/**\n * _showSnackbarCallback\n * @type {function}\n */\nlet _showSnackbarCallback;\n\n/**\n * _startCameraCallback\n * @type {function}\n */\nlet _startCameraCallback;\n\n/**\n * _xoneDataObject\n * @type {XoneDataObject}\n */\nlet _xoneDataObject;\n\n/**\n * Add callback function showSnackbar from SnackBar component\n * @param {function} openUrlCallback\n */\nexport const setOpenUrlCallback = (openUrlCallback) => {\n\t_openUrlCallback = openUrlCallback;\n};\n\n/**\n * Add callback function msgBox from current msgbox component\n * @param {function} msgBoxCallback\n */\nexport const setMsgBoxCallback = (msgBoxCallback) => {\n\t_msgBoxCallback = msgBoxCallback;\n};\n\n/**\n * Add callback function msgBox from current msgbox component\n * @param {function} customMsgBoxCallback\n */\nexport const setCustomMsgBoxCallback = (customMsgBoxCallback) => {\n\t_customMsgBoxCallback = customMsgBoxCallback;\n};\n\n/**\n * Add callback function hideLoader from current loader component\n * @param {function} hideLoaderCallback\n */\nexport const setHideLoaderCallback = (hideLoaderCallback) => {\n\t_hideLoaderCallback = hideLoaderCallback;\n};\n\n/**\n * Add callback function showGroup from current coll component\n * @param {function} showGroupCallback\n */\nexport const setShowGroupCallback = (showGroupCallback) => {\n\t_showGroupCallback = showGroupCallback;\n};\n\n/**\n * Add callback function showLoader from Loader component\n * @param {function} showLoaderCallback\n */\nexport const setShowLoaderCallback = (showLoaderCallback) => {\n\t_showLoaderCallback = showLoaderCallback;\n};\n\n/**\n * Add callback function showToast from Toast component\n * @param {function} showToastCallback\n */\nexport const setShowToastCallback = (showToastCallback) => {\n\t_showToastCallback = showToastCallback;\n};\n\n/**\n * Add callback function showSnackbar from SnackBar component\n * @param {function} showSnackbarCallback\n */\nexport const setShowSnackbarCallback = (showSnackbarCallback) => {\n\t_showSnackbarCallback = showSnackbarCallback;\n};\n\n/**\n * Add callback function showSnackbar from SnackBar component\n * @param {function} startCameraCallback\n */\nexport const setStartCameraCallback = (startCameraCallback) => {\n\t_startCameraCallback = startCameraCallback;\n};\n\n/**\n * setXoneDataObject\n * @param {XoneDataObject} xoneDataObject\n */\nexport const setXoneDataObject = (xoneDataObject) => {\n\t_xoneDataObject = xoneDataObject;\n};\n\n/**\n * @type {Object}\n */\nlet _lastGpsPosition;\n\n/**\n * @type {Map<string, Notification>}\n */\nconst _mapNotifications = new Map();\n\n/**\n * Types Definitions\n *\n * @typedef {object} SnackBarParams\n * @property {string} [color]\n * @property {'short'|'long'|'indeterminate'|'indefinite'} [duration]\n * @property {string} [width]\n * @property {string} [height]\n * @property {string} [text]\n * @property {string} [textColor]\n * @property {string} [actionText]\n * @property {string} [actionTextColor]\n * @property {Function} [actionMethod]\n */\n\n/**\n * XoneUI class\n */\nclass XoneUI {\n\t/**\n\t * @type {XoneUI}\n\t */\n\tstatic _instance;\n\n\tconstructor() {\n\t\tif (XoneUI._instance) return XoneUI._instance;\n\t\tXoneUI._instance = this;\n\t}\n\n\taddCalendarItem(title, description, location, dtStart, dtEnd) {}\n\taskUserForGPSPermission() {} // Ignorar\n\tcanMakePhoneCall() {} // Ignorar\n\tcaptureImage(PropName, CaptureObjectName) {}\n\tcheckGPSStatus() {}\n\n\t/**\n\t * clearDrawing\n\t * @param {string} PropName\n\t */\n\tclearDrawing(PropName) {\n\t\t// xoneView\n\t\tconst xoneView = getView(_xoneDataObject);\n\t\tif (!xoneView) return;\n\n\t\txoneView[PropName]?.clearDrawing();\n\t}\n\n\tcreateShortcut() {} // Ignorar\n\tdeleteShortcut() {} // Ignorar\n\n\t/**\n\t * dismissNotification\n\t * @param {string} id\n\t */\n\tdismissNotification(id) {\n\t\tid = id.toString();\n\n\t\tif (!_mapNotifications.has(id)) return;\n\n\t\tconst notification = _mapNotifications.get(id);\n\t\tnotification.close();\n\n\t\t_mapNotifications.delete(id);\n\t}\n\n\tdrawMapRoute(PropName, DestinationLatitude, DestinationLongitude, SourceLatitude, SourceLongitude, Mode, StrokeColor) {}\n\tendPrint() {}\n\tensureVisible(Prop, type) {}\n\n\t/**\n\t * executeMethodAfterDelay\n\t * @param {string} NodeName\n\t * @param {number} [delay]\n\t */\n\texecuteActionAfterDelay(NodeName, delay = 1) {\n\t\tthis.executeMethodAfterDelay(NodeName, delay);\n\t}\n\n\t/**\n\t * executeMethodAfterDelay\n\t * @param {string} NodeName\n\t * @param {number} [delay]\n\t */\n\texecuteMethodAfterDelay(NodeName, delay = 1) {\n\t\tsetTimeout(() => _xoneDataObject?.executeNode(NodeName), delay * 1000);\n\t}\n\n\t/**\n\t * Go to previus object in stack\n\t */\n\texit() {\n\t\tAppDataHandler.deletelastBreadcrumb();\n\t\thistory.back();\n\t}\n\n\t/**\n\t * Exit  App\n\t */\n\texitApp() {\n\t\tAppDataHandler.clearBreadcrumbs();\n\t\thistory.back();\n\t\t_doLogin();\n\t}\n\n\t/**\n\t * getLastKnownLocation\n\t */\n\tgetLastKnownLocation() {\n\t\tconst { latitude, longitude } = _lastGpsPosition?.coords;\n\t\treturn { latitude, longitude };\n\t}\n\n\t/**\n\t * getLastKnownLocationAccuracy\n\t */\n\tgetLastKnownLocationAccuracy() {\n\t\tconst { accuracy } = _lastGpsPosition?.coords;\n\t\treturn accuracy;\n\t}\n\n\t/**\n\t * getLastKnownLocationAltitude\n\t */\n\tgetLastKnownLocationAltitude() {\n\t\tconst { altitude } = _lastGpsPosition?.coords;\n\t\treturn altitude;\n\t}\n\n\t/**\n\t * getLastKnownLocationBearing\n\t */\n\tgetLastKnownLocationBearing() {\n\t\tconst { heading } = _lastGpsPosition?.coords;\n\t\treturn heading;\n\t}\n\n\t/**\n\t * getLastKnownLocationDateTime\n\t */\n\tgetLastKnownLocationDateTime() {\n\t\treturn _lastGpsPosition?.timestamp ? new Date(_lastGpsPosition.timestamp).toString() : null;\n\t}\n\n\t/**\n\t * getLastKnownLocationLatitude\n\t */\n\tgetLastKnownLocationLatitude() {\n\t\tconst { latitude } = _lastGpsPosition?.coords;\n\t\treturn latitude;\n\t}\n\n\t/**\n\t * getLastKnownLocationLongitude\n\t */\n\tgetLastKnownLocationLongitude() {\n\t\tconst { longitude } = _lastGpsPosition?.coords;\n\t\treturn longitude;\n\t}\n\n\t/**\n\t * getLastKnownLocationProvider\n\t */\n\tgetLastKnownLocationProvider() {\n\t\treturn _lastGpsPosition ? \"geolocation\" : \"\";\n\t}\n\n\t/**\n\t * getLastKnownLocationSpeed\n\t */\n\tgetLastKnownLocationSpeed() {\n\t\tconst { speed } = _lastGpsPosition?.coords;\n\t\treturn speed;\n\t}\n\tgetMaxSoundVolumen() {}\n\tgetSoundVolumen() {}\n\n\t/**\n\t * getView\n\t * @param {XoneDataObject} DataObject\n\t */\n\tgetView(DataObject) {\n\t\treturn getView(DataObject || _xoneDataObject);\n\t}\n\n\t/**\n\t * Hide Group\n\t * @param {string|number} groupId\n\t */\n\thideGroup(groupId) {\n\t\t_showGroupCallback ? _showGroupCallback(groupId.toString(), false, true) : console.error(\"hideGroup is not defined\", groupId);\n\t}\n\n\t/**\n\t * Hide loader spinner\n\t */\n\tasync hideLoader() {\n\t\tif (_hideLoaderCallback) await _hideLoaderCallback();\n\t}\n\n\thideNavigationDrawer() {}\n\thideSoftwareKeyboard() {}\n\thideWaitDialog() {\n\t\tthis.hideLoader();\n\t}\n\tinjectJavascript(WebViewPropName, ScriptText) {}\n\tisApplicationInstalled(packageName) {}\n\tisOnCall() {}\n\tisSuperuserAvailable() {}\n\tisTaskKillerInstalled() {}\n\tisWifiConnected() {}\n\tisWifiEnabled() {}\n\tlaunchApp(PackageName, ExtrasParam) {}\n\tlaunchApplication(PackageName, ExtrasParam) {}\n\n\t/**\n\t * Launch entry point\n\t * @param {boolean} [isOnlyWebLayout]\n\t */\n\tasync launchEntryPoint(isOnlyWebLayout = false) {\n\t\t// Clear current DataObjects and Breadcrumbs\n\t\tAppDataHandler.clearBreadcrumbs();\n\n\t\t/**\n\t\t * webLayout\n\t\t * @type {string}\n\t\t */\n\t\tconst webLayout = xoneAppHandler.getWebLayout();\n\n\t\tif (webLayout) {\n\t\t\t// Push Web Layout\n\t\t\tawait AppDataHandler.addNewXoneDataObject(webLayout, \"WebLayout\", true, true);\n\t\t\tawait nextTick();\n\t\t}\n\n\t\tif (isOnlyWebLayout) return;\n\n\t\t/**\n\t\t * entryPoint\n\t\t * @type {string}\n\t\t */\n\t\tconst entryPoint = AppDataHandler.getAppData().getEntryPointCollection(AppDataHandler.getAppData().getCurrentVisualConditions());\n\n\t\t// Push Entry Point\n\t\tawait AppDataHandler.addNewXoneDataObject(/*_entryPointFake || */ entryPoint, \"EntryPoint\", false, true);\n\t}\n\n\tlineFeed(Lines) {}\n\tlockGroup(groupId) {}\n\t/**\n\t * login\n\t * Login para appData.failWithMessage(-11888,\"##LOGIN_START##\")\n\t * habrá que deprecarlo algún día pero se usa mucho\n\t * @returns {Promise}\n\t */\n\tlogin() {\n\t\ttry {\n\t\t\tconst userName = _xoneDataObject.getVariables(\"##LOGIN_NEWUSER##\").split(\",\")[1];\n\t\t\tconst password = _xoneDataObject.getVariables(\"##LOGIN_NEWPASS##\").split(\",\")[1];\n\t\t\treturn AppDataHandler.getAppData().login({\n\t\t\t\tuserName,\n\t\t\t\tpassword,\n\t\t\t});\n\t\t} catch {\n\t\t\treturn console.error(\"Login failed\");\n\t\t}\n\t}\n\tmakePhoneCall(PhoneNumber) {}\n\n\t/**\n\t * Show MsgBox\n\t * @param {string|XoneDataObject} message\n\t * @param {string} [title]\n\t * @param {number} [flags]\n\t * @returns {Promise<number>}\n\t */\n\tasync msgBox(message, title = \"\", flags = 0) {\n\t\tlet res = 0;\n\n\t\tif (message instanceof XoneDataObject) {\n\t\t\tif (_customMsgBoxCallback) return await _customMsgBoxCallback(message);\n\t\t\telse console.error(\"Method not implemented\");\n\t\t\treturn res;\n\t\t}\n\n\t\tif (_msgBoxCallback) {\n\t\t\tres = await _msgBoxCallback(message, title, flags);\n\t\t} else {\n\t\t\tconsole.error(\"msgBox not defined\");\n\t\t}\n\n\t\treturn res;\n\t}\n\n\tasync msgBoxWithSound(Message, Title, type, Sound, Vibrate, NumberRepeat) {\n\t\tthis.playSoundAndVibrate(Sound, Vibrate, NumberRepeat);\n\t\treturn await this.msgBox(Message, Title, type);\n\t}\n\n\t/**\n\t * Open new Edit View and push it in Breadcrumbs stack\n\t * @param {XoneDataObject|string} param\n\t */\n\tasync openEditView(param) {\n\t\t// string: create XoneDataObject and push it into stack\n\t\tif (typeof param === \"string\") {\n\t\t\tawait AppDataHandler.addNewXoneDataObject(param);\n\t\t}\n\t\t// XoneDataObject: push it into stack\n\t\telse if (param instanceof XoneDataObject) {\n\t\t\t/**\n\t\t\t * xoneDataObject\n\t\t\t * @type {XoneDataObject}\n\t\t\t */\n\t\t\tconst xoneDataObject = param;\n\t\t\tAppDataHandler.pushXoneDataObject(xoneDataObject);\n\t\t}\n\t\t// Bad call\n\t\telse {\n\t\t\tconsole.error(\"Bad call openEditView with param \", param);\n\t\t}\n\t}\n\n\t/**\n\t * Open new Edit View and push it in Breadcrumbs stack then 1\n\t * @param {XoneDataObject|string} param\n\t */\n\tasync openEditViewAndExit(param) {\n\t\tAppDataHandler.clearBreadcrumbs(true);\n\t\tawait this.openEditView(param);\n\t}\n\n\t/**\n\t * openFile\n\t * @param {string} filePath\n\t */\n\topenFile(filePath) {\n\t\tfilePath = filePath.replace(\"/source/\", \"/\"); // TODO: el filePath viene mal concateado, hay que quitar el source\n\t\tconst element = document.createElement(\"a\");\n\t\telement.setAttribute(\"href\", filePath);\n\t\telement.setAttribute(\"target\", \"_blank\");\n\t\telement.style.display = \"none\";\n\t\tdocument.body.appendChild(element);\n\t\telement.click();\n\t\tdocument.body.removeChild(element);\n\t}\n\n\topenMenu(Name, Mask, Mode) {}\n\n\t/**\n\t * Open Url\n\t * @param {string} Url\n\t * @returns {void}\n\t */\n\topenUrl(Url) {\n\t\twindow.open(Url, \"_blank\");\n\t\t// if (_openUrlCallback) _openUrlCallback(Url);\n\t\t// else console.error(\"Method openUrl not implemented\");\n\t}\n\n\t/**\n\t * pickFile\n\t * @param {string|object} PropName\n\t * @param {string} Extensions\n\t * @returns {Promise<string>}\n\t */\n\tpickFile(PropName, Extensions) {\n\t\treturn new Promise((resolve) => {\n\t\t\tconst inputElement = document.createElement(\"input\");\n\t\t\tinputElement.type = \"file\";\n\t\t\tinputElement.style.display = \"none\";\n\n\t\t\tconst fileTypes = typeof PropName === \"object\" ? PropName.fileTypes : Extensions;\n\t\t\tif (fileTypes)\n\t\t\t\tinputElement.accept = fileTypes\n\t\t\t\t\t.split(\",\")\n\t\t\t\t\t.map((e) => \".\" + e)\n\t\t\t\t\t.join(\",\");\n\n\t\t\tinputElement.onchange = (e) =>\n\t\t\t\tthis.uploadFile(e.target.files[0])\n\t\t\t\t\t.then((fileName) => {\n\t\t\t\t\t\tif (typeof PropName === \"object\") PropName.targetProperty = fileName;\n\t\t\t\t\t\telse _xoneDataObject[PropName] = fileName;\n\t\t\t\t\t})\n\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\tdocument.body.removeChild(inputElement);\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t});\n\n\t\t\tdocument.body.appendChild(inputElement);\n\t\t\tinputElement.click();\n\t\t});\n\t}\n\n\t/**\n\t * playSound\n\t * @param {string} sound\n\t * @returns {Promise<void>}\n\t */\n\tplaySound(sound) {\n\t\treturn this.playSoundAndVibrate(sound);\n\t}\n\n\t/**\n\t * playSoundAndVibrate\n\t * @param {string} Sounds\n\t * @param {*} vibrate\n\t * @param {*} NumberRepeat\n\t * @param {*} ContinuePlaying\n\t * @returns {Promise<void>}\n\t */\n\tplaySoundAndVibrate(Sounds, vibrate, NumberRepeat, ContinuePlaying) {\n\t\treturn new Audio(`files/${Sounds}`).play();\n\t}\n\n\tplaySoundVolumen(Number) {}\n\tprint(Data) {}\n\tprintBIDI(Size, Level, Data) {}\n\tprintBarcode(Type, Data, Width, Height) {}\n\tprintCommand(Data) {}\n\tprintImage(Path, Width, Height, Align, Dither) {}\n\tprintLine(Data) {}\n\tprintPDF(Path, PageNumber) {}\n\n\t/**\n\t * quitApp\n\t */\n\tquitApp() {\n\t\tthis.exitApp();\n\t}\n\n\t/**\n\t * recognizeSpeech\n\t * @param {XoneDataObject|Object} DataObject\n\t * @param {string} [PropName]\n\t */\n\trecognizeSpeech(DataObject, PropName) {\n\t\tif (!webkitSpeechRecognition && !SpeechRecognition) return console.error(\"recognizeSpeech not supported. Use chrome browser.\");\n\t\tlet isXoneDataObject = false,\n\t\t\tisObject = false;\n\t\t// Is XoneDataObject\n\t\tif (DataObject instanceof XoneDataObject) {\n\t\t\tisXoneDataObject = true;\n\t\t}\n\t\t// Is Object with callback\n\t\telse if (typeof DataObject === \"object\" && DataObject.onRecognize) {\n\t\t\tisObject = true;\n\t\t} else return console.error(\"recognizeSpeech bad call\");\n\t\t// Instance recognition\n\t\t/**\n\t\t * recognition\n\t\t * @type {SpeechRecognition}\n\t\t */\n\t\tconst recognition = new (webkitSpeechRecognition || SpeechRecognition)();\n\t\t// Params\n\t\trecognition.continuous = false;\n\t\trecognition.interimResults = false;\n\t\trecognition.maxAlternatives = 1;\n\t\t// On result\n\t\trecognition.onresult = (event) => {\n\t\t\tconst result = event.results[event.results.length - 1][0].transcript;\n\t\t\tif (isObject) DataObject.onRecognize(result);\n\t\t\tif (isXoneDataObject) DataObject[PropName] = result;\n\t\t};\n\t\t// On speech end\n\t\trecognition.onspeechend = () => recognition.stop();\n\t\t// On stop\n\t\trecognition.onerror = (event) => {\n\t\t\trecognition.stop();\n\t\t\tif (isObject && DataObject.onError) DataObject.onError(event.error);\n\t\t\tconsole.log(\n\t\t\t\t`%c SpeechRecognition error: '${event.error}' %c Feature allowed in %c Chrome %c browser `,\n\t\t\t\t\"color: red\",\n\t\t\t\t\"background: #4CABD5; color: white\",\n\t\t\t\t\"background: #1F3C6E; color: white\",\n\t\t\t\t\"background: #4CABD5; color: white\"\n\t\t\t);\n\t\t};\n\t\t// start recognition\n\t\trecognition.start();\n\t}\n\n\t/**\n\t * Refresh controls\n\t * @param {Array} Props\n\t */\n\trefresh(...Props) {\n\t\tconst xoneView = getView(_xoneDataObject);\n\t\tif (!xoneView) return;\n\t\tconst props = Props.length === 1 ? Props[0].toString().split(\",\") : Props;\n\t\tprops.forEach((/** @type {string} */ e) => xoneView[e]?.refresh());\n\t\tif (Props.length === 0) xoneView.refresh();\n\t}\n\t/**\n\t * refreshAll\n\t */\n\trefreshAll() {\n\t\tthis.refresh();\n\t}\n\n\t/**\n\t * refreshContentRow\n\t * @param {string} ContentName\n\t * @param {number} Row\n\t */\n\trefreshContentRow(ContentName, Row) {\n\t\tconst xoneView = getView(_xoneDataObject);\n\t\tif (!xoneView) return;\n\t\txoneView[ContentName]?.refreshRow(Row);\n\t}\n\n\t/**\n\t * refreshContentSelectedRow\n\t * @param {string} ContentName\n\t */\n\trefreshContentSelectedRow(ContentName) {\n\t\tconst xoneView = getView(_xoneDataObject);\n\t\tif (!xoneView) return;\n\t\txoneView[ContentName]?.refreshSelectedRow();\n\t}\n\n\t/**\n\t * refreshValue\n\t * @param {string} Props\n\t */\n\trefreshValue(Props) {\n\t\tconst xoneView = getView(_xoneDataObject);\n\t\tif (!xoneView) return;\n\t\txoneView[Props]?.refresh();\n\t}\n\n\trelayout() {\n\t\tthis.refresh();\n\t}\n\trestartApp() {}\n\treturnToForeground() {}\n\treturnToMainMenu() {}\n\tsaveDrawing(PropName, FileName) {}\n\tsendMail(To, Cc, Subject, Message, Attachments) {}\n\tsendSMS(Phone, Text) {}\n\tsetFeedMode(FeedMode) {}\n\tsetLanguage(Language) {}\n\tsetMaxWaitDialog(Max) {}\n\tsetNotificationLed(LedColor, LedOn, LedOff) {}\n\tsetSelection(Prop, Position) {}\n\tshareData(Subject, Text, image) {}\n\tshowConsoleReplica() {}\n\tshowDatePicker(JSONObject) {}\n\n\t/**\n\t * Show Group\n\t * @param {string|number} groupId\n\t * @param {*} [animationIn]\n\t * @param {*} [animationInDuration]\n\t * @param {*} [animationOut]\n\t * @param {*} [animationOutDuration]\n\t */\n\tshowGroup(groupId, animationIn, animationInDuration, animationOut, animationOutDuration) {\n\t\t_showGroupCallback ? _showGroupCallback(groupId.toString()) : console.error(\"showGroup is  not defined\", groupId);\n\t}\n\n\t/**\n\t * Show Spinner loader\n\t */\n\tasync showLoader() {\n\t\tif (_showLoaderCallback) await _showLoaderCallback();\n\t}\n\n\tshowNavigationDrawer(Orientation) {}\n\n\t/**\n\t * showNotification\n\t * @param {string} id\n\t * @param {string} Title\n\t * @param {string} Text\n\t * @param {*} [TextStatusBar]\n\t * @param {XoneDataObject | Function} [obj]\n\t * @param {*} [NodeName]\n\t */\n\tshowNotification(id, Title, Text, TextStatusBar, obj, NodeName) {\n\t\tif (!(\"Notification\" in window)) return console.error(\"shotNotification not supporter in your browse\");\n\n\t\t/**\n\t\t * donotification\n\t\t */\n\t\tconst doNotification = () => {\n\t\t\tif (Notification.permission !== \"granted\") return console.error(\"Not permission granted to show notifications\");\n\n\t\t\tid = id.toString();\n\n\t\t\t// Dismiss if notification exists\n\t\t\tthis.dismissNotification(id);\n\n\t\t\t// Create  new Notification\n\t\t\tconst notification = new Notification(Title, {\n\t\t\t\ticon: \"assets/manifest/72x72.png\",\n\t\t\t\tbody: Text,\n\t\t\t});\n\n\t\t\t// Add click event\n\t\t\tnotification.onclick = () => {\n\t\t\t\tif (obj instanceof XoneDataObject) this.openEditView(obj);\n\t\t\t\tif (obj instanceof Function) obj();\n\t\t\t\tthis.dismissNotification(id);\n\t\t\t};\n\n\t\t\t// Set notification to notifications map list\n\t\t\t_mapNotifications.set(id, notification);\n\t\t};\n\n\t\t// Check permission\n\t\tif (Notification.permission !== \"granted\") Notification.requestPermission().then(() => doNotification());\n\t\t// doNotification\n\t\telse doNotification();\n\t}\n\n\t/**\n\t * Show Toast\n\t * @param {SnackBarParams} params\n\t */\n\tshowSnackbar(params) {\n\t\t_showSnackbarCallback ? _showSnackbarCallback(params) : console.error(\"showSnackbar is  not defined\", params);\n\t}\n\n\tshowSoftwareKeyboard() {}\n\n\t/**\n\t * Show Toast\n\t * @param {string} message\n\t */\n\tshowToast(message) {\n\t\t_showToastCallback ? _showToastCallback(message) : console.error(\"showToast is not defined\", message);\n\t}\n\n\tshowWaitDialog(Text) {\n\t\tthis.showLoader();\n\t}\n\tsignDataObject(Data, Mask) {}\n\n\t/**\n\t * sleep\n\t * @param {number} Seconds\n\t */\n\tasync sleep(Seconds) {\n\t\tawait new Promise((resolve) => setTimeout(() => resolve(), Number(Seconds) * 1000));\n\t}\n\n\t/**\n\t * speak\n\t * @param {string} Language\n\t * @param {string} Text\n\t */\n\tspeak(Language, Text) {\n\t\tif (!speechSynthesis) return console.error(\"speak not supported in your browser\");\n\t\tconst speechSynthesisUtterance = new SpeechSynthesisUtterance(Text);\n\t\tif (Language) speechSynthesisUtterance.lang = Language;\n\t\tspeechSynthesis.speak(speechSynthesisUtterance);\n\t}\n\n\t/**\n\t * speakText\n\t * @param {string} Text\n\t */\n\tspeakText(Text) {\n\t\tthis.speak(null, Text);\n\t}\n\n\tstartAudioRecord(NodeName, Prop, TimeOut) {}\n\n\t/**\n\t * startCamera\n\t * @param {string} PropName\n\t * @param {string} type\n\t */\n\tasync startCamera(PropName, type = \"photo\") {\n\t\tlet value;\n\t\tif (_startCameraCallback) value = await _startCameraCallback(type);\n\t}\n\n\t/**\n\t * startGps\n\t * @param {*} JSONObject\n\t * @param {*} Interval\n\t * @param {*} Flags\n\t */\n\tasync startGps(JSONObject, Interval = 30000, Flags) {\n\t\tif (!navigator.geolocation) return console.error(\"Geolocation not allowed\");\n\n\t\tthis.stopGps();\n\n\t\tconst pos = await new Promise((resolve) =>\n\t\t\tnavigator.geolocation.getCurrentPosition(\n\t\t\t\t(res) => resolve(res), // Error function\n\t\t\t\t() => console.error(\"Could not get location\"),\n\t\t\t\t{\n\t\t\t\t\tenableHighAccuracy: true,\n\t\t\t\t\ttimeout: 5000,\n\t\t\t\t\tmaximumAge: 0,\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\n\t\t_lastGpsPosition = pos;\n\n\t\tconsole.log(` %c LOCATION `, \"background-color: BLUE; color: white;\", pos);\n\n\t\tthis._startGpsTimeout = setTimeout(() => this.startGps(JSONObject, Interval, Flags), Interval);\n\t}\n\n\t/**\n\t * startGpsV1\n\t */\n\tasync startGpsV1() {\n\t\tawait this.startGps();\n\t}\n\n\t/**\n\t * startGpsV2\n\t * @param {*} JSONObject\n\t * @param {*} Interval\n\t * @param {*} Flags\n\t */\n\tasync startGpsV2(JSONObject, Interval, Flags) {\n\t\tawait this.startGps();\n\t}\n\n\tstartKioskMode() {}\n\tstartPrint(PrinterType) {}\n\tstartReplica() {}\n\tstartScanner(NativeObject, Codes, Target) {}\n\tstartSignature(Prop, Width, Height, BackgroundImage, ScreenOrientation) {}\n\tstartWifi() {}\n\tstopAudioRecord() {}\n\tstopGps() {\n\t\tif (this._startGpsTimeout) clearTimeout(this._startGpsTimeout);\n\t}\n\tstopGpsV1() {}\n\tstopGpsV2() {}\n\tstopKioskMode() {}\n\tstopPlaySoundAndVibrate() {}\n\tstopReplica() {}\n\tstopWifi() {}\n\n\t/**\n\t * Take photo\n\t * @param {*} FileName\n\t * @param {*} Width\n\t * @param {*} Height\n\t */\n\ttakePhoto(FileName, Width, Height) {\n\t\tif (_startCameraCallback) _startCameraCallback();\n\t}\n\n\t/**\n\t * Toogle Group\n\t * @param {string|number} groupId\n\t */\n\ttoggleGroup(groupId) {\n\t\t_showGroupCallback ? _showGroupCallback(groupId.toString(), true) : console.error(\"toggleGroup is not defined\", groupId);\n\t}\n\n\tuninstallApplication(packageName) {}\n\tunlockGroup(groupId) {}\n\tupdateWaitDialog(message, value) {}\n\n\t/**\n\t * @param {Blob} file\n\t * @returns {Promise<string>}\n\t */\n\tuploadFile(file) {\n\t\tconst fileName = file.name || `${generateUniqueId()}.png`;\n\t\tconst formData = new FormData();\n\t\tformData.append(\"file\", file, fileName);\n\t\treturn fetch(\"upload\", {\n\t\t\t//\"http://localhost:8000/upload\", {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: { processData: false, contentType: false },\n\t\t\tbody: formData,\n\t\t})\n\t\t\t.then((res) => (res.hasError ? \"\" : fileName))\n\t\t\t.catch(console.error);\n\t}\n\n\tuseLastPrinter(True) {}\n\tvibrate() {}\n\twriteString() {}\n}\n\nconst xoneUI = new XoneUI();\n\nexport default xoneUI;\n","import Calendar from \"./Calendar\";\nimport StringUtils from \"./StringUtils\";\nimport TextUtils from \"./TextUtils\";\nexport default class ObjUtils {\n    static IsNothing(Value) {\n        return Value == null || Value == undefined || Value == 'undefined';\n    }\n    static IsNumeric(Value) {\n        return !isNaN(Value);\n    }\n    static IsFloat(Value) {\n        if (ObjUtils.IsNothing(Value))\n            return false;\n        return ObjUtils.IsNumeric(Value) && !Number.isInteger(Value);\n    }\n    static IsInt(Value) {\n        if (ObjUtils.IsNothing(Value))\n            return false;\n        return ObjUtils.IsNumeric(Value) && Number.isInteger(Value);\n    }\n    static EqualObj(oldVal, Value) {\n        return oldVal === Value;\n    }\n    static ZeroCalendarTime(dt) {\n        dt.getTime().setHours(0);\n        dt.getTime().setMinutes(0);\n        dt.getTime().setSeconds(0);\n        dt.getTime().setMilliseconds(0);\n        return dt;\n    }\n    static SafeToCalendar(Value) {\n        if (Value instanceof Calendar)\n            return Value;\n        if (Value instanceof Date) {\n            return new Calendar(Value);\n        }\n        return this.SafeToComplexDate(StringUtils.SafeToString(Value));\n    }\n    static SafeToDate(Value) {\n        if (Value instanceof Calendar)\n            return Value.getTime();\n        if (Value instanceof Date) {\n            return Value;\n        }\n        let dt = this.SafeToComplexDate(StringUtils.SafeToString(Value));\n        if (dt)\n            return dt.getTime();\n        return null;\n    }\n    static SafeToDateString(Value) {\n        if (Value instanceof Calendar)\n            return Value.toString();\n        if (Value instanceof Date)\n            Value.toDateString();\n        return StringUtils.SafeToString(Value);\n    }\n    static getOnlyTime(Value) {\n        return Value.getHours().toString().padStart(2, \"0\") + \":\" + Value.getMinutes().toString().padStart(2, \"0\");\n    }\n    static SafeToHours(Value) {\n        if (!Value)\n            return this.getOnlyTime(new Date());\n        if (Value instanceof Calendar)\n            return this.getOnlyTime(Value.getTime());\n        if (Value instanceof Date) {\n            return this.getOnlyTime(Value);\n        }\n        return this.getOnlyTime(this.SafeToComplexDate(StringUtils.SafeToString(Value)).getTime());\n    }\n    static getDateSeparator(str) {\n        const sep = [\"-\", \"/\"];\n        for (var s in sep) {\n            if (str.indexOf(s) > 0) {\n                return s;\n            }\n        }\n        return \"/\";\n    }\n    static SafeToComplexDate(sDate) {\n        if (TextUtils.isEmpty(sDate)) {\n            return null;\n        }\n        const regex = /\\//g;\n        sDate = sDate.trim().replace(\"T\", \" \");\n        let calendar = Calendar.getInstance();\n        let sSeparator = this.getDateSeparator(sDate);\n        if (sSeparator == \"/\")\n            sDate = sDate.replace(regex, '-');\n        return new Calendar(Date.parse(sDate));\n        // let sPattern=\"\";\n        // if (sDate.indexOf(sSeparator) == 4) {\n        //     // Debe ser el formato de SQLite\n        //     if (sDate.length <= 10) {\n        //         sPattern = \"yyyy\" + sSeparator + \"MM\" + sSeparator + \"dd\";\n        //     } else {\n        //         sPattern = \"yyyy\" + sSeparator + \"MM\" + sSeparator + \"dd HH:mm:ss\";\n        //     }\n        //     return new Calendar(Date.parse(sDate));\n        // } else {\n        //     sPattern = getDateFormat(Locale.getDefault(), sDate, sSeparator);\n        //     if (sDate.length() <= 10) {\n        //         sPattern = sPattern.substring(0, sPattern.lastIndexOf(\"y\"));\n        //     }\n        // }\n        // SimpleDateFormat formatter = new SimpleDateFormat(sPattern, Locale.US);\n        // Date date = unsafeParseDate(formatter, sDate);\n        // calendar.setTime(date);\n        // return calendar;\n    }\n    /**\n     * Dado un objeto, devuelve el marcador de tipo interno.\n     *\n     * @param Source Objeto cuyo marcador de tipo interno se quiere obtener.\n     * @return Devuelve el marcador de tipo del objeto.\n     */\n    static GetTypeTag(Source) {\n        if (Source == null) {\n            return this.OBJ_TYPE_NULL;\n        }\n        if (typeof Source === 'number' || Source instanceof Number) {\n            if (Number.isInteger(Source))\n                return this.NATIVE_TYPE_LONG;\n            else\n                return this.NATIVE_TYPE_DOUBLE;\n        }\n        if (typeof Source === 'boolean' || Source instanceof Boolean) {\n            return this.NATIVE_TYPE_BOOL;\n        }\n        if (typeof Source === 'string' || Source instanceof String) {\n            return this.OBJ_TYPE_STRING;\n        }\n        if (Source instanceof Date) {\n            return this.OBJ_TYPE_DATE;\n        }\n        if (Source instanceof Calendar) {\n            return this.OBJ_TYPE_CALENDAR;\n        }\n        return this.NOT_NATIVE_TYPE;\n    }\n}\nObjUtils.NATIVE_TYPE_LONG = 1;\nObjUtils.NATIVE_TYPE_INT = 2;\nObjUtils.NATIVE_TYPE_BOOL = 3;\nObjUtils.NATIVE_TYPE_DOUBLE = 4;\nObjUtils.NATIVE_TYPE_FLOAT = 5;\nObjUtils.OBJ_TYPE_STRING = 100;\nObjUtils.OBJ_TYPE_DATE = 101;\nObjUtils.OBJ_TYPE_CALENDAR = 102;\nObjUtils.OBJ_TYPE_NULL = 103;\nObjUtils.NOT_NATIVE_TYPE = -1;\n\n//# sourceMappingURL=ObjUtils.js.map\n","import { Exception } from \"./Exception\";\nexport default class IllegalArgumentException extends Exception {\n}\n\n//# sourceMappingURL=IllegalArgumentException.js.map\n","import { Exception } from \"./Exception\";\nexport default class NullPointerException extends Exception {\n}\n\n//# sourceMappingURL=NullPointerException.js.map\n","<template>\n\t<div\n\t\tv-if=\"containerWidth && containerHeight\"\n\t\tclass=\"-\"\n\t\t:style=\"{\n\t\t\t'--app-width': `${containerWidth}px`,\n\t\t\t'--app-height': `${containerHeight}px`,\n\t\t}\"\n\t>\n\t\t<!-- Layout breadcrumb -->\n\t\t<div class=\"xone-layout\" v-if=\"webLayoutBreadcrumb\">\n\t\t\t<Coll :breadcrumb=\"webLayoutBreadcrumb\" :isLayout=\"true\"></Coll>\n\t\t</div>\n\n\t\t<!-- Router -->\n\t\t<router-view v-else />\n\n\t\t<!-- UI Components -->\n\t\t<SnackBar />\n\t\t<Toast />\n\t\t<Loader />\n\t\t<MsgBox />\n\t\t<Camera />\n\t\t<Url />\n\t\t<Offline />\n\n\t\t<!-- Drag & Drop -->\n\t\t<SelectedControl />\n\t\t<OverControl />\n\t\t<DragControl />\n\t</div>\n</template>\n\n<script>\n// Vue\nimport { provide, ref, Ref, ComputedRef, onMounted, onUnmounted, computed, watch } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\n// Components\nimport Coll from \"./components/Coll.vue\";\nimport Toast from \"./components/uiComponents/Toast.vue\";\nimport SnackBar from \"./components/uiComponents/SnackBar.vue\";\nimport Loader from \"./components/uiComponents/Loader.vue\";\nimport MsgBox from \"./components/uiComponents/MsgBox.vue\";\nimport Camera from \"./components/uiComponents/Camera.vue\";\nimport Url from \"./components/uiComponents/Url.vue\";\nimport Offline from \"./components/uiComponents/Offline.vue\";\nimport SelectedControl from \"./components/dragAndDrop/SelectedControl.vue\";\nimport OverControl from \"./components/dragAndDrop/OverControl.vue\";\nimport DragControl from \"./components/dragAndDrop/DragControl.vue\";\n// Composables\nimport { XoneApplication } from \"./composables/appData/core/XoneApplication\";\nimport { FileManagerOnline } from \"./composables/appData/Manager/FileManager\";\nimport AppDataHandler, { Breadcrumb } from \"./composables/AppDataHandler\";\nimport xoneAppHandler from \"./composables/XoneAppHandler\";\nimport xoneUI, { setDoLogin, setEntryPointFake } from \"./composables/XoneUI\";\nimport { setWidthFactor, setHeightFactor } from \"./composables/XoneAnimation\";\nimport { setAppPath } from \"./composables/helperFunctions/ImageHelper\";\nimport { setIsScaleFontsize, setWebFontFactor } from \"./composables/XoneAttributesHandler\";\nimport { addFontFaces } from \"./composables/helperFunctions/FontsHelper\";\nimport XoneAppHandler from \"./composables/XoneAppHandler\";\nimport { isMobile } from \"./composables/helperFunctions/MobileBrowserHelper\";\nimport { XoneDataCollection } from \"./composables/appData/core/XoneDataCollection\";\nimport { createTestingDataGeneration } from \"./composables/helperFunctions/StringHelper\";\nimport { getPreviewObjects, getUrlParams } from \"./composables/helperFunctions/UrlHelper\";\n\nexport default {\n\tcomponents: {\n\t\tColl,\n\t\tToast,\n\t\tSnackBar,\n\t\tLoader,\n\t\tMsgBox,\n\t\tCamera,\n\t\tUrl,\n\t\tOffline,\n\t\tSelectedControl,\n\t\tOverControl,\n\t\tDragControl,\n\t},\n\tsetup() {\n\t\tconsole.log(\n\t\t\t`%c b y %c X %c >O n e %c ${XoneAppHandler.getVersion()}`,\n\t\t\t\"background: whitesmoke; color: #1F3C6E; font-weight: bold; display: block; font-size: 17px;\",\n\t\t\t\"background: #4CABD5   ; color: white  ; font-weight: bold; display: block; font-size: 17px;\",\n\t\t\t\"background: #1F3C6E   ; color: white  ; font-weight: bold; display: block; font-size: 17px;\",\n\t\t\t\"color: #1F3C6E\"\n\t\t);\n\n\t\tconst router = useRouter();\n\t\tconst route = useRoute();\n\n\t\t/**\n\t\t * XOne Web Layout\n\t\t * @type {ComputedRef<Breadcrumb>}\n\t\t */\n\t\tconst webLayoutBreadcrumb = computed(() => {\n\t\t\tconst breadcrumb = AppDataHandler.getBreadcrumbs().filter((e) => e.isWebLayout);\n\t\t\treturn breadcrumb.length !== 0 ? breadcrumb[0] : null;\n\t\t});\n\t\t/**\n\t\t * routeBreadcrumbs: router object Stack\n\t\t * @type {ComputedRef<Breadcrumb[]>}\n\t\t */\n\t\tconst routeBreadcrumbs = computed(() => AppDataHandler.getBreadcrumbs().filter((e) => !e.isWebLayout && !e.isMsgbox && !e.isContentsRow));\n\t\tprovide(\"routeBreadcrumbs\", routeBreadcrumbs);\n\n\t\t/**\n\t\t * lastBreadcrumb\n\t\t * @type {ComputedRef<Breadcrumb>}\n\t\t */\n\t\tconst lastBreadcrumb = computed(() => routeBreadcrumbs.value.length !== 0 && routeBreadcrumbs.value[routeBreadcrumbs.value.length - 1]);\n\n\t\t// Provide lastBreadcrumb to child components\n\t\tprovide(\"lastBreadcrumb\", lastBreadcrumb);\n\n\t\t//\n\t\t// Manage Window Size / Scale\n\n\t\t/**\n\t\t * appWidth\n\t\t * @type {Ref<number>}\n\t\t */\n\t\tlet appWidth = ref();\n\n\t\t/**\n\t\t * appHeight\n\t\t * @type {Ref<number>}\n\t\t */\n\t\tlet appHeight = ref();\n\n\t\tprovide(\"appSize\", { appWidth, appHeight });\n\n\t\t/**\n\t\t * containerWidth\n\t\t * @type {Ref<number>}\n\t\t */\n\t\tlet containerWidth = ref(null);\n\n\t\t/**\n\t\t * containerHeight\n\t\t * @type {Ref<number>}\n\t\t */\n\t\tlet containerHeight = ref(null);\n\n\t\t// Check if an input is focused in order to handle keyboard in mobile devices\n\t\tconst isInputFocused = ref(false);\n\t\tprovide(\"isInputFocused\", isInputFocused);\n\n\t\twatch(\n\t\t\t() => isInputFocused.value,\n\t\t\t(newValue) => {\n\t\t\t\tif (!newValue) setTimeout(() => onResize(), 250);\n\t\t\t}\n\t\t);\n\n\t\tlet resizeTimeout;\n\t\tlet allowZoom = false;\n\t\tlet isFirstTime = true;\n\t\t/**\n\t\t * on window resize\n\t\t */\n\t\tconst onResize = () => {\n\t\t\tconst zoom = allowZoom ? window.devicePixelRatio : 1;\n\n\t\t\tif (resizeTimeout) clearTimeout(resizeTimeout);\n\n\t\t\tconst width = (appWidth.value && window.innerWidth > appWidth.value ? appWidth.value : window.innerWidth) * zoom - 2;\n\t\t\tconst height = (appHeight.value && window.innerHeight > appHeight.value ? appHeight.value : window.innerHeight) * zoom - 2;\n\n\t\t\txoneAppHandler.setSizeConditions(width);\n\t\t\tsizeConditions.value = xoneAppHandler.sizeConditions;\n\t\t\torientation.value = xoneAppHandler.orientation;\n\n\t\t\tresizeTimeout = setTimeout(\n\t\t\t\t() => {\n\t\t\t\t\tif (isInputFocused.value && isMobile()) return;\n\t\t\t\t\tcontainerWidth.value = width;\n\t\t\t\t\tcontainerHeight.value = height;\n\t\t\t\t\t// Send resolution macros\n\t\t\t\t\txoneAppHandler && xoneAppHandler.setVisualConditionsMacros(containerWidth.value, containerHeight.value);\n\n\t\t\t\t\tif (isFirstTime) isFirstTime = false;\n\t\t\t\t},\n\t\t\t\tisFirstTime ? 0 : 250\n\t\t\t);\n\t\t};\n\n\t\tonMounted(() => window.addEventListener(\"resize\", onResize));\n\t\tonUnmounted(() => window.removeEventListener(\"resize\", onResize));\n\n\t\tprovide(\"containerSize\", { containerWidth, containerHeight });\n\n\t\t/**\n\t\t * Size Conditions\n\t\t * @type {Ref<string>}\n\t\t */\n\t\tconst sizeConditions = ref(\"\");\n\t\tprovide(\"sizeConditions\", sizeConditions);\n\n\t\t/**\n\t\t * Orientation\n\t\t * @type {Ref<string>}\n\t\t */\n\t\tconst orientation = ref(\"\");\n\t\tprovide(\"orientation\", orientation);\n\n\t\t//\n\t\t// Scale Factor\n\n\t\t/**\n\t\t * widthFactor\n\t\t * @type {ComputedRef<number>}\n\t\t */\n\t\tconst widthFactor = computed(() => (appWidth.value ? containerWidth.value / appWidth.value : 1));\n\n\t\t/**\n\t\t * heightFactor\n\t\t * @type {ComputedRef<number>}\n\t\t */\n\t\tconst heightFactor = computed(() => (appHeight.value ? containerHeight.value / appHeight.value : 1));\n\t\t// provide scaleFactor to child components\n\t\tprovide(\"scaleFactor\", { widthFactor, heightFactor });\n\n\t\twatch(\n\t\t\t() => widthFactor.value,\n\t\t\t(newValue) => setWidthFactor(newValue)\n\t\t);\n\t\twatch(\n\t\t\t() => heightFactor.value,\n\t\t\t(newValue) => setHeightFactor(newValue)\n\t\t);\n\n\t\t// displayScreenThresholds\n\t\tconst displayScreenThresholds = ref(false);\n\t\tprovide(\"displayScreenThresholds\", displayScreenThresholds);\n\n\t\tconst showBreadcrumbs = ref(false);\n\t\tprovide(\"showBreadcrumbs\", showBreadcrumbs);\n\n\t\t/**\n\t\t * Init appData\n\t\t */\n\t\tonMounted(() => {\n\t\t\tconst appData = new XoneApplication();\n\n\t\t\t// provide appData\n\t\t\tAppDataHandler.setAppData(appData);\n\n\t\t\t// set UI\n\t\t\tappData.setUserInterface(xoneUI);\n\n\t\t\t// Get App Configuration File and Script_Wrapper\n\t\t\tconst getConfig = Function(\n\t\t\t\t\"cbF\",\n\t\t\t\t\"(async()=>{try{const c=await import('../configuration.js');cbF({...c.default,sWA:null});}catch(ex){console.error('Error loading configuration.js and __SCRIPT_WRAPPER__.js files',ex);}})()\"\n\t\t\t);\n\t\t\t// const getConfig = Function(\n\t\t\t// \t\"cbF\",\n\t\t\t// \t\"(async()=>{try{const c=await import('../configuration.js');const{__SCRIPT_WRAPPERASYNC}=await import('./__SCRIPT_WRAPPER__.js');cbF({...c.default,sWA:__SCRIPT_WRAPPERASYNC});}catch(ex){console.error('Error loading configuration.js and __SCRIPT_WRAPPER__.js files',ex);}})()\"\n\t\t\t// );\n\n\t\t\tgetConfig(async (config) => {\n\t\t\t\t// path\n\t\t\t\tlet path = (config.path ?? \"\").trim();\n\t\t\t\tif (path === \"/\") path = \"\";\n\t\t\t\telse if (path && !path.startsWith(\"/\")) path = `/${path}`;\n\t\t\t\t// Set App Path\n\t\t\t\tsetAppPath(path);\n\t\t\t\t// Add Font Faces\n\t\t\t\taddFontFaces();\n\t\t\t\t// title\n\t\t\t\tif (config.title) document.title = config.title;\n\t\t\t\t// screen thresholds\n\t\t\t\tif (config.displayScreenThresholds) displayScreenThresholds.value = true;\n\t\t\t\tif (config.showBreadcrumbs) showBreadcrumbs.value = config.showBreadcrumbs;\n\t\t\t\t// debugging\n\t\t\t\tif (config.debugging) window.debugging = true;\n\t\t\t\t// allow zoom\n\t\t\t\tallowZoom = config.allowZoom;\n\t\t\t\t// sourcePath\n\t\t\t\tlet sourcePath = `${path}/source`;\n\t\t\t\twhile (sourcePath.includes(\"//\")) sourcePath = sourcePath.replace(\"//\", \"/\");\n\t\t\t\t// Preview\n\t\t\t\tlet previewFileManager, previewSWA;\n\t\t\t\tif (route.name === \"Preview\" || location.href.includes(\"preview?\")) {\n\t\t\t\t\tconst previewObjects = getPreviewObjects(sourcePath);\n\t\t\t\t\tpreviewFileManager = previewObjects.fileManager;\n\t\t\t\t\tpreviewSWA = previewObjects.sWA;\n\t\t\t\t\t// Agregamos la función para generar simular la generación de datos al ser un preview, no necesitamos una API\n\t\t\t\t\tcreateTestingDataGeneration();\n\t\t\t\t}\n\t\t\t\t//\n\t\t\t\t// Init App\n\t\t\t\tawait appData.IniciarApp(\n\t\t\t\t\tsourcePath,\n\t\t\t\t\tpreviewSWA ? previewSWA : config.sWA,\n\t\t\t\t\tpreviewFileManager ? previewFileManager : new FileManagerOnline(),\n\t\t\t\t\t`Data Source=${config.apiUrl};xoneuser=${config.clientId};xonepass=${config.clientSecret};ids=${\n\t\t\t\t\t\tconfig.idsUrl || \"https://ids.xonedev.cloud/connect/token\"\n\t\t\t\t\t}`\n\t\t\t\t);\n\n\t\t\t\txoneAppHandler.setAppData(appData);\n\n\t\t\t\t// Set app width / height\n\t\t\t\tconst appSize = xoneAppHandler.getAppSize();\n\t\t\t\tappWidth.value = appSize?.width <= 0 ? null : appSize?.width;\n\t\t\t\tappHeight.value = appSize?.height <= 0 ? null : appSize?.height;\n\n\t\t\t\tonResize();\n\n\t\t\t\t// scaled fontsize\n\t\t\t\tconst isScaleFontsize = xoneAppHandler.isScaleFontsize();\n\t\t\t\tsetIsScaleFontsize(isScaleFontsize);\n\n\t\t\t\t// scaled fontsize\n\t\t\t\tconst webFontFactor = xoneAppHandler.getWebFontFactor();\n\t\t\t\tif (webFontFactor && !isNaN(webFontFactor)) setWebFontFactor(Number(webFontFactor));\n\n\t\t\t\t// set macros\n\t\t\t\txoneAppHandler.setInmutableMacros(appData);\n\t\t\t\tdoLogin();\n\t\t\t});\n\t\t});\n\n\t\tconst doLogin = async () => {\n\t\t\t/** @type {XoneApplication} */\n\t\t\tconst appData = AppDataHandler.getAppData();\n\n\t\t\t// Estamos en un deeplink y tendremos que ejecutar el método ondeeplinkclicked en la colección de Empresas, previo autologon\n\t\t\tconst onErrorFunc = (msg) => {\n\t\t\t\tconsole.error(msg || \"autologon error\");\n\t\t\t\treturn router.push({ name: \"404\" });\n\t\t\t};\n\t\t\tconst doAutoLogin = async (ignoreEntryPoint = false) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst user = await appData.login({\n\t\t\t\t\t\tuserName: \"admin\",\n\t\t\t\t\t\tpassword: \"\",\n\t\t\t\t\t\tignoreEntryPoint: ignoreEntryPoint,\n\t\t\t\t\t});\n\t\t\t\t\tif (!user) return onErrorFunc();\n\t\t\t\t\t// Launch Layout EntryPoint\n\t\t\t\t\tawait xoneUI.launchEntryPoint(true);\n\t\t\t\t} catch {\n\t\t\t\t\treturn onErrorFunc();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// DeepLink\n\t\t\tif (route.name === \"DeepLink\" || location.href.includes(\"deeplink?\")) {\n\t\t\t\t// Get url params\n\t\t\t\tlet paramsObj = getUrlParams(\"/deeplink?\");\n\t\t\t\t// Autologin\n\t\t\t\tawait doAutoLogin(true);\n\n\t\t\t\t// Execute ondeeplinkclicked node\n\t\t\t\t/** @type {XoneDataCollection} */\n\t\t\t\tconst dataCollection = await appData.getCollection(\"Empresas\");\n\t\t\t\treturn dataCollection.ExecuteCollAction(\"ondeeplinkclicked\", null, paramsObj).catch(() => {\n\t\t\t\t\tAppDataHandler.clearBreadcrumbs();\n\t\t\t\t\treturn onErrorFunc(\"error executing ondeeplinkclicked\");\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// AutoLogon\n\t\t\tif (xoneAppHandler.getIsAutoLogon()) {\n\t\t\t\treturn appData\n\t\t\t\t\t.login({\n\t\t\t\t\t\tuserName: xoneAppHandler.getAutoLogonUser(),\n\t\t\t\t\t\tpassword: xoneAppHandler.getAutoLogonPwd(),\n\t\t\t\t\t})\n\t\t\t\t\t.catch(() => onErrorFunc());\n\t\t\t}\n\n\t\t\t// Default Login\n\t\t\t// if (!loginColl) // TODO: crear login integrado\n\t\t\t//   return router.push({ name: \"Login\", params: { id: \"integrated\" } });\n\n\t\t\t// XOne-User Login\n\t\t\t// Pusheamos el objeto de la colección de Login\n\t\t\tawait AppDataHandler.addNewXoneDataObject(appData.getLoginCollectionName(), \"Login\", false, true);\n\n\t\t\t// Send setDoLogin to XoneUI\n\t\t\tsetDoLogin(doLogin);\n\n\t\t\tconst routeTo = { name: \"Login\" };\n\n\t\t\tif (route.params?.id) routeTo.params = { id: route.params.id };\n\t\t\trouter.push(routeTo);\n\t\t};\n\n\t\tprovide(\"loginFunction\", doLogin);\n\n\t\treturn {\n\t\t\twebLayoutBreadcrumb,\n\t\t\tcontainerWidth,\n\t\t\tcontainerHeight,\n\t\t};\n\t},\n};\n</script>\n\n<style>\nbody {\n\toverscroll-behavior-y: contain;\n}\n\n#app {\n\tfont-family: \"Roboto\", Helvetica, Arial, sans-serif;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n\t/* text-align: center; */\n\tdisplay: flex;\n\tjustify-content: center;\n\toverflow: visible;\n}\n\n* {\n\tpadding: 0;\n\tmargin: 0;\n\n\t-webkit-touch-callout: none; /* iOS Safari */\n\t-webkit-user-select: none; /* Safari */\n\t-khtml-user-select: none; /* Konqueror HTML */\n\t-moz-user-select: none; /* Old versions of Firefox */\n\t-ms-user-select: none; /* Internet Explorer/Edge */\n\tuser-select: none; /* Non-prefixed version, currently\n                                  supported by Chrome, Edge, Opera and Firefox */\n\tscrollbar-width: thin;\n\tscrollbar-color: lightgrey transparent;\n}\n\ndiv {\n\tbox-sizing: border-box;\n\t-moz-box-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n}\n\n.xone-app {\n\tdisplay: flex;\n\tflex-direction: column;\n\t/* overflow: auto; */\n\toverflow: visible;\n\tmax-height: 100vh;\n\tmax-width: 100vw;\n}\n.xone-navbar {\n\tflex-shrink: 1;\n}\n\n.xone-layout,\n.xone-dataobjects {\n\tflex-grow: 1;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\toverflow: visible;\n\t/* border: 1px solid rgba(0, 0, 0, 0.12); */\n\t/* box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.2), 0 4px 5px rgba(0, 0, 0, 0.14),\n    0 1px 10px rgba(0, 0, 0, 0.12); */\n\twidth: var(--app-width);\n\theight: var(--app-height);\n}\n\n@keyframes fadeIn {\n\tfrom {\n\t\tz-index: 999999;\n\t\topacity: 0;\n\t}\n\tto {\n\t\tz-index: 999999;\n\t\topacity: 1;\n\t}\n}\n\n@keyframes slideLeft {\n\tfrom {\n\t\tz-index: 999999;\n\t\ttransform: translate(75%, 0);\n\t}\n\tto {\n\t\tz-index: 999999;\n\t\ttransform: translate(0, 0);\n\t}\n}\n\n@keyframes slideRight {\n\tfrom {\n\t\tz-index: 999999;\n\t\ttransform: translate(-75%, 0);\n\t}\n\tto {\n\t\tz-index: 999999;\n\t\ttransform: translate(0, 0);\n\t}\n}\n\n@keyframes zoomIn {\n\tfrom {\n\t\tz-index: 999999;\n\t\ttransform: scale(0);\n\t}\n\tto {\n\t\tz-index: 999999;\n\t\ttransform: scale(1);\n\t}\n}\n\n@keyframes slideDown {\n\t0% {\n\t\tz-index: 999999;\n\t\ttransform: translateY(-50px);\n\t}\n\n\t100% {\n\t\tz-index: 999999;\n\t\ttransform: translateY(0);\n\t}\n}\n\n@keyframes slideUp {\n\t0% {\n\t\tz-index: 999999;\n\t\ttransform: translateY(50px);\n\t}\n\n\t100% {\n\t\tz-index: 999999;\n\t\ttransform: translateY(0);\n\t}\n}\n\n@keyframes right_in {\n\tfrom {\n\t\tz-index: 999999;\n\t\ttransform: translateX(100px);\n\t}\n\tto {\n\t\tz-index: 999999;\n\t\ttransform: translateX(0px);\n\t}\n}\n\n@-webkit-keyframes fadeIn {\n\tfrom {\n\t\tz-index: 999999;\n\t\topacity: 0;\n\t}\n\tto {\n\t\tz-index: 999999;\n\t\topacity: 1;\n\t}\n}\n\n@-webkit-keyframes slideLeft {\n\tfrom {\n\t\tz-index: 999999;\n\t\ttransform: translate(75%, 0);\n\t}\n\tto {\n\t\tz-index: 999999;\n\t\ttransform: translate(0, 0);\n\t}\n}\n\n@-webkit-keyframes slideRight {\n\tfrom {\n\t\tz-index: 999999;\n\t\ttransform: translate(-75%, 0);\n\t}\n\tto {\n\t\tz-index: 999999;\n\t\ttransform: translate(0, 0);\n\t}\n}\n\n@-webkit-keyframes zoomIn {\n\tfrom {\n\t\tz-index: 999999;\n\t\ttransform: scale(0);\n\t}\n\tto {\n\t\tz-index: 999999;\n\t\ttransform: scale(1);\n\t}\n}\n\n@-webkit-keyframes slideDown {\n\t0% {\n\t\tz-index: 999999;\n\t\ttransform: translateY(-50px);\n\t}\n\n\t100% {\n\t\tz-index: 999999;\n\t\ttransform: translateY(0);\n\t}\n}\n@-webkit-keyframes slideUp {\n\t0% {\n\t\tz-index: 999999;\n\t\ttransform: translateY(50px);\n\t}\n\n\t100% {\n\t\tz-index: 999999;\n\t\ttransform: translateY(0);\n\t}\n}\n\n@-webkit-keyframes right_in {\n\tfrom {\n\t\tz-index: 999999;\n\t\ttransform: translateX(100px);\n\t}\n\tto {\n\t\tz-index: 999999;\n\t\ttransform: translateX(0px);\n\t}\n}\n\n/* width */\n::-webkit-scrollbar {\n\twidth: 7px;\n\theight: 7px;\n}\n\n/* Track */\n::-webkit-scrollbar-track {\n\tbackground: transparent;\n}\n\n/* Handle */\n::-webkit-scrollbar-thumb {\n\tbackground: lightgrey;\n\tborder-radius: 4px;\n}\n\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n\tbackground: #555;\n}\n\n/* Leaflet map routing */\n.leaflet-routing-container {\n\tdisplay: none;\n}\n\n/* Loader */\n\n.xone-loader {\n\twidth: 100%;\n\ttext-align: center;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tmargin: 10px 0;\n\tpadding-bottom: 25px;\n\tgrid-column: 1 / -1;\n\theight: 100px;\n\tanimation: fadeIn 0.3s;\n}\n\n.xone-loader div:first-child {\n\theight: 35px;\n\twidth: 35px;\n\tborder-radius: 50%;\n\tborder: 4px solid lightgray;\n\tborder-left: 4px solid gray;\n\t-webkit-animation: spin 0.6s linear infinite;\n\tanimation: spin 0.6s linear infinite;\n}\n\n.xone-dataobject {\n\tposition: relative;\n\tflex-grow: 1;\n\tanimation: loadEffect 0.3s;\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n@keyframes loadEffect {\n\tfrom {\n\t\topacity: 0.1;\n\t}\n\tto {\n\t\topacity: 1;\n\t}\n}\n\n@-webkit-keyframes loadEffect {\n\tfrom {\n\t\topacity: 0.1;\n\t}\n\tto {\n\t\topacity: 1;\n\t}\n}\n/* Safari */\n@-webkit-keyframes spin {\n\t0% {\n\t\t-webkit-transform: rotate(0deg);\n\t}\n\t100% {\n\t\t-webkit-transform: rotate(360deg);\n\t}\n}\n\n@keyframes spin {\n\t0% {\n\t\ttransform: rotate(0deg);\n\t}\n\t100% {\n\t\ttransform: rotate(360deg);\n\t}\n}\n</style>\n","<template>\n  <teleport v-if=\"toastElements.length !== 0\" to=\"body\">\n    <!-- Toast Container -->\n    <div class=\"xone-toast\">\n      <!-- Toast Items -->\n      <div v-for=\"(toast, index) in toastElements\" :key=\"`toast-${index}`\" :class=\"toast.class\">\n        {{ toast.message }}\n      </div>\n    </div>\n  </teleport>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport { setShowToastCallback } from \"../../composables/XoneUI\";\n\nexport default {\n  setup() {\n    let toastElements = ref([]);\n    const duration = 3000;\n\n    // showToast CallBack function\n    setShowToastCallback((message) => {\n      let obj = toastElements.value.find((e) => e.class === \"hide\");\n      if (!obj) {\n        toastElements.value.push({});\n        obj = toastElements.value[toastElements.value.length - 1];\n      }\n      obj.message = message;\n      obj.class = \"showanimation\";\n      setTimeout(() => {\n        obj.class = \"hideanimation\";\n\n        setTimeout(() => {\n          obj.class = \"hide\";\n          if (toastElements.value.filter((e) => e.class === \"showanimation\" || e.class === \"hideanimation\").length === 0) {\n            toastElements.value = []; // Clear items\n          }\n        }, 500);\n      }, duration + 500);\n    });\n\n    return { toastElements };\n  },\n};\n</script>\n\n<style scoped>\n.xone-toast {\n  position: absolute;\n  bottom: 8px;\n  padding-bottom: 40px;\n  display: flex;\n  flex-direction: column-reverse;\n  overflow: hidden;\n  pointer-events: none;\n  width: 100vw;\n  z-index: 999;\n}\n\n.xone-toast div {\n  align-self: center;\n  text-align: justify;\n  padding: 10px 20px;\n  margin-bottom: 5px;\n  background-color: whitesmoke;\n  color: black;\n  border-radius: 50px;\n  box-shadow: 1.5px 1.5px 1px gray;\n  pointer-events: none;\n  border: 1px solid rgba(0, 0, 0, 0.12);\n  margin: 10px;\n  box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.2), 0 4px 5px rgba(0, 0, 0, 0.14), 0 1px 10px rgba(0, 0, 0, 0.12);\n}\n\n.showanimation {\n  animation: slideUp 0.5s;\n  opacity: 1;\n}\n\n.hideanimation {\n  animation: slideDown 0.5s;\n  opacity: 0;\n}\n\n.hide {\n  opacity: 0;\n}\n\n@keyframes slideUp {\n  0% {\n    opacity: 0;\n    transform: translate(0, 300px) scale(0.5);\n  }\n  75% {\n    opacity: 1;\n    transform: translate(0, -5px) scale(1.1, 1);\n  }\n  100% {\n    transform: translate(0, 0) scale(1);\n  }\n}\n\n@keyframes slideDown {\n  0% {\n    transform: translate(0, 0);\n    opacity: 1.5;\n  }\n  100% {\n    transform: translate(0, 300px);\n    opacity: 0;\n  }\n}\n\n@keyframes size {\n  0% {\n    transform: scale(0.5);\n  }\n  75% {\n    transform: scale(1.05);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n\n@-webkit-keyframes slideUp {\n  0% {\n    opacity: 0;\n    transform: translate(0, 300px) scale(0.5);\n  }\n  75% {\n    opacity: 1;\n    transform: translate(0, -5px) scale(1.1, 1);\n  }\n  100% {\n    transform: translate(0, 0) scale(1);\n  }\n}\n\n@-webkit-keyframes slideDown {\n  0% {\n    transform: translate(0, 0);\n    opacity: 1.5;\n  }\n  100% {\n    transform: translate(0, 300px);\n    opacity: 0;\n  }\n}\n\n@-webkit-keyframes size {\n  0% {\n    transform: scale(0.5);\n  }\n  75% {\n    transform: scale(1.05);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n</style>\n","import { render } from \"./Toast.vue?vue&type=template&id=0e840586&scoped=true\"\nimport script from \"./Toast.vue?vue&type=script&lang=js\"\nexport * from \"./Toast.vue?vue&type=script&lang=js\"\n\nimport \"./Toast.vue?vue&type=style&index=0&id=0e840586&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/amiyares/Projects/XOne/XOneWebVue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0e840586\"]])\n\nexport default __exports__","<template>\n\t<!-- SnackBar container -->\n\t<teleport v-if=\"snackBarElements.length !== 0\" to=\"body\">\n\t\t<div class=\"xone-snackbar\">\n\t\t\t<!-- SnackBar items -->\n\t\t\t<div\n\t\t\t\tv-for=\"(snackBar, index) in snackBarElements\"\n\t\t\t\t:key=\"`snackBar-${index}`\"\n\t\t\t\t:class=\"snackBar.class\"\n\t\t\t\t:style=\"{\n\t\t\t\t\tbackgroundColor: snackBar.color,\n\t\t\t\t\tcolor: snackBar.textColor,\n\t\t\t\t\twidth: snackBar.width,\n\t\t\t\t\theight: snackBar.height,\n\t\t\t\t}\"\n\t\t\t>\n\t\t\t\t<!-- Text -->\n\t\t\t\t<p class=\"xone-snackbar-text\">{{ snackBar.text }}</p>\n\t\t\t\t<!-- Action -->\n\t\t\t\t<p class=\"xone-snackbar-action\" :style=\"{ color: snackBar.actionTextColor }\" @click=\"onSnackBarActionPressed(snackBar)\">\n\t\t\t\t\t{{ snackBar.actionText }}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\t</teleport>\n</template>\n\n<script>\nimport { inject, ref, Ref, ComputedRef } from \"vue\";\nimport { setShowSnackbarCallback, SnackBarParams } from \"../../composables/XoneUI\";\n\nexport default {\n\tsetup() {\n\t\tlet snackBarElements = ref([]);\n\n\t\t// showSnackBar CallBack function\n\t\tsetShowSnackbarCallback((/** @type {SnackBarParams} */ params) => {\n\t\t\tconst {\n\t\t\t\tcolor = \"gray\",\n\t\t\t\tduration = \"short\",\n\t\t\t\twidth = \"100%\",\n\t\t\t\theight = \"auto\",\n\t\t\t\ttext = \"\",\n\t\t\t\ttextColor = \"white\",\n\t\t\t\tactionText = \"Ok\",\n\t\t\t\tactionTextColor = \"white\",\n\t\t\t\tactionMethod = () => {},\n\t\t\t} = typeof params === \"string\" ? (params = { text: params }) : params;\n\n\t\t\tlet obj = snackBarElements.value.find((e) => e.class === \"hide\");\n\t\t\tif (!obj) {\n\t\t\t\tsnackBarElements.value.push({});\n\t\t\t\tobj = snackBarElements.value[snackBarElements.value.length - 1];\n\t\t\t}\n\t\t\tobj.color = color;\n\t\t\tobj.width = width?.replace(\"p\", \"px\");\n\t\t\tobj.height = height;\n\t\t\tobj.text = text;\n\t\t\tobj.textColor = textColor;\n\t\t\tobj.actionText = actionText;\n\t\t\tobj.actionTextColor = actionTextColor;\n\t\t\tobj.actionMethod = actionMethod;\n\t\t\tobj.class = \"showanimation\";\n\t\t\tif (duration === \"long\") setTimeout(() => hideSnackBar(obj), 6500);\n\t\t\tif (duration !== \"indeterminate\" && duration !== \"indefinite\") setTimeout(() => hideSnackBar(obj), 3500);\n\t\t});\n\n\t\t// Hide SnackBar\n\t\tconst hideSnackBar = (obj) => {\n\t\t\tif (!obj || obj?.class === \"hideanimation\" || obj?.class === \"hide\") return;\n\t\t\tobj.class = \"hideanimation\";\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tobj.class = \"hide\";\n\t\t\t\tif (snackBarElements.value.filter((e) => e.class === \"showanimation\" || e.class === \"hideanimation\").length === 0) {\n\t\t\t\t\tsnackBarElements.value = []; // clear items\n\t\t\t\t}\n\t\t\t}, 500);\n\t\t};\n\n\t\t// SnackBar Action\n\t\tconst onSnackBarActionPressed = (obj) => {\n\t\t\tif (obj && obj.class !== \"hide\") hideSnackBar(obj);\n\t\t\tobj?.actionMethod && obj.actionMethod();\n\t\t};\n\n\t\t/**\n\t\t * Window Size\n\t\t * @type {{containerWidth: Ref<number>|ComputedRef<number>}}\n\t\t */\n\t\tconst { containerWidth } = inject(\"containerSize\");\n\n\t\treturn {\n\t\t\tsnackBarElements,\n\t\t\tonSnackBarActionPressed,\n\t\t\tcontainerWidth,\n\t\t};\n\t},\n};\n</script>\n\n<style scoped>\n.xone-snackbar {\n\tposition: absolute;\n\tdisplay: flex;\n\tflex-direction: column-reverse;\n\toverflow: hidden;\n\tbottom: 0px;\n\tflex-shrink: 1;\n\tmin-height: 100px;\n\twidth: 100vw;\n\tz-index: 999;\n}\n\n.xone-snackbar div {\n\tmin-height: 75px;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\talign-self: center;\n\tcolor: white;\n\tborder-radius: 5px;\n\ttext-align: center;\n\tjustify-self: center;\n\tborder: 1px solid lightgray;\n\tborder-bottom: none;\n}\n\n.xone-snackbar div .xone-snackbar-text {\n\tflex-grow: 1;\n\tpadding: 5px;\n\tfont-weight: bold;\n}\n\n.xone-snackbar div .xone-snackbar-action {\n\tpadding: 5px 10px;\n\tfont-weight: bold;\n\tmargin-right: 30px;\n}\n\n.xone-snackbar div .xone-snackbar-action:hover {\n\tcursor: pointer;\n}\n\n.showanimation {\n\tanimation: slideUp 0.5s;\n\topacity: 1;\n}\n\n.hideanimation {\n\tanimation: slideDown 0.5s;\n\topacity: 0;\n}\n\n.hide {\n\topacity: 0;\n}\n\n@keyframes slideUp {\n\tfrom {\n\t\topacity: 0;\n\t\ttransform: translate(0, 300px);\n\t}\n\tto {\n\t\topacity: 1;\n\t\ttransform: translate(0, 0);\n\t}\n}\n\n@keyframes slideDown {\n\tfrom {\n\t\ttransform: translate(0, 0);\n\t\topacity: 1;\n\t}\n\tto {\n\t\ttransform: translate(0, 300px);\n\t\topacity: 0;\n\t}\n}\n\n@-webkit-keyframes slideUp {\n\tfrom {\n\t\topacity: 0;\n\t\ttransform: translate(0, 300px);\n\t}\n\tto {\n\t\topacity: 1;\n\t\ttransform: translate(0, 0);\n\t}\n}\n\n@-webkit-keyframes slideDown {\n\tfrom {\n\t\ttransform: translate(0, 0);\n\t\topacity: 1;\n\t}\n\tto {\n\t\ttransform: translate(0, 300px);\n\t\topacity: 0;\n\t}\n}\n</style>\n","import { render } from \"./SnackBar.vue?vue&type=template&id=620f34b4&scoped=true\"\nimport script from \"./SnackBar.vue?vue&type=script&lang=js\"\nexport * from \"./SnackBar.vue?vue&type=script&lang=js\"\n\nimport \"./SnackBar.vue?vue&type=style&index=0&id=620f34b4&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/amiyares/Projects/XOne/XOneWebVue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-620f34b4\"]])\n\nexport default __exports__","<template>\n\t<teleport v-if=\"isLoaderVisible\" to=\"body\">\n\t\t<div class=\"xone-loader-transition\">\n\t\t\t<div></div>\n\t\t</div>\n\t</teleport>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport { setHideLoaderCallback, setShowLoaderCallback } from \"../../composables/XoneUI\";\nexport default {\n\tsetup() {\n\t\tconst isLoaderVisible = ref(false);\n\n\t\tsetShowLoaderCallback(async () => (isLoaderVisible.value = true));\n\t\tsetHideLoaderCallback(async () => (isLoaderVisible.value = false));\n\n\t\treturn { isLoaderVisible };\n\t},\n};\n</script>\n\n<style scoped>\n.xone-loader-transition {\n\tposition: absolute;\n\ttop: 0;\n\tbackground-color: rgba(0, 0, 0, 0.3);\n\twidth: 100%;\n\theight: 100vh;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tanimation: fadeIn 0.3s;\n\tz-index: 99999;\n}\n\n.xone-loader-transition div:first-child {\n\tborder-radius: 50%;\n\tborder: 8px solid white;\n\tborder-left: 8px solid transparent;\n\twidth: 8vh;\n\theight: 8vh;\n\t-webkit-animation: spin 0.7s linear infinite;\n\tanimation: spin 0.7s linear infinite;\n}\n\n@keyframes fadeIn {\n\tfrom {\n\t\tz-index: 999999;\n\t\topacity: 0.2;\n\t}\n\tto {\n\t\tz-index: 999999;\n\t\topacity: 0.6;\n\t}\n}\n\n@-webkit-keyframes fadeIn {\n\tfrom {\n\t\tz-index: 999999;\n\t\topacity: 0.2;\n\t}\n\tto {\n\t\tz-index: 999999;\n\t\topacity: 0.6;\n\t}\n}\n</style>\n","import { render } from \"./Loader.vue?vue&type=template&id=2873404c&scoped=true\"\nimport script from \"./Loader.vue?vue&type=script&lang=js\"\nexport * from \"./Loader.vue?vue&type=script&lang=js\"\n\nimport \"./Loader.vue?vue&type=style&index=0&id=2873404c&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/amiyares/Projects/XOne/XOneWebVue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2873404c\"]])\n\nexport default __exports__","<template>\n\t<teleport v-if=\"state.visible\" to=\"body\">\n\t\t<div class=\"xone-msgbox\">\n\t\t\t<!-- Standard Msgbox -->\n\t\t\t<div class=\"xone-msgbox-box\" v-if=\"!state.isCustomMsgbox\">\n\t\t\t\t<div class=\"xone-msgbox-title\">{{ state.title }}</div>\n\t\t\t\t<div class=\"xone-msgbox-text\">{{ state.msg }}</div>\n\t\t\t\t<div class=\"xone-msgbox-options\">\n\t\t\t\t\t<button ref=\"btnOkElement\" @click=\"onClick(true)\">{{ state.btn1 }}</button>\n\t\t\t\t\t<button v-if=\"state.btn2 !== ''\" @click=\"onClick(false)\">\n\t\t\t\t\t\t{{ state.btn2 }}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<!-- Custom Msgbox -->\n\t\t\t<div class=\"xone-custom-msgbox\" v-if=\"msgboxBreadcrumb\">\n\t\t\t\t<Coll :breadcrumb=\"msgboxBreadcrumb\" :objectInfo=\"objectInfo\"></Coll>\n\t\t\t</div>\n\t\t</div>\n\t</teleport>\n</template>\n\n<script>\nimport { computed, inject, reactive, Ref, ComputedRef, ref, nextTick } from \"vue\";\n\nimport Coll from \"../Coll.vue\";\nimport { setCustomMsgBoxCallback, setMsgBoxCallback } from \"../../composables/XoneUI\";\nimport { XoneDataObject } from \"../../composables/appData/core/XoneDataObject\";\nimport AppDataHandler, { Breadcrumb } from \"../../composables/AppDataHandler\";\n\nexport default {\n\tcomponents: {\n\t\tColl,\n\t},\n\tsetup() {\n\t\tconst state = reactive({\n\t\t\tisCustomMsgbox: false,\n\t\t\ttitle: \"\",\n\t\t\tmsg: \"\",\n\t\t\tflags: 0,\n\t\t\tbtn1: \"\",\n\t\t\tbtn2: \"\",\n\t\t\tresponse: null,\n\t\t\tvisible: false,\n\t\t});\n\n\t\t//\n\t\t// Standard Msgbox\n\n\t\tsetMsgBoxCallback(async (message = \"\", title = \"\", flags = 0) => {\n\t\t\tstate.isCustomMsgbox = false;\n\t\t\tstate.title = title;\n\t\t\tstate.msg = message;\n\t\t\tstate.flags = flags;\n\t\t\tswitch (flags) {\n\t\t\t\tcase 0:\n\t\t\t\t\tstate.btn1 = \"Ok\";\n\t\t\t\t\tstate.btn2 = \"\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tstate.btn1 = \"Sí\";\n\t\t\t\t\tstate.btn2 = \"No\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tstate.btn1 = \"Ok\";\n\t\t\t\t\tstate.btn2 = \"Cancel\";\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tstate.response = null;\n\t\t\tstate.visible = true;\n\t\t\tawait nextTick();\n\t\t\tbtnOkElement.value.focus();\n\t\t\twhile (!state.response) await new Promise((resolve) => setTimeout(() => resolve(), 100));\n\n\t\t\tstate.visible = false;\n\n\t\t\treturn state.response;\n\t\t});\n\n\t\tconst onClick = (isAccepted) => {\n\t\t\tswitch (state.flags) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn (state.response = 10);\n\t\t\t\tcase 1:\n\t\t\t\t\treturn (state.response = isAccepted ? 1 : 2);\n\t\t\t\tcase 4:\n\t\t\t\t\treturn (state.response = isAccepted ? 6 : 7);\n\t\t\t\tdefault:\n\t\t\t\t\treturn (state.response = 0);\n\t\t\t}\n\t\t};\n\n\t\t//\n\t\t// Custom MsgBox\n\n\t\t/**\n\t\t * XOne Web Layout\n\t\t * @type {ComputedRef<Breadcrumb>}\n\t\t */\n\t\tconst msgboxBreadcrumb = computed(() => {\n\t\t\tconst layout = AppDataHandler.getBreadcrumbs().filter((e) => e.isMsgbox);\n\t\t\treturn layout.length !== 0 ? layout[0] : null;\n\t\t});\n\n\t\tconst objectInfo = {\n\t\t\tisContents: false,\n\t\t\tisMsgBox: true,\n\t\t\tonMsgBoxOptionSelected: (res) => {\n\t\t\t\tAppDataHandler.removeBreadcrumb(msgboxBreadcrumb.value.id);\n\t\t\t\treturn (state.response = !isNaN(Number(res)) ? Number(res) : (state.response = res));\n\t\t\t},\n\t\t};\n\n\t\tsetCustomMsgBoxCallback(async (dataObject) => {\n\t\t\tstate.response = null;\n\n\t\t\tif (!(dataObject instanceof XoneDataObject)) return;\n\n\t\t\tAppDataHandler.pushXoneDataObject(dataObject, \"Msgbox\", false, true);\n\n\t\t\tstate.isCustomMsgbox = true;\n\t\t\tstate.visible = true;\n\n\t\t\twhile (!state.response) await new Promise((resolve) => setTimeout(() => resolve(), 100));\n\n\t\t\tstate.visible = false;\n\n\t\t\treturn state.response;\n\t\t});\n\n\t\t/**\n\t\t * Window Size\n\t\t * @type {{containerWidth: Ref<number>|ComputedRef<number>, containerHeight: Ref<number>|ComputedRef<number>}}\n\t\t */\n\t\tconst { containerWidth, containerHeight } = inject(\"containerSize\");\n\n\t\t/** @type {Ref<HTMLButtonElement>} */\n\t\tconst btnOkElement = ref();\n\n\t\treturn {\n\t\t\tstate,\n\t\t\tonClick,\n\t\t\tmsgboxBreadcrumb,\n\t\t\tcontainerWidth,\n\t\t\tcontainerHeight,\n\t\t\tobjectInfo,\n\t\t\tbtnOkElement,\n\t\t};\n\t},\n};\n</script>\n\n<style scoped>\n.xone-msgbox {\n\tposition: absolute;\n\tbackground-color: rgba(0, 0, 0, 0.5);\n\ttop: 0;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\twidth: 100%;\n\theight: 100vh;\n\tpointer-events: all;\n\tanimation: fadeIn 0.3s;\n\tz-index: 999;\n}\n\n.xone-msgbox-box {\n\tmax-width: 95vw;\n\tmax-height: 95vh;\n\tpadding: 20px;\n\tmargin: 10px;\n\tdisplay: flex;\n\tflex-direction: column;\n\tbackground-color: white;\n\tborder-radius: 5px;\n\tborder: 1px rgba(0, 0, 0, 0.14) solid;\n\tbox-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.2), 0 4px 5px rgba(0, 0, 0, 0.14), 0 1px 10px rgba(0, 0, 0, 0.12);\n\tanimation: zoomIn 0.3s;\n\toverflow-x: hidden;\n\toverflow-y: auto;\n}\n\n.xone-msgbox-title {\n\tmargin-bottom: 30px;\n\twidth: 100%;\n\tfont-size: 21px;\n\ttext-align: justify;\n}\n\n.xone-msgbox-text {\n\twidth: 100%;\n\tfont-size: 18px;\n\ttext-align: justify;\n}\n\n.xone-msgbox-options {\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: flex-end;\n}\n\n.xone-msgbox-options button {\n\tmargin-top: 30px;\n\tmargin-left: 10px;\n\tpadding: 5px 10px;\n\tborder: none;\n\tcolor: #3273dc;\n\tborder: 1px #3273dc solid;\n\tborder-radius: 5px;\n\tbackground-color: transparent;\n\tfont-size: 16px;\n}\n\n.xone-msgbox-options button:hover {\n\tcursor: pointer;\n}\n\n.xone-custom-msgbox {\n\tdisplay: flex;\n\tflex-direction: column;\n\tanimation: fadeIn 0.5s ease, zoomIn 0.3s ease;\n}\n</style>\n","import { render } from \"./MsgBox.vue?vue&type=template&id=2b0d8532&scoped=true\"\nimport script from \"./MsgBox.vue?vue&type=script&lang=js\"\nexport * from \"./MsgBox.vue?vue&type=script&lang=js\"\n\nimport \"./MsgBox.vue?vue&type=style&index=0&id=2b0d8532&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/amiyares/Projects/XOne/XOneWebVue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2b0d8532\"]])\n\nexport default __exports__","<template>\n\t<teleport v-if=\"isCameraVisible\" to=\"body\">\n\t\t<div class=\"xone-camera\">\n\t\t\t<div\n\t\t\t\tclass=\"xone-camera-container\"\n\t\t\t\t:style=\"{\n\t\t\t\t\twidth: `${size - 50}px`,\n\t\t\t\t}\"\n\t\t\t>\n\t\t\t\t<!-- Cancel button -->\n\t\t\t\t<button class=\"xone-cancel\" @click=\"isCameraVisible = false\">\n\t\t\t\t\tCancel\n\t\t\t\t</button>\n\t\t\t\t<!-- Camera -->\n\t\t\t\t<video\n\t\t\t\t\tv-if=\"!isNotSupported && !isVideoRecorded && !isPhotoTook\"\n\t\t\t\t\t:style=\"{\n\t\t\t\t\t\twidth: `${size - 50}px`,\n\t\t\t\t\t}\"\n\t\t\t\t\tref=\"videoElement\"\n\t\t\t\t\tautoplay\n\t\t\t\t></video>\n\t\t\t\t<!-- Video preview -->\n\t\t\t\t<video\n\t\t\t\t\tv-show=\"isVideoRecorded\"\n\t\t\t\t\tref=\"videoPreviewElement\"\n\t\t\t\t\t:style=\"{\n\t\t\t\t\t\twidth: `${size - 50}px`,\n\t\t\t\t\t}\"\n\t\t\t\t\tcontrols\n\t\t\t\t></video>\n\t\t\t\t<!-- Photo preview -->\n\t\t\t\t<div\n\t\t\t\t\tv-show=\"isPhotoTook\"\n\t\t\t\t\tref=\"photoPreviewElement\"\n\t\t\t\t\t:style=\"{\n\t\t\t\t\t\twidth: `${size - 50}px`,\n\t\t\t\t\t}\"\n\t\t\t\t></div>\n\t\t\t\t<!-- Not supported message -->\n\t\t\t\t<div style=\"padding: 50px\" v-if=\"isNotSupported\">\n\t\t\t\t\tCAMERA UNSUPPORTED IN YOUR BROWSER\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<div v-if=\"!isNotSupported && !isVideoRecorded && !isPhotoTook\">\n\t\t\t\t\t\t<!-- Photo button -->\n\t\t\t\t\t\t<button v-if=\"!isRecording && isTypePhoto\" class=\"xone-photo\" @click=\"takePhoto\">\n\t\t\t\t\t\t\t<div><div></div></div>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<!-- Video button -->\n\t\t\t\t\t\t<button v-if=\"isTypeVideo\" class=\"xone-video\" @click=\"recordVideo\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t:style=\"{\n\t\t\t\t\t\t\t\t\t\tborderRadius: isRecording ? '5px' : '100%',\n\t\t\t\t\t\t\t\t\t}\"\n\t\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div v-if=\"isVideoRecorded || isPhotoTook\">PREVIEW</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</teleport>\n</template>\n<script>\nimport { computed, inject, ref, Ref, ComputedRef, watch } from \"vue\";\n\nimport { setStartCameraCallback } from \"../../composables/XoneUI\";\n\nexport default {\n\tsetup() {\n\t\tconst isCameraVisible = ref(false);\n\n\t\t/**\n\t\t * video element\n\t\t * @type {Ref<HTMLElement>}\n\t\t */\n\t\tconst videoElement = ref();\n\n\t\tconst isPhotoTook = ref(false);\n\t\tconst isVideoRecorded = ref(false);\n\n\t\t/**\n\t\t * photo preview element\n\t\t * @type {Ref<HTMLElement>}\n\t\t */\n\t\tconst photoPreviewElement = ref();\n\n\t\t/**\n\t\t * video preview element\n\t\t * @type {Ref<HTMLElement>}\n\t\t */\n\t\tconst videoPreviewElement = ref();\n\n\t\t/**\n\t\t * is not supported\n\t\t * @type {Ref<boolean>}\n\t\t */\n\t\tconst isNotSupported = ref(false);\n\n\t\t/**\n\t\t * stream\n\t\t * @type {MediaStream}\n\t\t */\n\t\tlet stream;\n\n\t\tconst isTypeVideo = ref(false);\n\t\tconst isTypePhoto = ref(false);\n\n\t\tsetStartCameraCallback((type = \"photo\") => {\n\t\t\tisTypeVideo.value = type !== \"photo\";\n\t\t\tisTypePhoto.value = type !== \"video\";\n\n\t\t\tisCameraVisible.value = true;\n\t\t\t// TODO: devolver la captura, habrá que ver cómo lo vamos a implementar para subir el fichero al servidor\n\t\t});\n\n\t\t/**\n\t\t * Show / Hide camera\n\t\t */\n\t\twatch(\n\t\t\t() => isCameraVisible.value,\n\t\t\tasync (newValue) => {\n\t\t\t\t// reset booleans\n\t\t\t\tisNotSupported.value = false;\n\t\t\t\tisPhotoTook.value = false;\n\t\t\t\tisVideoRecorded.value = false;\n\t\t\t\t// Start camera\n\t\t\t\tif (newValue) {\n\t\t\t\t\tif (!navigator.mediaDevices) return (isNotSupported.value = true);\n\n\t\t\t\t\tnavigator.mediaDevices.enumerateDevices().then(console.log); // TODO:  cambiar de recurso para alterar front y back camera de un dispositivo mobil\n\t\t\t\t\tstream = await navigator.mediaDevices.getUserMedia({\n\t\t\t\t\t\taudio: false,\n\t\t\t\t\t\tvideo: true,\n\t\t\t\t\t});\n\t\t\t\t\tvideoElement.value.srcObject = stream;\n\t\t\t\t} else {\n\t\t\t\t\t// Stop camera\n\t\t\t\t\tif (stream) stream.getTracks().forEach((track) => track.stop());\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t/**\n\t\t * Window Size\n\t\t * @type {{containerWidth: Ref<number>|ComputedRef<number>, containerHeight: Ref<number>|ComputedRef<number>}}\n\t\t */\n\t\tconst { containerWidth, containerHeight } = inject(\"containerSize\");\n\n\t\tconst size = computed(() => (containerWidth.value < containerHeight.value ? containerWidth.value : containerHeight.value));\n\n\t\tconst takePhoto = () => {\n\t\t\t/** @type {HTMLVideoElement} */\n\t\t\tconst video = videoElement.value;\n\t\t\t// Image Size\n\t\t\tconst imageWidth = video.offsetWidth; // video.videoWidth\n\t\t\tconst imageHeight = video.offsetHeight; // video.videoHeight\n\t\t\t// Create canvas\n\t\t\tconst canvas = document.createElement(\"canvas\");\n\t\t\tcanvas.attributes.overflow = \"auto\";\n\t\t\tcanvas.width = imageWidth;\n\t\t\tcanvas.height = imageHeight;\n\t\t\t// Get Context\n\t\t\tconst context = canvas.getContext(\"2d\");\n\t\t\tcontext.drawImage(video, 0, 0, canvas.width, canvas.height);\n\t\t\tcontext.canvas.toBlob((blob) => {\n\t\t\t\tblobValue = blob;\n\t\t\t\t// Create image\n\t\t\t\tconst newImg = new Image();\n\t\t\t\tnewImg.src = URL.createObjectURL(blob);\n\t\t\t\tnewImg.width = video.offsetWidth;\n\t\t\t\tnewImg.height = video.offsetHeight;\n\t\t\t\t// Revoke Url\n\t\t\t\t// For Firefox it is necessary to delay revoking the ObjectURL\n\t\t\t\tsetTimeout(() => URL.revokeObjectURL(blob), 250);\n\t\t\t\t// Append preview image\n\t\t\t\tphotoPreviewElement.value.innerHTML = \"\";\n\t\t\t\tphotoPreviewElement.value.appendChild(newImg);\n\t\t\t\t// Video / Photo variables\n\t\t\t\tisVideoRecorded.value = false;\n\t\t\t\tisPhotoTook.value = true;\n\t\t\t\t// // Download file\n\t\t\t\t// const tempLink = document.createElement(\"a\");\n\t\t\t\t// tempLink.style.display = \"none\";\n\t\t\t\t// tempLink.href = newImg.src;\n\t\t\t\t// tempLink.setAttribute(\"download\", \"capture_\" + new Date().getTime());\n\t\t\t\t// if (typeof tempLink.download === \"undefined\") {\n\t\t\t\t//   tempLink.setAttribute(\"target\", \"_blank\");\n\t\t\t\t// }\n\t\t\t\t// document.body.appendChild(tempLink);\n\t\t\t\t// tempLink.click();\n\t\t\t\t// document.body.removeChild(tempLink);\n\t\t\t});\n\t\t};\n\n\t\tconst isRecording = ref(false);\n\n\t\tlet videoTimeout;\n\n\t\t// media recorder\n\t\tlet mediaRecorder;\n\n\t\t/**\n\t\t * video chunks\n\t\t * @type {Array}\n\t\t */\n\t\tlet chunks;\n\n\t\t/**\n\t\t * blob  (video)\n\t\t * @type {Blob}\n\t\t */\n\t\tlet blobValue;\n\n\t\tconst recordVideo = () => {\n\t\t\ttry {\n\t\t\t\tif (isRecording.value) {\n\t\t\t\t\tif (videoTimeout) clearTimeout(videoTimeout);\n\t\t\t\t\tmediaRecorder.stop();\n\t\t\t\t}\n\t\t\t\tif (!MediaRecorder) {\n\t\t\t\t\tisNotSupported.value = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tchunks = [];\n\n\t\t\t\tconst options = {\n\t\t\t\t\tmimeType: \"video/webm;codecs=h264\",\n\t\t\t\t};\n\n\t\t\t\tif (!MediaRecorder.isTypeSupported(options.mimeType)) options.mimeType = \"video/webm;codecs=vp8\";\n\n\t\t\t\tmediaRecorder = new MediaRecorder(stream, options);\n\n\t\t\t\tmediaRecorder.start();\n\n\t\t\t\tisRecording.value = true;\n\n\t\t\t\tmediaRecorder.ondataavailable = (e) => chunks.push(e.data);\n\n\t\t\t\tmediaRecorder.onstop = () => {\n\t\t\t\t\t//} (e) => {\n\t\t\t\t\tblobValue = new Blob(chunks, { type: \"video/webm\" });\n\n\t\t\t\t\tconst url = URL.createObjectURL(blobValue);\n\n\t\t\t\t\tvideoPreviewElement.value.onload = () => URL.revokeObjectURL(url);\n\n\t\t\t\t\tvideoPreviewElement.value.src = url;\n\t\t\t\t\tvideoPreviewElement.value.autoplay = true;\n\n\t\t\t\t\tisVideoRecorded.value = true;\n\t\t\t\t\tisPhotoTook.value = false;\n\t\t\t\t\tisRecording.value = false;\n\t\t\t\t};\n\n\t\t\t\tvideoTimeout = setTimeout(() => mediaRecorder.stop(), 15000);\n\t\t\t} catch (ex) {\n\t\t\t\tconsole.log(\n\t\t\t\t\t`%c MediaRecorded error: '${ex}' %c Feature allowed in %c Chrome %c browser `,\n\t\t\t\t\t\"color: red\",\n\t\t\t\t\t\"background: #4CABD5; color: white\",\n\t\t\t\t\t\"background: #1F3C6E; color: white\",\n\t\t\t\t\t\"background: #4CABD5; color: white\"\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\t\treturn {\n\t\t\tisCameraVisible,\n\t\t\tvideoElement,\n\t\t\tsize,\n\t\t\tisNotSupported,\n\t\t\ttakePhoto,\n\t\t\tisRecording,\n\t\t\trecordVideo,\n\t\t\tphotoPreviewElement,\n\t\t\tvideoPreviewElement,\n\t\t\tisPhotoTook,\n\t\t\tisVideoRecorded,\n\t\t\tisTypeVideo,\n\t\t\tisTypePhoto,\n\t\t};\n\t},\n};\n</script>\n\n<style scoped>\n.xone-camera {\n\tdisplay: flex;\n\tposition: absolute;\n\ttop: 0;\n\theight: 100vh;\n\twidth: 100vw;\n\tbackground-color: rgba(0, 0, 0, 0.5);\n\tjustify-content: center;\n\talign-items: center;\n}\n\n.xone-camera-container {\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tborder-radius: 5px;\n\toverflow: hidden;\n\tbackground-color: white;\n\tborder: 1px solid black;\n\tanimation: zoomIn 0.3s;\n}\n\n.xone-video,\n.xone-photo {\n\talign-items: center;\n\tmargin: 20px;\n\tbackground-color: transparent;\n\tborder: none;\n\twidth: 60px;\n\theight: 60px;\n\tanimation: fadeIn 0.3s;\n}\n\n.xone-photo > div,\n.xone-video > div {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tborder: none;\n\toverflow: visible;\n\tborder-radius: 100%;\n\tbackground-color: transparent;\n}\n\n.xone-photo > div > div {\n\twidth: 58px;\n\theight: 58px;\n\tborder-radius: 100%;\n\tbackground: white;\n\tborder: 1px solid gray;\n\tbox-shadow: 0 1px 5px rgba(0, 0, 0, 0.2), 0 2px 2px rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.12);\n}\n\n.xone-video > div > div {\n\theight: 58px;\n\twidth: 58px;\n\tbackground: red;\n\tborder: 1px solid gray;\n\ttransition: all 0.3s;\n\tbox-shadow: 0 1px 5px rgba(0, 0, 0, 0.2), 0 2px 2px rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.12);\n}\n\n.xone-cancel {\n\tposition: sticky;\n\tright: 5px;\n\ttop: 5px;\n\talign-self: flex-end;\n\tmargin: 10px 10px 10px 0;\n\tpadding: 5px 10px;\n\tborder: none;\n\tcolor: #3273dc;\n\tborder: 1px #3273dc solid;\n\tborder-radius: 5px;\n\tbackground-color: transparent;\n\tfont-size: 16px;\n}\n\nbutton {\n\toutline: none;\n}\n\nvideo {\n\tanimation: fadeIn 0.3s;\n}\n</style>\n","import { render } from \"./Camera.vue?vue&type=template&id=71a77362&scoped=true\"\nimport script from \"./Camera.vue?vue&type=script&lang=js\"\nexport * from \"./Camera.vue?vue&type=script&lang=js\"\n\nimport \"./Camera.vue?vue&type=style&index=0&id=71a77362&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/amiyares/Projects/XOne/XOneWebVue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-71a77362\"]])\n\nexport default __exports__","<template>\n\t<teleport v-if=\"url\" to=\"body\">\n\t\t<div class=\"xone-url\" @click=\"url = null\">\n\t\t\t<div>\n\t\t\t\t<button>✕</button>\n\t\t\t\t<iframe :src=\"url\" loading=\"lazy\"></iframe>\n\t\t\t</div>\n\t\t</div>\n\t</teleport>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport { setOpenUrlCallback } from \"../../composables/XoneUI\";\nimport Button from \"../propComponents/Button.vue\";\nexport default {\n\tcomponents: { Button },\n\tsetup() {\n\t\tconst url = ref();\n\n\t\tsetOpenUrlCallback((Url) => (url.value = Url));\n\n\t\treturn { url };\n\t},\n};\n</script>\n\n<style scoped>\n.xone-url {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100vw;\n\theight: 100vh;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tbackground-color: rgba(0, 0, 0, 0.3);\n\tanimation: fadeIn 0.3s zoomIn 0.3s;\n\tz-index: 99;\n}\n\n.xone-url > div {\n\twidth: calc(100vw - 100px);\n\theight: calc(100vh - 100px);\n\tbackground-color: white;\n\tposition: relative;\n}\n\niframe {\n\twidth: 100%;\n\theight: 100%;\n\tborder: none;\n}\n\nbutton {\n\twidth: 30px;\n\theight: 30px;\n\tbackground: white;\n\tposition: absolute;\n\tright: 0;\n\ttop: -31px;\n\toutline: none;\n\tborder: none;\n\tborder-radius: 2px;\n\tcursor: pointer;\n}\n</style>\n","<template>\n\t<button\n\t\tref=\"btnElement\"\n\t\t:disabled=\"attributes.locked || isExecutingOnClick || (objectInfo.isContents && !objectInfo.editInRow) || isDisableEdit\"\n\t\t:style=\"{\n\t\t\t// Background\n\t\t\tbackgroundColor: attributes.image ? 'transparent' : attributes.bgColor,\n\t\t\tbackgroundImage: attributes.image && `url(${imgPath})`,\n\t\t\t// Border radius\n\t\t\tborderRadius: attributes.borderCornerRadius,\n\t\t\t// Font\n\t\t\tcolor: isExecutingOnClick ? 'lightgray' : attributes.foreColor,\n\t\t\tfontSize: attributes.fontSize && attributes.fontSize,\n\t\t\t// Align\n\t\t\tjustifyContent: (attributes.align.row && attributes.align.row) || 'center',\n\t\t\talignItems: (attributes.align.column && attributes.align.column) || 'center',\n\t\t\t// Padding\n\t\t\tpadding: (!attributes.labelWidth || attributes.labelWidth.toString() === '0' || attributes.title) && !hasPadding && 0,\n\t\t\t// is Executing or disableEdit? -> set opacity\n\t\t\topacity: isExecutingOnClick || isDisableEdit ? 0.4 : 1,\n\t\t\tcursor: isExecutingOnClick || (objectInfo.isContents && !objectInfo.editInRow) || isDisableEdit ? 'default' : 'pointer',\n\t\t}\"\n\t\t:class=\"{\n\t\t\t'no-border': attributes.image || !attributes.bgColor || attributes.bgColor === '#00000000' || attributes.bgColor === 'transparent',\n\t\t\tnoEditInRow: objectInfo.isContents && !objectInfo.editInRow,\n\t\t\t'keep-aspect-ratio': attributes.keepAspectRatio,\n\t\t}\"\n\t\t@click=\"!noEditInRow && onClick()\"\n\t\t@touchstart=\"onTouchStart\"\n\t\t@touchend=\"onTouchEnd\"\n\t\t@mousedown=\"onTouchStart\"\n\t\t@mouseend=\"onTouchEnd\"\n\t\t@mouseleave=\"onTouchEnd\"\n\t\t@touchleave=\"onTouchEnd\"\n\t\t@focus=\"onFocus\"\n\t>\n\t\t{{ attributes.labelWidth !== \"0\" ? attributes.title : \"\" }}\n\t</button>\n</template>\n\n<script>\nimport { inject, ref, Ref, PropType, watch, watchEffect, ComputedRef, onMounted, computed, nextTick } from \"vue\";\n\nimport { xoneAttributesHandler, PropAttributes } from \"../../composables/XoneAttributesHandler\";\nimport { XoneDataObject } from \"../../composables/appData/core/XoneDataObject\";\nimport { getAppPath, getImagePath } from \"../../composables/helperFunctions/ImageHelper\";\nimport dragAndDrop from \"../../composables/DragAndDrop\";\nimport { XoneControl } from \"../../composables/XoneViewsHandler\";\n\nexport default {\n\tprops: {\n\t\t/**\n\t\t * xoneDataObject\n\t\t * @type {PropType<XoneDataObject>}\n\t\t */\n\t\txoneDataObject: { type: Object, required: true },\n\t\t/**\n\t\t * attributes\n\t\t * @type { PropType<PropAttributes>}\n\t\t */\n\t\tattributes: { type: Object, default: null, required: true },\n\t\tpaddings: { type: Object, required: true },\n\t\tisDisableEdit: { type: Boolean, required: true },\n\t\tcontainerWidth: { type: Number, default: 0 },\n\t\tcontainerHeight: { type: Number, default: 0 },\n\t},\n\tsetup(props) {\n\t\t// const isDesigner = dragAndDrop.getIsDesigner();\n\t\t// on click method is being executed\n\t\tconst isExecutingOnClick = ref(false);\n\n\t\t/**\n\t\t * on click button\n\t\t */\n\t\tconst onClick = async () => {\n\t\t\tif (isExecutingOnClick.value) return;\n\t\t\tisExecutingOnClick.value = true;\n\t\t\tawait xoneAttributesHandler.onClick(props.attributes, props.xoneDataObject, objectInfo);\n\t\t\tisExecutingOnClick.value = false;\n\t\t};\n\n\t\t/**\n\t\t * Contents Info\n\t\t * @type {import('../../composables/AppDataHandler').Objectinfo}\n\t\t */\n\t\tconst objectInfo = inject(\"objectInfo\");\n\n\t\t//\n\t\t// Offset height / width when scaled\n\n\t\t/**\n\t\t * button element\n\t\t * @type {Ref<HTMLElement>}\n\t\t */\n\t\tconst btnElement = ref();\n\n\t\tconst fitSizeToContainer = (isResized = false) => {\n\t\t\tconst doFit = () => {\n\t\t\t\txoneAttributesHandler.fitHeightToContainer(props.attributes, btnElement, isResized);\n\t\t\t\txoneAttributesHandler.fitWidthToContainer(props.attributes, btnElement, isResized);\n\t\t\t};\n\t\t\tsetTimeout(() => doFit(), 100);\n\t\t\tdoFit();\n\t\t};\n\n\t\tnextTick(() => fitSizeToContainer());\n\n\t\t/**\n\t\t * xoneView\n\t\t * @type {XoneView}\n\t\t */\n\t\tconst xoneView = inject(\"xoneView\");\n\n\t\tconst xoneControl = new XoneControl(props.attributes.name, btnElement.value);\n\n\t\tonMounted(() => {\n\t\t\t// Add control to view\n\t\t\txoneView.addControl(xoneControl);\n\t\t});\n\n\t\t/**\n\t\t * Last breadcrumb in stack\n\t\t * @type {ComputedRef<import('../../composables/AppDataHandler').Breadcrumb>}\n\t\t */\n\t\tconst lastBreadcrumb = inject(\"lastBreadcrumb\");\n\n\t\t// Provide breadcrumbId info to child components\n\t\tconst breadcrumbId = inject(\"breadcrumbId\");\n\n\t\twatchEffect(() => {\n\t\t\tif (breadcrumbId === lastBreadcrumb?.value?.id) fitSizeToContainer();\n\t\t});\n\n\t\twatch(\n\t\t\t() => props.containerWidth,\n\t\t\t() => fitSizeToContainer(true)\n\t\t);\n\t\twatch(\n\t\t\t() => props.containerHeight,\n\t\t\t() => fitSizeToContainer(true)\n\t\t);\n\n\t\t// if selected group is current group fit size to container\n\t\t/**\n\t\t * groupId\n\t\t * @type {number}\n\t\t */\n\t\tconst groupId = inject(\"groupId\");\n\n\t\t/**\n\t\t * activeGroup\n\t\t * @type {{activeGroup:Ref<string>}}\n\t\t */\n\t\tconst { activeGroup } = inject(\"groupHandler\");\n\n\t\twatch(\n\t\t\t() => activeGroup.value,\n\t\t\t(newValue) => {\n\t\t\t\tif (groupId !== newValue) return;\n\t\t\t\tfitSizeToContainer();\n\t\t\t}\n\t\t);\n\n\t\tconst imgPath = ref(\n\t\t\tprops.attributes.image?.includes(\"icons\") || props.attributes.image?.includes(\"files\")\n\t\t\t\t? props.attributes.image\n\t\t\t\t: `${getAppPath()}/icons/${props.attributes.image}`\n\t\t);\n\n\t\tonMounted(() => {\n\t\t\twatch(\n\t\t\t\t() => props.attributes.image,\n\t\t\t\tasync () => await resolveImage()\n\t\t\t);\n\t\t\tresolveImage();\n\t\t});\n\n\t\tconst resolveImage = async () => (imgPath.value = await getImagePath(props.attributes.image));\n\n\t\t/**\n\t\t * hasPadding\n\t\t * @type {ComputedRef<boolean>}\n\t\t */\n\t\tconst hasPadding = computed(\n\t\t\t() => props.attributes.paddings.top || props.attributes.paddings.right || props.attributes.paddings.bottom || props.attributes.paddings.left\n\t\t);\n\n\t\t// Change opacity on mouse click / touch\n\t\tlet lastOpacity;\n\t\tconst onTouchStart = () => {\n\t\t\tlastOpacity = btnElement.value.style.opacity;\n\t\t\tbtnElement.value.style.opacity = 0.7;\n\t\t};\n\t\tconst onTouchEnd = () => {\n\t\t\tbtnElement.value.style.opacity = lastOpacity;\n\t\t\tlastOpacity = null;\n\t\t};\n\t\tconst onFocus = () => {\n\t\t\tbtnElement.value.animate(\n\t\t\t\t[\n\t\t\t\t\t// keyframes\n\t\t\t\t\t{ opacity: 0.7 },\n\t\t\t\t\t{ opacity: 300 },\n\t\t\t\t],\n\t\t\t\t{\n\t\t\t\t\t// timing options\n\t\t\t\t\tduration: 1000,\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\treturn {\n\t\t\tbtnElement,\n\t\t\tonClick,\n\t\t\tobjectInfo,\n\t\t\tisExecutingOnClick,\n\t\t\timgPath,\n\t\t\thasPadding,\n\t\t\tonTouchStart,\n\t\t\tonTouchEnd,\n\t\t\tonFocus,\n\t\t};\n\t},\n};\n</script>\n\n<style scoped>\n/* button */\nbutton {\n\tbox-sizing: border-box;\n\t-moz-box-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\tdisplay: flex;\n\tposition: relative;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-repeat: no-repeat;\n\tbackground-position: center;\n\tbackground-size: contain;\n\toverflow: hidden;\n\tcursor: pointer;\n\toutline: none;\n\talign-self: center;\n\tborder: var(--border-width) solid var(--border-color);\n\n\tpadding-top: var(--padding-top);\n\tpadding-right: var(--padding-right);\n\tpadding-bottom: var(--padding-bottom);\n\tpadding-left: var(--padding-left);\n\n\tbox-shadow: 0px 0px var(--elevation) 0 rgba(0, 0, 0, 0.2);\n}\n\n.keep-aspect-ratio {\n\tbackground-size: contain;\n}\n\n.no-border {\n\tborder: 1px solid transparent;\n}\n\n.noEditInRow {\n\tcursor: pointer;\n\tpointer-events: none;\n}\n</style>\n","import { ref, Ref } from \"@vue/reactivity\";\n\nclass DragAndDrop {\n  /**\n   * @type {DragAndDrop}\n   */\n  static _instance;\n\n  /**\n   * @type {Ref<boolean>}\n   */\n  _isDesigner = ref(false);\n\n  /**\n   * @type {Ref<boolean>}\n   */\n  _isDragging = ref(false);\n\n  /**\n   * @type {Ref<HTMLDivElement>}\n   */\n  _selectedControl = ref();\n\n  /**\n   * @type {Ref<HTMLDivElement>}\n   */\n  _dragControl = ref();\n\n  /**\n   * @type {Ref<HTMLDivElement>}\n   */\n  _overControl = ref();\n\n  /**\n   * @type {Ref<Array<HTMLDivElement>>}\n   */\n  _overControls = ref([]);\n\n  /**\n   * @type {number}\n   */\n  _designPadding = 10;\n\n  constructor() {\n    if (DragAndDrop._instance) return DragAndDrop._instance;\n    DragAndDrop._instance = this;\n  }\n\n  /**\n   * @param {MouseEvent} e\n   */\n  mouseMove(e) {\n    if (!this._isDesigner && !this._isDragging) return (this._dragControl.value = null);\n\n    /**\n     * @type {HTMLElement}\n     */\n    let element = e.target;\n    while (element && !element.getAttribute(\"xone-name\")) element = element.parentElement;\n    this._dragControl.value = element;\n  }\n\n  /**\n   * @type {boolean}\n   */\n  setIsDesigner(value) {\n    this._isDesigner.value = value;\n  }\n\n  /**\n   * @type {boolean}\n   */\n  setIsDragging(value) {\n    this._isDragging.value = value;\n    this._dragControl.value = null;\n  }\n\n  /**\n   * @returns {Ref<boolean>}\n   */\n  getIsDesigner() {\n    return this._isDesigner;\n  }\n\n  /**\n   * @returns {Ref<boolean>}\n   */\n  getIsDragging() {\n    return this._isDragging;\n  }\n\n  /**\n   * @returns {number}\n   */\n  getDesignPadding() {\n    return this._designPadding;\n  }\n\n  /**\n   * @type {HTMLDivElement}\n   */\n  setSelectedControl(value) {\n    this._selectedControl.value = value;\n  }\n\n  /**\n   * @type {HTMLDivElement}\n   */\n  setOverControl(value) {\n    if (value) return (this._overControl.value = value);\n    this._overControl.value = this._overControls.value.length !== 0 ? this._overControls.value[this._overControls.value.length - 1] : null;\n  }\n\n  /**\n   * @type {HTMLDivElement}\n   */\n  addOverControl(value) {\n    if (this._overControls.value.indexOf(value) !== -1) return;\n    this.pushOverControl(value);\n  }\n\n  /**\n   * @type {HTMLDivElement}\n   */\n  pushOverControl(value) {\n    this._overControls.value.push(value);\n    this.setOverControl();\n  }\n\n  /**\n   * @type {HTMLDivElement}\n   */\n  removeOverControl(value) {\n    this._overControls.value = this._overControls.value.filter((e) => e !== value);\n    this.setOverControl();\n  }\n\n  /**\n   * @returns {Ref<HTMLDivElement>}\n   */\n  getSelectedControl() {\n    return this._selectedControl;\n  }\n\n  /**\n   * @returns {Ref<HTMLDivElement>}\n   */\n  getDragControl() {\n    return this._dragControl;\n  }\n\n  /**\n   * @returns {Ref<HTMLDivElement>}\n   */\n  getOverControl() {\n    return this._overControl;\n  }\n\n  /**\n   * @returns {Array<HTMLDivElement>}\n   */\n  getOverControls() {\n    return this._overControls.value;\n  }\n\n  /**\n   * @returns {string}\n   */\n  getBorderPropOver() {\n    return \"3px dashed #1F3C6E\";\n  }\n\n  /**\n   * @returns {string}\n   */\n  getBorderContainerOver() {\n    return \"3px solid #4CABD5\";\n  }\n\n  /**\n   * @returns {string}\n   */\n  getBorderSelected() {\n    return \"3px dashed #1F3C6E\";\n  }\n\n  /**\n   * @returns {string}\n   */\n  getBorderOver() {\n    return \"3px dashed #4CABD5\";\n  }\n\n  /**\n   * @param {HTMLElement} element\n   */\n  mouseEnter(element) {\n    this.addOverControl(element);\n  }\n\n  /**\n   * @param {HTMLElement} element\n   */\n  mouseLeave(element) {\n    this.removeOverControl(element);\n  }\n\n  /**\n   * @param{MouseEvent} e\n   */\n  mouseDown(e) {\n    if (!this._isDesigner) return;\n    e.preventDefault();\n    e.stopPropagation();\n    this.setSelectedControl(this._overControls ? this._overControls.value[this._overControls.value.length - 1] : null);\n  }\n}\n\nexport default new DragAndDrop();\n","import { render } from \"./Button.vue?vue&type=template&id=47c93105&scoped=true\"\nimport script from \"./Button.vue?vue&type=script&lang=js\"\nexport * from \"./Button.vue?vue&type=script&lang=js\"\n\nimport \"./Button.vue?vue&type=style&index=0&id=47c93105&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/amiyares/Projects/XOne/XOneWebVue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-47c93105\"]])\n\nexport default __exports__","import { render } from \"./Url.vue?vue&type=template&id=054892a6&scoped=true\"\nimport script from \"./Url.vue?vue&type=script&lang=js\"\nexport * from \"./Url.vue?vue&type=script&lang=js\"\n\nimport \"./Url.vue?vue&type=style&index=0&id=054892a6&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/amiyares/Projects/XOne/XOneWebVue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-054892a6\"]])\n\nexport default __exports__","<template>\n  <teleport v-if=\"!isOnline\" to=\"body\">\n    <!-- Toast Container -->\n    <div class=\"xone-online\">\n      <!-- Toast Items -->\n      <div>Offline</div>\n    </div>\n  </teleport>\n</template>\n\n<script>\nimport { onMounted, onUnmounted, ref } from \"vue\";\n\nexport default {\n  setup() {\n    onMounted(() => {\n      window.addEventListener(\"online\", setOnline);\n      window.addEventListener(\"offline\", setOffline);\n    });\n\n    onUnmounted(() => {\n      window.removeEventListener(\"online\", setOnline);\n      window.removeEventListener(\"offline\", setOffline);\n    });\n\n    const setOnline = () => (isOnline.value = true);\n    const setOffline = () => (isOnline.value = false);\n\n    const isOnline = ref(navigator.onLine);\n\n    return { isOnline };\n  },\n};\n</script>\n\n<style scoped>\n.xone-online {\n  position: absolute;\n  top: 0;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  width: 100%;\n  height: 100vh;\n  pointer-events: none;\n  z-index: 999;\n  opacity: 0.5;\n}\n\n.xone-online > div {\n  margin-top: 10px;\n  padding: 10px 30px;\n  border: 3px white solid;\n  background-color: red;\n  font-size: 1.2rem;\n  color: white;\n  border-radius: 5px;\n  text-align: center;\n}\n</style>\n","import { render } from \"./Offline.vue?vue&type=template&id=375b8507&scoped=true\"\nimport script from \"./Offline.vue?vue&type=script&lang=js\"\nexport * from \"./Offline.vue?vue&type=script&lang=js\"\n\nimport \"./Offline.vue?vue&type=style&index=0&id=375b8507&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/amiyares/Projects/XOne/XOneWebVue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-375b8507\"]])\n\nexport default __exports__","<template>\n  <div\n    v-if=\"isDesigner\"\n    class=\"xone-designer-selected-container\"\n    :style=\"{\n      opacity: opacity,\n      '--image-parent': `url(${appPath}/assets/parent.png)`,\n      '--image-move': `url(${appPath}/assets/move.png)`,\n    }\"\n  >\n    <div\n      v-if=\"isDesigner && location\"\n      style=\"position: absolute; outline: 3px solid white; transition: all 0.3s\"\n      :style=\"{\n        top: location.top + 'px',\n        left: location.left + 'px',\n        width: location.width + 'px',\n        height: location.height + 'px',\n      }\"\n    ></div>\n    <div\n      class=\"xone-designer-selected\"\n      v-if=\"isDesigner && location\"\n      :style=\"{\n        top: location.top + 'px',\n        left: location.left + 'px',\n        width: location.width + 'px',\n        height: location.height + 'px',\n        '--border': border,\n      }\"\n    >\n      <div\n        v-if=\"!isGroup\"\n        class=\"xone-designer-selected-resizer\"\n        @mouseleave=\"onMouseLeave()\"\n      >\n        <div></div>\n      </div>\n      <div\n        class=\"xone-designer-selected-options\"\n        :style=\"{\n          top: location.top > 25 ? '-25px' : '0px',\n          //top: '0px',\n        }\"\n      >\n        <div class=\"xone-designer-selected-options-name\">{{ controlName }}</div>\n        <div\n          v-if=\"!isGroup\"\n          class=\"xone-designer-selected-option-parent\"\n          @click=\"onParentButtonClick\"\n        ></div>\n        <div\n          v-if=\"!isGroup\"\n          style=\"z-index: 9999999\"\n          @mousedown=\"onDragStart\"\n          @mouseup=\"onDragEnd\"\n          @touchstart=\"onDragStart\"\n          @touchend=\"onDragEnd\"\n          class=\"xone-designer-selected-option-move\"\n        ></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, watch } from \"vue\";\nimport dragAndDrop from \"../../composables/DragAndDrop\";\nimport { getAppPath } from \"../../composables/helperFunctions/ImageHelper\";\n\nexport default {\n  setup() {\n    const selectedControl = dragAndDrop.getSelectedControl();\n    const controlName = ref(\"\");\n    const isGroup = ref(false);\n\n    const opacity = ref(1);\n\n    const location = ref();\n\n    watch(\n      () => selectedControl.value,\n      (element) => {\n        try {\n          if (!element) return (location.value = null);\n          controlName.value = element.getAttribute(\"xone-name\");\n          isGroup.value = element.getAttribute(\"group\") === \"true\";\n          location.value = {\n            top: element.getBoundingClientRect().top,\n            left: element.getBoundingClientRect().left,\n            width: element.getBoundingClientRect().width,\n            height: element.getBoundingClientRect().height,\n          };\n        } catch {\n          location.value = null;\n        }\n      }\n    );\n\n    const onParentButtonClick = () => {\n      const element = selectedControl.value;\n      /**\n       * @type {HTMLDivElement}\n       */\n      const parentElement = element?.parentNode?.parentNode;\n      if (!parentElement || !parentElement.classList.contains(\"xone-frame\"))\n        return;\n      dragAndDrop.setSelectedControl(parentElement);\n    };\n\n    const onDragStart = (/** @type{MouseEvent} **/ e) => {\n      opacity.value = 0.3;\n      dragAndDrop.setIsDragging(true);\n      document.body.style.cursor = \"move\";\n      document.body.addEventListener(\"mouseup\", onDragEnd);\n      document.body.addEventListener(\"touchend\", onDragEnd);\n      // e.dataTransfer.dropEffect = \"move\";\n      // e.dataTransfer.setDragImage(selectedControl?.value, 0, 0);\n    };\n\n    const onDragEnd = (/** @type{MouseEvent} **/ e) => {\n      opacity.value = 1;\n      // e.dataTransfer.clearData();\n      dragAndDrop.setIsDragging(false);\n      document.body.style.cursor = \"default\";\n      document.body.removeEventListener(\"mouseup\", onDragEnd);\n      document.body.removeEventListener(\"touchend\", onDragEnd);\n    };\n\n    return {\n      controlName,\n      location,\n      isDesigner: dragAndDrop.getIsDesigner(),\n      border: dragAndDrop.getBorderSelected(),\n      onMouseLeave: () => {\n        // dragAndDrop.setSelectedControl(null);\n        // dragAndDrop.setSelectedControlName(null);\n      },\n      onParentButtonClick,\n      onDragStart,\n      onDragEnd,\n      isGroup,\n      opacity,\n      appPath: getAppPath(),\n    };\n  },\n};\n</script>\n\n<style scoped>\n.xone-designer-selected-container {\n  top: 0;\n  left: 0;\n  position: absolute;\n  height: 100vh;\n  width: 100vw;\n  pointer-events: none;\n}\n\n.xone-designer-selected {\n  transition: all 0.3s;\n  box-sizing: border-box;\n  position: absolute;\n  width: 100px;\n  height: 20px;\n  background-color: transparent;\n  outline: var(--border);\n  max-height: 100vh;\n  z-index: 99999;\n}\n\n.xone-designer-selected-resizer {\n  display: flex;\n  position: absolute;\n  right: -12.5px;\n  bottom: -12.5px;\n  justify-content: center;\n  align-items: center;\n  width: 25px;\n  height: 25px;\n  pointer-events: all;\n  cursor: nw-resize;\n}\n.xone-designer-selected-resizer > div {\n  background: black;\n  border-radius: 100%;\n  width: 10px;\n  height: 10px;\n  border: 1px solid white;\n}\n\n.xone-designer-selected-options {\n  position: absolute;\n  display: flex;\n  right: 1px;\n  pointer-events: all;\n}\n\n.xone-designer-selected-options div {\n  height: 20px;\n  width: 20px;\n  border: none;\n  color: white;\n  margin-left: 2px;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: 16px 16px;\n  background-color: whitesmoke;\n  border-radius: 5px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.xone-designer-selected-options div:hover {\n  outline: 1px solid #4cabd5;\n}\n\n.xone-designer-selected-options-name {\n  width: auto !important;\n  color: #1f3c6e !important;\n  padding: 0 5px !important;\n  background-color: white !important;\n}\n.xone-designer-selected-options-name:hover {\n  outline: none !important;\n}\n\n.xone-designer-selected-option-parent {\n  background-image: var(--image-parent);\n  cursor: pointer;\n}\n\n.xone-designer-selected-option-move {\n  background-image: var(--image-move);\n  cursor: move;\n}\n</style>","import { render } from \"./SelectedControl.vue?vue&type=template&id=19398d98&scoped=true\"\nimport script from \"./SelectedControl.vue?vue&type=script&lang=js\"\nexport * from \"./SelectedControl.vue?vue&type=script&lang=js\"\n\nimport \"./SelectedControl.vue?vue&type=style&index=0&id=19398d98&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/amiyares/Projects/XOne/XOneWebVue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-19398d98\"]])\n\nexport default __exports__","<template>\n  <div v-if=\"isDesigner\" class=\"xone-designer-over-container\">\n    <div\n      class=\"xone-designer-over\"\n      @click=\"onMouseClick()\"\n      @mouseleave=\"onMouseLeave()\"\n      v-if=\"isDesigner && location\"\n      :style=\"{\n        top: location.top,\n        left: location.left,\n        width: location.width,\n        height: location.height,\n        '--border': border,\n      }\"\n    ></div>\n  </div>\n</template>\n\n<script>\nimport { ref, watch } from \"vue\";\nimport dragAndDrop from \"../../composables/DragAndDrop\";\n\nexport default {\n  setup() {\n    const overControl = dragAndDrop.getOverControl();\n    const selectedControl = dragAndDrop.getSelectedControl();\n    const location = ref();\n\n    watch(\n      () => overControl.value,\n      (element) => {\n        try {\n          if (element !== overControl.value) return;\n\n          if (!element || element === selectedControl.vue)\n            return (location.value = null);\n          location.value = {\n            top: element.getBoundingClientRect().top + \"px\",\n            left: element.getBoundingClientRect().left + \"px\",\n            width: element.getBoundingClientRect().width + \"px\",\n            height: element.getBoundingClientRect().height + \"px\",\n          };\n        } catch {\n          location.value = null;\n        }\n      }\n    );\n    return {\n      location,\n      isDesigner: dragAndDrop.getIsDesigner(),\n      border: dragAndDrop.getBorderOver(),\n      onMouseClick: () => {\n        dragAndDrop.setSelectedControl(overControl.value);\n      },\n      onMouseLeave: () => {\n        dragAndDrop.setOverControl(null);\n      },\n    };\n  },\n};\n</script>\n\n<style scoped>\n.xone-designer-over-container {\n  top: 0;\n  left: 0;\n  position: absolute;\n  height: 100vh;\n  width: 100vw;\n  pointer-events: none;\n}\n.xone-designer-over {\n  box-sizing: border-box;\n  position: absolute;\n  width: 100px;\n  height: 30px;\n  background-color: transparent;\n  outline: var(--border);\n  z-index: 9999;\n  max-height: 100vh;\n  pointer-events: none;\n}\n\nbutton {\n  pointer-events: none;\n  cursor: pointer;\n}\n</style>","import { render } from \"./OverControl.vue?vue&type=template&id=725183bb&scoped=true\"\nimport script from \"./OverControl.vue?vue&type=script&lang=js\"\nexport * from \"./OverControl.vue?vue&type=script&lang=js\"\n\nimport \"./OverControl.vue?vue&type=style&index=0&id=725183bb&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/amiyares/Projects/XOne/XOneWebVue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-725183bb\"]])\n\nexport default __exports__","<template>\n  <div\n    v-if=\"isDesigner\"\n    class=\"xone-designer-drag-container\"\n    :style=\"{\n      '--image-back': `url(${appPath}/assets/arrow-up.png)`,\n      '--image-right': `url(${appPath}/assets/arrow-right.png)`,\n      '--image-down': `url(${appPath}/assets/arrow-down.png)`,\n      '--image-left': `url(${appPath}/assets/arrow-left.png)`,\n    }\"\n  >\n    <!-- Containers name's -->\n    <div class=\"xone-designer-drag\" v-if=\"isDesigner && isDragging\">\n      <!-- Selected container -->\n      <template v-if=\"containerSelected\">\n        <div\n          :style=\"{\n            position: 'absolute',\n            zIndex: 9999999,\n            left: containersInfo.find((e) => e.name === containerSelected).left + 'px',\n            top: containersInfo.find((e) => e.name === containerSelected).top + 'px',\n            width: containersInfo.find((e) => e.name === containerSelected).width + 'px',\n            height: containersInfo.find((e) => e.name === containerSelected).height + 'px',\n            outline: '3px solid blue',\n          }\"\n        ></div>\n      </template>\n      <!-- Control over -->\n      <div\n        v-if=\"location\"\n        :style=\"{\n          background: 'rgba(211,211,211, .3)',\n          position: 'absolute',\n          outline: border,\n          outlineOffset: '-5px',\n          top: location.top + 'px',\n          left: location.left + 'px',\n          width: location.width + 'px',\n          height: location.height + 'px',\n        }\"\n      ></div>\n\n      <!-- Move up -->\n      <div\n        v-if=\"location\"\n        class=\"xone-designer-drag-move move-up\"\n        @mouseenter=\"moveCursorTo('up')\"\n        @mouseleave=\"moveCursorTo('')\"\n        :style=\"{\n          top: location.top + 'px',\n          left: location.left + selectorSize.x + 'px',\n          width: location.width - selectorSize.x * 2 + 'px',\n          height: selectorSize.y + 'px',\n        }\"\n      ></div>\n      <!-- Move bottom -->\n      <div\n        v-if=\"location\"\n        class=\"xone-designer-drag-move move-down\"\n        @mouseenter=\"moveCursorTo('bottom')\"\n        @mouseleave=\"moveCursorTo('')\"\n        :style=\"{\n          position: 'absolute',\n          top: location.top + location.height - selectorSize.y + 'px',\n          left: location.left + selectorSize.x + 'px',\n          width: location.width - selectorSize.x * 2 + 'px',\n          height: selectorSize.y + 'px',\n        }\"\n      ></div>\n      <!-- Move left -->\n      <div\n        v-if=\"location\"\n        class=\"xone-designer-drag-move move-left\"\n        @mouseenter=\"moveCursorTo('left')\"\n        @mouseleave=\"moveCursorTo('')\"\n        :style=\"{\n          top: location.top + 'px',\n          left: location.left + 'px',\n          width: selectorSize.x + 'px',\n          height: location.height + 'px',\n        }\"\n      ></div>\n      <!-- Move right -->\n      <div\n        v-if=\"location\"\n        class=\"xone-designer-drag-move move-right\"\n        @mouseenter=\"moveCursorTo('right')\"\n        @mouseleave=\"moveCursorTo('')\"\n        :style=\"{\n          position: 'absolute',\n          top: location.top + 'px',\n          left: location.left + location.width - selectorSize.x + 'px',\n          width: selectorSize.x + 'px',\n          height: location.height + 'px',\n        }\"\n      ></div>\n      <!-- Cursor -->\n      <div\n        v-if=\"cursorCoordinates\"\n        :style=\"{\n          zIndex: 9999999,\n          outline: '1px black solid',\n          position: 'absolute',\n          width: cursorCoordinates.width + 'px',\n          height: cursorCoordinates.height + 'px',\n          background: 'red',\n          transition: 'all .3s',\n          top: cursorCoordinates.top + 'px',\n          left: cursorCoordinates.left + 'px',\n          opacity: cursorCoordinates.opacity,\n        }\"\n      ></div>\n      <template v-for=\"containerInfo in containersInfo\" :key=\"containerInfo.name\">\n        <div\n          class=\"xone-designer-drag-containers\"\n          :style=\"{\n            left: containerInfo.positionX + 'px',\n            top: containerInfo.positionY + 'px',\n            width: containerInfo.name.length * 10 + 'px',\n            background: containerInfo.name === containerSelected ? 'blue' : 'white',\n            color: containerInfo.name === containerSelected ? 'white' : 'black',\n          }\"\n          @mouseenter=\"onMouseEnter(containerInfo.name)\"\n          @mouseleave=\"onMouseLeave()\"\n        >\n          {{ containerInfo.name }}\n        </div>\n      </template>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { computed, ref, Ref, watch } from \"vue\";\nimport dragAndDrop from \"../../composables/DragAndDrop\";\nimport { getAppPath } from \"../../composables/helperFunctions/ImageHelper\";\n\nexport default {\n  setup() {\n    const isDesigner = dragAndDrop.getIsDesigner();\n\n    const isDragging = dragAndDrop.getIsDragging();\n\n    const selectedControl = dragAndDrop.getSelectedControl();\n\n    const dragControl = dragAndDrop.getDragControl();\n\n    /** @type {Ref<string>} */\n    const containerSelected = ref();\n\n    /** @type {Ref<Object>} */\n    const location = ref();\n\n    /** @type {Ref<Object>} */\n    const cursorCoordinates = ref();\n\n    /** @type {Ref<Array<Object>>} */\n    const containersInfo = ref([]);\n\n    watch(\n      () => dragControl.value,\n      (newValue) => {\n        if (!isDesigner.value || !isDragging.value) return;\n        containersInfo.value = [];\n        containerSelected.value = \"\";\n        location.value = null;\n        cursorCoordinates.value = {\n          ...cursorCoordinates.value,\n          width: 0,\n          height: 0,\n          opacity: 0,\n        };\n        try {\n          /** @type {HTMLDivElement} */\n          let element = newValue;\n          location.value = {\n            top: element.getBoundingClientRect().top - 5,\n            left: element.getBoundingClientRect().left - 5,\n            width: element.getBoundingClientRect().width + 10,\n            height: element.getBoundingClientRect().height + 10,\n            isContainer: element.classList.contains(\"xone-frame\"),\n          };\n          while (element) {\n            if (element.classList.contains(\"xone-frame\")) {\n              const containerInfo = {\n                control: element,\n                name: element.getAttribute(\"xone-name\"),\n                top: element.getBoundingClientRect().y,\n                left: element.getBoundingClientRect().x,\n                width: element.getBoundingClientRect().width,\n                height: element.getBoundingClientRect().height,\n                positionY: element.getBoundingClientRect().y,\n                positionX: element.getBoundingClientRect().x,\n              };\n              containersInfo.value.push(containerInfo);\n            }\n\n            if (element === selectedControl.value) {\n              containersInfo.value = [];\n              location.value = null;\n            }\n            element = element.parentElement;\n          }\n          // Put container box in final position\n          containersInfo.value = containersInfo.value.map((e) => {\n            const containerAux = containersInfo.value.find(\n              (aux) =>\n                aux.name !== e.name &&\n                aux.positionX >= e.positionX &&\n                aux.positionX + aux.name.length * 10 <= e.positionX + e.name.length * 10 &&\n                aux.positionY >= e.positionY &&\n                aux.positionY + 21 <= e.positionX + 21\n            );\n            if (containerAux) {\n              e.positionY += 21;\n            }\n            return e;\n          });\n        } catch {}\n      }\n    );\n    return {\n      isDesigner: dragAndDrop.getIsDesigner(),\n      isDragging: dragAndDrop.getIsDragging(),\n      location,\n      containersInfo,\n      containerSelected,\n      onMouseEnter: (name) => {\n        cursorCoordinates.value = {\n          ...cursorCoordinates.value,\n          width: 0,\n          height: 0,\n          opacity: 0,\n        };\n        containerSelected.value = name;\n      },\n      onMouseLeave: () => (containerSelected.value = null),\n      cursorCoordinates,\n      border: dragAndDrop.getBorderOver(),\n      moveCursorTo: (value) => {\n        if (dragControl.value.classList.contains(\"xone-frame\") && containersInfo.value.length > 1)\n          containerSelected.value = containersInfo.value[1].name;\n        else containerSelected.value = containersInfo.value[0].name;\n\n        let left = location.value.left;\n        let top = location.value.top;\n        let width = location.value.width;\n        let height = location.value.height;\n\n        if (dragControl.value.classList.contains(\"xone-frame\") && containersInfo.value.length === 1) {\n          /** @type {HTMLDivElement} */\n          let element = containersInfo.value[0].control;\n\n          if ([\"bottom\", \"right\"].includes(value)) element = element.lastElementChild;\n          else element = element.firstElementChild;\n\n          left = element.getBoundingClientRect().left;\n          width = element.getBoundingClientRect().width;\n          top = element.getBoundingClientRect().top;\n          height = element.getBoundingClientRect().height;\n        }\n\n        const size = 10;\n\n        switch (value) {\n          case \"left\":\n            return (cursorCoordinates.value = {\n              left: left,\n              top: top,\n              width: size,\n              height: height,\n              opacity: 1,\n            });\n          case \"up\":\n            return (cursorCoordinates.value = {\n              left: left,\n              top: top,\n              width: width,\n              height: size,\n              opacity: 1,\n            });\n          case \"right\":\n            return (cursorCoordinates.value = {\n              left: left + width,\n              top: top,\n              width: size,\n              height: height,\n              opacity: 1,\n            });\n          case \"bottom\":\n            return (cursorCoordinates.value = {\n              left: left,\n              top: top + height,\n              width: width,\n              height: size,\n              opacity: 1,\n            });\n        }\n      },\n      selectorSize: computed(() => {\n        let x = 30;\n        let y = 30;\n        if (location.value.width / 2 < x) x = location.value.width / 2;\n        if (location.value.height / 2 < y) y = location.value.height / 2;\n\n        if (!location.value.isContainer) {\n          if (location.value.width > location.value.height) {\n            x = location.value.width / 4;\n            y = location.value.height / 2;\n          } else {\n            x = location.value.width / 2;\n            y = location.value.height / 4;\n          }\n        }\n        return { x, y };\n      }),\n      appPath: getAppPath(),\n    };\n  },\n};\n</script>\n\n<style scoped>\n.xone-designer-drag-container {\n  top: 0;\n  left: 0;\n  position: absolute;\n  height: 100vh;\n  width: 100vw;\n  pointer-events: none;\n}\n\n.xone-designer-drag {\n  transition: all 0.3s;\n  box-sizing: border-box;\n  position: absolute;\n  width: 100px;\n  height: 20px;\n  background-color: transparent;\n  outline: var(--border);\n  max-height: 100vh;\n  pointer-events: none;\n  z-index: 99999;\n}\n\n.xone-designer-drag-containers {\n  pointer-events: all;\n  border: 1px black solid;\n  border-radius: 3px;\n  background: white;\n  position: absolute;\n  height: 20px;\n  text-align: center;\n  font-size: 14px;\n}\n\n.xone-designer-drag-selected {\n  transition: all 0.3s;\n  box-sizing: border-box;\n  position: absolute;\n  width: 100px;\n  height: 20px;\n  background-color: transparent;\n  outline: 3px blue solid;\n  max-height: 100vh;\n  z-index: 99999;\n}\n\n.xone-designer-drag-move {\n  opacity: 0.25;\n  outline: 1px dotted blue;\n  background: white;\n  pointer-events: all;\n  position: absolute;\n  background-repeat: no-repeat;\n\n  background-position: center;\n  background-size: 16px 16px;\n}\n\n.xone-designer-drag-move:hover {\n  background-color: cyan;\n}\n\n.move-up {\n  background-image: var(--image-back);\n}\n.move-right {\n  background-image: var(--image-right);\n}\n.move-down {\n  background-image: var(--image-down);\n}\n.move-left {\n  background-image: var(--image-left);\n}\n</style>\n","import { render } from \"./DragControl.vue?vue&type=template&id=49901515&scoped=true\"\nimport script from \"./DragControl.vue?vue&type=script&lang=js\"\nexport * from \"./DragControl.vue?vue&type=script&lang=js\"\n\nimport \"./DragControl.vue?vue&type=style&index=0&id=49901515&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/amiyares/Projects/XOne/XOneWebVue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-49901515\"]])\n\nexport default __exports__","import { XoneControl } from \"./XoneViewsHandler\";\n\n/** @type {number} */\nlet _widthFactor = 1;\n\n/** @type {number} */\nlet _heightFactor = 1;\n\n/**\n * setWidthFactor\n * @param {number} value\n */\nexport const setWidthFactor = (value) => (_widthFactor = value || 1);\n\n/**\n * setHeightFactor\n * @param {number} value\n */\nexport const setHeightFactor = (value) => (_heightFactor = value || 1);\n\nexport default class XoneAnimation {\n  /** @type {HTMLDivElement} */\n  _target;\n\n  /** @type {Object} */\n  _options;\n\n  /** @type {Object[]} */\n  _keyframes;\n\n  /** @type {Function} */\n  _callback;\n\n  /** @type {boolean} */\n  _animate = false;\n\n  stop() {\n    this._animate = false;\n    if (this._target) this._target.animate({});\n  }\n\n  animate() {\n    if (!this._animate) return;\n    this._animate = false;\n    if (!this._target) return;\n\n    if (this._callback) setTimeout(() => this._callback(), this._options.duration);\n    this._target.animate(this._keyframes, this._options);\n  }\n\n  initAnimate() {\n    if (this._animate) return;\n    this._options = { duration: 300, fill: \"forwards\" };\n    this._keyframes = [];\n    this._animate = true;\n    this._callback = null;\n    Promise.resolve().then(() => this.animate());\n  }\n\n  /**\n   * setTarget\n   * @param {XoneControl} control\n   */\n  setTarget(control) {\n    this.initAnimate();\n    this._target = control.element || document.querySelector(`[xone-name=\"${control.name}\"]`);\n    return this;\n  }\n\n  /**\n   * setDuration\n   * @param {number} duration\n   */\n  setDuration(duration) {\n    this.initAnimate();\n    this._options.duration = duration;\n    return this;\n  }\n\n  setCircularReveal() {\n    // Aquí se muestra el objeto con una animación rara, ya la trabajaré porque tampoco me parece interesante ni importante\n    return this;\n  }\n\n  /**\n   * setRelativeScaleX\n   * @param {number} scale\n   */\n  setRelativeScaleX(scale) {\n    this.initAnimate();\n    this._keyframes.push({ transform: `scaleX(${scale})` });\n    return this;\n  }\n\n  /**\n   * setRelativeScaleY\n   * @param {number} scale\n   */\n  setRelativeScaleY(scale) {\n    this.initAnimate();\n    this._keyframes.push({ transform: `scaleY(${scale})` });\n    return this;\n  }\n\n  setScaleX(scale) {\n    return this.setRelativeScaleX(scale);\n  }\n\n  setScaleY(scale) {\n    return this.setRelativeScaleY(scale);\n  }\n\n  /**\n   * setRelativeScaleY\n   * @param {number} x\n   */\n  setRelativeX(x) {\n    this.initAnimate();\n    this._keyframes.push({\n      transform: `translateX(${x * _widthFactor}px)`,\n    });\n    return this;\n  }\n\n  /**\n   * setRelativeScaleY\n   * @param {number} y\n   */\n  setRelativeY(y) {\n    this.initAnimate();\n    this._keyframes.push({\n      transform: `translateY(${y * _heightFactor}px)`,\n    });\n    return this;\n  }\n\n  // Las posiciones las trabajo todas como relativas, para trabajar con posiciones absolutas lo que tendría que hacer el usuario es setear el objeto como floating, no tiene sentido esta animación si no es floating...\n  setX(x) {\n    this.setRelativeX(x, true);\n    // this._keyframes.push({\n    //   position: \"absolute\",\n    // });\n    return this;\n  }\n\n  setY(y) {\n    this.setRelativeY(y);\n    // this._keyframes.push({\n    //   position: \"absolute\",\n    // });\n    return this;\n  }\n\n  setZ() {\n    return this;\n  }\n\n  /**\n   * setWidth\n   * @param {string} width\n   */\n  setWidth(width) {\n    this.initAnimate();\n\n    if (!isNaN(Number(width))) width = Number(width) * _widthFactor + \"px\";\n    else if (width.includes(\"p\") || width.includes(\"px\")) width = Number(width.replace(\"px\", \"\").replace(\"p\", \"\")) * _widthFactor + \"px\";\n\n    this._keyframes.push({ width });\n    return this;\n  }\n\n  /**\n   * setHeight\n   * @param {string} height\n   */\n  setHeight(height) {\n    this.initAnimate();\n\n    if (!isNaN(Number(height))) height = Number(height) * _heightFactor + \"px\";\n    else if (height.includes(\"p\") || height.includes(\"px\")) height = Number(height.replace(\"px\", \"\").replace(\"p\", \"\")) * _heightFactor + \"px\";\n\n    this._keyframes.push({ height });\n    return this;\n  }\n\n  /**\n   * setAlpha\n   * @param {number} alpha\n   */\n  setAlpha(alpha) {\n    this.initAnimate();\n    this._keyframes.push({ opacity: alpha });\n    return this;\n  }\n\n  /**\n   * setEndCallback\n   * @param {Function} callback\n   */\n  setEndCallback(callback) {\n    this._callback = callback;\n  }\n\n  /**\n  setRepeatMode(value) {\n   * \n   * @param {number} value \n   */\n  setRepeatMode(value) {\n    this.initAnimate();\n    if (value === -1) this._options.iterations = \"Infinity\";\n    else if (!isNaN(Number(value))) this._options.iterations = value;\n    return this;\n  }\n\n  /**\n   * setRotation\n   * @param {number} value\n   */\n  setRotation(value) {\n    this.initAnimate();\n    this._keyframes.push({\n      transform: `rotate(${value}deg)`,\n    });\n    return this;\n  }\n\n  setRelativeRotation(value) {\n    return this.setRotation(value);\n  }\n\n  // TODO: ver que animar en cada caso, de momento meto algo ahí por defecto pero no tengo ni idea de lo que anima android tampoco\n  setInterpolation(value) {\n    switch (value) {\n      case \"AccelerateDecelerateInterpolator\":\n        return (this._options.easing = \"ease\");\n      case \"AccelerateInterpolator\":\n        return (this._options.easing = \"ease-in\");\n      case \"AnticipateInterpolator\":\n        return (this._options.easing = \"ease-out\");\n      case \"AnticipateOvershootInterpolator\":\n        return (this._options.easing = \"ease-in-out\");\n      case \"BounceInterpolator\":\n        return (this._options.easing = \"cubic-bezier(0.42,0,0.58,1)\");\n      case \"CycleInterpolator\":\n        return (this._options.easing = \"cubic-bezier(0.42,0,0.58,1)\");\n      case \"DecelerateInterpolator\":\n        return (this._options.easing = \"cubic-bezier(0.42,0,0.58,1)\");\n      case \"FastOutLinearInInterpolator\":\n        return (this._options.easing = \"cubic-bezier(0.42,0,0.58,1)\");\n      case \"FastOutSlowInInterpolator\":\n        return (this._options.easing = \"cubic-bezier(0.42,0,0.58,1)\");\n      case \"LinearInterpolator\":\n        return (this._options.easing = \"linear\");\n      case \"LinearOutSlowInInterpolator\":\n        return (this._options.easing = \"cubic-bezier(1,1,.5,.5);\");\n      case \"OvershootInterpolator\":\n        return (this._options.easing = \"cubic-bezier(0,0,1,1);\");\n      default:\n        return (this._options.easing = \"\");\n    }\n  }\n}\n","import { getAppPath } from \"./ImageHelper\";\n\nexport const addFontFaces = () => {\n\tconst newStyle = document.createElement(\"style\");\n\tconst appPath = getAppPath();\n\tnewStyle.appendChild(\n\t\tdocument.createTextNode(`@font-face {\n\t  font-family: \"Roboto\";\n\t  src: url(${window.location.origin}${appPath ? `/${appPath}` : \"\"}/fonts/Roboto-Medium.ttf);\n\t}\n\t\t`)\n\t);\n\n\tdocument.head.appendChild(newStyle);\n};\n","import { render } from \"./App.vue?vue&type=template&id=d40ce0a8\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=d40ce0a8&lang=css\"\n\nimport exportComponent from \"/home/amiyares/Projects/XOne/XOneWebVue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHashHistory } from \"vue-router\"; //createWebHistory//createWebHashHistory\n\nconst history = createWebHashHistory(process.env.BASE_URL);\n\nconst routes = [\n\t{\n\t\tpath: \"/\",\n\t\tname: \"Home\",\n\t\tcomponent: () => import(/* webpackChunkName: \"about\" */ \"../views/Home.vue\"),\n\t},\n\n\t{\n\t\tpath: \"/o\",\n\t\tname: \"Coll\",\n\t\tcomponent: () => import(/* webpackChunkName: \"about\" */ \"../views/Home.vue\"),\n\t},\n\n\t{\n\t\tpath: \"/login/:id?\",\n\t\tname: \"Login\",\n\t\tcomponent: () => import(/* webpackChunkName: \"about\" */ \"../views/Home.vue\"),\n\t},\n\n\t{\n\t\tpath: \"/deeplink/\",\n\t\tname: \"DeepLink\",\n\t\tcomponent: () => import(/* webpackChunkName: \"coll\" */ \"../views/Home.vue\"),\n\t},\n\n\t{\n\t\tpath: \"/preview/\",\n\t\tname: \"Preview\",\n\t\tcomponent: () => import(/* webpackChunkName: \"coll\" */ \"../views/Home.vue\"),\n\t},\n\n\t{\n\t\tpath: \"/404/\",\n\t\tname: \"404\",\n\t\tcomponent: () => import(/* webpackChunkName: \"coll\" */ \"../views/404.vue\"),\n\t},\n\n\t{\n\t\tpath: \"/logon/\",\n\t\tname: \"Logon\",\n\t\tcomponent: () => import(/* webpackChunkName: \"coll\" */ \"../views/Login.vue\"),\n\t},\n];\n\nconst router = createRouter({\n\thistory,\n\troutes,\n});\n\nexport default router;\n","<template>\n\t<div\n\t\tref=\"containerElement\"\n\t\tv-show=\"isActive && !isDisableVisible\"\n\t\t:group=\"attributes.node === 'group' || null\"\n\t\t:class=\"['xone-frame', attributes.keepAspectRatio && 'keep-aspect-ratio', attributes.framebox && 'xone-frame-borders']\"\n\t\t:xone-name=\"attributes.name\"\n\t\t:style=\"{\n\t\t\t// Variables\n\t\t\t'--border-width': attributes.borderWidth,\n\t\t\t'--border-color': attributes.borderColor,\n\t\t\t'--elevation': `${attributes.elevation}px`,\n\t\t\t'--frame-align-column': attributes.align.column,\n\t\t\t// Margins\n\t\t\tmarginTop: margins.top + 'px',\n\t\t\tmarginRight: margins.right + 'px',\n\t\t\tmarginBottom: margins.bottom + 'px',\n\t\t\tmarginLeft: margins.left + 'px',\n\t\t\t// Paddings\n\t\t\tpaddingTop: paddings.top + 'px',\n\t\t\tpaddingRight: paddings.right + 'px',\n\t\t\tpaddingBottom: paddings.bottom + 'px',\n\t\t\tpaddingLeft: paddings.left + 'px',\n\t\t\t// Size\n\t\t\theight:\n\t\t\t\t(attributes.node === 'group' && !attributes.drawerOrientation && !attributes.fixed && '100%') ||\n\t\t\t\t(controlHeight && (attributes.node !== 'group' || attributes.fixed) && `${controlHeight}px`) ||\n\t\t\t\t'auto',\n\t\t\twidth: (attributes.node === 'group' && !attributes.drawerOrientation && '100%') || (controlWidth && `${controlWidth}px`) || 'auto',\n\t\t\tmaxHeight: !isContents && attributes.node === 'group' && containerHeight ? `${containerHeight}px` : null,\n\t\t\tmaxWidth: !isContents && attributes.node === 'group' && containerWidth ? `${containerWidth}px` : null,\n\t\t\tminHeight: attributes.minHeight ? attributes.minHeight : null,\n\t\t\tminWidth: attributes.minWidth ? attributes.minWidth : null,\n\t\t\t// Expanded\n\t\t\tflexGrow: attributes.node === 'frame' && attributes.width === 'grow' ? 1 : null,\n\t\t\tflexShrink: attributes.node === 'frame' && attributes.width === 'grow' ? 1 : null,\n\t\t\t// Background\n\t\t\tbackgroundColor: displayScreenThresholds ? '#00ff0025' : attributes.bgColor,\n\t\t\tbackgroundImage: attributes.image && `url(${appPath}/icons/${attributes.image})`,\n\t\t\t// Border\n\t\t\tborder: displayScreenThresholds && `1px solid ${attributes.borderColor}`,\n\t\t\tborderRadius: attributes.borderCornerRadius,\n\t\t\t// Align\n\t\t\tjustifyContent: attributes.align.column,\n\t\t\t// Scrolls\n\t\t\toverflowY:\n\t\t\t\tattributes.node === 'frame' && attributes.width === 'grow'\n\t\t\t\t\t? 'hidden'\n\t\t\t\t\t: // Esto en android no permite el scroll en un grupo, pero yo lo voy a dejar libre porque me parece que no tiene sentido -> //attributes.node === 'group' ? 'hidden' :\n\t\t\t\t\tattributes.scroll && attributes.scrollOrientation === 'vertical'\n\t\t\t\t\t? 'auto'\n\t\t\t\t\t: 'hidden',\n\t\t\toverflowX:\n\t\t\t\tattributes.node === 'frame' && attributes.width === 'grow'\n\t\t\t\t\t? 'hidden'\n\t\t\t\t\t: attributes.scroll && attributes.scrollOrientation === 'horizontal'\n\t\t\t\t\t? 'auto'\n\t\t\t\t\t: 'hidden',\n\t\t\t// Floating\n\t\t\tposition: attributes.floating.floating && 'absolute',\n\t\t\tzIndex: attributes.floating.floating && '9',\n\t\t\ttop: attributes.floating.floating && floatingTop && floatingTop,\n\t\t\tleft: attributes.floating.floating && floatingLeft && floatingLeft,\n\t\t\t// Designer\n\t\t\tcursor: isDesigner && isDragging && 'move', //|| (attributes.onClick && 'pointer'),\n\t\t}\"\n\t\t@scroll=\"onScroll\"\n\t\t@click=\"onClick($event)\"\n\t\t@mousedown=\"isDesigner && onMouseDown($event)\"\n\t\t@mouseenter=\"isDesigner && onMouseEnter($event)\"\n\t\t@mouseleave=\"isDesigner && onMouseLeave($event)\"\n\t\t@mousemove=\"isDesigner && onDragOver($event)\"\n\t\t@touchmove=\"isDesigner && onDragOver($event)\"\n\t>\n\t\t<!-- Rows of the container -->\n\t\t<template v-if=\"attributes.node === 'group' || !isDisableVisible\">\n\t\t\t<Row\n\t\t\t\tv-for=\"(row, iRow) in rows\"\n\t\t\t\t:xone-parent=\"attributes.name\"\n\t\t\t\t:key=\"`${attributes.name}-${iRow}`\"\n\t\t\t\t:style=\"{\n\t\t\t\t\t// Align\n\t\t\t\t\tjustifyContent: attributes.align.row,\n\t\t\t\t\talignItems: attributes.align.column,\n\t\t\t\t\tflexWrap: attributes.wrap ? 'wrap' : null,\n\t\t\t\t}\"\n\t\t\t>\n\t\t\t\t<!-- Columns of the Row -->\n\t\t\t\t<Column\n\t\t\t\t\tv-for=\"(column, iColumn) in row\"\n\t\t\t\t\t:key=\"`${column.attributes.name}-${iColumn}`\"\n\t\t\t\t\t:attributes=\"column.attributes\"\n\t\t\t\t\t:xoneDataObject=\"xoneDataObject\"\n\t\t\t\t>\n\t\t\t\t\t<!-- Container -->\n\t\t\t\t\t<Container\n\t\t\t\t\t\tv-if=\"column.attributes.node === 'frame' || column.attributes.node === 'group'\"\n\t\t\t\t\t\t:xoneDataObject=\"xoneDataObject\"\n\t\t\t\t\t\t:control=\"column\"\n\t\t\t\t\t\t:containerHeight=\"controlHeight || controlGrowHeight || containerHeight\"\n\t\t\t\t\t\t:containerWidth=\"controlWidth || controlGrowWidth || containerWidth\"\n\t\t\t\t\t></Container>\n\t\t\t\t\t<!-- Prop -->\n\t\t\t\t\t<Prop\n\t\t\t\t\t\tv-if=\"column.attributes.node === 'prop'\"\n\t\t\t\t\t\t:xoneDataObject=\"xoneDataObject\"\n\t\t\t\t\t\t:control=\"column\"\n\t\t\t\t\t\t:containerHeight=\"controlHeight || controlGrowHeight || containerHeight\"\n\t\t\t\t\t\t:containerWidth=\"controlWidth || controlGrowWidth || containerWidth\"\n\t\t\t\t\t></Prop>\n\t\t\t\t</Column>\n\t\t\t</Row>\n\t\t</template>\n\t</div>\n</template>\n\n<script>\nimport { computed, inject, onMounted, ref, Ref, ComputedRef, watch, provide, nextTick, PropType, onUnmounted } from \"vue\";\nimport Row from \"./Row.vue\";\nimport Column from \"./Column.vue\";\nimport Prop from \"./Prop.vue\";\nimport { xoneAttributesHandler, ContainerAttributes, Margins } from \"../composables/XoneAttributesHandler\";\nimport { XoneDataObject } from \"../composables/appData/core/XoneDataObject\";\nimport { XoneControl, XoneView } from \"../composables/XoneViewsHandler\";\nimport dragAndDrop from \"../composables/DragAndDrop\";\nimport AppDataHandler, { Objectinfo } from \"../composables/AppDataHandler\";\nimport { getAppPath } from \"../composables/helperFunctions/ImageHelper\";\n\nexport default {\n\tname: \"Container\",\n\tcomponents: { Row, Column, Prop },\n\tprops: {\n\t\t/**\n\t\t * xoneDataObject\n\t\t * @type {PropType<XoneDataObject>}\n\t\t */\n\t\txoneDataObject: { type: Object, required: true },\n\t\tcontrol: { type: Object, required: true },\n\t\tcontainerWidth: { type: Number, default: 0 },\n\t\tcontainerHeight: { type: Number, default: 0 },\n\t\tvisibilityBit: { type: Number, default: 1 },\n\t},\n\temits: [\"onDataObjectChange\"],\n\t/**\n\t * Group / Frame control\n\t */\n\tsetup(props, context) {\n\t\tconst displayScreenThresholds = inject(\"displayScreenThresholds\");\n\n\t\t/**\n\t\t * objectInfo\n\t\t * @type {Objectinfo}\n\t\t */\n\t\tconst objectInfo = inject(\"objectInfo\");\n\t\tconst { isContents } = objectInfo;\n\n\t\t// Si es un contents y es edit-inrow, hacemos el objeto reactivo y lo creamos en el stack de objetos como una vista, por si se desea coger la vista del objeto\n\t\tif (objectInfo.editInRow && props.control.attributes.node === \"group\") {\n\t\t\t// Clonamos el objeto para que no pierda su reactividad\n\t\t\tconst newObj = props.xoneDataObject.clone().doModelReactive();\n\t\t\t// Hacemos push del objeto en el stack de objetos\n\t\t\tconst contentsRowbreadcrumbId = AppDataHandler.pushXoneDataObject(newObj, \"contentsRow\", false, false, true);\n\t\t\t// Creamos y proveemos la vista\n\t\t\tconst newXoneView = new XoneView(newObj);\n\t\t\tprovide(\"xoneView\", newXoneView);\n\t\t\t// Destruimos el objeto del stack de objetos\n\t\t\tonUnmounted(() => AppDataHandler.removeBreadcrumb(contentsRowbreadcrumbId));\n\t\t\t// Emitimos el cambio de objeto para setearlo en el contents\n\t\t\tcontext.emit(\"onDataObjectChange\", newObj);\n\t\t}\n\n\t\t/**\n\t\t * Attributes model\n\t\t * @type {ComputedRef<ContainerAttributes>}\n\t\t */\n\t\tconst attributesModel = computed(() => xoneAttributesHandler.getContainerAttributes(props.control.attributes));\n\n\t\t/**\n\t\t * Reactive Attributes\n\t\t * @type {Ref<ContainerAttributes>}\n\t\t */\n\t\tconst attributes = ref({ ...attributesModel.value });\n\n\t\t// Observe changes in attributes model and data model with ##FLD_ fields and fetch them to attributes\n\t\txoneAttributesHandler.watchAttributes(attributes, attributesModel, props.xoneDataObject.model);\n\n\t\t// Provide group id\n\t\tif (attributes.value.node === \"group\") provide(\"groupId\", attributes.value.id);\n\n\t\t// Provide isDrawer\n\t\tconst isDrawer = attributes.value.drawerOrientation === \"left\" || attributes.value.drawerOrientation === \"right\";\n\t\tprovide(\"isDrawer\", isDrawer);\n\n\t\t/**\n\t\t * Check if disablevisible\n\t\t * @type {ComputedRef<boolean>}\n\t\t */\n\t\tconst isDisableVisible = computed(() => {\n\t\t\t// Frame without children\n\t\t\tif (attributes.value.node === \"frame\" && props.control.controls?.length === 0) return true;\n\t\t\t// No disablevisible attribute\n\t\t\tif ((attributes.value.disableVisible ?? \"\") === \"\") return false;\n\t\t\t// Eval disablevisible formula\n\t\t\treturn xoneAttributesHandler.evalFormula(attributes.value.disableVisible, props.xoneDataObject?.model);\n\t\t});\n\n\t\t/**\n\t\t * Group active\n\t\t * @type {{activeGroup:Ref<string>}}\n\t\t */\n\t\tconst { activeGroup } = inject(\"groupHandler\");\n\n\t\t/**\n\t\t * Is current group active\n\t\t * @type {ComputedRef<boolean>}\n\t\t */\n\t\tconst isActive = computed(() => {\n\t\t\treturn (\n\t\t\t\tattributes.value.node !== \"group\" ||\n\t\t\t\tattributes.value.fixed ||\n\t\t\t\tattributes.value.id === activeGroup.value ||\n\t\t\t\tattributes.value.drawerOrientation ||\n\t\t\t\tprops.visibilityBit === 4\n\t\t\t);\n\t\t});\n\n\t\t// Execute onfocus method\n\t\tif (attributes.value.node === \"group\" && attributes.value.onFocus)\n\t\t\twatch(\n\t\t\t\t() => activeGroup.value,\n\t\t\t\tasync (newValue) => {\n\t\t\t\t\tif (newValue !== attributes.value.id) return;\n\t\t\t\t\tawait xoneAttributesHandler.executeMethod(attributes.value.onFocus, props.xoneDataObject);\n\t\t\t\t}\n\t\t\t);\n\n\t\t/**\n\t\t * Container rows / columns\n\t\t * @type {ComputedRef<Array>}\n\t\t */\n\t\tconst rows = computed(() => {\n\t\t\tconst validNodes = [\"group\", \"frame\", \"prop\"];\n\t\t\tlet rowsArr = [];\n\t\t\tlet row = [];\n\t\t\tprops.control.controls\n\t\t\t\t?.filter((e) => validNodes.includes(e.attributes.node))\n\t\t\t\t?.forEach((e) => {\n\t\t\t\t\t// Set width and height = 100% if group has only 1 child and it's a frame\n\t\t\t\t\tif (\n\t\t\t\t\t\tattributes.value.node === \"group\" &&\n\t\t\t\t\t\tprops.control.controls.length === 1 &&\n\t\t\t\t\t\te.attributes.node === \"frame\" &&\n\t\t\t\t\t\t!attributes.value.fixed &&\n\t\t\t\t\t\t!attributes.value.floating?.floating &&\n\t\t\t\t\t\t!attributes.value.floating?.drawerOrientation\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (!objectInfo.isMsgBox && !isContents) {\n\t\t\t\t\t\t\t// Anddroid obliga a que exista un frame dentro del group, y lo pone tamaño del 100%, yo respetaré si viene tamaño del usuario\n\t\t\t\t\t\t\tif (!e.attributes.height) e.attributes.height = \"100%\";\n\t\t\t\t\t\t\tif (!e.attributes.width) e.attributes.width = \"100%\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst controlAttributes = xoneAttributesHandler.getContainerAttributes(e.attributes);\n\t\t\t\t\t// newline true\n\t\t\t\t\tif (controlAttributes.newLine) {\n\t\t\t\t\t\tif (row.length !== 0) {\n\t\t\t\t\t\t\trowsArr.push(row);\n\t\t\t\t\t\t\trow = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\trow.push(e);\n\t\t\t\t\t}\n\t\t\t\t\t// newline false\n\t\t\t\t\telse {\n\t\t\t\t\t\trow.push(e);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\trowsArr.push(row);\n\n\t\t\t// Exclude empty containers\n\t\t\t/** @type {boolean} */\n\t\t\tlet clear;\n\t\t\tconst clearEmptyContainers = (control, /** @type {Array} */ parent) => {\n\t\t\t\tif (\n\t\t\t\t\tcontrol.attributes.node === \"frame\" &&\n\t\t\t\t\t(!control.controls || control.controls.filter((e) => validNodes.includes(e.attributes.node)).length === 0)\n\t\t\t\t) {\n\t\t\t\t\tparent.splice(parent.indexOf(control), 1);\n\t\t\t\t\tclear = true;\n\t\t\t\t}\n\t\t\t\tcontrol.controls?.forEach((e) => clearEmptyContainers(e, control.controls));\n\t\t\t};\n\t\t\tdo {\n\t\t\t\tclear = false;\n\t\t\t\trowsArr.forEach((row) => row.forEach((column) => clearEmptyContainers(column, row)));\n\t\t\t} while (clear);\n\n\t\t\treturn rowsArr;\n\t\t});\n\n\t\tconst isMouseOver = ref(false);\n\n\t\t/**\n\t\t * Scale Factor\n\t\t * @type {{widthFactor: ComputedRef<number>, heightFactor: ComputedRef<number>}}\n\t\t */\n\t\tconst { widthFactor, heightFactor } = inject(\"scaleFactor\");\n\n\t\tconst controlGrowWidth = ref(null),\n\t\t\tcontrolGrowHeight = ref(null);\n\n\t\t//\n\t\t// Width|Height = -1; 'grow', the container occuppies all available size\n\t\tonMounted(() => {\n\t\t\tif (isContents) objectInfo.rowInfo.setIsLoaded(true);\n\t\t\t// Set flex-grow to row container -> Height Grow\n\t\t\tif (attributes.value.height === \"grow\") {\n\t\t\t\tconst { parentElement } = containerElement.value;\n\t\t\t\tif (parentElement.classList.contains(\"xone-row\")) {\n\t\t\t\t\tparentElement.style.flexGrow = 1;\n\t\t\t\t\tparentElement.style.flexShrink = 1;\n\t\t\t\t\tparentElement.style.overflow = \"hidden\";\n\t\t\t\t\tconst observerHeight = new ResizeObserver(() => {\n\t\t\t\t\t\tcontrolGrowHeight.value = 1;\n\t\t\t\t\t\tnextTick(() => (controlGrowHeight.value = parentElement.clientHeight - (margins.value?.top || 0) - (margins.value?.bottom || 0)));\n\t\t\t\t\t\tfixJustifyCenter();\n\t\t\t\t\t});\n\t\t\t\t\tobserverHeight.observe(parentElement);\n\t\t\t\t\tonUnmounted(() => observerHeight?.disconnect());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (attributes.value.width === \"grow\" || attributes.value.align.column === \"center\") {\n\t\t\t\tconst observerWidth = new ResizeObserver(() => {\n\t\t\t\t\tif (attributes.value.width === \"grow\") {\n\t\t\t\t\t\tcontrolGrowWidth.value = 1;\n\t\t\t\t\t\tnextTick().then(\n\t\t\t\t\t\t\t() => (controlGrowWidth.value = containerElement.value.clientWidth - (margins.value?.left || 0) - (margins.value?.right || 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tfixJustifyCenter();\n\t\t\t\t});\n\t\t\t\tobserverWidth.observe(containerElement.value);\n\t\t\t\tonUnmounted(() => observerWidth?.disconnect());\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * Calculate width of the current container\n\t\t * @type {ComputedRef<number>}\n\t\t */\n\t\tconst controlWidth = computed(() => {\n\t\t\tlet width = xoneAttributesHandler.getScaledSize(attributes.value.width, props.containerWidth, widthFactor.value);\n\t\t\treturn !width ? null : isMouseOver.value ? width - 4 : width;\n\t\t});\n\n\t\t/**\n\t\t * Calculate height of the current container\n\t\t * @type {ComputedRef<number>}\n\t\t */\n\t\tconst controlHeight = computed(() => {\n\t\t\tconst height = xoneAttributesHandler.getScaledSize(attributes.value.height, props.containerHeight, heightFactor.value);\n\t\t\tif (!height && controlGrowHeight.value) return controlGrowHeight.value;\n\t\t\treturn !height ? null : isMouseOver.value ? height - 4 : height;\n\t\t});\n\n\t\t/**\n\t\t * Margins of the current container\n\t\t * @type {ComputedRef<Margins>}\n\t\t */\n\t\tconst margins = computed(() => ({\n\t\t\ttop: xoneAttributesHandler.getScaledSize(attributes.value.margins.top, props.containerHeight, heightFactor.value),\n\t\t\tleft: xoneAttributesHandler.getScaledSize(attributes.value.margins.left, props.containerWidth, widthFactor.value),\n\t\t\tbottom: xoneAttributesHandler.getScaledSize(attributes.value.margins.bottom, props.containerHeight, heightFactor.value),\n\t\t\tright: xoneAttributesHandler.getScaledSize(attributes.value.margins.right, props.containerWidth, widthFactor.value),\n\t\t}));\n\n\t\t/**\n\t\t * Margins of the current container\n\t\t * @type {ComputedRef<Margins>}\n\t\t */\n\t\tconst paddings = computed(() => ({\n\t\t\ttop: xoneAttributesHandler.getScaledSize(attributes.value.paddings.top, props.containerHeight, heightFactor.value),\n\t\t\tleft: xoneAttributesHandler.getScaledSize(attributes.value.paddings.left, props.containerWidth, widthFactor.value),\n\t\t\tbottom: xoneAttributesHandler.getScaledSize(attributes.value.paddings.bottom, props.containerHeight, heightFactor.value),\n\t\t\tright: xoneAttributesHandler.getScaledSize(attributes.value.paddings.right, props.containerWidth, widthFactor.value),\n\t\t}));\n\n\t\t/**\n\t\t * calculate floating top\n\t\t * @type {ComputedRef<string>}\n\t\t */\n\t\tconst floatingTop = computed(() => xoneAttributesHandler.getScaledPosition(attributes.value.floating.top, heightFactor.value));\n\n\t\t/**\n\t\t * calculate floating leeft\n\t\t * @type {ComputedRef<string>}\n\t\t */\n\t\tconst floatingLeft = computed(() => xoneAttributesHandler.getScaledPosition(attributes.value.floating.left, widthFactor.value));\n\n\t\t//\n\t\t// Handler refresh\n\t\t/**\n\t\t * xoneView\n\t\t * @type {XoneView}\n\t\t */\n\t\tconst xoneView = inject(\"xoneView\");\n\n\t\tonMounted(() => {\n\t\t\t// Create XoneControl\n\t\t\tconst xoneControl = new XoneControl(attributes.value.name, containerElement.value);\n\t\t\t// refresh method\n\t\t\txoneControl.refresh = () =>\n\t\t\t\tprops.control.controls.forEach((e) => {\n\t\t\t\t\tif (xoneView[e.attributes.name]?.refresh) xoneView[e.attributes.name].refresh();\n\t\t\t\t});\n\t\t\t// scrollBy method\n\t\t\txoneControl.scrollBy = (value) => {\n\t\t\t\tif (!containerElement.value) return;\n\t\t\t\tvalue = value.toString();\n\t\t\t\tconst { scrollHeight } = containerElement.value;\n\t\t\t\tif (value.includes(\"%\"))\n\t\t\t\t\treturn containerElement.value.scrollTo({\n\t\t\t\t\t\ttop: Number((value.replace(\"%\", \"\") * scrollHeight) / 100),\n\t\t\t\t\t\tbehavior: \"smooth\",\n\t\t\t\t\t});\n\t\t\t\tcontainerElement.value.scrollTo({\n\t\t\t\t\ttop: Number(value.replace(\"p\", \"\") * heightFactor.value),\n\t\t\t\t\tbehavior: \"smooth\",\n\t\t\t\t});\n\t\t\t};\n\t\t\t// scrollTo method\n\t\t\txoneControl.scrollTo = xoneControl.scrollBy;\n\t\t\t// scrollToTop method\n\t\t\txoneControl.scrollToTop = () => xoneControl.scrollBy(0);\n\t\t\t// scrollToBottom method\n\t\t\txoneControl.scrollToBottom = () => xoneControl.scrollBy(containerElement.value?.scrollHeight);\n\t\t\t// Add control to view\n\t\t\txoneView.addControl(xoneControl);\n\n\t\t\t// AnimationIn\n\t\t\t// Load animation once control is loaded\n\t\t\tif (attributes.value.animationIn)\n\t\t\t\twatch(\n\t\t\t\t\t() => isDisableVisible.value,\n\t\t\t\t\t(value) => {\n\t\t\t\t\t\tif (!value && !containerElement.value.style.animation) containerElement.value.style.animation = attributes.value.animationIn;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t});\n\n\t\t/**\n\t\t * containerElement\n\t\t * @type {Ref<HTMLElement>}\n\t\t */\n\t\tconst containerElement = ref();\n\n\t\t// Flex no se comporta bien haciendo un justify-center center cuando tiene scroll, compruebo si lo tiene y se lo quito en tal caso\n\t\tconst fixJustifyCenter = () => {\n\t\t\tif (attributes.value.align.column !== \"center\") return;\n\t\t\tconst doFix = () => {\n\t\t\t\tif (!containerElement.value) return;\n\t\t\t\tif (containerElement.value.offsetHeight < containerElement.value.scrollHeight) containerElement.value.style.justifyContent = null;\n\t\t\t};\n\t\t\tdoFix();\n\t\t\t[...Array(5).keys()].forEach((e) => setTimeout(() => doFix(), e * 25));\n\t\t};\n\n\t\tnextTick(() => fixJustifyCenter());\n\n\t\twatch(\n\t\t\t() => props.containerHeight,\n\t\t\t() => fixJustifyCenter()\n\t\t);\n\n\t\t//\n\t\t// onScroll event\n\t\tlet scrollTimeout;\n\t\tconst onScroll = () => {\n\t\t\tif (scrollTimeout) clearTimeout(scrollTimeout);\n\t\t\tscrollTimeout = setTimeout(() => xoneAttributesHandler.onScrollEvent(containerElement.value, attributes.value, props.xoneDataObject), 250);\n\t\t};\n\t\tnextTick(() => onScroll());\n\n\t\t//\n\t\t// on click button\n\t\tlet isExecutingOnClick = false;\n\t\tconst onClick = async (/** @type {PointerEvent} */ e) => {\n\t\t\treturn;\n\t\t\tif (isExecutingOnClick || !attributes.value.onClick) return;\n\t\t\te.stopPropagation();\n\t\t\tisExecutingOnClick = true;\n\t\t\tawait xoneAttributesHandler.onClick(attributes.value, props.xoneDataObject, objectInfo);\n\t\t\tisExecutingOnClick = false;\n\t\t};\n\n\t\treturn {\n\t\t\tcontainerElement,\n\t\t\tdisplayScreenThresholds,\n\t\t\tattributes,\n\t\t\tisActive,\n\t\t\trows,\n\t\t\tisMouseOver,\n\t\t\tcontrolWidth,\n\t\t\tcontrolHeight,\n\t\t\tmargins,\n\t\t\tpaddings,\n\t\t\tisDisableVisible,\n\t\t\tfloatingTop,\n\t\t\tfloatingLeft,\n\t\t\tisDesigner: dragAndDrop.getIsDesigner(),\n\t\t\tisDragging: dragAndDrop.getIsDragging(),\n\t\t\t// isDesignerPropSelected: computed(\n\t\t\t//   () => dragAndDrop.getSelectedControl()?.value === containerElement.value\n\t\t\t// ),\n\t\t\tborderDesignSelected: dragAndDrop.getBorderSelected(),\n\t\t\tborderDesignOver: dragAndDrop.getBorderContainerOver(),\n\t\t\tcontrolGrowWidth,\n\t\t\tcontrolGrowHeight,\n\t\t\tonScroll,\n\t\t\tonClick,\n\t\t\tappPath: getAppPath(),\n\t\t\tisContents,\n\t\t\t//\n\t\t\t// Designer mode Drag & Drop\n\t\t\tonMouseEnter: () => dragAndDrop.mouseEnter(containerElement.value),\n\t\t\tonMouseLeave: () => dragAndDrop.mouseLeave(containerElement.value),\n\t\t\tonMouseDown: (e) => dragAndDrop.mouseDown(e),\n\t\t\tonDragOver: (e) => dragAndDrop.mouseMove(e),\n\t\t};\n\t},\n};\n</script>\n<style scoped>\n.xone-frame {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-self: flex-start;\n\tbackground-repeat: no-repeat;\n\tbackground-position: center;\n\t/* background-size: contain; */\n\tbackground-size: 100% 100%;\n\toverflow-x: hidden;\n\toverflow-y: auto;\n\t/* transition: all 0.2s; */\n\tbox-sizing: border-box;\n\t-moz-box-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\n\tbox-shadow: 0px 0px var(--elevation) 0 rgba(0, 0, 0, 0.2);\n\n\toutline: var(--outine-border);\n\toutline-offset: var(--selected-offset);\n}\n\n.xone-frame-borders {\n\tborder: var(--border-width) solid var(--border-color);\n}\n\n.keep-aspect-ratio {\n\tbackground-size: contain;\n}\n\n.tabcontent {\n\theight: auto;\n\twidth: auto;\n\tflex-shrink: 1;\n\tflex-grow: 1;\n}\n</style>\n","<template>\n  <div class=\"xone-row\">\n    <slot></slot>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Row\",\n};\n</script>\n\n<style scoped>\n.xone-row {\n  overflow: visible;\n  display: inline-flex;\n  flex-direction: row;\n  flex-grow: 0;\n  flex-shrink: 0;\n  height: auto;\n}\n</style>\n","import { render } from \"./Row.vue?vue&type=template&id=86b0c20e&scoped=true\"\nimport script from \"./Row.vue?vue&type=script&lang=js\"\nexport * from \"./Row.vue?vue&type=script&lang=js\"\n\nimport \"./Row.vue?vue&type=style&index=0&id=86b0c20e&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/amiyares/Projects/XOne/XOneWebVue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-86b0c20e\"]])\n\nexport default __exports__","<template>\n\t<!-- is anchor|link? -> <a href></a> -->\n\t<a v-if=\"(attributes.viewMode === 'link' || attributes.viewMode === 'anchor') && attributes.href\" :href=\"href\" target=\"_blank\"><slot></slot></a>\n\t<!-- else -->\n\t<slot v-else></slot>\n</template>\n\n<script>\nimport { onMounted, ref, watchEffect } from \"@vue/runtime-core\";\nexport default {\n\tname: \"Column\",\n\tprops: {\n\t\tattributes: { type: Object, required: true },\n\t\txoneDataObject: { type: Object, required: true },\n\t},\n\tsetup(props) {\n\t\tconst href = ref();\n\t\tonMounted(() => {\n\t\t\tif ((props.attributes.viewMode !== \"link\" && props.attributes.viewMode !== \"anchor\") || !props.attributes.href) return;\n\t\t\thref.value = props.attributes.href;\n\t\t\tObject.keys(props.xoneDataObject.model).forEach((attrKey) => {\n\t\t\t\tif (href.value === `##FLD_${attrKey}##`) {\n\t\t\t\t\twatchEffect(() => (href.value = props.xoneDataObject.model[attrKey]));\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn { href };\n\t},\n};\n</script>\n\n<style scoped>\na {\n\ttext-decoration: none;\n}\n\na:hover {\n\tcursor: pointer;\n}\n</style>\n","import { render } from \"./Column.vue?vue&type=template&id=3c3c9289&scoped=true\"\nimport script from \"./Column.vue?vue&type=script&lang=js\"\nexport * from \"./Column.vue?vue&type=script&lang=js\"\n\nimport \"./Column.vue?vue&type=style&index=0&id=3c3c9289&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/amiyares/Projects/XOne/XOneWebVue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3c3c9289\"]])\n\nexport default __exports__","<template>\n\t<div\n\t\tv-show=\"!isDisableVisible\"\n\t\tclass=\"xone-prop\"\n\t\tref=\"propElement\"\n\t\t:xone-name=\"attributes.name\"\n\t\t:style=\"{\n\t\t\t// set variables\n\t\t\t'--label-height':\n\t\t\t\t(controlHeight && `${/* convierto a entero para que las líneas las renderice bien */ Math.ceil(controlHeight)}px`) ||\n\t\t\t\t`calc(${attributes.lines} + 11px)` ||\n\t\t\t\t'100%',\n\t\t\t'--text-weight': attributes.fontBold ? 'bold' : 'normal',\n\t\t\t'--input-bgcolor':\n\t\t\t\t((attributes.locked || isDisableEdit) && attributes.textBgColorDisabled && attributes.textBgColorDisabled) ||\n\t\t\t\tattributes.textBgColor ||\n\t\t\t\tattributes.bgColor ||\n\t\t\t\t'transparent',\n\t\t\t'--input-forecolor':\n\t\t\t\t((attributes.locked || isDisableEdit) && attributes.textForeColorDisabled && attributes.textForeColorDisabled) ||\n\t\t\t\t(attributes.textForeColor && attributes.textForeColor) ||\n\t\t\t\tattributes.foreColor,\n\t\t\t'--padding-top': `${paddings.top}px`,\n\t\t\t'--padding-right': `${paddings.right}px`,\n\t\t\t'--padding-bottom': `${paddings.bottom}px`,\n\t\t\t'--padding-left': `${paddings.left}px`,\n\t\t\t'--margin-top': `${margins.top}px`,\n\t\t\t'--margin-right': `${margins.right}px`,\n\t\t\t'--margin-bottom': `${margins.bottom}px`,\n\t\t\t'--margin-left': `${margins.left}px`,\n\t\t\t'--border-color': attributes.borderColor,\n\t\t\t'--border-width': attributes.borderWidth,\n\t\t\t'--elevation': `${attributes.elevation}px`,\n\t\t\t// Size\n\t\t\theight: (controlHeight && `${controlHeight}px`) || (finalImgSize && `${finalImgSize.height}px`) || (attributes.height ?? 'auto'),\n\t\t\twidth: (controlWidth && `${controlWidth}px`) || (finalImgSize && `${finalImgSize.width}px`),\n\t\t\tminHeight: attributes.minHeight ? attributes.minHeight : null,\n\t\t\tminWidth: attributes.minWidth ? attributes.minWidth : null,\n\t\t\t// Expanded\n\t\t\tflexGrow: attributes.width === 'grow' ? 1 : null,\n\t\t\t// Background\n\t\t\tbackgroundColor: displayScreenThresholds && '#ff000025',\n\t\t\tposition: attributes.floating.floating && 'absolute',\n\t\t\tzIndex: attributes.floating.floating && '9',\n\t\t\ttop: attributes.floating.floating && floatingTop && floatingTop,\n\t\t\tleft: attributes.floating.floating && floatingLeft && floatingLeft,\n\t\t\t// Border\n\t\t\tborder: displayScreenThresholds && '1px solid #ff0000',\n\t\t\t// Designer mode\n\t\t\tcursor: isDesigner && isDragging && 'move',\n\t\t\t// Overflow\n\t\t\toverflow: isContents || isImage ? 'hidden' : null,\n\t\t}\"\n\t\t@mousedown=\"isDesigner && onMouseDown($event)\"\n\t\t@mouseenter=\"isDesigner && onMouseEnter($event)\"\n\t\t@mouseleave=\"isDesigner && onMouseLeave($event)\"\n\t\t@mousemove=\"isDesigner && onDragOver($event)\"\n\t\t@touchmove=\"isDesigner && onDragOver($event)\"\n\t>\n\t\t<!-- Input Prop -->\n\t\t<InputProp\n\t\t\tv-if=\"isInput\"\n\t\t\t:xoneDataObject=\"xoneDataObject\"\n\t\t\t:attributes=\"attributes\"\n\t\t\t:controlWidth=\"controlWidth\"\n\t\t\t:controlHeight=\"controlHeight\"\n\t\t\t:inputType=\"inputType\"\n\t\t\t:isDisableEdit=\"isDisableEdit\"\n\t\t\t:checkboxSize=\"checkboxSize\"\n\t\t></InputProp>\n\t\t<!-- Button -->\n\t\t<ButtonProp\n\t\t\tv-if=\"isButton\"\n\t\t\t:xoneDataObject=\"xoneDataObject\"\n\t\t\t:attributes=\"attributes\"\n\t\t\t:paddings=\"paddings\"\n\t\t\t:isDisableEdit=\"isDisableEdit\"\n\t\t\t:containerWidth=\"containerWidth\"\n\t\t\t:containerHeight=\"containerHeight\"\n\t\t></ButtonProp>\n\t\t<!-- Img / Photo / Draw -->\n\t\t<ImageProp\n\t\t\tv-if=\"isImage\"\n\t\t\t:xoneDataObject=\"xoneDataObject\"\n\t\t\t:attributes=\"attributes\"\n\t\t\t:controlWidth=\"controlWidth\"\n\t\t\t:controlHeight=\"controlHeight\"\n\t\t\t:containerWidth=\"containerWidth\"\n\t\t\t:containerHeight=\"containerHeight\"\n\t\t></ImageProp>\n\t\t<!-- Contents -->\n\t\t<Contents\n\t\t\tv-if=\"isContents\"\n\t\t\t:xoneDataObject=\"xoneDataObject\"\n\t\t\t:attributes=\"attributes\"\n\t\t\t:controlWidth=\"controlWidth || containerWidth\"\n\t\t\t:controlHeight=\"controlHeight || containerHeight\"\n\t\t\t:isDisableEdit=\"isDisableEdit\"\n\t\t></Contents>\n\t\t<!-- Web -->\n\t\t<WebProp\n\t\t\tv-if=\"isWeb\"\n\t\t\t:xoneDataObject=\"xoneDataObject\"\n\t\t\t:attributes=\"attributes\"\n\t\t\t:controlWidth=\"controlWidth\"\n\t\t\t:controlHeight=\"controlHeight\"\n\t\t></WebProp>\n\t\t<!-- Video -->\n\t\t<VideoProp\n\t\t\tv-if=\"isVideo\"\n\t\t\t:xoneDataObject=\"xoneDataObject\"\n\t\t\t:attributes=\"attributes\"\n\t\t\t:controlWidth=\"controlWidth\"\n\t\t\t:controlHeight=\"controlHeight\"\n\t\t></VideoProp>\n\t\t<Breadcrumb v-if=\"isBreadcrumb\" :attributes=\"attributes\"></Breadcrumb>\n\t</div>\n</template>\n\n<script>\n// vue\nimport { computed, inject, ref, Ref, ComputedRef, onMounted, watch, nextTick } from \"vue\";\n// components\nimport ButtonProp from \"./propComponents/Button.vue\";\nimport InputProp from \"./propComponents/Input.vue\";\nimport ImageProp from \"./propComponents/Image.vue\";\nimport Contents from \"./propComponents/Contents.vue\";\nimport WebProp from \"./propComponents/Web.vue\";\nimport VideoProp from \"./propComponents/Video.vue\";\nimport Breadcrumb from \"./propComponents/Breadcrumb.vue\";\n// composables\nimport { xoneAttributesHandler, PropAttributes, Margins, Paddings } from \"../composables/XoneAttributesHandler\";\nimport dragAndDrop from \"../composables/DragAndDrop\";\nimport { XoneDataObject } from \"../composables/appData/core/XoneDataObject\";\nimport { getImagePathAndSize } from \"../composables/helperFunctions/ImageHelper\";\n\nexport default {\n\tname: \"Prop\",\n\tprops: {\n\t\t/** xoneDataObject\n\t\t * @type {PropType<XoneDataObject>}\n\t\t */\n\t\txoneDataObject: { type: Object, required: true },\n\t\tcontrol: { type: Object, default: undefined, required: true },\n\t\tcontainerWidth: { type: Number, default: 0 },\n\t\tcontainerHeight: { type: Number, default: 0 },\n\t},\n\tcomponents: {\n\t\tButtonProp,\n\t\tInputProp,\n\t\tImageProp,\n\t\tContents,\n\t\tWebProp,\n\t\tVideoProp,\n\t\tBreadcrumb,\n\t},\n\tsetup(props) {\n\t\t/**\n\t\t * @type {Ref<HTMLDivElement>}\n\t\t */\n\t\tconst propElement = ref();\n\n\t\tconst displayScreenThresholds = inject(\"displayScreenThresholds\");\n\n\t\t/**\n\t\t * Attributes model\n\t\t * @type {ComputedRef<PropAttributes>}\n\t\t */\n\t\tconst attributesModel = computed(() => xoneAttributesHandler.getPropAttributes(props.control.attributes));\n\n\t\t/**\n\t\t * Reactive attributes\n\t\t * @type {Ref<PropAttributes>}\n\t\t */\n\t\tconst attributes = ref({ ...attributesModel.value });\n\n\t\t// Observe changes in attributes model and data model with ##FLD_ fields and fetch them to attributes\n\t\txoneAttributesHandler.watchAttributes(attributes, attributesModel, props.xoneDataObject.model);\n\n\t\t/**\n\t\t * Check if disablevisible\n\t\t * @type {ComputedRef<boolean>}\n\t\t */\n\t\tconst isDisableVisible = computed(() => {\n\t\t\tif ((attributes.value.disableVisible ?? \"\") === \"\") return false;\n\t\t\treturn xoneAttributesHandler.evalFormula(attributes.value.disableVisible, props.xoneDataObject?.model);\n\t\t});\n\n\t\t/**\n\t\t * Image size\n\t\t * @type {Ref<number|null>}\n\t\t */\n\t\tlet imgSize = ref(null);\n\n\t\tconst calculateImgSize = async () => {\n\t\t\tif (!attributes.value.image) return;\n\t\t\tconst imgPathSize = await getImagePathAndSize(attributes.value.image, \"files\");\n\t\t\tif (!imgPathSize) return;\n\t\t\timgSize.value = {\n\t\t\t\twidth: xoneAttributesHandler.getScaledSize(imgPathSize.imgSize.width + \"px\", props.containerWidth, widthFactor.value),\n\t\t\t\theight: xoneAttributesHandler.getScaledSize(imgPathSize.imgSize.height + \"px\", props.containerHeight, heightFactor.value),\n\t\t\t};\n\t\t};\n\n\t\t// Recalculate image size if attributes.image change\n\t\tonMounted(() => calculateImgSize());\n\n\t\twatch(\n\t\t\t() => props.containerHeight,\n\t\t\t() => calculateImgSize()\n\t\t);\n\n\t\tconst finalImgSize = computed(() => {\n\t\t\tlet width = controlWidth.value;\n\t\t\tif (!width && imgSize.value) {\n\t\t\t\tif (controlHeight.value) width = (controlHeight.value * imgSize.value.width) / imgSize.value.height;\n\t\t\t\telse width = imgSize.value.width;\n\t\t\t}\n\n\t\t\tlet height = controlHeight.value;\n\t\t\tif (!height && imgSize.value) {\n\t\t\t\tif (controlWidth.value) height = (controlWidth.value * imgSize.value.height) / imgSize.value.width;\n\t\t\t\telse height = imgSize.value.height;\n\t\t\t}\n\n\t\t\treturn { width, height };\n\t\t});\n\n\t\t/**\n\t\t * Input type depending on prop type\n\t\t * @type {ComputedRef<string>}\n\t\t */\n\t\tconst inputType = computed(() => {\n\t\t\tif (\n\t\t\t\tattributes.value.viewMode === \"breadcrumbview\" ||\n\t\t\t\tattributes.value.viewMode === \"breadcrumbsview\" ||\n\t\t\t\tattributes.value.viewMode === \"breadcumbview\" ||\n\t\t\t\tattributes.value.viewMode === \"routerview\"\n\t\t\t)\n\t\t\t\treturn null;\n\t\t\tswitch (attributes.value.type) {\n\t\t\t\tcase \"T\":\n\t\t\t\t\treturn \"text\";\n\t\t\t\tcase \"X\":\n\t\t\t\t\treturn \"password\";\n\t\t\t\tcase \"N\":\n\t\t\t\t\tif (attributes.value.viewMode === \"slider\") return \"range\";\n\t\t\t\t\treturn \"number\";\n\t\t\t\tcase \"NC\":\n\t\t\t\t\treturn \"checkbox\";\n\t\t\t\tcase \"D\":\n\t\t\t\t\treturn \"date\";\n\t\t\t\tcase \"TT\":\n\t\t\t\t\treturn \"time\";\n\t\t\t\tcase \"DT\":\n\t\t\t\t\treturn \"datetime-local\";\n\t\t\t\tcase \"AT\":\n\t\t\t\t\treturn \"text\";\n\t\t\t\tcase \"TL\":\n\t\t\t\t\treturn \"text\";\n\t\t\t\tdefault:\n\t\t\t\t\tif (attributes.value.type.length != 0 && attributes.value.type[0] === \"N\") return \"number\";\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * Scale Factor\n\t\t * @type {{widthFactor: ComputedRef<number>, heightFactor: ComputedRef<number>}}\n\t\t */\n\t\tconst { widthFactor, heightFactor } = inject(\"scaleFactor\");\n\n\t\t/**\n\t\t * Calculate width of the current prop\n\t\t * @type {ComputedRef<number>}\n\t\t */\n\t\tconst controlWidth = computed(() => xoneAttributesHandler.getScaledSize(attributes.value.width, props.containerWidth, widthFactor.value));\n\n\t\t/**\n\t\t * Calculate height of the current prop\n\t\t * @type {ComputedRef<number>}\n\t\t */\n\t\tconst controlHeight = computed(() => xoneAttributesHandler.getScaledSize(attributes.value.height, props.containerHeight, heightFactor.value));\n\n\t\t/**\n\t\t * Margins of the current prop\n\t\t * @type {ComputedRef<Margins>}\n\t\t */\n\t\tconst margins = computed(() => ({\n\t\t\ttop: xoneAttributesHandler.getScaledSize(attributes.value.margins.top, props.containerHeight, heightFactor.value) ?? 0,\n\t\t\tleft: xoneAttributesHandler.getScaledSize(attributes.value.margins.left, props.containerWidth, widthFactor.value) ?? 0,\n\t\t\tbottom: xoneAttributesHandler.getScaledSize(attributes.value.margins.bottom, props.containerHeight, heightFactor.value) ?? 0,\n\t\t\tright: xoneAttributesHandler.getScaledSize(attributes.value.margins.right, props.containerWidth, widthFactor.value) ?? 0,\n\t\t}));\n\n\t\t/**\n\t\t * calculate floating top\n\t\t * @type {ComputedRef<string>}\n\t\t */\n\t\tconst floatingTop = computed(() => xoneAttributesHandler.getScaledPosition(attributes.value.floating.top, heightFactor.value));\n\n\t\t/**\n\t\t * calculate floating leeft\n\t\t * @type {ComputedRef<string>}\n\t\t */\n\t\tconst floatingLeft = computed(() => xoneAttributesHandler.getScaledPosition(attributes.value.floating.left, widthFactor.value));\n\n\t\t/**\n\t\t * Check if disableedit\n\t\t * @type {ComputedRef<boolean>}\n\t\t */\n\t\tconst isDisableEdit = computed(() => {\n\t\t\tif ((attributes.value.disableEdit ?? \"\") === \"\") return false;\n\t\t\treturn xoneAttributesHandler.evalFormula(attributes.value.disableEdit, props.xoneDataObject.model);\n\t\t});\n\n\t\t/**\n\t\t * Padding\n\t\t * @type {ComputedRef<Paddings>}\n\t\t */\n\t\tconst paddings = computed(() => {\n\t\t\treturn {\n\t\t\t\ttop: xoneAttributesHandler.getScaledSize(attributes.value.paddings.top, props.containerHeight, heightFactor.value) || 5,\n\t\t\t\tright: xoneAttributesHandler.getScaledSize(attributes.value.paddings.right, props.containerWidth, widthFactor.value) || 5,\n\t\t\t\tbottom: xoneAttributesHandler.getScaledSize(attributes.value.paddings.bottom, props.containerHeight, heightFactor.value) || 5,\n\t\t\t\tleft: xoneAttributesHandler.getScaledSize(attributes.value.paddings.left, props.containerWidth, widthFactor.value) || 5,\n\t\t\t};\n\t\t});\n\n\t\t/**\n\t\t * Calculate the checkbox size\n\t\t * @type {ComputedRef<string|null>}\n\t\t */\n\t\tconst checkboxSize = computed(() => {\n\t\t\tif (attributes.value.imgWidth) return xoneAttributesHandler.getScaledSize(attributes.value.imgWidth, props.containerWidth, widthFactor.value);\n\t\t\telse if (attributes.value.imageHeight)\n\t\t\t\treturn xoneAttributesHandler.getScaledSize(attributes.value.imgHeight, props.containerHeight, widthFactor.value);\n\t\t\treturn null;\n\t\t});\n\n\t\t// Execute postonchange method\n\n\t\t/**\n\t\t * Last breadcrumb in stack\n\t\t * @type {ComputedRef<import('../composables/AppDataHandler').Breadcrumb>}\n\t\t */\n\t\tconst lastBreadcrumb = inject(\"lastBreadcrumb\");\n\n\t\t// Inject breadcrumbId info to child components\n\t\tconst breadcrumbId = inject(\"breadcrumbId\");\n\n\t\tnextTick(() => {\n\t\t\tif (!attributes.value.postOnchange) return;\n\t\t\twatch(\n\t\t\t\t() => lastBreadcrumb.value,\n\t\t\t\tasync (newValue) => {\n\t\t\t\t\tif (newValue.id !== breadcrumbId) return;\n\t\t\t\t\txoneAttributesHandler.executeMethod(attributes.value.postOnchange, props.xoneDataObject, attributes.value.name);\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\n\t\t//\n\t\t// Designer mode Drag & Drop\n\t\tconst onMouseEnter = () => dragAndDrop.mouseEnter(propElement.value);\n\t\tconst onMouseLeave = () => dragAndDrop.mouseLeave(propElement.value);\n\t\tconst onMouseDown = (e) => dragAndDrop.mouseDown(e);\n\t\tconst onDragOver = (e) => dragAndDrop.mouseMove(e);\n\n\t\treturn {\n\t\t\tpropElement,\n\t\t\tdisplayScreenThresholds,\n\t\t\tattributes,\n\t\t\tinputType,\n\t\t\tcontrolWidth,\n\t\t\tcontrolHeight,\n\t\t\tmargins,\n\t\t\tisDisableVisible,\n\t\t\tfinalImgSize,\n\t\t\tfloatingTop,\n\t\t\tfloatingLeft,\n\t\t\tisDisableEdit,\n\t\t\tpaddings,\n\t\t\tcheckboxSize,\n\t\t\tisInput: computed(() => inputType.value),\n\t\t\tisButton: computed(() => attributes.value.type === \"B\"),\n\t\t\tisImage: computed(() => attributes.value.type === \"IMG\" || attributes.value.type === \"PH\" || attributes.value.type === \"DR\"),\n\t\t\tisContents: computed(() => attributes.value.type === \"Z\" || attributes.value.viewMode === \"routerview\"),\n\t\t\tisWeb: computed(() => attributes.value.type === \"WEB\"),\n\t\t\tisVideo: computed(() => attributes.value.type === \"VD\"),\n\t\t\tisBreadcrumb: computed(\n\t\t\t\t() =>\n\t\t\t\t\tattributes.value.viewMode === \"breadcrumbview\" ||\n\t\t\t\t\tattributes.value.viewMode === \"breadcrumbsview\" ||\n\t\t\t\t\tattributes.value.viewMode === \"breadcumbview\"\n\t\t\t),\n\t\t\tisDesigner: dragAndDrop.getIsDesigner(),\n\t\t\tisDragging: dragAndDrop.getIsDragging(),\n\t\t\tisDesignerPropSelected: computed(() => dragAndDrop.getSelectedControl()?.value === propElement.value),\n\t\t\tborderDesignSelected: dragAndDrop.getBorderSelected(),\n\t\t\tborderDesignOver: dragAndDrop.getBorderPropOver(),\n\t\t\tonMouseEnter,\n\t\t\tonMouseLeave,\n\t\t\tonMouseDown,\n\t\t\tonDragOver,\n\t\t};\n\t},\n};\n</script>\n\n<style scoped>\n.xone-prop {\n\tdisplay: flex;\n\tposition: relative;\n\talign-items: flex-start;\n\tjustify-content: flex-start;\n\tbox-sizing: border-box;\n\t-moz-box-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\tmargin-top: var(--margin-top);\n\tmargin-right: var(--margin-right);\n\tmargin-bottom: var(--margin-bottom);\n\tmargin-left: var(--margin-left);\n\tanimation: fadeIn 0.3s;\n}\n</style>\n","<template>\n\t<!-- Input Checkbox -->\n\t<Checkbox\n\t\tv-if=\"attributes.type === 'NC'\"\n\t\t:attributes=\"attributes\"\n\t\t:xoneDataObject=\"xoneDataObject\"\n\t\t:isDisabled=\"attributes.locked || isDisableEdit || isLinked || (objectInfo.isContents && !objectInfo.editInRow)\"\n\t\t:controlWidth=\"controlWidth\"\n\t\t:controlHeight=\"controlHeight\"\n\t\t:checkboxSize=\"checkboxSize\"\n\t></Checkbox>\n\t<!-- label -->\n\t<div\n\t\tv-if=\"attributes.labelWidth != 0 && !attributes.floatingTooltip\"\n\t\tclass=\"xone-input-label\"\n\t\t:style=\"{\n\t\t\t// Size\n\t\t\theight: 'var(--label-height)',\n\t\t\twidth: (attributes.type === 'TL' && '100%') || attributes.labelWidth,\n\t\t\t// Font\n\t\t\tfontSize: attributes.fontSize,\n\t\t\t// Background\n\t\t\tbackgroundColor: attributes.bgColor,\n\t\t\t// Borders\n\t\t\tborder: attributes.labelBox && `1px solid ${attributes.borderColor}`,\n\t\t\t// is CheckBox? -> Grow\n\t\t\tflexGrow: attributes.type === 'NC' && 1,\n\t\t}\"\n\t>\n\t\t<label\n\t\t\t:style=\"{\n\t\t\t\t// Font\n\t\t\t\tcolor: attributes.foreColor,\n\t\t\t\tfontSize: attributes.fontSize,\n\t\t\t\t// Align\n\t\t\t\talignItems: attributes.labelAlign,\n\t\t\t\tjustifyContent: attributes.labelAlign,\n\t\t\t\t// Paddings\n\t\t\t\tpaddingTop: attributes.type === 'TL' ? 'var(--padding-top)' : null,\n\t\t\t\tpaddingRight: attributes.type === 'TL' ? 'var(--padding-right)' : null,\n\t\t\t\tpaddingBottom: attributes.type === 'TL' ? 'var(--padding-bottom)' : null,\n\t\t\t\tpaddingLeft: attributes.type === 'TL' ? 'var(--padding-left)' : null,\n\t\t\t}\"\n\t\t\tclass=\"xone-title\"\n\t\t\t:class=\"{\n\t\t\t\tnoEditInRow: objectInfo.isContents && !objectInfo.editInRow,\n\t\t\t}\"\n\t\t\t>{{ attributes.title }}</label\n\t\t>\n\t</div>\n\t<!-- Input -->\n\t<div class=\"xone-input-container\" v-if=\"attributes.type != 'TL' && attributes.type !== 'NC'\">\n\t\t<!-- 1 line -->\n\t\t<input\n\t\t\tv-if=\"!attributes.multiLine\"\n\t\t\tref=\"inputElement\"\n\t\t\trequired\n\t\t\t:disabled=\"attributes.type === 'AT' || attributes.locked || isDisableEdit || isLinked || (objectInfo.isContents && !objectInfo.editInRow)\"\n\t\t\t@input=\"onInput\"\n\t\t\t:value=\"propValue\"\n\t\t\t:type=\"inputType\"\n\t\t\t:step=\"numberStep\"\n\t\t\t:maxlength=\"(attributes.fixedText && attributes.size) || null\"\n\t\t\t:style=\"{\n\t\t\t\t// Size\n\t\t\t\twidth: (attributes.width !== undefined && '100%') || attributes.fieldSize,\n\t\t\t\theight: (controlHeight && `${controlHeight - 11}px`) || attributes.lines,\n\t\t\t\t// Border\n\t\t\t\tborderRadius: attributes.borderCornerRadius,\n\t\t\t\t// Text\n\t\t\t\ttextAlign: attributes.textAlign || attributes.align,\n\t\t\t\ttextOverflow: attributes.textOverflow,\n\t\t\t\tfontSize: attributes.textFontSize ? attributes.textFontSize : attributes.fontSize,\n\t\t\t\t// Is Linked? -> padding-right in order to show the search button\n\t\t\t\tpaddingRight: isLinked && '35px',\n\t\t\t}\"\n\t\t\t:class=\"{\n\t\t\t\tnobordertop: !attributes.borders.top,\n\t\t\t\tnoborderright: !attributes.borders.right,\n\t\t\t\tnoborderbottom: !attributes.borders.bottom,\n\t\t\t\tnoborderleft: !attributes.borders.left,\n\t\t\t\tnoEditInRow: objectInfo.isContents && !objectInfo.editInRow,\n\t\t\t}\"\n\t\t\t@change=\"onChange()\"\n\t\t\t@focus=\"onFocusChanged(true)\"\n\t\t\t@blur=\"onFocusChanged(false)\"\n\t\t\t@keydown=\"onKeyPress\"\n\t\t/>\n\t\t<!-- \n        disabled: attributes.locked || isDisableEdit || isLinked, -->\n\t\t<!-- multi line -->\n\t\t<textarea\n\t\t\tref=\"textAreaElement\"\n\t\t\tv-else\n\t\t\trequired\n\t\t\t:disabled=\"attributes.type === 'AT' || attributes.locked || isDisableEdit || isLinked || (objectInfo.isContents && !objectInfo.editInRow)\"\n\t\t\t@input=\"onInput\"\n\t\t\t:value=\"propValue\"\n\t\t\t:maxlength=\"(attributes.fixedText && attributes.size) || null\"\n\t\t\t:style=\"{\n\t\t\t\t// Size\n\t\t\t\twidth: (attributes.width && '99%') || attributes.fieldSize,\n\t\t\t\theight: (controlHeight && `${controlHeight - 11}px`) || attributes.lines,\n\t\t\t\t// Border\n\t\t\t\tborderRadius: attributes.borderCornerRadius,\n\t\t\t\t// Text\n\t\t\t\ttextAlign: attributes.textAlign && attributes.textAlign,\n\t\t\t\ttextOverflow: attributes.textOverflow,\n\t\t\t\tfontSize: attributes.textFontSize ? attributes.textFontSize : attributes.fontSize,\n\t\t\t\t// Is Linked? -> padding-right in order to show the search button\n\t\t\t\tpaddingRight: isLinked && '35px',\n\t\t\t}\"\n\t\t\t:class=\"{\n\t\t\t\tnobordertop: !attributes.borders.top,\n\t\t\t\tnoborderright: !attributes.borders.right,\n\t\t\t\tnoborderbottom: !attributes.borders.bottom,\n\t\t\t\tnoborderleft: !attributes.borders.left,\n\t\t\t\tdisabled: attributes.locked || isDisableEdit,\n\t\t\t\tnoEditInRow: objectInfo.isContents && !objectInfo.editInRow,\n\t\t\t}\"\n\t\t\t@change=\"onChange()\"\n\t\t\t@focus=\"onFocusChanged(true)\"\n\t\t\t@blur=\"onFocusChanged(false)\"\n\t\t\t@keydown=\"onKeyPress\"\n\t\t/>\n\t\t<!-- Linked search button -->\n\t\t<button\n\t\t\tv-if=\"isLinked && !(objectInfo.isContents && !objectInfo.editInRow)\"\n\t\t\tref=\"linkedSearchElement\"\n\t\t\tclass=\"xone-input xone-input-linked\"\n\t\t\t:style=\"{\n\t\t\t\topacity: attributes.locked || isDisableEdit ? 0.5 : 1,\n\t\t\t\tcursor: attributes.locked || isDisableEdit ? 'default' : 'pointer',\n\t\t\t\t'--image-showinline': `url(${appPath}/assets/showinline.png)`,\n\t\t\t}\"\n\t\t\t:disabled=\"attributes.locked || isDisableEdit\"\n\t\t\t@click=\"onLinkedSearchButtonClick\"\n\t\t></button>\n\t\t<!-- Attach button -->\n\t\t<button\n\t\t\tv-if=\"attributes.type === 'AT' && !(objectInfo.isContents && !objectInfo.editInRow)\"\n\t\t\tref=\"linkedSearchElement\"\n\t\t\tclass=\"xone-input xone-input-attach\"\n\t\t\t:style=\"{\n\t\t\t\topacity: attributes.locked || isDisableEdit ? 0.5 : 1,\n\t\t\t\tcursor: attributes.locked || isDisableEdit ? 'default' : 'pointer',\n\t\t\t\t'--image-showinline': `url(${appPath}/assets/attach.png)`,\n\t\t\t}\"\n\t\t\t:disabled=\"attributes.locked || isDisableEdit\"\n\t\t\t@click=\"onAttachButtonClick\"\n\t\t></button>\n\t\t<!-- Linked search component -->\n\t\t<LinkedSearchInline\n\t\t\tv-if=\"isLinkedSearchVisible\"\n\t\t\t:xoneDataObject=\"xoneDataObject\"\n\t\t\t:attributes=\"attributes\"\n\t\t\t@onHide=\"isLinkedSearchVisible = false\"\n\t\t\t@onSelectedItem=\"onSelectedItem\"\n\t\t\t:linkedSearchPosition=\"linkedSearchPosition\"\n\t\t></LinkedSearchInline>\n\t\t<!-- Tooltip -->\n\t\t<label\n\t\t\tv-if=\"!['D', 'DT', 'TT'].includes(attributes.type) && attributes.tooltip !== '' && !attributes.locked && !isDisableEdit\"\n\t\t\t:class=\"[\n\t\t\t\t'xone-tooltip',\n\t\t\t\tattributes.floatingTooltip ? 'float' : 'nofloat',\n\t\t\t\tattributes.floatingTooltip && propValue && isLinked ? 'linked-input-fill' : '',\n\t\t\t]\"\n\t\t\t:for=\"attributes.name\"\n\t\t\t:style=\"{\n\t\t\t\tcolor: attributes.tooltipColor,\n\t\t\t\ttextAlign: attributes.textAlign,\n\t\t\t\t'--floating-tooltip-transform': floatingTooltipTransform,\n\t\t\t}\"\n\t\t\t>{{ propValue && !attributes.floatingTooltip ? \"\" : attributes.tooltip }}</label\n\t\t>\n\t</div>\n</template>\n\n<script>\nimport { computed, inject, ref, Ref, ComputedRef, watch, PropType, onMounted, onUnmounted, nextTick } from \"vue\";\n\nimport { xoneAttributesHandler, PropAttributes } from \"../../composables/XoneAttributesHandler\";\nimport { XoneDataObject } from \"../../composables/appData/core/XoneDataObject\";\nimport xoneUI from \"../../composables/XoneUI\";\nimport LinkedSearchInline from \"./LinkedSearchInline.vue\";\nimport Checkbox from \"./inputComponents/Checkbox.vue\";\nimport { XoneControl, XoneView } from \"../../composables/XoneViewsHandler\";\nimport { getAppPath } from \"../../composables/helperFunctions/ImageHelper\";\n\nexport default {\n\tcomponents: { Checkbox, LinkedSearchInline },\n\tprops: {\n\t\t/** xoneDataObject\n\t\t * @type {PropType<XoneDataObject>}\n\t\t */\n\t\txoneDataObject: { type: Object, required: true },\n\t\t/** attributes\n     @type {PropType<PropAttributes>} \n     */\n\t\tattributes: { type: Object, required: true },\n\t\tisDisableEdit: { type: Boolean, required: true },\n\t\tcheckboxSize: { type: Number, default: null },\n\t\tcontrolWidth: { type: Number, default: 0 },\n\t\tcontrolHeight: { type: Number, default: 0 },\n\t\tinputType: { type: String, default: \"text\" },\n\t},\n\tsetup(props) {\n\t\t/**\n\t\t * Get editInRow=\"false\" if prop is in contents\n\t\t * @type {import('../../composables/AppDataHandler').Objectinfo}\n\t\t */\n\t\tconst objectInfo = inject(\"objectInfo\");\n\n\t\tconst editInRow = objectInfo?.editInRow;\n\n\t\t/**\n\t\t * Numeric step if property is float\n\t\t * @type {ComputedRef<string>}\n\t\t */\n\t\tconst numberStep = computed(() => {\n\t\t\tif (props.attributes.type.length === 2 && props.attributes.type[0] === \"N\") {\n\t\t\t\tconst n = parseInt(props.attributes.type[1]);\n\t\t\t\treturn isNaN(n) ? \"\" : `.${Array(n).join(\"0\")}1`;\n\t\t\t}\n\t\t\treturn \"\";\n\t\t});\n\n\t\t/**\n\t\t * Is linked property\n\t\t * @type {ComputedRef<boolean>}\n\t\t */\n\t\tconst isLinked = computed(() => {\n\t\t\treturn props.attributes.linkedTo && props.attributes.linkedTo !== \"\" && props.attributes.linkedField && props.attributes.linkedField !== \"\";\n\t\t});\n\n\t\t// show / hide linked search modal\n\t\tconst isLinkedSearchVisible = ref(false);\n\n\t\t//\n\t\t// item selected from the linked search\n\t\tconst onSelectedItem = ({ mapValue, value }) => {\n\t\t\t// Assign value to map prop\n\t\t\tprops.xoneDataObject.changeModelValue(props.attributes.linkedTo, mapValue);\n\t\t\t// Assing value to prop\n\t\t\tpropValue.value = value;\n\t\t};\n\n\t\t/**\n\t\t * prop model value\n\t\t * @type {Ref<any>}\n\t\t */\n\t\tconst propValue = ref();\n\n\t\tonMounted(() => onChangeModelValue(props.xoneDataObject.model[props.attributes.name]));\n\n\t\t/**\n\t\t * textAreaElement\n\t\t * @type {Ref<HTMLElement|null>}\n\t\t */\n\t\tconst textAreaElement = ref();\n\n\t\tnextTick(() => fitGrowTextArea());\n\n\t\t//\n\t\t//Adjust textarea element height auto\n\t\tconst fitGrowTextArea = async () => {\n\t\t\tif (!props.attributes.multiLine) return;\n\t\t\tif (!textAreaElement.value) return;\n\t\t\tif (props.attributes.height !== \"grow\" && props.attributes.height !== \"auto\") return;\n\n\t\t\tawait nextTick();\n\t\t\ttextAreaElement.value.style.height = \"1px\";\n\t\t\ttextAreaElement.value.style.height = textAreaElement.value.scrollHeight + \"px\";\n\n\t\t\tawait new Promise((resolve) => setTimeout(() => resolve(), 50));\n\n\t\t\tif (textAreaElement.value?.scrollHeight === 0 || textAreaElement.value?.clientHeight !== textAreaElement.value?.scrollHeight) fitGrowTextArea();\n\t\t};\n\n\t\t// Get appData model value\n\t\twatch(\n\t\t\t() => props.xoneDataObject.model[props.attributes.name],\n\t\t\t(newValue) => onChangeModelValue(newValue)\n\t\t);\n\n\t\t// On Model Value Changed\n\t\tconst onChangeModelValue = (newValue) => {\n\t\t\ttry {\n\t\t\t\tfitGrowTextArea();\n\n\t\t\t\tif (props.attributes.type.startsWith(\"D\")) {\n\t\t\t\t\t/**\n\t\t\t\t\t * value\n\t\t\t\t\t * @type {Date}\n\t\t\t\t\t */\n\t\t\t\t\tconst value = newValue;\n\t\t\t\t\tif (!value) return;\n\t\t\t\t\tpropValue.value = value.toXoneDate(props.attributes.type);\n\t\t\t\t}\n\t\t\t\t// TODO: Cambiar esto. Ahora gestiono el enconding BASE64 desde el UI, de momento la maquinaria tiene un bug por el que devuelve a la UI la codificación con carácteres extra\n\t\t\t\telse if (props.attributes.type === \"X\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tpropValue.value = atob(newValue);\n\t\t\t\t\t} catch {\n\t\t\t\t\t\tpropValue.value = newValue;\n\t\t\t\t\t}\n\t\t\t\t} else if (propValue.value !== newValue) propValue.value = newValue;\n\t\t\t} catch (ex) {\n\t\t\t\tconsole.error(ex);\n\t\t\t}\n\t\t};\n\n\t\t// Last key pressed\n\t\tlet keyPressed = \"\";\n\t\tlet isExecutingAction = false;\n\n\t\tconst onKeyPress = ({ key }) => {\n\t\t\tif (key !== \"Enter\") return;\n\t\t\t// set Last key\n\t\t\tkeyPressed = key;\n\t\t\t// Execute oneditaction\n\t\t\tif (props.attributes.onEditorAction && !isExecutingAction) {\n\t\t\t\tisExecutingAction = true;\n\t\t\t\txoneAttributesHandler\n\t\t\t\t\t.executeMethod(props.attributes.onEditorAction, props.xoneDataObject)\n\t\t\t\t\t.catch(console.error)\n\t\t\t\t\t.finally(() => (isExecutingAction = false));\n\t\t\t}\n\t\t\t// Execute binded event in script\n\t\t\txoneAttributesHandler.executeBindedEvent(props.xoneDataObject, props.attributes, \"oneditoraction\", {});\n\t\t};\n\n\t\t// Update appData model value\n\t\tconst onInput = async ({ target }) => {\n\t\t\tconst oldValue = propValue.value;\n\t\t\tconst newValue = target.value;\n\t\t\t// In mobile keypress does not work\n\t\t\tif (!keyPressed || keyPressed === \"Unidentified\") {\n\t\t\t\tif (newValue.includes(oldValue)) keyPressed = newValue.replace(oldValue, \"\");\n\t\t\t}\n\n\t\t\t// propValue.value = target.value;\n\t\t\tif (props.xoneDataObject[props.attributes.name] === newValue) return;\n\n\t\t\ttry {\n\t\t\t\t// Update data model\n\t\t\t\tif (props.attributes.type.startsWith(\"D\")) {\n\t\t\t\t\tprops.xoneDataObject.changeModelValue(props.attributes.name, new Date(newValue));\n\t\t\t\t}\n\t\t\t\t// TODO: Cambiar esto. Ahora gestiono el enconding BASE64 desde el UI, de momento la maquinaria tiene un bug por el que devuelve a la UI la codificación con carácteres extra\n\t\t\t\telse if (props.attributes.type === \"X\") {\n\t\t\t\t\tprops.xoneDataObject.changeModelValue(props.attributes.name, btoa(newValue));\n\t\t\t\t} else props.xoneDataObject.changeModelValue(props.attributes.name, newValue);\n\n\t\t\t\ttry {\n\t\t\t\t\tif (props.attributes.onTextChanged)\n\t\t\t\t\t\tawait props.xoneDataObject.DoRunScriptAsync(\n\t\t\t\t\t\t\t`let e = { target: '${props.attributes.name}', objItem: '${props.attributes.name}', newText: '${newValue}', oldText: '${oldValue}', keyPressed: '${keyPressed}' };\n                  \t\t\t${props.attributes.onTextChanged}`\n\t\t\t\t\t\t);\n\t\t\t\t} catch (ex) {\n\t\t\t\t\txoneUI.showSnackbar({\n\t\t\t\t\t\ttext: ex,\n\t\t\t\t\t\tcolor: \"red\",\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t// Execute binded event in script\n\t\t\t\tawait xoneAttributesHandler.executeBindedEvent(props.xoneDataObject, props.attributes, \"ontextchanged\", {\n\t\t\t\t\tnewText: newValue,\n\t\t\t\t\toldText: oldValue,\n\t\t\t\t\tkeyPressed,\n\t\t\t\t});\n\t\t\t} catch (ex) {\n\t\t\t\tconsole.error(ex);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * on value change\n\t\t */\n\t\tconst onChange = async () => {\n\t\t\ttry {\n\t\t\t\tif (editInRow && objectInfo.autosave) {\n\t\t\t\t\tawait props.xoneDataObject.save();\n\t\t\t\t}\n\t\t\t} catch (ex) {\n\t\t\t\txoneUI.showSnackbar({\n\t\t\t\t\ttext: ex,\n\t\t\t\t\tcolor: \"red\",\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * xoneView\n\t\t * @type {XoneView}\n\t\t */\n\t\tconst xoneView = inject(\"xoneView\");\n\t\tonMounted(() => {\n\t\t\t// Add control to view\n\t\t\txoneView.addControl(new XoneControl(props.attributes.name, inputElement.value || textAreaElement.value));\n\t\t});\n\n\t\t// Check if an input is focused in order to handle keyboard in mobile devices\n\t\tconst isInputFocused = inject(\"isInputFocused\");\n\n\t\tonUnmounted(() => (isInputFocused.value = false));\n\n\t\t/**\n\t\t * on focus changed\n\t\t */\n\t\tconst onFocusChanged = async (isFocused) => {\n\t\t\ttry {\n\t\t\t\tisInputFocused.value = isFocused;\n\t\t\t\tif (props.attributes.onFocusChanged)\n\t\t\t\t\tawait props.xoneDataObject.DoRunScriptAsync(\n\t\t\t\t\t\t`let e = { target: '${props.attributes.name}',objItem: '${props.attributes.name}',isFocused: ${isFocused} };\n            ${props.attributes.onFocusChanged}`\n\t\t\t\t\t);\n\t\t\t} catch (ex) {\n\t\t\t\txoneUI.showSnackbar({\n\t\t\t\t\ttext: ex,\n\t\t\t\t\tcolor: \"red\",\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Execute binded event in script\n\t\t\tawait xoneAttributesHandler.executeBindedEvent(props.xoneDataObject, props.attributes, \"onfocuschanged\", { isFocused });\n\t\t};\n\n\t\t/**\n\t\t * Window Size\n\t\t * @type {{containerHeight: Ref<number>|ComputedRef<number>, containerWidth: Ref<number>|ComputedRef<number>}}\n\t\t */\n\t\tconst { containerHeight, containerWidth } = inject(\"containerSize\");\n\t\twatch(\n\t\t\t() => containerHeight.value,\n\t\t\t() => fitGrowTextArea()\n\t\t);\n\t\twatch(\n\t\t\t() => containerWidth.value,\n\t\t\t() => fitGrowTextArea()\n\t\t);\n\n\t\t/**\n\t\t * floating tooltip on focus transform\n\t\t * @type {ComputedRef<string|null>}\n\t\t */\n\t\tconst floatingTooltipTransform = computed(() => {\n\t\t\tif (!props.attributes.floatingTooltip) return null; // Not floating prop\n\t\t\tif (props.controlHeight && props.controlHeight !== 0)\n\t\t\t\t// Is floating and returns control height\n\t\t\t\treturn `translate3d(-.5rem, calc(${\n\t\t\t\t\t// Is floating and returns default value\n\t\t\t\t\t(-1 * props.controlHeight) / 2\n\t\t\t\t}px + .4rem), 0)`;\n\t\t\treturn \"translate3d(-.5rem, -1.5rem, 0)\";\n\t\t});\n\n\t\t/**\n\t\t * linkedSearchElement\n\t\t * @type {Ref<HTMLElement>}\n\t\t */\n\t\tconst linkedSearchElement = ref();\n\n\t\t/**\n\t\t * inputElement\n\t\t * @type {Ref<HTMLElement>}\n\t\t */\n\t\tconst inputElement = ref();\n\n\t\tconst linkedSearchPosition = ref();\n\n\t\tconst onLinkedSearchButtonClick = () => {\n\t\t\tcalculateLinkedSearchButtonPosition();\n\t\t\tisLinkedSearchVisible.value = true;\n\t\t};\n\n\t\tconst onAttachButtonClick = () => xoneUI.pickFile(props.attributes.name, props.attributes.allowedExtensions);\n\n\t\tconst calculateLinkedSearchButtonPosition = () => {\n\t\t\tif (!linkedSearchElement.value) return;\n\n\t\t\tconst element = inputElement.value || textAreaElement.value;\n\n\t\t\tlinkedSearchPosition.value = {\n\t\t\t\ttop: linkedSearchElement.value.getBoundingClientRect().top,\n\t\t\t\tleft: linkedSearchElement.value.getBoundingClientRect().left - (window.innerWidth - containerWidth.value) / 2,\n\t\t\t\twidth: element.offsetWidth - linkedSearchElement.value.offsetWidth - 40,\n\t\t\t\theight: element.offsetHeight,\n\t\t\t};\n\t\t};\n\n\t\tconst onLabelClick = () => {\n\t\t\tif (!props.attributes.type === \"NC\") return;\n\t\t\tif (propValue.value === 0) propValue.value = 1;\n\t\t\telse propValue.value = 0;\n\t\t\tprops.xoneDataObject.changeModelValue(props.attributes.name, propValue.value);\n\t\t};\n\n\t\treturn {\n\t\t\tnumberStep,\n\t\t\tisLinked,\n\t\t\tisLinkedSearchVisible,\n\t\t\tonSelectedItem,\n\t\t\tpropValue,\n\t\t\tobjectInfo,\n\t\t\ttextAreaElement,\n\t\t\tonInput,\n\t\t\tonChange,\n\t\t\tonFocusChanged,\n\t\t\tonKeyPress,\n\t\t\tfloatingTooltipTransform,\n\t\t\tonLinkedSearchButtonClick,\n\t\t\tonAttachButtonClick,\n\t\t\tlinkedSearchElement,\n\t\t\tinputElement,\n\t\t\tlinkedSearchPosition,\n\t\t\tappPath: getAppPath(),\n\t\t\tonLabelClick,\n\t\t};\n\t},\n};\n</script>\n\n<style scoped>\n* {\n\tfont-weight: var(--text-weight);\n}\n\n/* label container */\n.xone-input-label {\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\theight: 100%;\n\n\t/* border-radius: 3px; */\n}\n\n/* prepend label */\n.xone-title {\n\tdisplay: inline-block;\n\twidth: 100%;\n\tflex-grow: 1;\n\tvertical-align: middle;\n\theight: auto;\n\tdisplay: flex;\n\talign-items: flex-start;\n\tmargin: 5px;\n}\n\n/* input */\n.xone-input-container {\n\tdisplay: flex;\n\tposition: relative;\n\talign-items: center;\n\tflex-grow: 1;\n\tflex-shrink: 2;\n}\n\ninput,\ntextarea {\n\tflex-grow: 1;\n\tflex-shrink: 2;\n\tborder: 1px solid var(--border-color);\n\twidth: 12rem;\n\tresize: none;\n\tbackground-color: var(--input-bgcolor);\n\tcolor: var(--input-forecolor);\n\tpadding-top: var(--padding-top);\n\tpadding-right: var(--padding-right);\n\tpadding-bottom: var(--padding-bottom);\n\tpadding-left: var(--padding-left);\n}\n\ninput:focus,\ntextarea:focus {\n\toutline: none;\n}\n\n.xone-input {\n\tposition: absolute;\n\tright: 0;\n\tbackground-color: transparent;\n\tborder: none;\n\tbackground-image: var(--image-showinline);\n\tbackground-repeat: no-repeat;\n\tbackground-position: center;\n\toutline: none;\n\twidth: 30px;\n\theight: 30px;\n\tpadding: 10px 20px;\n}\n\n.xone-input-linked {\n\tbackground-size: 16px 16px;\n}\n\n.xone-input-attach {\n\tbackground-size: 20px 20px;\n}\n\n.xone-input-linked:hover {\n\tcursor: pointer;\n\tborder-radius: 3px;\n}\n\n.noEditInRow {\n\tcursor: pointer;\n\tpointer-events: none;\n}\n\n.nobordertop {\n\tborder-top: 0;\n}\n\n.noborderright {\n\tborder-right: 0;\n}\n\n.noborderbottom {\n\tborder-bottom: 0;\n}\n\n.noborderleft {\n\tborder-left: 0;\n}\n\n/* tooltip */\n.xone-tooltip {\n\tposition: absolute;\n\tpadding: 7px 0 0 13px;\n\ttransition: all 200ms;\n\topacity: 0.5;\n\tflex-grow: 0;\n\tfont-size: 0.8rem;\n\theight: auto;\n\tpointer-events: none;\n\n\tpadding-top: var(--padding-top);\n\tpadding-right: var(--padding-right);\n\tpadding-bottom: var(--padding-bottom);\n\tpadding-left: var(--padding-left);\n}\n\n.float {\n\ttop: auto;\n}\n\n.nofloat {\n\ttop: auto;\n\twidth: 100%;\n}\n\ninput:focus + .float,\ninput:valid + .float,\n.linked-input-fill {\n\tfont-size: 0.8rem;\n\ttransform: var(--floating-tooltip-transform);\n\topacity: 1;\n}\n\ninput:focus + .nofloat,\ninput:valid + .nofloat {\n\topacity: 0;\n}\n\ninput[type=\"number\"]::-webkit-inner-spin-button:disabled,\ninput[type=\"date\"]::-webkit-inner-spin-button:disabled,\ninput[type=\"time\"]::-webkit-inner-spin-button:disabled,\ninput[type=\"datetime-local\"]::-webkit-inner-spin-button:disabled {\n\t-webkit-appearance: none;\n}\n\ninput[type=\"number\"]:disabled,\ninput[type=\"date\"]:disabled,\ninput[type=\"time\"]:disabled,\ninput[type=\"datetime-local\"]:disabled {\n\t-moz-appearance: textfield;\n}\n</style>\n","<template>\n\t<teleport to=\"body\">\n\t\t<div class=\"xone-linked-container\" @click=\"!isMouseOnInput && onHide()\">\n\t\t\t<div\n\t\t\t\tref=\"divElement\"\n\t\t\t\t:style=\"{\n\t\t\t\t\t'--linked-search-max-height': `calc(${containerHeight}px - 50%)`,\n\t\t\t\t\t'--linked-search-max-width': `calc(${maxWidthPosition})`,\n\t\t\t\t\t'--linked-search-min-width': linkedSearchPosition.width + 'px',\n\t\t\t\t\t'--linked-search-table-min-width': linkedSearchPosition.width - (elementHasScroll ? 7 : 0) + 'px',\n\t\t\t\t\t'--linked-search-min-height': '25px',\n\t\t\t\t\t'--linked-search-right-position': rightPosition,\n\t\t\t\t\t'--linked-search-top-position': rows.length === 0 ? linkedSearchPosition.top + 'px' : topPosition,\n\t\t\t\t\toverflow: rows.length === 0 ? 'hidden' : null,\n\t\t\t\t}\"\n\t\t\t>\n\t\t\t\t<!-- <p>{{ attributes.title ? attributes.title : \"\" }}</p> -->\n\t\t\t\t<!--v-if=\"attributes.showInlineKeyboard\"-->\n\n\t\t\t\t<input\n\t\t\t\t\t:style=\"{\n\t\t\t\t\t\t'--image-search-placeholder': `url(${appPath}/assets/search-placeholder.png)`,\n\t\t\t\t\t}\"\n\t\t\t\t\t@input=\"({ target }) => (filterModel = target.value)\"\n\t\t\t\t\t:value=\"filterModel\"\n\t\t\t\t\t@focus=\"onFocus\"\n\t\t\t\t\t@blur=\"onBlur\"\n\t\t\t\t\t@click=\"onFilterSelected\"\n\t\t\t\t\t@mouseover=\"isMouseOnInput = true\"\n\t\t\t\t\t@mouseleave=\"isMouseOnInput = false\"\n\t\t\t\t/>\n\t\t\t\t<table v-show=\"rows.length !== 0\">\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<template class=\"xone-linked-row\" v-for=\"(rowItem, iRows) in filteredRows\" :key=\"`rowItem${iRows}`\">\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td\n\t\t\t\t\t\t\t\t\tv-for=\"(column, iColumns) in rowItem\"\n\t\t\t\t\t\t\t\t\t:key=\"`columnItem${iColumns}`\"\n\t\t\t\t\t\t\t\t\t@click=\"onSelectedItem(column)\"\n\t\t\t\t\t\t\t\t\t:style=\"{ textAlign: column.textAlign }\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{{ column.value }}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t</div>\n\t</teleport>\n</template>\n\n<script>\nimport { inject, Ref, PropType, ref, ComputedRef, onMounted, nextTick, watch, onUnmounted, computed } from \"vue\";\n\nimport { xoneAttributesHandler, PropAttributes } from \"../../composables/XoneAttributesHandler\";\nimport { XoneDataObject } from \"../../composables/appData/core/XoneDataObject\";\nimport { XoneDataCollection } from \"../../composables/appData/core/XoneDataCollection\";\nimport AppDataHandler from \"../../composables/AppDataHandler\";\nimport { getAppPath } from \"../../composables/helperFunctions/ImageHelper\";\n\nexport default {\n\tname: \"LinkedSearchInline\",\n\temits: [\"onHide\", \"onSelectedItem\"],\n\tprops: {\n\t\t/** xoneDataObject\n\t\t * @type {PropType<XoneDataObject>}\n\t\t */\n\t\txoneDataObject: { type: Object, required: true },\n\t\t/** attributes\n     @type {PropType<PropAttributes>} \n     */\n\t\tattributes: { type: Object, required: true },\n\n\t\tlinkedSearchPosition: { type: Object, required: true },\n\t},\n\tsetup(props, context) {\n\t\tconst filterModel = ref(\"\");\n\n\t\tconst isMouseOnInput = ref(false);\n\t\t/**\n\t\t * Window Size\n\t\t * @type {{containerWidth: Ref<number>|ComputedRef<number>, containerHeight: Ref<number>|ComputedRef<number>}}\n\t\t */\n\t\tconst { containerWidth, containerHeight } = inject(\"containerSize\");\n\n\t\t// Close modal\n\t\tconst onHide = () => context.emit(\"onHide\");\n\n\t\t/**\n\t\t * @type {Ref<boolean>}\n\t\t */\n\t\tconst isInputFocused = inject(\"isInputFocused\");\n\n\t\t// onFocus\n\t\tconst onFocus = () => (isInputFocused.value = true);\n\n\t\t// onBlur\n\t\tconst onBlur = () => (isInputFocused.value = false);\n\n\t\t// On filter selected\n\t\tconst onFilterSelected = (e) => {\n\t\t\tisMouseOnInput.value = true;\n\t\t\te.preventDefault();\n\t\t\tsetTimeout(() => (isMouseOnInput.value = false), 500);\n\t\t};\n\n\t\t// Select an item\n\t\tconst onSelectedItem = (item) => context.emit(\"onSelectedItem\", item);\n\t\t//\n\t\t// Map attributes\n\t\tconst mapColValues = props.xoneDataObject.getFieldPropertyValue(props.attributes.linkedTo, \"mapcol-values\");\n\t\tconst mapCol = props.xoneDataObject.getFieldPropertyValue(props.attributes.linkedTo, \"mapcol\");\n\t\tlet mapFld = props.xoneDataObject.getFieldPropertyValue(props.attributes.linkedTo, \"mapfld\");\n\t\tconst mapFilter = props.xoneDataObject.getFieldPropertyValue(props.attributes.linkedTo, \"filter\");\n\t\tconst mapLinkFilter = props.xoneDataObject.getFieldPropertyValue(props.attributes.linkedTo, \"linkfilter\");\n\n\t\t// calculate rows to display on grid\n\t\tconst rows = ref([]);\n\n\t\t// filter rows\n\t\tconst filteredRows = computed(() => {\n\t\t\tif (!filterModel.value) return rows.value;\n\n\t\t\treturn rows.value.filter((e) => {\n\t\t\t\tlet res = false;\n\t\t\t\te.forEach((element) => {\n\t\t\t\t\tif (res) return;\n\t\t\t\t\tres = element.value\n\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t.includes(filterModel.value.toLowerCase());\n\t\t\t\t});\n\n\t\t\t\treturn res;\n\t\t\t});\n\t\t});\n\n\t\tonMounted(async () => {\n\t\t\ttry {\n\t\t\t\tawait nextTick();\n\t\t\t\tsetPosition();\n\t\t\t\t//\n\t\t\t\t// mapcol-values\n\n\t\t\t\tif (mapColValues) {\n\t\t\t\t\tsetTimeout(async () => {\n\t\t\t\t\t\tawait nextTick();\n\t\t\t\t\t\tsetPosition();\n\t\t\t\t\t});\n\t\t\t\t\tconst data = mapColValues.split(\",\");\n\t\t\t\t\treturn (rows.value = data.map((e) => [{ mapValue: data.indexOf(e), value: e }]));\n\t\t\t\t}\n\n\t\t\t\t//\n\t\t\t\t// mapcol && mapfld\n\n\t\t\t\t/**\n\t\t\t\t * Create XoneDataObject\n\t\t\t\t * @type {XoneDataCollection}\n\t\t\t\t */\n\t\t\t\tconst xoneDataCollection = await AppDataHandler.getAppData().getCollection(mapCol);\n\n\t\t\t\t// Layout\n\t\t\t\tconst props = [];\n\n\t\t\t\t/**\n\t\t\t\t * @type {function(object):PropAttributes[]}\n\t\t\t\t */\n\t\t\t\tconst getControlProps = (control) => {\n\t\t\t\t\tcontrol.controls?.forEach((e) => {\n\t\t\t\t\t\tconst propAttributes = xoneAttributesHandler.getPropAttributes(e.attributes);\n\t\t\t\t\t\tif (propAttributes.node === \"group\" || propAttributes.node === \"frame\") getControlProps(e);\n\t\t\t\t\t\tif (propAttributes.node !== \"prop\") return;\n\t\t\t\t\t\tif (propAttributes.type.startsWith(\"T\") || propAttributes.type.startsWith(\"N\")) props.push(propAttributes);\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tgetControlProps(xoneDataCollection.getLayout(8));\n\n\t\t\t\t// Apply linkfilter & filter\n\t\t\t\tif (mapLinkFilter) xoneDataCollection.setLinkFilter(mapLinkFilter);\n\t\t\t\txoneDataCollection.setFilter(mapFilter);\n\n\t\t\t\t// Data\n\t\t\t\tawait xoneDataCollection.startBrowse();\n\n\t\t\t\trows.value = [];\n\t\t\t\twhile (xoneDataCollection.getCurrentItem()) {\n\t\t\t\t\tconst obj = xoneDataCollection.getCurrentItem();\n\t\t\t\t\trows.value.push(\n\t\t\t\t\t\tprops.map((/** @type {PropAttributes} */ e) => {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tmapValue: obj[mapFld],\n\t\t\t\t\t\t\t\tvalue: obj[e.name],\n\t\t\t\t\t\t\t\ttextAlign: e.textAlign,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\n\t\t\t\t\tawait xoneDataCollection.moveNext();\n\t\t\t\t}\n\t\t\t\txoneDataCollection.clear();\n\t\t\t\tawait nextTick();\n\t\t\t\tsetPosition();\n\t\t\t} catch (ex) {\n\t\t\t\tconsole.error(ex);\n\t\t\t}\n\t\t});\n\n\t\t//\n\t\t// Manage dialog position\n\t\t/**\n\t\t * @type {Ref<HTMLElement>}\n\t\t */\n\t\tconst divElement = ref();\n\n\t\tconst rightPosition = ref((window.innerWidth - containerWidth.value) / 2 + containerWidth.value - props.linkedSearchPosition.left);\n\t\tconst topPosition = ref(props.linkedSearchPosition.top + \"px\");\n\t\tconst maxWidthPosition = ref(props.linkedSearchPosition.width + \"px\");\n\t\tconst heightPosition = ref(props.linkedSearchPosition.height + \"px\");\n\t\tconst elementHasScroll = ref(false);\n\n\t\twatch(\n\t\t\t() => filterModel.value,\n\t\t\tasync () => {\n\t\t\t\tawait nextTick();\n\t\t\t\tsetPosition();\n\t\t\t}\n\t\t);\n\n\t\tconst setPosition = async () => {\n\t\t\tif (!divElement.value) return;\n\t\t\tawait nextTick();\n\t\t\t// Right\n\t\t\tlet right = (window.innerWidth - containerWidth.value) / 2 + containerWidth.value - props.linkedSearchPosition.left;\n\n\t\t\tif (window.innerWidth - divElement.value.scrollWidth > right) rightPosition.value = `${right}px`;\n\t\t\telse if (window.client > divElement.value.scrollWidth) rightPosition.value = `${window.innerWidth - divElement.value.scrollWidth}px`;\n\t\t\telse {\n\t\t\t\tright = 15;\n\t\t\t\trightPosition.value = \"15px\";\n\t\t\t}\n\t\t\t// Top\n\t\t\tif (divElement.value.offsetHeight <= containerHeight.value - props.linkedSearchPosition.top)\n\t\t\t\ttopPosition.value = `${props.linkedSearchPosition.top - 15}px`;\n\t\t\telse topPosition.value = `calc(100vh - 5% - ${divElement.value.offsetHeight - 15}px)`;\n\t\t\tif (rows.value.length == 0) return;\n\t\t\t// Height\n\t\t\theightPosition.value = divElement.value.offsetHeight + \"px\";\n\t\t\t// Width\n\t\t\tmaxWidthPosition.value = `${window.innerWidth - right - 15}px`;\n\t\t\telementHasScroll.value = divElement.value.scrollHeight > divElement.value.clientHeight;\n\t\t};\n\n\t\tonMounted(() => window.addEventListener(\"resize\", setPosition));\n\t\tonUnmounted(() => window.removeEventListener(\"resize\", setPosition));\n\t\twatch(\n\t\t\t() => containerWidth.value,\n\t\t\t() => onHide()\n\t\t);\n\t\twatch(\n\t\t\t() => containerHeight.value,\n\t\t\t() => onHide()\n\t\t);\n\n\t\treturn {\n\t\t\tfilterModel,\n\t\t\tisMouseOnInput,\n\t\t\tcontainerWidth,\n\t\t\tcontainerHeight,\n\t\t\telementHasScroll,\n\t\t\tonHide,\n\t\t\tonFocus,\n\t\t\tonBlur,\n\t\t\tonFilterSelected,\n\t\t\tonSelectedItem,\n\t\t\trows,\n\t\t\tfilteredRows,\n\t\t\tdivElement,\n\t\t\trightPosition,\n\t\t\ttopPosition,\n\t\t\theightPosition,\n\t\t\tmaxWidthPosition,\n\t\t\tappPath: getAppPath(),\n\t\t};\n\t},\n};\n</script>\n\n<style scoped>\n.xone-linked-container {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\theight: 100vh;\n\twidth: 100vw;\n\tbackground-color: rgba(0, 0, 0, 0.15);\n\tanimation: fadeIn 0.5s;\n\toverflow: hidden;\n\tz-index: 9999;\n}\n\n.xone-linked-container > div {\n\tposition: absolute;\n\tdisplay: flex;\n\tflex-direction: column;\n\tborder: 1px gray solid;\n\tbackground-color: white;\n\tborder-radius: 3px;\n\toverflow-y: auto;\n\toverflow-x: auto;\n\tflex-shrink: 1;\n\tmax-width: var(--linked-search-max-width);\n\tmax-height: var(--linked-search-max-height);\n\tmin-width: var(--linked-search-min-width);\n\tmin-height: var(--linked-search-min-height);\n\tright: var(--linked-search-right-position);\n\ttop: var(--linked-search-top-position);\n\tanimation: fadeIn 0.3s;\n\ttransition: all 0.3s;\n}\n\n/* p {\n  margin: 10px;\n  font-weight: bold;\n  font-size: 1rem;\n} */\n\ntable {\n\t/* flex-shrink: 1; */\n\t/* align-self: flex-end; */\n\ttable-layout: fixed;\n\tborder-collapse: collapse;\n\tmax-width: var(--linked-search-max-width);\n\tmax-height: var(--linked-search-max-height);\n\tmin-width: var(--linked-search-table-min-width);\n\tmin-height: var(--linked-search-min-height);\n\tanimation: fadeIn 0.3s;\n\t/* width: fit-content; */\n}\n\ntd {\n\tpadding: 5px 10px 5px;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n\twidth: fit-content;\n\twhite-space: nowrap;\n}\n\ntr {\n\twhite-space: nowrap;\n}\n\ntr:hover {\n\tcursor: pointer;\n\tbackground-color: rgba(0, 0, 0, 0.14);\n}\n\nth {\n\tposition: -webkit-sticky;\n\tposition: sticky;\n\ttop: 0;\n\tz-index: 2;\n\twidth: fit-content;\n\ttext-align: left;\n}\n\n.xone-search-header:hover {\n\tbackground: white;\n}\n\ninput {\n\tposition: sticky;\n\ttop: 0;\n\tmax-width: var(--linked-search-max-width);\n\tmin-width: var(--linked-search-table-min-width);\n\tmax-height: var(--linked-search-max-height);\n\tpadding: 5px;\n\tborder: none;\n\tbackground-color: white;\n\tbackground-image: var(--image-search-placeholder);\n\tbackground-repeat: no-repeat;\n\tbackground-position: left;\n\tpadding-left: 30px;\n\tbackground-size: 32px 32px;\n}\n</style>\n","import { render } from \"./LinkedSearchInline.vue?vue&type=template&id=37329dfa&scoped=true\"\nimport script from \"./LinkedSearchInline.vue?vue&type=script&lang=js\"\nexport * from \"./LinkedSearchInline.vue?vue&type=script&lang=js\"\n\nimport \"./LinkedSearchInline.vue?vue&type=style&index=0&id=37329dfa&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/amiyares/Projects/XOne/XOneWebVue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-37329dfa\"]])\n\nexport default __exports__","<template>\n\t<div\n\t\tv-if=\"!attributes.imgChecked && !attributes.imgUnchecked\"\n\t\t:style=\"{\n\t\t\tpadding: '0',\n\t\t\t//height: 'var(--label-height)',\n\t\t\t// Align\n\t\t\talignItems: attributes.labelAlign,\n\t\t\t'--checkbox-size': checkboxSize ? `${checkboxSize}px` : `calc(4px + ${attributes.fontSize})`,\n\t\t}\"\n\t>\n\t\t<input\n\t\t\tv-if=\"!attributes.isRadio\"\n\t\t\tref=\"checkboxElement\"\n\t\t\t:disabled=\"isDisabled\"\n\t\t\t:checked=\"xoneDataObject.model[attributes.name] === 1\"\n\t\t\t@change=\"onCheckboxCheckedChange()\"\n\t\t\ttype=\"checkbox\"\n\t\t/>\n\n\t\t<input\n\t\t\tv-else\n\t\t\tref=\"radioElement\"\n\t\t\t:disabled=\"isDisabled\"\n\t\t\ttype=\"radio\"\n\t\t\t:name=\"`${attributes.radioGroup}-${breadcrumbId}${objectIndex}`\"\n\t\t\t:prop=\"attributes.name\"\n\t\t\t:checked=\"xoneDataObject.model[attributes.name] === 1\"\n\t\t\t@change=\"onRadioCheckedChange()\"\n\t\t/>\n\t</div>\n\t<button\n\t\tv-else\n\t\t:disabled=\"isDisabled\"\n\t\t@click=\"onCheckboxCheckedChange()\"\n\t\t:style=\"{\n\t\t\t// Size\n\t\t\twidth: imageSize.width ? `${imageSize.width}px` : (attributes.width !== undefined && '100%') || attributes.fieldSize,\n\t\t\theight: imageSize.height ? `${imageSize.height}px` : (controlHeight && `${controlHeight - 11}px`) || '30px',\n\t\t\t// Background Image\n\t\t\tbackgroundImage: `url(${\n\t\t\t\tisDisabled || attributes.locked\n\t\t\t\t\t? xoneDataObject.model[attributes.name] == 1\n\t\t\t\t\t\t? backgroundImageCheckedDisabled || backgroundImageChecked\n\t\t\t\t\t\t: backgroundImageUncheckedDisabled || backgroundImageUnchecked\n\t\t\t\t\t: xoneDataObject.model[attributes.name] == 1\n\t\t\t\t\t? backgroundImageChecked\n\t\t\t\t\t: backgroundImageUnchecked\n\t\t\t})`,\n\t\t\t// Disableedit / Locked appearance\n\t\t\topacity: changeOpacity && attributes.disableEdit && attributes.disableEdit !== '' && isDisabled ? 0.4 : 1,\n\t\t}\"\n\t></button>\n</template>\n\n<script>\nimport { Ref, ComputedRef, PropType, computed, ref, reactive, inject, onMounted } from \"vue\";\n\nimport { xoneAttributesHandler, PropAttributes } from \"../../../composables/XoneAttributesHandler\";\nimport { XoneDataObject } from \"../../../composables/appData/core/XoneDataObject\";\nimport { getAppPath, getImagePath } from \"../../../composables/helperFunctions/ImageHelper\";\n\nexport default {\n\tprops: {\n\t\t/** xoneDataObject\n\t\t * @type {PropType<XoneDataObject>}\n\t\t */\n\t\txoneDataObject: { type: Object, required: true },\n\n\t\t/** attributes\n     @type {PropType<PropAttributes>} \n     */\n\t\tattributes: { type: Object, required: true },\n\n\t\tisDisabled: { type: Boolean, required: true },\n\n\t\tcontrolWidth: { type: Number, default: 0 },\n\n\t\tcontrolHeight: { type: Number, default: 0 },\n\n\t\tcheckboxSize: { type: Number, default: null },\n\t},\n\tsetup(props) {\n\t\t/** @type {Ref<HTMLInputElement>} */\n\t\tconst checkboxElement = ref();\n\n\t\t/** @type {Ref<HTMLInputElement>} */\n\t\tconst radioElement = ref();\n\n\t\tconst breadcrumbId = inject(\"breadcrumbId\");\n\n\t\t/**\n\t\t * Get editInRow=\"false\" if prop is in contents\n\t\t * @type {import('../../../composables/AppDataHandler').Objectinfo}\n\t\t */\n\t\tconst objectInfo = inject(\"objectInfo\");\n\n\t\tconst objectIndex = objectInfo.isContents ? objectInfo.recordIndex : \"\";\n\n\t\t/**\n\t\t * on value change\n\t\t */\n\t\tconst onChange = async () => {\n\t\t\ttry {\n\t\t\t\tif (objectInfo?.editInRow && objectInfo.autosave) {\n\t\t\t\t\tawait props.xoneDataObject.save();\n\t\t\t\t}\n\t\t\t} catch (ex) {\n\t\t\t\txoneUI.showSnackbar({\n\t\t\t\t\ttext: ex,\n\t\t\t\t\tcolor: \"red\",\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tconst onCheckboxCheckedChange = () => {\n\t\t\tprops.xoneDataObject.changeModelValue(\n\t\t\t\tprops.attributes.name,\n\t\t\t\tprops.xoneDataObject.model[props.attributes.name] === 0 || !props.xoneDataObject.model[props.attributes.name] ? 1 : 0\n\t\t\t);\n\t\t\tonChange();\n\t\t};\n\n\t\tconst onRadioCheckedChange = () => {\n\t\t\tprops.xoneDataObject.changeModelValue(props.attributes.name, radioElement.value.checked ? 1 : 0);\n\t\t\tdocument.querySelectorAll(`[name='${props.attributes.radioGroup}-${breadcrumbId}${objectIndex}']`).forEach(\n\t\t\t\t/** @type {HTMLInputElement} */ (e) => {\n\t\t\t\t\tif (e === radioElement.value) return;\n\t\t\t\t\tprops.xoneDataObject.changeModelValue(e.getAttribute(\"prop\"), 0);\n\t\t\t\t}\n\t\t\t);\n\t\t\tonChange();\n\t\t};\n\n\t\t/**\n\t\t * Scale Factor\n\t\t * @type {{widthFactor: ComputedRef<number>, heightFactor: ComputedRef<number>}}\n\t\t */\n\t\tconst { widthFactor, heightFactor } = inject(\"scaleFactor\");\n\n\t\tconst imageSize = reactive({\n\t\t\twidth: computed(() => xoneAttributesHandler.getScaledSize(props.attributes.imgWidth, props.containerWidth, widthFactor.value)),\n\t\t\theight: computed(() =>\n\t\t\t\txoneAttributesHandler.getScaledSize(\n\t\t\t\t\tprops.attributes.imgHeight, // offset height\n\t\t\t\t\tprops.containerHeight,\n\t\t\t\t\theightFactor.value\n\t\t\t\t)\n\t\t\t),\n\t\t});\n\n\t\tconst backgroundImageChecked = ref(`${getAppPath()}/icons/${props.attributes.imgChecked}`);\n\t\tconst backgroundImageUnchecked = ref(`${getAppPath()}/icons/${props.attributes.imgUnchecked}`);\n\t\tconst backgroundImageCheckedDisabled = ref(`${getAppPath()}/icons/${props.attributes.imgCheckedDisabled}`);\n\t\tconst backgroundImageUncheckedDisabled = ref(`${getAppPath()}/icons/${props.attributes.imgUncheckedDisabled}`);\n\n\t\tonMounted(() => {\n\t\t\tgetImagePath(props.attributes.imgChecked, \"icons\").then((value) => (backgroundImageChecked.value = value));\n\t\t\tgetImagePath(props.attributes.imgUnchecked, \"icons\").then((value) => (backgroundImageUnchecked.value = value));\n\t\t\tgetImagePath(props.attributes.imgCheckedDisabled, \"icons\").then((value) => (backgroundImageCheckedDisabled.value = value));\n\t\t\tgetImagePath(props.attributes.imgUncheckedDisabled, \"icons\").then((value) => (backgroundImageUncheckedDisabled.value = value));\n\n\t\t\tif (backgroundImageCheckedDisabled.value || backgroundImageUncheckedDisabled.value) changeOpacity.value = false;\n\t\t});\n\n\t\tconst changeOpacity = ref(true);\n\n\t\treturn {\n\t\t\tcheckboxElement,\n\t\t\tradioElement,\n\t\t\tbreadcrumbId,\n\t\t\tobjectIndex,\n\t\t\timageSize,\n\t\t\tbackgroundImageChecked,\n\t\t\tbackgroundImageUnchecked,\n\t\t\tonChange,\n\t\t\tonCheckboxCheckedChange,\n\t\t\tonRadioCheckedChange,\n\t\t\tbackgroundImageCheckedDisabled,\n\t\t\tbackgroundImageUncheckedDisabled,\n\t\t\tchangeOpacity,\n\t\t};\n\t},\n};\n</script>\n\n<style scoped>\ndiv,\ncolumn {\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: var(--frame-align-column);\n}\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n\tmargin: 3px 0;\n\tflex-shrink: 0;\n\tflex-grow: 0;\n\talign-self: flex-start;\n\tcursor: pointer;\n\twidth: var(--checkbox-size);\n\theight: var(--checkbox-size);\n}\n\nbutton {\n\tcursor: pointer;\n\toutline: none;\n\tbackground-repeat: no-repeat;\n\tbackground-position: center;\n\tbackground-size: contain;\n\tborder: none;\n\tbackground-color: transparent;\n\t-webkit-transition: background-image 0.3s;\n\ttransition: background-image 0.3s;\n}\n</style>\n","import { render } from \"./Checkbox.vue?vue&type=template&id=20e563e6&scoped=true\"\nimport script from \"./Checkbox.vue?vue&type=script&lang=js\"\nexport * from \"./Checkbox.vue?vue&type=script&lang=js\"\n\nimport \"./Checkbox.vue?vue&type=style&index=0&id=20e563e6&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/amiyares/Projects/XOne/XOneWebVue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-20e563e6\"]])\n\nexport default __exports__","import { render } from \"./Input.vue?vue&type=template&id=2ea048d5&scoped=true\"\nimport script from \"./Input.vue?vue&type=script&lang=js\"\nexport * from \"./Input.vue?vue&type=script&lang=js\"\n\nimport \"./Input.vue?vue&type=style&index=0&id=2ea048d5&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/amiyares/Projects/XOne/XOneWebVue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2ea048d5\"]])\n\nexport default __exports__","<template>\n\t<!-- Image -->\n\t<img\n\t\tdraggable=\"false\"\n\t\tref=\"imgElement\"\n\t\tv-if=\"attributes.readOnly && imgPath\"\n\t\talt=\"\"\n\t\tloading=\"lazy\"\n\t\t:src=\"imgPath\"\n\t\t:class=\"{ 'keep-aspect-ratio': attributes.keepAspectRatio }\"\n\t/>\n\t<!-- Signature -->\n\t<canvas\n\t\tv-if=\"!attributes.readOnly || attributes.type === 'DR'\"\n\t\tref=\"signElement\"\n\t\t:width=\"controlWidth\"\n\t\t:height=\"controlHeight\"\n\t\t:style=\"{\n\t\t\tposition: attributes.type === 'DR' && 'absolute',\n\t\t\tbackgroundColor: attributes.type === 'DR' && 'transparent',\n\t\t}\"\n\t\tclass=\"xone-signature\"\n\t></canvas>\n\t<div v-if=\"!attributes.readOnly\" class=\"xone-clear-signature\">\n\t\t<button @click=\"clearCanvas()\">✕</button>\n\t</div>\n</template>\n\n<script>\nimport { inject, nextTick, onMounted, PropType, ref, Ref, watch, watchEffect } from \"vue\";\nimport { PropAttributes, xoneAttributesHandler } from \"../../composables/XoneAttributesHandler\";\nimport { XoneDataObject } from \"../../composables/appData/core/XoneDataObject\";\nimport SignaturePad from \"signature_pad\";\nimport { getAppPath, getImagePath } from \"../../composables/helperFunctions/ImageHelper\";\nimport { XoneControl, XoneView } from \"../../composables/XoneViewsHandler\";\nexport default {\n\tprops: {\n\t\t/** xoneDataObject\n     @type {PropType<XoneDataObject>} \n     */\n\t\txoneDataObject: { type: Object, required: true },\n\t\t/** attributes\n\t\t * @type { PropType<PropAttributes>}\n\t\t */\n\t\tattributes: { type: Object, required: true },\n\t\tcontrolWidth: { type: Number, default: 0 },\n\t\tcontrolHeight: { type: Number, default: 0 },\n\t\tcontainerWidth: { type: Number, default: 0 },\n\t\tcontainerHeight: { type: Number, default: 0 },\n\t},\n\tsetup(props) {\n\t\t/**\n\t\t * prop model value\n\t\t * @type {Ref<any>}\n\t\t */\n\t\tlet propValue = ref();\n\n\t\t// Get appData model value\n\t\twatchEffect(() => {\n\t\t\tif (props.xoneDataObject?.model) propValue.value = props.xoneDataObject?.model[props.attributes.name];\n\t\t});\n\n\t\tconst imgPath = ref();\n\n\t\t/**\n\t\t * imgElement\n\t\t * @type {Ref<HTMLElement>}\n\t\t */\n\t\tconst imgElement = ref();\n\n\t\tconst fitSizeToContainer = () => {\n\t\t\tconst doFit = () => {\n\t\t\t\txoneAttributesHandler.fitHeightToContainer(props.attributes, imgElement);\n\t\t\t\txoneAttributesHandler.fitWidthToContainer(props.attributes, imgElement);\n\t\t\t};\n\t\t\tsetTimeout(() => doFit(), 100);\n\t\t\tdoFit();\n\t\t};\n\n\t\twatchEffect(async () => {\n\t\t\tif (propValue.value) {\n\t\t\t\timgPath.value = await getImagePath(propValue.value, \"files\");\n\t\t\t}\n\t\t\tif (props.attributes.image && props.attributes.image !== \"\") {\n\t\t\t\timgPath.value = await getImagePath(props.attributes.image, \"icons\");\n\t\t\t}\n\t\t\tfitSizeToContainer();\n\t\t});\n\n\t\t/**\n\t\t * sign\n\t\t * @type {Ref<HTMLElement>}\n\t\t */\n\t\tconst signElement = ref();\n\n\t\t/**\n\t\t * signaturePad\n\t\t * @type {SignaturePad}\n\t\t */\n\t\tlet signaturePad;\n\n\t\tonMounted(() => {\n\t\t\tif (!signElement.value) return;\n\t\t\tsignElement.value.setAttribute(\"swipeable\", false);\n\t\t\tsignaturePad = new SignaturePad(signElement.value);\n\t\t});\n\n\t\tconst clearCanvas = () => {\n\t\t\tif (!signaturePad) return;\n\t\t\tsignaturePad.clear();\n\t\t};\n\n\t\t/**\n\t\t * Last breadcrumb in stack\n\t\t * @type {ComputedRef<import('../../composables/AppDataHandler').Breadcrumb>}\n\t\t */\n\t\tconst lastBreadcrumb = inject(\"lastBreadcrumb\");\n\n\t\t/**\n\t\t * breadcrumbId\n\t\t * @type {string}\n\t\t */\n\t\tconst breadcrumbId = inject(\"breadcrumbId\");\n\n\t\twatchEffect(() => {\n\t\t\tif (breadcrumbId === lastBreadcrumb?.value?.id) fitSizeToContainer();\n\t\t});\n\n\t\tnextTick(() => {\n\t\t\twatch(\n\t\t\t\t() => props.containerWidth,\n\t\t\t\t() => fitSizeToContainer()\n\t\t\t);\n\t\t\twatch(\n\t\t\t\t() => props.containerHeight,\n\t\t\t\t() => fitSizeToContainer()\n\t\t\t);\n\t\t});\n\n\t\t// if selected group is current group fit size to container\n\t\t/**\n\t\t * groupId\n\t\t * @type {number}\n\t\t */\n\t\tconst groupId = inject(\"groupId\");\n\n\t\t/**\n\t\t * activeGroup\n\t\t * @type {{activeGroup:Ref<string>}}\n\t\t */\n\t\tconst { activeGroup } = inject(\"groupHandler\");\n\n\t\twatch(\n\t\t\t() => activeGroup.value,\n\t\t\t(newValue) => {\n\t\t\t\tif (groupId !== newValue) return;\n\t\t\t\tfitSizeToContainer();\n\t\t\t}\n\t\t);\n\n\t\t/**\n\t\t * xoneView\n\t\t * @type {XoneView}\n\t\t */\n\t\tconst xoneView = inject(\"xoneView\");\n\n\t\tconst xoneControl = new XoneControl(props.attributes.name, imgElement.value || signElement.value);\n\t\tonMounted(() => {\n\t\t\txoneControl.clearDrawing = clearCanvas;\n\n\t\t\t// Add control to view\n\t\t\txoneView.addControl(xoneControl);\n\t\t});\n\n\t\treturn { imgElement, imgPath, signElement, clearCanvas };\n\t},\n};\n</script>\n\n<style scoped>\n/* Image */\nimg,\ncanvas {\n\tbox-sizing: border-box;\n\t-moz-box-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-repeat: no-repeat;\n\tbackground-position: center;\n\tanimation: fadeIn 0.3s;\n}\n\n.keep-aspect-ratio {\n\tobject-fit: contain;\n}\n\n.xone-signature {\n\tdisplay: block;\n\tcursor: pointer;\n\tbackground-color: white;\n\tborder-radius: 5px;\n\tbox-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.2), 0 4px 5px rgba(0, 0, 0, 0.14), 0 1px 10px rgba(0, 0, 0, 0.12);\n}\n\n.xone-clear-signature {\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n}\n\nbutton {\n\tpadding: 10px;\n}\n</style>\n","import { render } from \"./Image.vue?vue&type=template&id=dec9e398&scoped=true\"\nimport script from \"./Image.vue?vue&type=script&lang=js\"\nexport * from \"./Image.vue?vue&type=script&lang=js\"\n\nimport \"./Image.vue?vue&type=style&index=0&id=dec9e398&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/amiyares/Projects/XOne/XOneWebVue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-dec9e398\"]])\n\nexport default __exports__","<template>\n\t<div\n\t\tref=\"contentsElement\"\n\t\tclass=\"xone-contents\"\n\t\t:class=\"{\n\t\t\t'xone-gridview': isGridView && attributes.galleryColumns > -1,\n\t\t\t'xone-flexview': isGridView && attributes.galleryColumns < 0,\n\t\t\t'xone-slideview': isSlideView,\n\t\t}\"\n\t\t:style=\"{\n\t\t\t// Size\n\t\t\theight: !attributes.height || attributes.height === 'auto' ? 'auto' : (controlHeight && `${controlHeight}px`) || 'auto',\n\t\t\tmaxWidth: attributes.viewMode === 'picturemap' && `${controlWidth}px`,\n\t\t\tflexGrow: attributes.width === 'grow' ? 1 : null,\n\t\t\t// Background\n\t\t\tbackgroundColor: attributes.bgColor,\n\t\t\t// is GridView? -> define columns\n\t\t\t'grid-template-columns': isGridView && gridTemplateColumns,\n\t\t\t// Animation if is contents 'TreeView'\n\t\t\tanimation: isContents && 'slideDown 0.3s, fadeIn 0.3s',\n\t\t\t// Set variables\n\t\t\t'--contents-width': `${controlWidth}px`,\n\t\t\t'--contents-height': `${controlHeight}px`,\n\t\t\t'--contents-max-height': `${fitHeight ? `calc(${fitHeight}px - var(--margin-bottom))` : null}`,\n\t\t\t// New web-layout / routerview Container Size\n\t\t\t'--app-width': (isRouterView && controlWidth && `${controlWidth - 2}px`) || 'auto',\n\t\t\t'--app-height': (isRouterView && controlHeight && `${controlHeight - 2}px`) || 'auto',\n\t\t\toverflow: isRouterView || isChartView ? 'hidden' : null,\n\t\t\tflexWrap: attributes.wrap ? 'wrap' : null,\n\t\t\tpaddingBottom: attributes.viewMode || isLoading || isContents ? null : '100px',\n\t\t}\"\n\t\t@scroll=\"onScroll\"\n\t>\n\t\t<router-view v-if=\"isRouterView\"></router-view>\n\t\t<!-- Map View -->\n\t\t<Map\n\t\t\tv-if=\"isMapView\"\n\t\t\t:xoneDataObject=\"xoneDataObject\"\n\t\t\t:controlHeight=\"fitHeight || controlHeight\"\n\t\t\t:controlWidth=\"controlWidth\"\n\t\t\t:attributes=\"attributes\"\n\t\t></Map>\n\t\t<!-- Calendar View -->\n\t\t<Calendar\n\t\t\tv-else-if=\"isCalendarView\"\n\t\t\t:xoneDataObject=\"xoneDataObject\"\n\t\t\t:controlHeight=\"fitHeight || controlHeight\"\n\t\t\t:controlWidth=\"controlWidth\"\n\t\t\t:attributes=\"attributes\"\n\t\t></Calendar>\n\t\t<!-- Calendar View -->\n\t\t<PictureMap\n\t\t\t:style=\"{\n\t\t\t\t'--contents-height': `${fitHeight || controlHeight}px`,\n\t\t\t}\"\n\t\t\tv-else-if=\"isPictureMapView\"\n\t\t\t:xoneDataObject=\"xoneDataObject\"\n\t\t\t:controlHeight=\"fitHeight || controlHeight\"\n\t\t\t:controlWidth=\"controlWidth\"\n\t\t\t:attributes=\"attributes\"\n\t\t></PictureMap>\n\t\t<!-- Chart View -->\n\t\t<template v-else-if=\"isChartView\">\n\t\t\t<ChartBar\n\t\t\t\tv-if=\"isChartBar\"\n\t\t\t\t:xoneDataObject=\"xoneDataObject\"\n\t\t\t\t:controlHeight=\"fitHeight || controlHeight\"\n\t\t\t\t:controlWidth=\"controlWidth\"\n\t\t\t\t:attributes=\"attributes\"\n\t\t\t>\n\t\t\t</ChartBar>\n\t\t\t<ChartPie\n\t\t\t\tv-else-if=\"isChartPie\"\n\t\t\t\t:xoneDataObject=\"xoneDataObject\"\n\t\t\t\t:controlHeight=\"fitHeight || controlHeight\"\n\t\t\t\t:controlWidth=\"controlWidth\"\n\t\t\t\t:attributes=\"attributes\"\n\t\t\t>\n\t\t\t</ChartPie>\n\t\t\t<div v-else style=\"color: #1f3c6e; background: #4cabd5; padding: 10px\">\n\t\t\t\tXOne -> Not implemented chart type, please contact to desarrollador@xone.es\n\t\t\t</div>\n\t\t</template>\n\t\t<!-- Other Contents -->\n\t\t<template v-else>\n\t\t\t<template v-for=\"rowInfo in contentsRowsInfo\" :key=\"`${breadcrumbId}-${attributes.name}-${rowInfo.id}`\">\n\t\t\t\t<!-- <Suspense> -->\n\t\t\t\t<ContentsRow\n\t\t\t\t\t:rowInfo=\"rowInfo\"\n\t\t\t\t\t:controlWidth=\"isGridView ? controlWidth / attributes.galleryColumns : controlWidth\"\n\t\t\t\t\t:controlHeight=\"fitHeight || controlHeight\"\n\t\t\t\t\t:attributes=\"attributes\"\n\t\t\t\t\t:isSlideView=\"isSlideView\"\n\t\t\t\t\t:isDisableEdit=\"isDisableEdit\"\n\t\t\t\t\t:isExpanView=\"isExpanView\"\n\t\t\t\t\t:rowsLength=\"rowsLength\"\n\t\t\t\t></ContentsRow>\n\t\t\t\t<!-- </Suspense> -->\n\t\t\t</template>\n\t\t\t<!-- No Data Msg -->\n\t\t\t<div v-if=\"!isLoading && contentsRowsInfo.length === 0 && noDataMsg\" class=\"xone-contents-no-data\">{{ noDataMsg }}</div>\n\t\t</template>\n\t\t<!-- Loader -->\n\t\t<div v-if=\"isLoading && !isMapView && !isCalendarView && !isChartView && !isPictureMapView\" class=\"xone-loader\">\n\t\t\t<div></div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport {\n\tcomputed,\n\tinject,\n\tonMounted,\n\tprovide,\n\tref,\n\tRef,\n\tComputedRef,\n\twatchEffect,\n\tPropType,\n\tonUnmounted,\n\twatch,\n\tnextTick,\n\t// defineAsyncComponent,\n} from \"vue\";\n// Components\nimport ContentsRow from \"../propComponents/contentsComponents/ContentsRow.vue\";\nimport Map from \"../propComponents/contentsComponents/Map.vue\";\nimport Calendar from \"../propComponents/contentsComponents/Calendar.vue\";\nimport ChartBar from \"../propComponents/contentsComponents/ChartBar.vue\";\nimport ChartPie from \"../propComponents/contentsComponents/ChartPie.vue\";\nimport PictureMap from \"../propComponents/contentsComponents/PictureMap.vue\";\n// Composables\nimport { XoneDataObject } from \"../../composables/appData/core/XoneDataObject\";\nimport { XoneDataCollection } from \"../../composables/appData/core/XoneDataCollection\";\nimport { PropAttributes, xoneAttributesHandler } from \"../../composables/XoneAttributesHandler\";\nimport { XoneControl, XoneView } from \"../../composables/XoneViewsHandler\";\nimport { ContentsLoaderHelper } from \"../../composables/ContentsLoaderHandler\";\nimport { generateUniqueId } from \"../../composables/helperFunctions/StringHelper\";\nimport XmlNode from \"../../composables/appData/Xml/JSONImpl/XmlNode\";\n\n// const ContentsRow = defineAsyncComponent(() => import(\"../propComponents/contentsComponents/ContentsRow.vue\"));\n\nexport default {\n\tname: \"Contents\",\n\tprops: {\n\t\t/**\n\t\t * xoneDataObject\n\t\t * @type {PropType<XoneDataObject>}\n\t\t * */\n\t\txoneDataObject: { type: Object, required: true },\n\t\t/**\n\t\t * attributes\n\t\t * @type { PropType<PropAttributes>}\n\t\t */\n\t\tattributes: { type: Object, default: null, required: true },\n\t\tisDisableEdit: { type: Boolean, required: true },\n\t\tcontrolHeight: { type: Number, default: 0 },\n\t\tcontrolWidth: { type: Number, default: 0 },\n\t},\n\tcomponents: {\n\t\tContentsRow,\n\t\tMap,\n\t\tChartBar,\n\t\tCalendar,\n\t\tChartPie,\n\t\tPictureMap,\n\t},\n\tsetup(props) {\n\t\t/** @type {import('../../composables/AppDataHandler').Objectinfo} */\n\t\tconst { isContents, isExpandedView } = inject(\"objectInfo\");\n\n\t\t/**\n\t\t * Contents\n\t\t * @type {Ref<XoneDataCollection>}\n\t\t */\n\t\tconst contents = ref();\n\t\t// provide contents to child components\n\t\tprovide(\"contents\", contents);\n\n\t\t/**\n\t\t * xoneView\n\t\t * @type {XoneView}\n\t\t */\n\t\tconst xoneView = inject(\"xoneView\");\n\n\t\t// provide item to load to child components\n\t\tconst loadedRowsLength = ref(0);\n\t\tprovide(\"loadedRowsLength\", loadedRowsLength);\n\n\t\t/**\n\t\t * breadcrumbId\n\t\t * @type {string}\n\t\t */\n\t\tconst breadcrumbId = inject(\"breadcrumbId\");\n\n\t\t/**\n\t\t * contentsElement\n\t\t * @type {Ref<HTMLElement>}\n\t\t */\n\t\tconst contentsElement = ref();\n\n\t\t/**\n\t\t * Window Size\n\t\t * @type {{containerWidth: Ref<number>|ComputedRef<number>, containerHeight: Ref<number>|ComputedRef<number>}}\n\t\t */\n\t\tconst { containerWidth, containerHeight } = inject(\"containerSize\");\n\n\t\t/**\n\t\t * fit height\n\t\t * @type {Ref<number>}\n\t\t */\n\t\tconst fitHeight = ref();\n\n\t\t/**\n\t\t * Calculate and adjust height to parent container when height attribute is null or auto\n\t\t */\n\t\tconst fitHeightToContainer = async () => {\n\t\t\tif (props.attributes.viewMode === \"picturemap\") return;\n\t\t\tconst isSpecial = isMapView.value || isCalendarView.value || isChartView.value || isPictureMapView.value;\n\t\t\ttry {\n\t\t\t\tif (!contentsElement.value) return;\n\n\t\t\t\tif (isSpecial && (props.attributes.height ?? \"auto\") !== \"auto\" && (props.attributes.height ?? \"auto\") !== \"grow\")\n\t\t\t\t\treturn (fitHeight.value = null);\n\n\t\t\t\tif (!isSpecial && (props.attributes.height ?? \"auto\") !== \"grow\") return (fitHeight.value = null);\n\n\t\t\t\tlet top = contentsElement.value.parentElement.offsetTop;\n\n\t\t\t\tif (fitHeight.value !== props.controlHeight - top) {\n\t\t\t\t\tfitHeight.value = props.controlHeight - top;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t} catch {}\n\t\t};\n\n\t\t/** @type {setTimeout} */\n\t\tlet resizeTimeout;\n\n\t\tonMounted(() => {\n\t\t\tfitHeightToContainer();\n\t\t\tconst observerHeight = new ResizeObserver(() => {\n\t\t\t\tif (resizeTimeout) clearTimeout(resizeTimeout);\n\t\t\t\tfitHeight.value = null;\n\t\t\t\tresizeTimeout = setTimeout(() => fitHeightToContainer(), 500);\n\t\t\t});\n\t\t\tobserverHeight.observe(contentsElement.value.parentNode.parentNode);\n\t\t\tonUnmounted(() => observerHeight?.disconnect());\n\t\t});\n\n\t\t// Si ya nos encontramos en un expandedview, no proveemos un nuevo índice seleccionado dado que ya existe uno previo en su contenedor padre\n\t\tif (!isExpandedView) {\n\t\t\t/**\n\t\t\t * selectedItem\n\t\t\t * @type {Ref<XoneDataObject>}\n\t\t\t */\n\t\t\tconst selectedItem = ref(null);\n\t\t\tprovide(\"selectedItem\", selectedItem);\n\t\t}\n\n\t\t//\n\t\t// Data\n\n\t\tconst contentsLoaderHelper = new ContentsLoaderHelper(props.attributes.name, breadcrumbId, props.attributes.rowsPerPage);\n\n\t\tconst isLoading = contentsLoaderHelper.getIsLoading();\n\n\t\t// Show no data / no data text\n\t\tconst noDataMsg = ref(\"No data\");\n\t\tconst setNoDataMsg = () => {\n\t\t\t/** @type {{m_xmlNode:XmlNode}} */\n\t\t\tconst { m_xmlNode } = contents.value;\n\t\t\tconst showNoData = m_xmlNode.getAttrValue(\"show-no-data\");\n\t\t\tconst noDataText = m_xmlNode.getAttrValue(\"no-data-text\");\n\n\t\t\tif (showNoData === \"false\" || contentsLoaderHelper.getRowsLength() === 0) noDataMsg.value = null;\n\t\t\telse noDataMsg.value = noDataText !== \"\" ? noDataText : \"No data\";\n\t\t};\n\n\t\tonMounted(() => contentsLoaderHelper.bindOnScrollEvent(contentsElement.value));\n\t\tonUnmounted(() => contentsLoaderHelper?.clear());\n\n\t\tlet lastRefreshActionId = null;\n\n\t\t/**\n\t\t * LoadAll contents async\n\t\t */\n\t\tconst refresh = async (isFirstLoad = false) => {\n\t\t\t// Refresh only last refresh action\n\t\t\tconst refreshActionId = generateUniqueId();\n\t\t\tlastRefreshActionId = refreshActionId;\n\n\t\t\t// Wait last refresh ends\n\t\t\twhile (contents.value && isLoading.value) await new Promise((resolve) => setTimeout(() => resolve(), 100));\n\n\t\t\t// Check if refresh action is the last one called\n\t\t\tif (lastRefreshActionId !== refreshActionId) return;\n\n\t\t\ttry {\n\t\t\t\t// load contents\n\t\t\t\tif (!contents.value) contents.value = await props.xoneDataObject.getContents(props.attributes.contents);\n\n\t\t\t\t// dataCollectionLayout.value = contents.value.getLayout(4);\n\n\t\t\t\t// LoadAll\n\t\t\t\tawait contentsLoaderHelper.loadRows(contents.value, props.attributes, isFirstLoad);\n\n\t\t\t\tloadedRowsLength.value = 0;\n\t\t\t\t// Load Rows Info\n\t\t\t\tawait contentsLoaderHelper.loadRowsInfo();\n\t\t\t\t// Set msg to show if no data\n\t\t\t\tsetNoDataMsg();\n\t\t\t} catch (ex) {\n\t\t\t\tconsole.error(ex);\n\t\t\t}\n\t\t};\n\n\t\t/** @type {string} */\n\t\tconst groupId = inject(\"groupId\");\n\n\t\t/** @type {{activeGroup:Ref<string>}} */\n\t\tconst { activeGroup } = inject(\"groupHandler\");\n\n\t\t/** @type {boolean} */\n\t\tconst isDrawer = inject(\"isDrawer\");\n\n\t\tlet firstGroup;\n\n\t\t/** @type {Ref<boolean>} */\n\t\tconst isBeforeEditExecuted = inject(\"isBeforeEditExecuted\");\n\n\t\tonMounted(async () => {\n\t\t\t// Vamos a cargar el contents cuando su grupo sea el activo\n\t\t\tif (isMapView.value || isChartView.value || isCalendarView.value || isPictureMapView.value || isRouterView.value) return;\n\t\t\t// Create XoneControl\n\t\t\tconst xoneControl = new XoneControl(props.attributes.name, contentsElement.value);\n\t\t\t// refresh method\n\t\t\txoneControl.refresh = refresh;\n\t\t\t// refreshRow method\n\t\t\txoneControl.refreshRow = (index) => {\n\t\t\t\ttry {\n\t\t\t\t\tcontentsLoaderHelper.getContentsRowsInfo().value[index].refresh();\n\t\t\t\t} catch {}\n\t\t\t};\n\t\t\t// refreshSelectedRow method\n\t\t\txoneControl.refreshSelectedRow = () => {\n\t\t\t\ttry {\n\t\t\t\t\tcontentsLoaderHelper.getContentsRowsInfo().value[selectedItem.value].refresh();\n\t\t\t\t} catch {}\n\t\t\t};\n\t\t\t// scrollBy method\n\t\t\txoneControl.scrollBy = (value) => {\n\t\t\t\tif (!contentsElement.value) return;\n\t\t\t\tvalue = value.toString();\n\t\t\t\tconst { scrollHeight } = contentsElement.value;\n\t\t\t\tif (value.includes(\"%\"))\n\t\t\t\t\treturn contentsElement.value.scrollTo({\n\t\t\t\t\t\ttop: Number((value.replace(\"%\", \"\") * scrollHeight) / 100),\n\t\t\t\t\t\tbehavior: \"smooth\",\n\t\t\t\t\t});\n\t\t\t\tcontentsElement.value.scrollTo({\n\t\t\t\t\ttop: Number(value.replace(\"p\", \"\")),\n\t\t\t\t\tbehavior: \"smooth\",\n\t\t\t\t});\n\t\t\t};\n\t\t\t// scrollTo method\n\t\t\txoneControl.scrollTo = (index) => {\n\t\t\t\tconst element = document.getElementById(`${props.attributes.name.replace(\"@\", \"\")}${index}${breadcrumbId}`);\n\t\t\t\tif (element) xoneControl.scrollBy(element.offsetTop);\n\t\t\t};\n\t\t\t// ScrollToTop method\n\t\t\txoneControl.scrollToTop = () => xoneControl.scrollBy(0);\n\t\t\t// ScrollToBottom method\n\t\t\txoneControl.scrollToBottom = () => xoneControl.scrollBy(contentsElement.value.scrollHeight);\n\t\t\t// Add control to view\n\t\t\txoneView.addControl(xoneControl);\n\n\t\t\twhile (!isBeforeEditExecuted.value) await new Promise((resolve) => setTimeout(() => resolve(), 5));\n\n\t\t\twatchEffect(async () => {\n\t\t\t\t// Asignamos si el contents se encuentra en el grupo activo\n\t\t\t\tcontentsLoaderHelper.isInGroup = groupId === activeGroup.value;\n\t\t\t\tcontentsLoaderHelper.isDrawer = isDrawer;\n\n\t\t\t\tif (!firstGroup) firstGroup = activeGroup.value;\n\n\t\t\t\tif (contents.value || (groupId !== activeGroup.value && !isDrawer)) return;\n\t\t\t\tif (groupId !== firstGroup && !isDrawer) await new Promise((resolve) => setTimeout(() => resolve(), 350));\n\t\t\t\trefresh(true);\n\t\t\t});\n\t\t});\n\n\t\t// Clear Contents\n\t\tonUnmounted(() => {\n\t\t\tif (contents.value) contents.value.clear();\n\t\t\tcontentsLoaderHelper?.clear();\n\t\t});\n\n\t\t//\n\t\t//\n\t\t// Viewmodes\n\n\t\t//\n\t\t// viewmode gridview\n\t\tconst isGridView = computed(() => props.attributes.viewMode === \"gridview\" && !isNaN(props.attributes.galleryColumns));\n\n\t\tconst gridTemplateColumns = computed(() => {\n\t\t\tif (!isGridView.value) return;\n\n\t\t\treturn `repeat(${props.attributes.galleryColumns}, ${props.controlWidth / props.attributes.galleryColumns}px)`;\n\t\t});\n\n\t\t//\n\t\t// viewmode mapview\n\n\t\tconst isMapView = computed(() => props.attributes.viewMode === \"mapview\" || props.attributes.viewMode === \"openstreetmap\");\n\n\t\t//\n\t\t// viewmode slideview\n\n\t\tconst isSlideView = computed(() => props.attributes.viewMode === \"slideview\");\n\n\t\tonMounted(() => {\n\t\t\tif (isSlideView.value) {\n\t\t\t\tcontentsElement.value.style.pointerEvents = \"all\";\n\t\t\t\tcontentsElement.value.setAttribute(\"swipeable\", false);\n\t\t\t}\n\t\t});\n\n\t\t//\n\t\t// viewmode calendar\n\n\t\tconst isCalendarView = computed(() => props.attributes.viewMode === \"calendarview\");\n\n\t\t// autoslide\n\t\tlet autoslideInterval;\n\t\tlet currentSlideIndex = 0;\n\n\t\tonMounted(() => {\n\t\t\tif (isSlideView.value) {\n\t\t\t\twatch(\n\t\t\t\t\t() => loadedRowsLength.value,\n\t\t\t\t\tasync (newValue) => {\n\t\t\t\t\t\tif (newValue !== contents.value?.length) return;\n\t\t\t\t\t\tawait nextTick();\n\n\t\t\t\t\t\tif (props.attributes.autoslideDelay) {\n\t\t\t\t\t\t\tcontentsElement.value.scrollTo(0, 0);\n\t\t\t\t\t\t\t// create interval\n\t\t\t\t\t\t\tautoslideInterval = setInterval(() => {\n\t\t\t\t\t\t\t\tif (contentsLoaderHelper.getRowsLength() === 0) return;\n\n\t\t\t\t\t\t\t\tcurrentSlideIndex += 1;\n\t\t\t\t\t\t\t\tif (currentSlideIndex >= contentsLoaderHelper.getRowsLength()) currentSlideIndex = 0;\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t * Get element\n\t\t\t\t\t\t\t\t * @type {HTMLElement}\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\tconst element = document.getElementById(`${props.attributes.name.replace(\"@\", \"\")}${currentSlideIndex}${breadcrumbId}`);\n\t\t\t\t\t\t\t\tif (!element) return;\n\n\t\t\t\t\t\t\t\t// Scroll to element\n\t\t\t\t\t\t\t\tcontentsElement.value.scrollTo({\n\t\t\t\t\t\t\t\t\tleft: element.offsetLeft,\n\t\t\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\t\t\tbehavior: \"smooth\",\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}, props.attributes.autoslideDelay * 1000);\n\t\t\t\t\t\t} else contentsElement.value.scrollTo(0, 0);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\t// clear autoslide interval\n\t\tonUnmounted(() => {\n\t\t\tif (autoslideInterval) clearInterval(autoslideInterval);\n\t\t});\n\n\t\t//\n\t\t// viewmode chart\n\t\tconst isChartView = computed(() => props.attributes.viewMode && props.attributes.viewMode.toString().contains(\"chart\"));\n\n\t\tconst isChartBar = computed(\n\t\t\t() =>\n\t\t\t\tprops.attributes.viewMode === \"barchart\" ||\n\t\t\t\tprops.attributes.viewMode === \"3dbarchart\" ||\n\t\t\t\tprops.attributes.viewMode === \"stackedbarchart\" ||\n\t\t\t\tprops.attributes.viewMode === \"linechart\"\n\t\t);\n\n\t\tconst isChartPie = computed(() => props.attributes.viewMode === \"piechart\" || props.attributes.viewMode === \"piechart2\");\n\n\t\t//\n\t\t// viewmode picturemap\n\n\t\tconst isPictureMapView = computed(() => props.attributes.viewMode === \"picturemap\");\n\n\t\t//\n\t\t// viewmode Expan\n\n\t\tconst isExpanView = computed(() => props.attributes.viewMode === \"expanview\");\n\n\t\t// expan item selected\n\t\tprovide(\"onExpanItemSelected\", (rowInfo) => {\n\t\t\tif (rowInfo.isExpanded) return (rowInfo.isExpanded = false);\n\t\t\tcontentsLoaderHelper.getContentsRowsInfo().value.forEach((e) => (e.isExpanded = false));\n\t\t\trowInfo.isExpanded = true;\n\t\t});\n\n\t\t//\n\t\t// viewmode router-view\n\n\t\tconst isRouterView = computed(() => props.attributes.viewMode === \"routerview\" || props.attributes.viewMode === \"stacknavigation\");\n\n\t\tprovide(\"containerSize\", {\n\t\t\tcontainerWidth: props.attributes.viewMode === \"routerview\" ? computed(() => props.controlWidth - 2) : containerWidth,\n\t\t\tcontainerHeight: props.attributes.viewMode === \"routerview\" ? computed(() => props.controlHeight - 2) : containerHeight,\n\t\t});\n\n\t\tif (isRouterView.value) {\n\t\t\t//\n\t\t\t// Scale Factor\n\n\t\t\t/** @type {{appWidth: Ref<number>, appHeight:Ref<number>}} */\n\t\t\tconst { appWidth, appHeight } = inject(\"appSize\");\n\n\t\t\t/**\n\t\t\t * widthFactor\n\t\t\t * @type {ComputedRef<number>}\n\t\t\t */\n\t\t\tconst widthFactor = computed(() => (appWidth.value ? props.controlWidth / appWidth.value : 1));\n\n\t\t\t/**\n\t\t\t * heightFactor\n\t\t\t * @type {ComputedRef<number>}\n\t\t\t */\n\t\t\tconst heightFactor = computed(() => (appHeight.value ? props.controlHeight / appHeight.value : 1));\n\n\t\t\t// provide scaleFactor to child components\n\t\t\tprovide(\"scaleFactor\", { widthFactor, heightFactor });\n\t\t}\n\n\t\tif (isGridView.value || isSlideView.value) contentsLoaderHelper.rowsPerPage = 100;\n\n\t\t//\n\t\t// onScroll event\n\t\tlet scrollTimeout;\n\t\tconst onScroll = () => {\n\t\t\tif (scrollTimeout) clearTimeout(scrollTimeout);\n\t\t\tscrollTimeout = setTimeout(() => xoneAttributesHandler.onScrollEvent(contentsElement.value, props.attributes, props.xoneDataObject), 250);\n\t\t};\n\t\tnextTick(() => onScroll());\n\n\t\treturn {\n\t\t\tisContents,\n\t\t\tcontentsElement,\n\t\t\tfitHeight,\n\t\t\tcontentsRowsInfo: contentsLoaderHelper.getContentsRowsInfo(),\n\t\t\tisLoading,\n\t\t\tnoDataMsg,\n\t\t\tbreadcrumbId,\n\t\t\tisGridView,\n\t\t\tgridTemplateColumns,\n\t\t\tisMapView,\n\t\t\tisSlideView,\n\t\t\tisCalendarView,\n\t\t\tisChartView,\n\t\t\tisChartBar,\n\t\t\tisChartPie,\n\t\t\tisPictureMapView,\n\t\t\tisExpanView,\n\t\t\tisRouterView,\n\t\t\tonScroll,\n\t\t\trowsLength: computed(() => contentsLoaderHelper.getRowsLength()),\n\t\t};\n\t},\n};\n</script>\n\n<style scoped>\n.xone-contents {\n\tposition: relative;\n\tbox-sizing: border-box;\n\t-moz-box-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\twidth: calc(100%);\n\theight: 100%;\n\t/* overflow-x: visible; */\n\toverflow-x: hidden;\n\toverflow-y: auto;\n\t/* transition: all 0.1s; */\n\tanimation: fadeIn 0.2s;\n\n\tmax-height: var(--contents-max-height);\n\tz-index: 1;\n}\n.xone-contents div {\n\tscroll-snap-align: start;\n}\n\n.xone-gridview {\n\tdisplay: grid;\n}\n\n.xone-flexview {\n\tdisplay: flex;\n\tflex-wrap: wrap;\n}\n\n.xone-slideview {\n\tdisplay: flex;\n\toverflow-x: auto;\n\toverflow-y: visible;\n\tscroll-snap-type: x mandatory;\n}\n\n.xone-contents-no-data {\n\twidth: 100%;\n\tpadding: 5px;\n\ttext-align: center;\n\tfont-size: 0.9rem;\n}\n</style>\n","<template>\n\t<div :id=\"`${attributes.name.replace('@', '')}${rowInfo.id}${breadcrumbId}`\" :class=\"['xone-contents-row', isSlideView && 'xone-slidesnap']\">\n\t\t<template v-if=\"isRowLoaded && xoneDataObject && control\">\n\t\t\t<!-- contents row -->\n\t\t\t<template v-if=\"rowInfo.visible || attributes.editInRow\">\n\t\t\t\t<Container\n\t\t\t\t\tv-show=\"rowInfo.visible\"\n\t\t\t\t\t:xoneDataObject=\"xoneDataObject\"\n\t\t\t\t\t:control=\"control\"\n\t\t\t\t\t:containerHeight=\"controlHeight\"\n\t\t\t\t\t:containerWidth=\"controlWidth\"\n\t\t\t\t\t:visibilityBit=\"4\"\n\t\t\t\t\t@click=\"onContentsRowClick\"\n\t\t\t\t\t:style=\"{\n\t\t\t\t\t\tbackgroundColor,\n\t\t\t\t\t\tcursor: !attributes.editInRow && !attributes.locked && 'pointer',\n\t\t\t\t\t\tanimation: 'fadeIn 0.3s',\n\t\t\t\t\t}\"\n\t\t\t\t\t@onDataObjectChange=\"onDataObjectChange\"\n\t\t\t\t></Container>\n\t\t\t</template>\n\t\t\t<!-- expanview -->\n\t\t\t<template v-if=\"isExpanView && expanControl\">\n\t\t\t\t<Container\n\t\t\t\t\tv-show=\"rowInfo.isExpanded && rowInfo.visible\"\n\t\t\t\t\tclass=\"xone-expanded-row\"\n\t\t\t\t\t:xoneDataObject=\"xoneDataObject\"\n\t\t\t\t\t:control=\"expanControl\"\n\t\t\t\t\t:containerHeight=\"controlHeight\"\n\t\t\t\t\t:containerWidth=\"controlWidth\"\n\t\t\t\t\t:visibilityBit=\"4\"\n\t\t\t\t\t:style=\"{\n\t\t\t\t\t\tbackgroundColor,\n\t\t\t\t\t\tcursor: !attributes.editInRow && !attributes.locked && 'pointer',\n\t\t\t\t\t\tponiterEvents: !attributes.editInRow && !attributes.locked && 'all',\n\t\t\t\t\t}\"\n\t\t\t\t\t@onDataObjectChange=\"onDataObjectChange\"\n\t\t\t\t></Container>\n\t\t\t</template>\n\t\t</template>\n\t\t<div\n\t\t\tv-if=\"!isRowLoaded || !control || !xoneDataObject || !rowInfo.visible\"\n\t\t\t:style=\"{\n\t\t\t\twidth: rowInfo.width && rowInfo.width,\n\t\t\t\theight: rowInfo.height && rowInfo.height,\n\t\t\t}\"\n\t\t></div>\n\t</div>\n</template>\n\n<script>\nimport { computed, inject, onMounted, provide, ref, Ref, PropType, ComputedRef, watch } from \"vue\";\n\nimport AppDataHandler from \"../../../composables/AppDataHandler\";\nimport { XoneDataCollection } from \"../../../composables/appData/core/XoneDataCollection\";\nimport { XoneDataObject } from \"../../../composables/appData/core/XoneDataObject\";\nimport { xoneAttributesHandler, PropAttributes } from \"../../../composables/XoneAttributesHandler\";\nimport XmlNode from \"../../../composables/appData/Xml/JSONImpl/XmlNode\";\nimport { RowInfo } from \"../../../composables/ContentsLoaderHandler\";\n\nexport default {\n\tname: \"ContentsRow\",\n\n\tprops: {\n\t\t/** @type {PropType<RowInfo>} */ rowInfo: { type: Object, required: true },\n\t\tcontrolHeight: { type: Number, default: 0 },\n\t\t/** @type {PropType<PropAttributes>} */ attributes: { type: Object, required: true },\n\t\tisDisableEdit: { type: Boolean, required: true },\n\t\tcontrolWidth: { type: Number, default: 0 },\n\t\tisSlideView: { type: Boolean, default: false },\n\t\tisExpanView: { type: Boolean, default: false },\n\t\trowsLength: { type: Number, default: 0 },\n\t},\n\n\tsetup(props) {\n\t\tconst isRowLoaded = ref(false);\n\n\t\t/**\n\t\t * Contents\n\t\t * @type {Ref<XoneDataCollection>}\n\t\t */\n\t\tconst contents = inject(\"contents\");\n\n\t\t/**\n\t\t * XoneDataObject\n\t\t * @type {Ref<XoneDataObject>}\n\t\t */\n\t\tconst xoneDataObject = ref(null);\n\n\t\t/**\n\t\t * Layout\n\t\t * @type {Ref<Object>}\n\t\t */\n\t\tconst layout = ref(null);\n\t\t// const layout = ref(inject(\"dataCollectionLayout\"));\n\n\t\t/**\n\t\t * Control attributes and childs layout\n\t\t * @type {ComputedRef<Array>}\n\t\t */\n\t\tconst control = computed(() =>\n\t\t\tlayout.value?.controls?.find((e) => {\n\t\t\t\tconst containerAttributes = xoneAttributesHandler.getContainerAttributes(e.attributes);\n\t\t\t\treturn containerAttributes.node === \"group\" && !containerAttributes.fixed && !containerAttributes.drawerOrientation;\n\t\t\t})\n\t\t);\n\n\t\t/**\n\t\t * selectedItem\n\t\t * @type {Ref<XoneDataObject>}\n\t\t */\n\t\tconst selectedItem = inject(\"selectedItem\");\n\n\t\tlet isOnContentsRowClickExecuting = false;\n\t\t/**\n\t\t * On Click contents row\n\t\t */\n\t\tconst onContentsRowClick = async () => {\n\t\t\t// is locked or is Edit in Row\n\t\t\tif (props.attributes.editInRow || props.attributes.locked || props.isDisableEdit) return;\n\n\t\t\tif (isOnContentsRowClickExecuting) return;\n\t\t\tisOnContentsRowClickExecuting = true;\n\t\t\t//\n\t\t\t// execute selecteditem node\n\t\t\ttry {\n\t\t\t\tif (await xoneDataObject.value.ExecuteNode(\"selecteditem\")) {\n\t\t\t\t\tisOnContentsRowClickExecuting = false;\n\t\t\t\t\tselectedItem.value = xoneDataObject.value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} catch {}\n\t\t\t//\n\t\t\t// expanview\n\t\t\tif (props.isExpanView) {\n\t\t\t\tisOnContentsRowClickExecuting = false;\n\t\t\t\treturn onExpanItemSelected(props.rowInfo);\n\t\t\t}\n\t\t\t//\n\t\t\t// open edit view\n\t\t\tAppDataHandler.pushXoneDataObject(xoneDataObject.value);\n\t\t\tisOnContentsRowClickExecuting = false;\n\t\t};\n\n\t\t/**\n\t\t * Load contents row async\n\t\t */\n\t\tconst doLoadAsync = async (isFirstLoad = true) => {\n\t\t\tisRowLoaded.value = false;\n\n\t\t\t// Agrego esta protección para cubrirme de scripts mal optimizados que hacen constantes loadall y refresh de los controles, hacía que en algún momento el datacollection no devolviese objeto\n\t\t\tfor (let i = 0; i < 10; i++) {\n\t\t\t\txoneDataObject.value = await contents.value.get(props.rowInfo.recordId || props.rowInfo.id);\n\t\t\t\tif (!xoneDataObject.value) {\n\t\t\t\t\tawait new Promise((resolve) => setTimeout(() => resolve(), 25));\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (!xoneDataObject.value) return;\n\t\t\tprops.rowInfo.setRecordId(xoneDataObject.value.ID);\n\n\t\t\t// IsFirstLoad -> increment loadedRowsLength\n\t\t\tif (isFirstLoad) loadedRowsLength.value++;\n\n\t\t\t// Si se hace un push del objeto tengo que realizar un clone para que dicho objeto no pierda reactividad, es el problema de injectar la dependencia cuando el objeto no se crea en el bloque del setup\n\t\t\tif (!props.attributes.editInRow) xoneDataObject.value.setCloneOnPush(true);\n\n\t\t\tisRowLoaded.value = true;\n\n\t\t\tawait getLayoutAsync();\n\n\t\t\t// Si es edit-inrow tengo que hacer el objeto reactivo en el Container, espero a que lo sea para ejecutar los nodos en onDataObjectChange\n\t\t\tif (props.attributes.editInRow) return;\n\n\t\t\t// Execute nodes\n\t\t\txoneDataObject.value.ExecuteNode(\"load\").catch(console.error);\n\t\t};\n\n\t\tconst getLayoutAsync = async () => {\n\t\t\tif (!xoneDataObject.value) return;\n\t\t\t// expanview Layout\n\t\t\tif (props.isExpanView) {\n\t\t\t\texpanLayout.value = await xoneDataObject.value.getLayoutAsync(1);\n\t\t\t}\n\t\t\t// Layout\n\t\t\tif (props.rowInfo.isFirstLoad) layout.value = xoneDataObject.value.getLayout(4);\n\t\t\telse layout.value = await xoneDataObject.value.getLayoutAsync(4);\n\t\t\txoneDataObject.value.setLayout(layout.value);\n\t\t};\n\n\t\t/**\n\t\t * Viewport size conditions sm / md / lg\n\t\t * @type {Ref<string>}\n\t\t */\n\t\tconst sizeConditions = inject(\"sizeConditions\");\n\n\t\t/** @type {boolean} */\n\t\tlet relayout = false;\n\n\t\twatch(\n\t\t\t() => sizeConditions.value,\n\t\t\t() => {\n\t\t\t\tif (props.rowInfo.visible) {\n\t\t\t\t\tgetLayoutAsync();\n\t\t\t\t\trelayout = false;\n\t\t\t\t} else relayout = true;\n\t\t\t}\n\t\t);\n\n\t\t/**\n\t\t * breadcrumbId\n\t\t * @type {string}\n\t\t */\n\t\tconst breadcrumbId = inject(\"breadcrumbId\");\n\n\t\t//\n\t\t// Load / Refresh Item\n\t\tconst loadedRowsLength = inject(\"loadedRowsLength\");\n\t\tonMounted(() => doLoadAsync().then(() => props.rowInfo.setRefresh(() => doLoadAsync(false))));\n\n\t\t// Provide contents info\n\t\tprovide(\"objectInfo\", {\n\t\t\tisContents: true,\n\t\t\tisExpandedView: true,\n\t\t\teditInRow: props.attributes.editInRow,\n\t\t\tautosave: props.attributes.autosave,\n\t\t\trecordIndex: props.rowInfo.id,\n\t\t\trowInfo: props.rowInfo,\n\t\t});\n\n\t\tlet colorView;\n\t\tlet cellEvenColor;\n\t\tlet cellOddColor;\n\t\tlet cellSelectedBgColor;\n\n\t\t/**\n\t\t * m_xmlNode\n\t\t * @type {{m_xmlNode:XmlNode}}\n\t\t */\n\t\tconst { m_xmlNode } = contents.value;\n\n\t\tcellEvenColor = m_xmlNode.getAttrValue(\"cell-even-color\");\n\t\tcellOddColor = m_xmlNode.getAttrValue(\"cell-odd-color\");\n\t\tcellSelectedBgColor = m_xmlNode.getAttrValue(\"cell-selected-bgcolor\");\n\n\t\tm_xmlNode.SelectNodes(\"prop\").forEach((/** @type {XmlNode} */ e) => {\n\t\t\tif (e.getAttrValue(\"colorview\") === \"true\") colorView = e.getAttrValue(\"name\");\n\t\t\tif (e.getAttrValue(\"cell-selected-bgcolor\") === \"true\") colorView = e.getAttrValue(\"name\");\n\t\t});\n\n\t\t// Row background color\n\t\tconst backgroundColor = computed(() => {\n\t\t\tif (colorView && xoneDataObject.value) return xoneDataObject.value[colorView];\n\t\t\telse if (selectedItem.value && xoneDataObject.value === selectedItem.value && cellSelectedBgColor) return cellSelectedBgColor;\n\t\t\telse return Number(props.rowInfo.id) % 2 === 0 ? cellEvenColor : cellOddColor;\n\t\t});\n\n\t\t//\n\t\t// Expanview\n\t\tconst onExpanItemSelected = inject(\"onExpanItemSelected\");\n\n\t\t/**\n\t\t * Layout\n\t\t * @type {Ref<Object>}\n\t\t */\n\t\tconst expanLayout = ref(null);\n\n\t\t/**\n\t\t * Control attributes and childs layout\n\t\t * @type {ComputedRef<Array>}\n\t\t */\n\t\tconst expanControl = computed(() => {\n\t\t\tif (!props.isExpanView) return null;\n\t\t\treturn expanLayout.value?.controls?.find((e) => {\n\t\t\t\tconst containerAttributes = xoneAttributesHandler.getContainerAttributes(e.attributes);\n\t\t\t\treturn containerAttributes.node === \"group\" && !containerAttributes.fixed && !containerAttributes.drawerOrientation;\n\t\t\t});\n\t\t});\n\n\t\t// ExecuteNode onexpand / oncollapse\n\t\twatch(\n\t\t\t() => props.rowInfo.isExpanded,\n\t\t\t(newValue) => {\n\t\t\t\tif (!xoneDataObject.value) return;\n\t\t\t\tif (newValue) {\n\t\t\t\t\t// xoneDataObject.value.setLayout(expanLayout.value); creo que esto no hace falta\n\t\t\t\t\txoneDataObject.value.ExecuteNode(\"onexpand\").catch(console.error);\n\t\t\t\t} else {\n\t\t\t\t\t// xoneDataObject.value.setLayout(layout.value); creo que esto no hace falta\n\t\t\t\t\txoneDataObject.value?.ExecuteNode(\"oncollapse\").catch(console.error);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\treturn {\n\t\t\tisRowLoaded,\n\t\t\tcontrol,\n\t\t\txoneDataObject,\n\t\t\tonContentsRowClick,\n\t\t\tbreadcrumbId,\n\t\t\tbackgroundColor,\n\t\t\texpanControl,\n\t\t\tonDataObjectChange: (obj) => {\n\t\t\t\t// Execute nodes\n\t\t\t\tobj.ExecuteNode(\"load\").catch(console.error);\n\t\t\t\t// Assign dataObject\n\t\t\t\txoneDataObject.value = obj;\n\t\t\t\t// Set new XoneDataObject to contents XoneDataCollection -> XoneBrowseData\n\t\t\t\tcontents.value.m_browserData.m_lstOrderedList[props.rowInfo.id] = obj;\n\t\t\t},\n\t\t};\n\t},\n};\n</script>\n\n<style>\n.xone-contents-row {\n\talign-items: center;\n\tflex-shrink: 0;\n\tflex-grow: 0;\n\tposition: relative;\n\tanimation: fadeIn 0.5s;\n}\n\n.xone-slidesnap {\n\tscroll-snap-align: center;\n}\n</style>\n","import { render } from \"./ContentsRow.vue?vue&type=template&id=2eaf9004\"\nimport script from \"./ContentsRow.vue?vue&type=script&lang=js\"\nexport * from \"./ContentsRow.vue?vue&type=script&lang=js\"\n\nimport \"./ContentsRow.vue?vue&type=style&index=0&id=2eaf9004&lang=css\"\n\nimport exportComponent from \"/home/amiyares/Projects/XOne/XOneWebVue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n\t<div :id=\"`map-${breadcrumbId}${objectIndex}`\" class=\"xone-map\" @click=\"showLayers = false\">\n\t\t<div class=\"xone-map-markers\" @mousewheel=\"onMouseWheel\">\n\t\t\t<div\n\t\t\t\tv-if=\"showMarkerButton\"\n\t\t\t\t:style=\"{\n\t\t\t\t\t'--image-layers': `url(${appPath}/assets/layers.png) no-repeat`,\n\t\t\t\t}\"\n\t\t\t\tclass=\"xone-marker-button\"\n\t\t\t>\n\t\t\t\t<button @click=\"onMarkerButtonClick\"></button>\n\t\t\t</div>\n\n\t\t\t<transition name=\"slide-fade\">\n\t\t\t\t<div class=\"xone-markers-list\" v-show=\"showLayers\" :style=\"{ maxHeight: `${controlHeight - 25}px` }\">\n\t\t\t\t\t<a\n\t\t\t\t\t\tv-for=\"(layer, index) in keyLayers\"\n\t\t\t\t\t\t:key=\"`map-${index}`\"\n\t\t\t\t\t\t:class=\"{ 'xone-selected-marker': checkIsLayerSelected(layer) }\"\n\t\t\t\t\t\t@click=\"changeMapLayer(layer, $event)\"\n\t\t\t\t\t\t>{{ layer }}</a\n\t\t\t\t\t>\n\t\t\t\t</div>\n\t\t\t</transition>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport { computed, inject, onMounted, onUnmounted, PropType, ref, Ref, watch } from \"vue\";\n\nimport { PropAttributes } from \"../../../composables/XoneAttributesHandler\";\nimport { XoneDataObject } from \"../../../composables/appData/core/XoneDataObject\";\nimport { XoneDataCollection } from \"../../../composables/appData/core/XoneDataCollection\";\nimport { getDefaultMapLayer, getMapLayers, loadLeaflet, replaceLayerName } from \"../../../composables/helperFunctions/MapHelper\";\nimport { XoneControl, XoneView } from \"../../../composables/XoneViewsHandler\";\nimport { generateUniqueId } from \"../../../composables/helperFunctions/StringHelper\";\nimport { normalizeWebColor } from \"../../../composables/helperFunctions/ColorHelper\";\nimport { getAppPath } from \"../../../composables/helperFunctions/ImageHelper\";\n\nexport default {\n\tname: \"Map\",\n\tprops: {\n\t\t/**\n\t\t * xoneDataObject\n\t\t * @type {PropType<XoneDataObject>}\n\t\t * */\n\t\txoneDataObject: { type: Object, required: true },\n\t\t/**\n\t\t * attributes\n\t\t * @type { PropType<PropAttributes>}\n\t\t */\n\t\tattributes: { type: Object, default: null, required: true },\n\t\tcontrolWidth: { type: Number, default: 0 },\n\t\tcontrolHeight: { type: Number, default: 0 },\n\t},\n\tsetup(props) {\n\t\t// const api = `https://api.locationiq.com/v1/autocomplete.php?key=47616557e9fb47&q=santander&limit=5`;\n\n\t\t// const defaultIconUrl = \"/assets/marker-icon.png\";\n\t\t// const defaultShadowUrl = \"/assets/marker-shadow.png\";\n\n\t\t/**\n\t\t * breadcrumbId\n\t\t * @type {string}\n\t\t */\n\t\tconst breadcrumbId = inject(\"breadcrumbId\");\n\n\t\t/**\n\t\t * objectInfo\n\t\t * @type {import('../../../composables/AppDataHandler').Objectinfo}\n\t\t */\n\t\tconst objectInfo = inject(\"objectInfo\");\n\n\t\tconst objectIndex = objectInfo.isContents ? objectInfo.recordIndex : \"\";\n\n\t\t// tiles provider for leaflet\n\t\tconst mapLayers = ref({});\n\n\t\t/** @type {ComputedRef} */\n\t\tconst keyLayers = computed(() =>\n\t\t\tObject.entries(mapLayers.value)\n\t\t\t\t.filter(([, value]) => !value.onlyLabel && value.type === (props.attributes.viewMode === \"openstreetmap\" ? \"OSM\" : \"google\"))\n\t\t\t\t.map(([key]) => key)\n\t\t);\n\t\t// Map\n\t\tlet map;\n\n\t\t// Markers\n\t\tlet markers = [];\n\n\t\t// Lines\n\t\tconst polyLines = new Map();\n\n\t\t// Polygons\n\t\tconst polygons = new Map();\n\n\t\t// Routes\n\t\tconst routes = new Set();\n\n\t\t// Draw line\n\t\tconst drawLine = (name, color, lineStyle, ...pointList) => {\n\t\t\tconst points = [];\n\t\t\tfor (let i = 0; i < pointList.length; i += 2) {\n\t\t\t\tpoints.push(new L.LatLng(pointList[i], pointList[i + 1]));\n\t\t\t}\n\t\t\tlet dashArray = null;\n\t\t\tif (lineStyle === \"dashed\") dashArray = \"10, 15\";\n\t\t\telse if (lineStyle === \"dotted\") dashArray = \"1, 10\";\n\t\t\t// else if (lineStyle === \"mixed\") dashArray = \"10, 5, 1, 10\";\n\t\t\tconst firstpolyline = new L.Polyline(points, {\n\t\t\t\tcolor: normalizeWebColor(color),\n\t\t\t\tweight: 5,\n\t\t\t\topacity: 0.5,\n\t\t\t\tsmoothFactor: 1,\n\t\t\t\tdashArray,\n\t\t\t});\n\t\t\tif (polyLines.get(name)) name = generateUniqueId();\n\t\t\tpolyLines.set(name, firstpolyline);\n\t\t\tfirstpolyline.addTo(map);\n\t\t};\n\n\t\t// Draw area\n\t\tconst drawArea = ({ id, data, color, fillcolor, pattern, width }) => {\n\t\t\tconst points = [];\n\t\t\tdata.forEach((e) => {\n\t\t\t\tconst dataCoords = e.split(\",\").map((e) => Number(e));\n\t\t\t\tpoints.push(new L.LatLng(dataCoords[0], dataCoords[1]));\n\t\t\t});\n\t\t\tlet dashArray = null;\n\t\t\tif (pattern === \"dashed\") dashArray = \"10, 15\";\n\t\t\telse if (pattern === \"dotted\") dashArray = \"1, 10\";\n\n\t\t\tconst polygon = L.polygon(points, {\n\t\t\t\tcolor: normalizeWebColor(color),\n\t\t\t\tfillColor: normalizeWebColor(fillcolor),\n\t\t\t\tweight: width,\n\t\t\t\tdashArray,\n\t\t\t}).addTo(map);\n\n\t\t\tif (polygons.get(id)) id = generateUniqueId();\n\t\t\tpolygons.set(id, polygon);\n\t\t\t// polygon.bindPopup(\"I am a polygon.\");\n\t\t\t// polygon.bindTooltip(\"I am a polygon.\").openTooltip();\n\t\t};\n\n\t\t// Draw route\n\t\tconst drawRoute = (Args) => {\n\t\t\tconst route = L.Routing.control({\n\t\t\t\twaypoints: [L.latLng(Args.sourceLatitude, Args.sourceLongitude), L.latLng(Args.destinationLatitude, Args.destinationLongitude)],\n\t\t\t\trouteWhileDragging: false,\n\t\t\t\tshowAlternatives: false,\n\t\t\t});\n\t\t\troutes.add(route);\n\t\t\troute.addTo(map);\n\t\t};\n\n\t\t// Remove markers\n\t\tconst removeMarkers = () => {\n\t\t\tmarkers.forEach((e) => map.removeLayer(e));\n\t\t\tmarkers = [];\n\t\t};\n\n\t\t// Remove lines\n\t\tconst clearLines = () => {\n\t\t\tpolyLines.forEach((e) => map.removeLayer(e));\n\t\t\tpolyLines.clear();\n\t\t};\n\n\t\t// Remove lines\n\t\tconst clearAreas = () => {\n\t\t\tpolygons.forEach((e) => map.removeLayer(e));\n\t\t\tpolygons.clear();\n\t\t};\n\n\t\t/**\n\t\t * Contents\n\t\t * @type {Ref<XoneDataCollection>}\n\t\t */\n\t\tconst contents = ref();\n\n\t\t/**\n\t\t * xoneView\n\t\t * @type {XoneView}\n\t\t */\n\t\tconst xoneView = inject(\"xoneView\");\n\n\t\t/**\n\t\t * contents data\n\t\t * @type {Ref<Array<XoneDataObject>>}\n\t\t */\n\t\tconst data = ref([]);\n\n\t\t/**\n\t\t * Refresh map\n\t\t */\n\t\tconst refresh = async () => {\n\t\t\t// Load map\n\t\t\tloadMap();\n\n\t\t\t// Get contents\n\t\t\tif (!contents.value) contents.value = await props.xoneDataObject.getContents(props.attributes.contents);\n\n\t\t\t// Load contents data\n\t\t\t// LoadAll\n\t\t\tif(contents.value.length === 0)\n\t\t\t\tawait contents.value.loadAll(false);\n\n\t\t\tdata.value = [];\n\t\t\tfor (let i = 0; i < contents.value.length; i++) {\n\t\t\t\t/**\n\t\t\t\t * rowDataObject\n\t\t\t\t * @type {XoneDataObject}\n\t\t\t\t */\n\t\t\t\tconst rowDataObject = await contents.value.get(i);\n\t\t\t\tdata.value.push(rowDataObject);\n\t\t\t\t// Execute Nodes\n\t\t\t\trowDataObject\n\t\t\t\t\t.ExecuteNode(\"before-edit\")\n\t\t\t\t\t.then(() => rowDataObject.ExecuteNode(\"load\"))\n\t\t\t\t\t.then(() => rowDataObject.ExecuteNode(\"after-edit\"))\n\t\t\t\t\t.catch(console.error);\n\t\t\t}\n\n\t\t\tdrawMarkers(true);\n\t\t};\n\n\t\t/**\n\t\t * Refresh map markers\n\t\t */\n\t\tconst drawMarkers = (withFitBounds = false) => {\n\t\t\t// create bounds array\n\t\t\tconst bounds = [];\n\t\t\tdata.value.forEach((e) => {\n\t\t\t\tif (!e.LATITUD || !e.LONGITUD) return;\n\n\t\t\t\tlet iconUrl = `${getAppPath()}/assets/marker-icon.png`;\n\t\t\t\t// TODO: poner el  icono que viene del mappings\n\n\t\t\t\tconst icon = L.icon({\n\t\t\t\t\ticonUrl,\n\t\t\t\t\tshadowUrl: `${getAppPath()}/assets/marker-shadow.png`,\n\t\t\t\t\ticonSize: [25, 41],\n\t\t\t\t\ticonAnchor: [12, 41],\n\t\t\t\t});\n\n\t\t\t\t// push coordinates into bounds\n\t\t\t\tbounds.push([e.LATITUD, e.LONGITUD]);\n\t\t\t\t// Create marker\n\t\t\t\tconst marker = L.marker([e.LATITUD, e.LONGITUD], { icon })\n\t\t\t\t\t.addTo(map)\n\t\t\t\t\t// on click execute selecteditem node\n\t\t\t\t\t.on(\"click\", () => e.ExecuteNode(\"selecteditem\").catch(console.error));\n\t\t\t\tmarkers.push(marker);\n\t\t\t});\n\t\t\t// fit bounds\n\t\t\tif (withFitBounds && bounds.length !== 0) map.fitBounds(bounds);\n\t\t\t// map.flyToBounds(bounds, { animate: true, duration: 1 });\n\t\t};\n\n\t\t// Clear layers\n\t\tconst clearLayers = () => Object.keys(map._layers).forEach((key) => map.removeLayer(map._layers[key]));\n\n\t\t// Clear routes\n\t\tconst clearRoutes = () => routes.forEach((e) => map.removeControl(e));\n\n\t\t/**\n\t\t * @type {Object}\n\t\t */\n\t\tlet currentMapTileLayer;\n\n\t\t/**\n\t\t * @type {string}\n\t\t */\n\t\tlet currentMapLayerName = getDefaultMapLayer(props.attributes);\n\n\t\tconst changeMapLayer = (/** @type {string}*/ layer, /** @type {MouseEvent} */ e = null) => {\n\t\t\tif (e) e.stopPropagation();\n\n\t\t\tlayer = replaceLayerName(layer);\n\t\t\tcurrentMapLayerName = layer;\n\n\t\t\tif (currentMapTileLayer) map.removeLayer(currentMapTileLayer);\n\n\t\t\tcurrentMapTileLayer = mapLayers.value[layer].layer;\n\n\t\t\tif (!currentMapTileLayer) currentMapTileLayer = Object.values(mapLayers.value).forEach((e) => e.title === layer);\n\n\t\t\t// Add new layer\n\t\t\tcurrentMapTileLayer.addTo(map);\n\n\t\t\t// Set zoom\n\t\t\tif (map._zoom > mapLayers.value[layer].layer.options.maxZoom) map.setZoom(mapLayers.value[layer].layer.options.maxZoom);\n\n\t\t\t// Refresh Markers\n\t\t\tdrawMarkers();\n\n\t\t\tshowLayers.value = false;\n\t\t};\n\n\t\t/**\n\t\t * Load Map\n\t\t */\n\t\tconst loadMap = () => {\n\t\t\tif (!map) map = L.map(`map-${breadcrumbId}${objectIndex}`).setView([43.454518, -3.851194], 2);\n\t\t\telse {\n\t\t\t\tclearRoutes();\n\t\t\t\tclearLayers();\n\t\t\t}\n\t\t\tcurrentMapTileLayer = mapLayers.value[getDefaultMapLayer(props.attributes)].layer;\n\t\t\tcurrentMapTileLayer.addTo(map);\n\t\t};\n\n\t\tonMounted(async () => {\n\t\t\tawait loadLeaflet();\n\n\t\t\t// map Layers\n\t\t\tmapLayers.value = getMapLayers(L, props.attributes);\n\n\t\t\t//\n\t\t\t// Add control to view\n\t\t\tconst xoneControl = new XoneControl(props.attributes.name);\n\n\t\t\t// Refresh\n\t\t\txoneControl.refresh = refresh;\n\t\t\t// Draw Line\n\t\t\txoneControl.drawLine = drawLine;\n\t\t\t// Clear Area\n\t\t\txoneControl.clearArea = (Args) => map.removeLayer(polygons.get(Args));\n\t\t\t// Clear all Areas\n\t\t\txoneControl.clearAllAreas = clearAreas;\n\t\t\t// Clear line\n\t\t\txoneControl.clearLine = (Args) => map.removeLayer(polyLines.get(Args));\n\t\t\t// Clear all lines\n\t\t\txoneControl.clearAllLines = clearLines;\n\t\t\t// CLear all routes\n\t\t\txoneControl.clearAllRoutes = clearRoutes;\n\t\t\t// CLear route\n\t\t\txoneControl.clearRoute = clearRoutes;\n\t\t\t// Draw Area\n\t\t\txoneControl.drawArea = drawArea;\n\t\t\t// Draw Route\n\t\t\txoneControl.drawRoute = drawRoute;\n\t\t\txoneControl.routeTo = drawRoute;\n\t\t\t// Remove area\n\t\t\txoneControl.removeArea = (area) => polygons.has(area) && map.removeLayer(polygons.get(area));\n\t\t\t// Zoom to\n\t\t\txoneControl.zoomTo = (...Args) => {\n\t\t\t\tmap.flyTo([Args[0], Args[1]], 18, { duration: 1 });\n\t\t\t};\n\t\t\t// Set Map Type\n\t\t\txoneControl.setMapType = changeMapLayer;\n\t\t\t// Zoom to bounds\n\t\t\txoneControl.zoomToBounds = (Args) => {\n\t\t\t\t// map.fitBounds(Args.map((e) => e.split(\",\").map((e) => Number(e))));\n\t\t\t\tmap.flyToBounds(\n\t\t\t\t\tArgs.map((e) => e.split(\",\").map((e) => Number(e))),\n\t\t\t\t\t{ animate: true, duration: 1 }\n\t\t\t\t);\n\t\t\t};\n\n\t\t\txoneView.addControl(xoneControl);\n\n\t\t\t//\n\t\t\t// Refresh contents\n\t\t\trefresh();\n\t\t});\n\t\tonUnmounted(() => {\n\t\t\tif (contents.value) contents.value.clear();\n\t\t});\n\n\t\tconst showMarkerButton = ref(true);\n\n\t\tconst showLayers = ref(false);\n\n\t\twatch(\n\t\t\t() => showLayers.value,\n\t\t\t(newValue) => {\n\t\t\t\tif (newValue) showMarkerButton.value = false;\n\t\t\t\telse setTimeout(() => (showMarkerButton.value = true), 400);\n\t\t\t}\n\t\t);\n\n\t\treturn {\n\t\t\tkeyLayers,\n\t\t\tbreadcrumbId,\n\t\t\tobjectIndex,\n\t\t\tshowLayers,\n\t\t\tchangeMapLayer,\n\t\t\tshowMarkerButton,\n\t\t\tonMouseWheel: (/** @type{ MouseEvent} */ e) => e.stopPropagation(),\n\t\t\tonMarkerButtonClick: async (/** @type {MouseEvent} */ e) => {\n\t\t\t\tshowLayers.value = !showLayers.value;\n\t\t\t\te.stopPropagation();\n\t\t\t},\n\t\t\tcheckIsLayerSelected: (/** @type {string} */ layer) => replaceLayerName(layer) === replaceLayerName(currentMapLayerName),\n\t\t\tappPath: getAppPath(),\n\t\t};\n\t},\n};\n</script>\n\n<style scoped>\n.xone-map {\n\tposition: relative;\n\theight: 100vh;\n\twidth: 100%;\n\n\twidth: var(--contents-width);\n\theight: var(--contents-height);\n\tmax-height: var(--contents-max-height);\n}\n.xone-map-markers {\n\tdisplay: flex;\n\tposition: absolute;\n\tright: 5px;\n\tmargin-top: 5px;\n\tz-index: 999;\n\tpointer-events: all;\n\tpadding: 5px;\n}\n\n.xone-selected-marker {\n\tfont-weight: bold;\n}\n\n.xone-marker-button {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\twidth: 30px;\n\theight: 30px;\n\tborder-radius: 2px;\n\tborder: 2px solid rgb(204, 204, 204);\n\tbackground-color: #fff;\n\tanimation: slideLeft 0.2s;\n\n\t/* box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.2), 0 4px 5px rgba(0, 0, 0, 0.14),\n    0 1px 10px rgba(0, 0, 0, 0.12); */\n}\n.xone-marker-button:hover {\n\tbackground: #f4f4f4;\n}\n\n.xone-marker-button button {\n\tcursor: pointer;\n\tdisplay: block;\n\tbackground: var(--image-layers);\n\tbackground-position: center;\n\tpadding: 5px;\n\tborder: none;\n\twidth: 30px;\n\theight: 30px;\n\tbackground-size: 75%;\n}\n\n.xone-markers-list {\n\tbox-sizing: border-box;\n\tdisplay: flex;\n\tflex-direction: column;\n\tanimation: slideLeft 0.3s;\n\toverflow-y: auto;\n\toverflow-x: hidden;\n\tbackground-color: #fff;\n\tborder-radius: 2px;\n\tmargin-left: 5px;\n\tborder: 2px solid rgb(204, 204, 204);\n\n\t/* box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.2), 0 4px 5px rgba(0, 0, 0, 0.14),\n    0 1px 10px rgba(0, 0, 0, 0.12); */\n\tpointer-events: all;\n}\n\na {\n\tcursor: pointer;\n\tbackground-color: white;\n\tcolor: black !important;\n\tpadding: 10px;\n\ttext-align: justify;\n\tborder-bottom: 1px solid rgba(0, 0, 0, 0.12);\n\tpointer-events: all;\n}\n\na:hover {\n\tbackground-color: #f4f4f4;\n}\n\na:link {\n\ttext-decoration: none;\n}\n\n.slide-fade-enter-active {\n\ttransition: all 0.2s ease;\n}\n.slide-fade-leave-active {\n\ttransition: all 0.2s ease;\n}\n.slide-fade-enter,\n.slide-fade-leave-to {\n\ttransform: translateX(100px);\n\topacity: 0;\n}\n</style>\n","const apiThunderforest = \"2514d9d400ef48b8996963c689736d76\";\n\nexport const getMapLayers = (L) => {\n\treturn {\n\t\t//\n\t\t// Google\n\t\tstreets: {\n\t\t\ttype: \"google\",\n\t\t\tlayer: L.tileLayer(\"http://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}\", {\n\t\t\t\tmaxZoom: 20,\n\t\t\t\tsubdomains: [\"mt0\", \"mt1\", \"mt2\", \"mt3\"],\n\t\t\t}),\n\t\t},\n\t\thybrid: {\n\t\t\ttype: \"google\",\n\t\t\tlayer: L.tileLayer(\"http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}\", {\n\t\t\t\tmaxZoom: 20,\n\t\t\t\tsubdomains: [\"mt0\", \"mt1\", \"mt2\", \"mt3\"],\n\t\t\t}),\n\t\t},\n\t\tterrain: {\n\t\t\ttype: \"google\",\n\t\t\tlayer: L.tileLayer(\"http://{s}.google.com/vt/lyrs=p&x={x}&y={y}&z={z}\", {\n\t\t\t\tmaxZoom: 20,\n\t\t\t\tsubdomains: [\"mt0\", \"mt1\", \"mt2\", \"mt3\"],\n\t\t\t}),\n\t\t},\n\t\tsatellite: {\n\t\t\ttype: \"google\",\n\t\t\tlayer: L.tileLayer(\"http://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}\", {\n\t\t\t\tmaxZoom: 20,\n\t\t\t\tsubdomains: [\"mt0\", \"mt1\", \"mt2\", \"mt3\"],\n\t\t\t}),\n\t\t},\n\t\t//\n\t\t// Open Street Map\n\t\tstandard: {\n\t\t\ttype: \"OSM\",\n\t\t\tlayer: L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n\t\t\t\tmaxZoom: 19,\n\t\t\t\tattribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n\t\t\t}),\n\t\t},\n\t\tbright: {\n\t\t\ttype: \"OSM\",\n\t\t\tlayer: L.tileLayer(\"https://tiles.stadiamaps.com/tiles/osm_bright/{z}/{x}/{y}{r}.png\", {\n\t\t\t\tmaxZoom: 20,\n\t\t\t\tattribution:\n\t\t\t\t\t'&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors',\n\t\t\t}),\n\t\t},\n\t\tdark: {\n\t\t\ttype: \"OSM\",\n\t\t\tlayer: L.tileLayer(\"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png\", {\n\t\t\t\tmaxZoom: 20,\n\t\t\t\tattribution:\n\t\t\t\t\t'&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors',\n\t\t\t}),\n\t\t},\n\t\tworldImagery: {\n\t\t\ttype: \"OSM\",\n\t\t\tlayer: L.tileLayer(\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\", {\n\t\t\t\tattribution:\n\t\t\t\t\t\"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\",\n\t\t\t}),\n\t\t\tnoLabel: true,\n\t\t},\n\t\thumanitary: {\n\t\t\ttype: \"OSM\",\n\t\t\tlayer: L.tileLayer(\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\", {\n\t\t\t\tmaxZoom: 19,\n\t\t\t\tattribution:\n\t\t\t\t\t'&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Tiles style by <a href=\"https://www.hotosm.org/\" target=\"_blank\">Humanitarian OpenStreetMap Team</a> hosted by <a href=\"https://openstreetmap.fr/\" target=\"_blank\">OpenStreetMap France</a>',\n\t\t\t}),\n\t\t},\n\t\tsmooth: {\n\t\t\ttype: \"OSM\",\n\t\t\tlayer: L.tileLayer(\"https://tiles.stadiamaps.com/tiles/alidade_smooth/{z}/{x}/{y}{r}.png\", {\n\t\t\t\tmaxZoom: 20,\n\t\t\t\tattribution:\n\t\t\t\t\t'&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors',\n\t\t\t}),\n\t\t},\n\t\toutdoors: {\n\t\t\ttype: \"OSM\",\n\t\t\tlayer: L.tileLayer(\"https://tiles.stadiamaps.com/tiles/outdoors/{z}/{x}/{y}{r}.png\", {\n\t\t\t\tmaxZoom: 20,\n\t\t\t\tattribution:\n\t\t\t\t\t'&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors',\n\t\t\t}),\n\t\t},\n\t\topenTopoMap: {\n\t\t\ttype: \"OSM\",\n\t\t\tlayer: L.tileLayer(\"https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png\", {\n\t\t\t\tmaxZoom: 17,\n\t\t\t\tattribution:\n\t\t\t\t\t'Map data: &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, <a href=\"http://viewfinderpanoramas.org\">SRTM</a> | Map style: &copy; <a href=\"https://opentopomap.org\">OpenTopoMap</a> (<a href=\"https://creativecommons.org/licenses/by-sa/3.0/\">CC-BY-SA</a>)',\n\t\t\t}),\n\t\t},\n\t\tcyclist: {\n\t\t\ttype: \"OSM\",\n\t\t\tlayer: L.tileLayer(\"https://{s}.tile-cyclosm.openstreetmap.fr/cyclosm/{z}/{x}/{y}.png\", {\n\t\t\t\tmaxZoom: 20,\n\t\t\t\tattribution:\n\t\t\t\t\t'<a href=\"https://github.com/cyclosm/cyclosm-cartocss-style/releases\" title=\"CyclOSM - Open Bicycle render\">CyclOSM</a> | Map data: &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n\t\t\t}),\n\t\t},\n\t\ttransport: {\n\t\t\ttype: \"OSM\",\n\t\t\tlayer: L.tileLayer(\"https://tile.thunderforest.com/transport/{z}/{x}/{y}.png?apikey=\" + apiThunderforest, {\n\t\t\t\tmaxZoom: 20,\n\t\t\t\tattribution: \"\",\n\t\t\t}),\n\t\t},\n\t\tneighbourhood: {\n\t\t\ttype: \"OSM\",\n\t\t\tlayer: L.tileLayer(\"https://tile.thunderforest.com/neighbourhood/{z}/{x}/{y}.png?apikey=2514d9d400ef48b8996963c689736d76\", {\n\t\t\t\tmaxZoom: 20,\n\t\t\t\tattribution: \"\",\n\t\t\t}),\n\t\t},\n\t\tcarto: {\n\t\t\ttype: \"OSM\",\n\t\t\tlayer: L.tileLayer(\"https://{s}.basemaps.cartocdn.com/rastertiles/voyager_labels_under/{z}/{x}/{y}{r}.png\", {\n\t\t\t\tattribution:\n\t\t\t\t\t'&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n\t\t\t\tsubdomains: \"abcd\",\n\t\t\t\tmaxZoom: 19,\n\t\t\t}),\n\t\t},\n\t\twatercolor: {\n\t\t\ttype: \"OSM\",\n\t\t\tlayer: L.tileLayer(\"https://stamen-tiles-{s}.a.ssl.fastly.net/watercolor/{z}/{x}/{y}.{ext}\", {\n\t\t\t\tattribution:\n\t\t\t\t\t'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n\t\t\t\tsubdomains: \"abcd\",\n\t\t\t\tminZoom: 1,\n\t\t\t\tmaxZoom: 16,\n\t\t\t\text: \"jpg\",\n\t\t\t}),\n\t\t},\n\t\tworldTopoMap: {\n\t\t\ttype: \"OSM\",\n\t\t\tlayer: L.tileLayer(\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}\", {\n\t\t\t\tattribution:\n\t\t\t\t\t\"Tiles &copy; Esri &mdash; Esri, DeLorme, NAVTEQ, TomTom, Intermap, iPC, USGS, FAO, NPS, NRCAN, GeoBase, Kadaster NL, Ordnance Survey, Esri Japan, METI, Esri China (Hong Kong), and the GIS User Community\",\n\t\t\t}),\n\t\t},\n\t\tterrainLabels: {\n\t\t\ttype: \"OSM\",\n\t\t\tlayer: L.tileLayer(\"https://stamen-tiles-{s}.a.ssl.fastly.net/terrain-labels/{z}/{x}/{y}{r}.{ext}\", {\n\t\t\t\tattribution:\n\t\t\t\t\t'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n\t\t\t\tsubdomains: \"abcd\",\n\t\t\t\tminZoom: 0,\n\t\t\t\tmaxZoom: 18,\n\t\t\t\text: \"png\",\n\t\t\t}),\n\t\t\tonlyLabel: true,\n\t\t},\n\t\tdarkMatterOnlyLabels: {\n\t\t\ttype: \"OSM\",\n\t\t\tlayer: L.tileLayer(\"https://{s}.basemaps.cartocdn.com/dark_only_labels/{z}/{x}/{y}{r}.png\", {\n\t\t\t\tattribution:\n\t\t\t\t\t'&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n\t\t\t\tsubdomains: \"abcd\",\n\t\t\t\tmaxZoom: 19,\n\t\t\t}),\n\t\t\tonlyLabel: true,\n\t\t},\n\t\tpositronOnlyLabels: {\n\t\t\ttype: \"OSM\",\n\t\t\tlayer: L.tileLayer(\"https://{s}.basemaps.cartocdn.com/light_only_labels/{z}/{x}/{y}{r}.png\", {\n\t\t\t\tattribution:\n\t\t\t\t\t'&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n\t\t\t\tsubdomains: \"abcd\",\n\t\t\t\tmaxZoom: 18,\n\t\t\t}),\n\t\t\tonlyLabel: true,\n\t\t},\n\t\tcartoDVoyagerOnlyLabels: {\n\t\t\ttype: \"OSM\",\n\t\t\tlayer: L.tileLayer(\"https://{s}.basemaps.cartocdn.com/rastertiles/voyager_only_labels/{z}/{x}/{y}{r}.png\", {\n\t\t\t\tattribution:\n\t\t\t\t\t'&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n\t\t\t\tsubdomains: \"abcd\",\n\t\t\t\tmaxZoom: 18,\n\t\t\t}),\n\t\t\tonlyLabel: true,\n\t\t},\n\t};\n};\n\nexport const replaceLayerName = (layer) => layer.replace(\"none\", \"standard\").replace(\"normal\", \"streets\");\n\nexport const getDefaultMapLayer = (/** @type {import(\"../XoneAttributesHandler\").PropAttributes} */ attributes) =>\n\tattributes.viewMode === \"mapview\" ? \"streets\" : \"standard\";\n\nexport const loadLeaflet = async () => {\n\tif (window.L) return;\n\n\t// Import leaflet css\n\tconst lCssElement = document.createElement(\"link\");\n\tlCssElement.setAttribute(\"rel\", \"stylesheet\");\n\tlCssElement.setAttribute(\"href\", \"modules/leaflet/leaflet.css\");\n\tdocument.head.append(lCssElement);\n\t// Import leaflet js\n\tconst lJsElement = document.createElement(\"script\");\n\tlJsElement.setAttribute(\"src\", \"modules/leaflet/leaflet.js\");\n\tdocument.head.append(lJsElement);\n\t// Import routing machine css\n\tconst lrmCssElement = document.createElement(\"link\");\n\tlrmCssElement.setAttribute(\"rel\", \"stylesheet\");\n\tlrmCssElement.setAttribute(\"href\", \"modules/leaflet/leaflet-routing-machine.css\");\n\tdocument.head.append(lrmCssElement);\n\t// Import leaflet routing machine js\n\tconst lrmJsElement = document.createElement(\"script\");\n\tlrmJsElement.setAttribute(\"src\", \"modules/leaflet/leaflet-routing-machine.js\");\n\tdocument.head.append(lrmJsElement);\n\n\twhile (!window.L) await new Promise((resolve) => setTimeout(() => resolve(), 1));\n\n\t// set imagePath\n\tL.Icon.Default.imagePath = \"./assets/\";\n};\n\n// const apiMapTiler = \"93ot4VTOe9tDF0xzLJjr\";\n// basic: {\n//   layer: L.tileLayer(\n//     \"https://api.maptiler.com/maps/basic/256/{z}/{x}/{y}.png?key=\" +\n//       apiMapTiler,\n//     {\n//       maxZoom: 19,\n//       attribution:\n//         '&copy; MapTiler &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//     }\n//   ),\n// },\n// bright: {\n//   layer: L.tileLayer(\n//     \"https://api.maptiler.com/maps/bright/256/{z}/{x}/{y}.png?key=\" +\n//       apiMapTiler,\n//     {\n//       maxZoom: 19,\n//       attribution:\n//         '&copy; MapTiler &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//     }\n//   ),\n// },\n// outdoor: {\n//   layer: L.tileLayer(\n//     \"https://api.maptiler.com/maps/outdoor/256/{z}/{x}/{y}.png?key=\" +\n//       apiMapTiler,\n//     {\n//       maxZoom: 19,\n//       attribution:\n//         '&copy; MapTiler &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//     }\n//   ),\n// },\n// hybridSatellite: {\n//   layer: L.tileLayer(\n//     \"https://api.maptiler.com/maps/hybrid/256/{z}/{x}/{y}.jpg?key=\" +\n//       apiMapTiler,\n//     {\n//       maxZoom: 19,\n//       attribution:\n//         '&copy; MapTiler &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//     }\n//   ),\n// },\n// pastel: {\n//   layer: L.tileLayer(\n//     \"https://api.maptiler.com/maps/pastel/256/{z}/{x}/{y}.png?key=\" +\n//       apiMapTiler,\n//     {\n//       maxZoom: 19,\n//       attribution:\n//         '&copy; MapTiler &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//     }\n//   ),\n// },\n// streets: {\n//   layer: L.tileLayer(\n//     \"https://api.maptiler.com/maps/streets/256/{z}/{x}/{y}.png?key=\" +\n//       apiMapTiler,\n//     {\n//       maxZoom: 19,\n//       attribution:\n//         '&copy; MapTiler &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//     }\n//   ),\n// },\n// toner: {\n//   layer: L.tileLayer(\n//     \"https://api.maptiler.com/maps/toner/256/{z}/{x}/{y}.png?key=\" +\n//       apiMapTiler,\n//     {\n//       maxZoom: 19,\n//       attribution:\n//         '&copy; MapTiler &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//     }\n//   ),\n// },\n// topo: {\n//   layer: L.tileLayer(\n//     \"https://api.maptiler.com/maps/topo/256/{z}/{x}/{y}.png?key=\" +\n//       apiMapTiler,\n//     {\n//       maxZoom: 19,\n//       attribution:\n//         '&copy; MapTiler &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//     }\n//   ),\n// },\n// topographique: {\n//   layer: L.tileLayer(\n//     \"https://api.maptiler.com/maps/topographique/256/{z}/{x}/{y}.png?key=\" +\n//       apiMapTiler,\n//     {\n//       maxZoom: 19,\n//       attribution:\n//         '&copy; MapTiler &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//     }\n//   ),\n// },\n// voyager: {\n//   layer: L.tileLayer(\n//     \"https://api.maptiler.com/maps/voyager/256/{z}/{x}/{y}.png?key=\" +\n//       apiMapTiler,\n//     {\n//       maxZoom: 19,\n//       attribution:\n//         '&copy; MapTiler &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//     }\n//   ),\n// },\n","/**\n * Normalice XOne color\n * @param {string} value\n */\nexport const normalizeWebColor = (value) => {\n  if(!value) return;\n  if (value.startsWith(\"#\") && value.length > 7) {\n    return \"#\" + value.substr(value.length - 6, 6) + value.substr(1, value.length - 7).padStart(2, \"0\");\n  }\n  return value;\n};\n\nexport function HEX2RGB(hex) {\n  // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n  const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  hex = hex.replace(shorthandRegex, (m, r, g, b) => {\n    return r + r + g + g + b + b;\n  });\n\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? [parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)] : null;\n}\n\nexport class Color {\n  constructor(r, g, b) {\n    this.set(r, g, b);\n  }\n\n  toString() {\n    return `rgb(${Math.round(this.r)}, ${Math.round(this.g)}, ${Math.round(this.b)})`;\n  }\n\n  set(r, g, b) {\n    this.r = this.clamp(r);\n    this.g = this.clamp(g);\n    this.b = this.clamp(b);\n  }\n\n  hueRotate(angle = 0) {\n    angle = (angle / 180) * Math.PI;\n    const sin = Math.sin(angle);\n    const cos = Math.cos(angle);\n\n    this.multiply([\n      0.213 + cos * 0.787 - sin * 0.213,\n      0.715 - cos * 0.715 - sin * 0.715,\n      0.072 - cos * 0.072 + sin * 0.928,\n      0.213 - cos * 0.213 + sin * 0.143,\n      0.715 + cos * 0.285 + sin * 0.14,\n      0.072 - cos * 0.072 - sin * 0.283,\n      0.213 - cos * 0.213 - sin * 0.787,\n      0.715 - cos * 0.715 + sin * 0.715,\n      0.072 + cos * 0.928 + sin * 0.072,\n    ]);\n  }\n\n  grayscale(value = 1) {\n    this.multiply([\n      0.2126 + 0.7874 * (1 - value),\n      0.7152 - 0.7152 * (1 - value),\n      0.0722 - 0.0722 * (1 - value),\n      0.2126 - 0.2126 * (1 - value),\n      0.7152 + 0.2848 * (1 - value),\n      0.0722 - 0.0722 * (1 - value),\n      0.2126 - 0.2126 * (1 - value),\n      0.7152 - 0.7152 * (1 - value),\n      0.0722 + 0.9278 * (1 - value),\n    ]);\n  }\n\n  sepia(value = 1) {\n    this.multiply([\n      0.393 + 0.607 * (1 - value),\n      0.769 - 0.769 * (1 - value),\n      0.189 - 0.189 * (1 - value),\n      0.349 - 0.349 * (1 - value),\n      0.686 + 0.314 * (1 - value),\n      0.168 - 0.168 * (1 - value),\n      0.272 - 0.272 * (1 - value),\n      0.534 - 0.534 * (1 - value),\n      0.131 + 0.869 * (1 - value),\n    ]);\n  }\n\n  saturate(value = 1) {\n    this.multiply([\n      0.213 + 0.787 * value,\n      0.715 - 0.715 * value,\n      0.072 - 0.072 * value,\n      0.213 - 0.213 * value,\n      0.715 + 0.285 * value,\n      0.072 - 0.072 * value,\n      0.213 - 0.213 * value,\n      0.715 - 0.715 * value,\n      0.072 + 0.928 * value,\n    ]);\n  }\n\n  multiply(matrix) {\n    const newR = this.clamp(this.r * matrix[0] + this.g * matrix[1] + this.b * matrix[2]);\n    const newG = this.clamp(this.r * matrix[3] + this.g * matrix[4] + this.b * matrix[5]);\n    const newB = this.clamp(this.r * matrix[6] + this.g * matrix[7] + this.b * matrix[8]);\n    this.r = newR;\n    this.g = newG;\n    this.b = newB;\n  }\n\n  brightness(value = 1) {\n    this.linear(value);\n  }\n  contrast(value = 1) {\n    this.linear(value, -(0.5 * value) + 0.5);\n  }\n\n  linear(slope = 1, intercept = 0) {\n    this.r = this.clamp(this.r * slope + intercept * 255);\n    this.g = this.clamp(this.g * slope + intercept * 255);\n    this.b = this.clamp(this.b * slope + intercept * 255);\n  }\n\n  invert(value = 1) {\n    this.r = this.clamp((value + (this.r / 255) * (1 - 2 * value)) * 255);\n    this.g = this.clamp((value + (this.g / 255) * (1 - 2 * value)) * 255);\n    this.b = this.clamp((value + (this.b / 255) * (1 - 2 * value)) * 255);\n  }\n\n  hsl() {\n    // Code taken from https://stackoverflow.com/a/9493060/2688027, licensed under CC BY-SA.\n    const r = this.r / 255;\n    const g = this.g / 255;\n    const b = this.b / 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h,\n      s,\n      l = (max + min) / 2;\n\n    if (max === min) {\n      h = s = 0;\n    } else {\n      const d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n\n        case g:\n          h = (b - r) / d + 2;\n          break;\n\n        case b:\n          h = (r - g) / d + 4;\n          break;\n      }\n      h /= 6;\n    }\n\n    return {\n      h: h * 100,\n      s: s * 100,\n      l: l * 100,\n    };\n  }\n\n  clamp(value) {\n    if (value > 255) {\n      value = 255;\n    } else if (value < 0) {\n      value = 0;\n    }\n    return value;\n  }\n}\n\nexport class Solver {\n  constructor(target, baseColor) {\n    this.target = target;\n    this.targetHSL = target.hsl();\n    this.reusedColor = new Color(0, 0, 0);\n  }\n\n  solve() {\n    const results = [];\n    for (let i = 0; i < 10; i++) results.push(this.solveNarrow(this.solveWide()));\n\n    results.sort((a, b) => a.loss - b.loss);\n\n    const result = results[0];\n\n    return {\n      values: result.values,\n      loss: result.loss,\n      filter: this.css(result.values),\n    };\n  }\n\n  solveWide() {\n    const A = 5;\n    const c = 15;\n    const a = [60, 180, 18000, 600, 1.2, 1.2];\n\n    let best = { loss: Infinity };\n    for (let i = 0; best.loss > 25 && i < 3; i++) {\n      const initial = [50, 20, 3750, 50, 100, 100];\n      const result = this.spsa(A, a, c, initial, 1000);\n      if (result.loss < best.loss) {\n        best = result;\n      }\n    }\n    return best;\n  }\n\n  solveNarrow(wide) {\n    const A = wide.loss;\n    const c = 2;\n    const A1 = A + 1;\n    const a = [0.25 * A1, 0.25 * A1, A1, 0.25 * A1, 0.2 * A1, 0.2 * A1];\n    return this.spsa(A, a, c, wide.values, 500);\n  }\n\n  spsa(A, a, c, values, iters) {\n    const alpha = 1;\n    const gamma = 0.16666666666666666;\n\n    let best = null;\n    let bestLoss = Infinity;\n    const deltas = new Array(6);\n    const highArgs = new Array(6);\n    const lowArgs = new Array(6);\n\n    for (let k = 0; k < iters; k++) {\n      const ck = c / Math.pow(k + 1, gamma);\n      for (let i = 0; i < 6; i++) {\n        deltas[i] = Math.random() > 0.5 ? 1 : -1;\n        highArgs[i] = values[i] + ck * deltas[i];\n        lowArgs[i] = values[i] - ck * deltas[i];\n      }\n\n      const lossDiff = this.loss(highArgs) - this.loss(lowArgs);\n      for (let i = 0; i < 6; i++) {\n        const g = (lossDiff / (2 * ck)) * deltas[i];\n        const ak = a[i] / Math.pow(A + k + 1, alpha);\n        values[i] = fix(values[i] - ak * g, i);\n      }\n\n      const loss = this.loss(values);\n      if (loss < bestLoss) {\n        best = values.slice(0);\n        bestLoss = loss;\n      }\n    }\n    return { values: best, loss: bestLoss };\n\n    function fix(value, idx) {\n      let max = 100;\n      if (idx === 2 /* saturate */) {\n        max = 7500;\n      } else if (idx === 4 /* brightness */ || idx === 5 /* contrast */) {\n        max = 200;\n      }\n\n      if (idx === 3 /* hue-rotate */) {\n        if (value > max) {\n          value %= max;\n        } else if (value < 0) {\n          value = max + (value % max);\n        }\n      } else if (value < 0) {\n        value = 0;\n      } else if (value > max) {\n        value = max;\n      }\n      return value;\n    }\n  }\n\n  loss(filters) {\n    // Argument is array of percentages.\n    const color = this.reusedColor;\n    color.set(0, 0, 0);\n\n    color.invert(filters[0] / 100);\n    color.sepia(filters[1] / 100);\n    color.saturate(filters[2] / 100);\n    color.hueRotate(filters[3] * 3.6);\n    color.brightness(filters[4] / 100);\n    color.contrast(filters[5] / 100);\n\n    const colorHSL = color.hsl();\n    return (\n      Math.abs(color.r - this.target.r) +\n      Math.abs(color.g - this.target.g) +\n      Math.abs(color.b - this.target.b) +\n      Math.abs(colorHSL.h - this.targetHSL.h) +\n      Math.abs(colorHSL.s - this.targetHSL.s) +\n      Math.abs(colorHSL.l - this.targetHSL.l)\n    );\n  }\n\n  css(filters) {\n    function fmt(idx, multiplier = 1) {\n      return Math.round(filters[idx] * multiplier);\n    }\n    return `invert(${fmt(0)}%) sepia(${fmt(1)}%) saturate(${fmt(2)}%) hue-rotate(${fmt(3, 3.6)}deg) brightness(${fmt(4)}%) contrast(${fmt(5)}%)`;\n  }\n}\n","import { render } from \"./Map.vue?vue&type=template&id=0212dfac&scoped=true\"\nimport script from \"./Map.vue?vue&type=script&lang=js\"\nexport * from \"./Map.vue?vue&type=script&lang=js\"\n\nimport \"./Map.vue?vue&type=style&index=0&id=0212dfac&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/amiyares/Projects/XOne/XOneWebVue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0212dfac\"]])\n\nexport default __exports__","<template>\n\t<div ref=\"calendarElement\" class=\"xone-calendar\">\n\t\t<!-- Week Days -->\n\t\t<ol>\n\t\t\t<li\n\t\t\t\tstyle=\"display: flex; justify-content: center\"\n\t\t\t\t:style=\"{\n\t\t\t\t\tbackgroundColor: (attributes.cellBorderColor && attributes.cellBorderColor) || 'lightgray',\n\t\t\t\t}\"\n\t\t\t\tv-for=\"day in weekDays\"\n\t\t\t\t:key=\"`calendar-${day}`\"\n\t\t\t>\n\t\t\t\t<!-- Week Day -->\n\t\t\t\t<p>\n\t\t\t\t\t{{ day }}\n\t\t\t\t</p>\n\t\t\t</li>\n\t\t</ol>\n\t\t<!-- Days -->\n\t\t<ol class=\"xone-calendar-days\">\n\t\t\t<li\n\t\t\t\tv-for=\"item in dateItems\"\n\t\t\t\t:key=\"`calendar-${item.day}-${item.id}`\"\n\t\t\t\t:style=\"{\n\t\t\t\t\tbackgroundColor: item.isCurrentMonth\n\t\t\t\t\t\t? item.date.isSameDate(currentDate) && attributes.cellSelectedBgColor\n\t\t\t\t\t\t\t? attributes.cellSelectedBgColor\n\t\t\t\t\t\t\t: (attributes.cellBgColor && attributes.cellBgColor) || 'white'\n\t\t\t\t\t\t: (attributes.cellOtherMonthBgColor && attributes.cellOtherMonthBgColor) || 'rgba(0,0,0,.1)',\n\t\t\t\t\tborder: `1px ${\n\t\t\t\t\t\titem.date.isSameDate(currentDate)\n\t\t\t\t\t\t\t? (attributes.cellSelectedBorderColor && attributes.cellSelectedBorderColor) || 'lightgray'\n\t\t\t\t\t\t\t: 'transparent'\n\t\t\t\t\t} solid`,\n\t\t\t\t}\"\n\t\t\t\t@click=\"onDateSelected(item)\"\n\t\t\t>\n\t\t\t\t<!-- Item Day -->\n\t\t\t\t<div\n\t\t\t\t\t:style=\"{\n\t\t\t\t\t\tbackgroundColor: item.date.isSameDate(new Date()) && (attributes.cellSelectedBgColor || 'lightgray'),\n\t\t\t\t\t\tcolor: attributes.cellForeColor && attributes.cellForeColor,\n\t\t\t\t\t}\"\n\t\t\t\t>\n\t\t\t\t\t<p>{{ item.day }}</p>\n\t\t\t\t</div>\n\t\t\t\t<!-- Day events -->\n\t\t\t\t<div class=\"xone-calendar-events\">\n\t\t\t\t\t<div v-for=\"value in item.values\" :key=\"`calendar-event-${value.index}-${value.i}`\" :style=\"{ backgroundColor: value.color }\"></div>\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t</ol>\n\t</div>\n</template>\n\n<script>\nimport { inject, onMounted, onUnmounted, PropType, ref, Ref } from \"vue\";\n\nimport { PropAttributes } from \"../../../composables/XoneAttributesHandler\";\nimport { XoneDataObject } from \"../../../composables/appData/core/XoneDataObject\";\nimport { XoneDataCollection } from \"../../../composables/appData/core/XoneDataCollection\";\nimport { weekStartLocale, getWeekDays, addDays } from \"../../../composables/helperFunctions/DateHelper\";\nimport { SwipeHandler } from \"../../../composables/SwipeHandler\";\nimport { XoneControl, XoneView } from \"../../../composables/XoneViewsHandler\";\nimport { generateUniqueId } from \"../../../composables/helperFunctions/StringHelper\";\nimport XmlNode from \"../../../composables/appData/Xml/JSONImpl/XmlNode\";\n\nexport default {\n\tname: \"Map\",\n\tprops: {\n\t\t/**\n\t\t * xoneDataObject\n\t\t * @type {PropType<XoneDataObject>}\n\t\t * */\n\t\txoneDataObject: { type: Object, required: true },\n\t\t/**\n\t\t * attributes\n\t\t * @type { PropType<PropAttributes>}\n\t\t */\n\t\tattributes: { type: Object, default: null, required: true },\n\t\tcontrolWidth: { type: Number, default: 0 },\n\t\tcontrolHeight: { type: Number, default: 0 },\n\t},\n\tsetup(props) {\n\t\t/**\n\t\t * date items to show in calendar\n\t\t * @type {Ref<Array<object>>}\n\t\t */\n\t\tconst dateItems = ref([]);\n\n\t\t/**\n\t\t * calendarElement\n\t\t * @type {Ref<HTMLElement>}\n\t\t */\n\t\tconst calendarElement = ref();\n\n\t\t/**\n\t\t * Contents\n\t\t * @type {Ref<XoneDataCollection>}\n\t\t */\n\t\tconst contents = ref();\n\n\t\t/**\n\t\t * xoneView\n\t\t * @type {XoneView}\n\t\t */\n\t\tconst xoneView = inject(\"xoneView\");\n\n\t\tlet contentsItems = [];\n\n\t\t// Control key attributes\n\t\tlet dateFrom, dateTo, timeFrom, timeTo, colorView;\n\n\t\t// Init calendar\n\t\tonMounted(async () => {\n\t\t\tcontents.value = await props.xoneDataObject.getContents(props.attributes.contents);\n\t\t\t// Get key attributes\n\n\t\t\t/**\n\t\t\t * m_xmlNode\n\t\t\t * @type {{m_xmlNode:XmlNode}}\n\t\t\t */\n\t\t\tconst { m_xmlNode } = contents.value;\n\n\t\t\tm_xmlNode.SelectNodes(\"prop\").forEach((/** @type {XmlNode} */ e) => {\n\t\t\t\tif (e.getAttrValue(\"colorview\") === \"true\") colorView = e.getAttrValue(\"name\");\n\t\t\t\tif (e.getAttrValue(\"datefrom\") === \"true\") dateFrom = e.getAttrValue(\"name\");\n\t\t\t\tif (e.getAttrValue(\"dateto\") === \"true\") dateTo = e.getAttrValue(\"name\");\n\t\t\t\tif (e.getAttrValue(\"timefrom\") === \"true\") timeFrom = e.getAttrValue(\"name\");\n\t\t\t\tif (e.getAttrValue(\"timeto\") === \"true\") timeTo = e.getAttrValue(\"name\");\n\t\t\t});\n\t\t\t// Add control to view\n\t\t\tconst xoneControl = new XoneControl(props.attributes.name, calendarElement.value);\n\t\t\txoneControl.refresh = () => refresh();\n\t\t\txoneControl.nextMonth = () => changeMonth(1);\n\t\t\txoneControl.previusMonth = () => changeMonth(-1);\n\t\t\t// xoneView.deleteItem = (...Args) => console.log(\"deleteItem \", Args);\n\t\t\txoneView.addControl(xoneControl);\n\n\t\t\trefresh(true);\n\n\t\t\tawait contents.value.executeCollAction(\"ondateselected\", null, currentDate.value).catch(console.error);\n\t\t});\n\n\t\t// Close calendar\n\t\tonUnmounted(() => {\n\t\t\tif (contents.value) contents.value.clear();\n\t\t});\n\n\t\t/**\n\t\t * Refresh Calendar\n\t\t */\n\t\tconst refresh = async (isFirstLoad = false) => {\n\t\t\tconst moveTo = contents.value.getVariables(\"moveto\");\n\t\t\tif (moveTo) {\n\t\t\t\tcontents.value.setVariables(\"moveto\", null);\n\t\t\t\treturn await changeMonth(moveTo === \"next\" ? 1 : -1);\n\t\t\t}\n\t\t\tdrawMonth();\n\t\t\tloadDataAsync(isFirstLoad);\n\t\t};\n\n\t\t// Change to Next / Previus Month\n\t\tconst changeMonth = async (value) => {\n\t\t\ttry {\n\t\t\t\tif (value > 0) currentDate.value = currentDate.value.nextMonth();\n\t\t\t\telse currentDate.value = currentDate.value.previusMonth();\n\n\t\t\t\tdrawMonth();\n\n\t\t\t\tcalendarElement.value.animate(\n\t\t\t\t\t[\n\t\t\t\t\t\t{ opacity: 0, transform: `translateX(${value > 0 ? 100 : -100}px)` },\n\t\t\t\t\t\t{ opacity: 1, transform: \"translateX(0)\" },\n\t\t\t\t\t],\n\t\t\t\t\t{ duration: 100 }\n\t\t\t\t);\n\t\t\t\tawait new Promise((resolve) => setTimeout(() => resolve(), 100));\n\t\t\t\t// executenode onpageselected\n\t\t\t\tawait contents.value.executeCollAction(\"onpageselected\", null, currentDate.value);\n\t\t\t\t// executenode ondateselected\n\t\t\t\tawait contents.value.executeCollAction(\"ondateselected\", null, currentDate.value);\n\n\t\t\t\tloadDataAsync();\n\t\t\t} catch (ex) {\n\t\t\t\tconsole.error(ex);\n\t\t\t}\n\t\t};\n\n\t\t//\n\t\t// Change current month by swipe\n\t\tconst swipeHandler = new SwipeHandler(changeMonth);\n\t\tonMounted(() => {\n\t\t\tcalendarElement.value.setAttribute(\"swipeable\", false);\n\t\t\tswipeHandler.init(calendarElement.value);\n\t\t});\n\n\t\tonUnmounted(() => swipeHandler.clear());\n\n\t\tlet currentDate = ref(new Date());\n\n\t\t/**\n\t\t * Draw selected month\n\t\t */\n\t\tconst drawMonth = () => {\n\t\t\t// Reset items\n\t\t\tdateItems.value = [];\n\n\t\t\t// Selected month days count\n\t\t\tconst monthDays = currentDate.value.monthDays();\n\n\t\t\t//\n\t\t\t// Add days from previus month\n\n\t\t\t// First day of the month\n\t\t\tlet firstWeekDayOfMonth = currentDate.value.firstWeekDayOfMonth();\n\n\t\t\t// Week start day\n\t\t\tlet weekStart = weekStartLocale();\n\n\t\t\tif (weekStart === 1 && firstWeekDayOfMonth === 0) firstWeekDayOfMonth = 7;\n\n\t\t\tif (firstWeekDayOfMonth > weekStart) {\n\t\t\t\t// Previus  month\n\t\t\t\tconst previusMonthDate = currentDate.value.previusMonth();\n\n\t\t\t\t// Fill previus month days\n\t\t\t\tlet previusMonthDay = previusMonthDate.monthDays() - firstWeekDayOfMonth + weekStart + 1;\n\t\t\t\tfor (let i = firstWeekDayOfMonth; i > weekStart; i--) {\n\t\t\t\t\tconst date = new Date(previusMonthDate.getFullYear(), previusMonthDate.getMonth(), previusMonthDay);\n\t\t\t\t\t// Push item>\n\t\t\t\t\tdateItems.value.push({\n\t\t\t\t\t\tid: generateUniqueId(),\n\t\t\t\t\t\tday: previusMonthDay,\n\t\t\t\t\t\tdate,\n\t\t\t\t\t\tisCurrentMonth: false,\n\t\t\t\t\t\tvalues: [],\n\t\t\t\t\t});\n\t\t\t\t\tpreviusMonthDay++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add  month days\n\t\t\tfor (let i = 1; i <= monthDays; i++) {\n\t\t\t\tconst date = new Date(currentDate.value.getFullYear(), currentDate.value.getMonth(), i);\n\t\t\t\t// Push item>\n\t\t\t\tdateItems.value.push({\n\t\t\t\t\tid: generateUniqueId(),\n\t\t\t\t\tday: i,\n\t\t\t\t\tdate,\n\t\t\t\t\tisCurrentMonth: true,\n\t\t\t\t\tvalues: [],\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//\n\t\t\t// Add days from next month\n\n\t\t\t// Week end day\n\t\t\tconst weekEnd = weekStart === 0 ? 6 : 7;\n\n\t\t\t// Last day of the month\n\t\t\tlet lastWeekDayOfMonth = currentDate.value.lastWeekDayOfMonth();\n\t\t\tif (weekEnd === 7 && lastWeekDayOfMonth === 0) lastWeekDayOfMonth = 7;\n\t\t\tlet nextMonthDay = 1;\n\n\t\t\t// Next  month\n\t\t\tconst nextMonthDate = currentDate.value.nextMonth();\n\n\t\t\tfor (let i = lastWeekDayOfMonth; i < weekEnd; i++) {\n\t\t\t\tconst date = new Date(nextMonthDate.getFullYear(), nextMonthDate.getMonth(), nextMonthDay);\n\t\t\t\tdateItems.value.push({\n\t\t\t\t\tid: generateUniqueId(),\n\t\t\t\t\tday: nextMonthDay,\n\t\t\t\t\tdate,\n\t\t\t\t\tisCurrentMonth: false,\n\t\t\t\t\tvalues: [],\n\t\t\t\t});\n\t\t\t\tnextMonthDay++;\n\t\t\t}\n\n\t\t\t// executenode oncelldraw\n\t\t\tdateItems.value.forEach((e) => contents.value.executeCollAction(\"oncelldraw\", null, e.date).catch(console.error));\n\t\t};\n\n\t\tlet currentContentsFilter = \"\";\n\t\t/**\n\t\t * Load contents data\n\t\t */\n\t\tconst loadDataAsync = (isFirstLoad = false) => {\n\t\t\t// Add filter from current month\n\t\t\tcontents.value.setFilter(contents.value.getFilter()?.replace(currentContentsFilter, \"\"));\n\t\t\tcurrentContentsFilter = `${dateFrom}>='${dateItems.value[0].date}' AND ${dateTo}<'${addDays(\n\t\t\t\tdateItems.value[dateItems.value.length - 1].date,\n\t\t\t\t1\n\t\t\t)}'`;\n\t\t\tcontents.value.setFilter(currentContentsFilter);\n\t\t\t// Load data\n\t\t\tcontents.value.loadAll(false).then(() => drawMarkers());\n\t\t};\n\n\t\t/**\n\t\t * Draw calendar markers\n\t\t */\n\t\tconst drawMarkers = async () => {\n\t\t\tcontentsItems.value = [];\n\t\t\t// Clear dateItems values\n\t\t\tObject.values(dateItems.value).forEach((value) => (value.values = []));\n\t\t\tfor (let i = 0; i < contents.value.length; i++) {\n\t\t\t\tconst contentsItem = await contents.value.get(i);\n\t\t\t\tcontentsItems.value.push({\n\t\t\t\t\tindex: i,\n\t\t\t\t\tobj: contentsItem,\n\t\t\t\t});\n\n\t\t\t\t/**\n\t\t\t\t * contentsDate\n\t\t\t\t * @type {Date}\n\t\t\t\t */\n\t\t\t\tconst contentsDate = contentsItem[dateFrom];\n\t\t\t\tconst color = contentsItem[colorView];\n\n\t\t\t\tif (!contentsDate || !color) continue;\n\n\t\t\t\t// Fill dateItems values\n\t\t\t\tObject.values(dateItems.value).forEach((value) => {\n\t\t\t\t\tif (value.date.isSameDate(contentsDate)) {\n\t\t\t\t\t\tvalue.values.push({ id: i, itemIndex: value.index, color });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tconst onDateSelected = async (item) => {\n\t\t\ttry {\n\t\t\t\tlet currentMonth = currentDate.value.getMonth();\n\t\t\t\tcurrentDate.value = item.date;\n\n\t\t\t\tif (currentDate.value.getMonth() !== currentMonth) {\n\t\t\t\t\t// drawMonth\n\t\t\t\t\tdrawMonth();\n\t\t\t\t\tcalendarElement.value.animate(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t{ opacity: 0, transform: `translateX(${currentDate.value.getMonth() > currentMonth ? 100 : -100}px)` },\n\t\t\t\t\t\t\t{ opacity: 1, transform: \"translateX(0)\" },\n\t\t\t\t\t\t],\n\t\t\t\t\t\t{ duration: 100 }\n\t\t\t\t\t);\n\t\t\t\t\tawait new Promise((resolve) => setTimeout(() => resolve(), 100));\n\t\t\t\t\t// executenode onpageselected\n\t\t\t\t\tawait contents.value.executeCollAction(\"onpageselected\", null, item.date);\n\t\t\t\t\t// executenode ondateselected\n\t\t\t\t\tawait contents.value.executeCollAction(\"ondateselected\", null, item.date);\n\t\t\t\t\tloadDataAsync();\n\t\t\t\t}\n\t\t\t\t// executenode ondateselected\n\t\t\t\telse await contents.value.executeCollAction(\"ondateselected\", null, item.date);\n\t\t\t} catch (ex) {\n\t\t\t\tconsole.log(ex);\n\t\t\t}\n\t\t};\n\n\t\treturn {\n\t\t\tcalendarElement,\n\t\t\tcontentsItems,\n\t\t\tdateItems,\n\t\t\tcurrentDate,\n\t\t\tonDateSelected,\n\t\t\tweekDays: getWeekDays(props.attributes.weekdaysLongname),\n\t\t};\n\t},\n};\n</script>\n\n<style scoped>\n.xone-calendar {\n\tdisplay: flex;\n\tflex-direction: column;\n\tposition: relative;\n\ttop: 0;\n\tleft: 0;\n\tbackground-color: white;\n\toverflow: hidden;\n\twidth: var(--contents-width);\n\theight: var(--contents-height);\n\tmax-height: var(--contents-max-height);\n}\n\nol {\n\tlist-style: none;\n\tdisplay: grid;\n\tgrid-template-columns: repeat(7, 1fr);\n}\n\n.xone-calendar-days {\n\tgrid-auto-rows: 1fr;\n\twidth: 100%;\n\theight: 100%;\n\toverflow: hidden;\n\tborder: 1px lightgray solid;\n\tbox-sizing: border-box;\n\t-moz-box-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\tgrid-gap: 1px;\n\tbackground-color: lightgray;\n}\n\n.xone-calendar-header {\n\tbackground-color: white;\n}\n\n.xone-calendar-days li:hover {\n\toutline: 1px #ececec solid;\n\toutline-offset: -1px;\n}\n\nli {\n\tposition: relative;\n\toverflow: hidden;\n\tbox-sizing: border-box;\n\t-moz-box-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\tborder: 1px transparent solid;\n\tbackground-color: white;\n\tcursor: pointer;\n}\n\nli > div:first-child {\n\tposition: absolute;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\ttop: 1px;\n\tright: 1px;\n\twidth: 2ch;\n\theight: 2ch;\n\tfont-size: 0.6rem;\n\tpadding: 3px;\n\tborder-radius: 90px;\n\tcolor: black;\n\tcursor: pointer;\n\tz-index: 1;\n}\n\nli > p {\n\tfont-size: 0.75rem;\n\tfont-weight: lighter;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n\tcursor: pointer;\n}\n\n.xone-calendar-events {\n\tpadding: 0 5% 0;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tposition: absolute;\n\theight: 100%;\n\twidth: 90%;\n\tbackground-color: transparent;\n}\n\n.xone-calendar-events > div {\n\tmargin: auto 1px 10% 1px;\n\tflex-grow: 1;\n\theight: 15%;\n\tmax-height: 15px;\n\tborder-radius: 2px;\n}\n</style>\n","const locale = Intl.DateTimeFormat().resolvedOptions().locale; //navigator.language;\n\n// Convert date to xone date format\nif (!Date.prototype.toXoneDate)\n\t(function() {\n\t\tconst pad = (number) => (number < 10 ? `0${number}` : number);\n\t\tDate.prototype.toXoneDate = function(type = \"DT\") {\n\t\t\tlet value = this.getFullYear() + \"-\" + pad(this.getMonth() + 1) + \"-\" + pad(this.getDate());\n\t\t\tif (type === \"DT\") value += \"T\" + pad(this.getHours()) + \":\" + pad(this.getMinutes());\n\t\t\treturn value;\n\t\t};\n\n\t\tDate.prototype.toString = function() {\n\t\t\treturn (\n\t\t\t\tthis.getFullYear() +\n\t\t\t\t\"-\" +\n\t\t\t\tpad(this.getMonth() + 1) +\n\t\t\t\t\"-\" +\n\t\t\t\tpad(this.getDate()) +\n\t\t\t\t\" \" +\n\t\t\t\tpad(this.getHours()) +\n\t\t\t\t\":\" +\n\t\t\t\tpad(this.getMinutes()) +\n\t\t\t\t\":\" +\n\t\t\t\tpad(this.getSeconds())\n\t\t\t);\n\t\t};\n\t})();\n\n// Month Days\nif (!Date.prototype.monthDays)\n\tDate.prototype.monthDays = function() {\n\t\treturn new Date(this.getFullYear(), this.getMonth() + 1, 0).getDate();\n\t};\n\nif (!Date.prototype.firstWeekDayOfMonth)\n\tDate.prototype.firstWeekDayOfMonth = function() {\n\t\treturn new Date(this.getFullYear(), this.getMonth(), 1).getDay();\n\t};\n\nif (!Date.prototype.lastWeekDayOfMonth)\n\tDate.prototype.lastWeekDayOfMonth = function() {\n\t\treturn new Date(\n\t\t\tthis.getFullYear(),\n\t\t\tthis.getMonth(),\n\n\t\t\tthis.monthDays()\n\t\t).getDay();\n\t};\n\nif (!Date.prototype.previusMonth)\n\tDate.prototype.previusMonth = function() {\n\t\tlet year = this.getFullYear();\n\t\tlet month = this.getMonth();\n\t\tif (month === 0) {\n\t\t\tmonth = 12;\n\t\t\tyear--;\n\t\t}\n\t\treturn new Date(`${year}-${month}-01`);\n\t};\n\nif (!Date.prototype.nextMonth)\n\t(function() {\n\t\tDate.prototype.nextMonth = function() {\n\t\t\tlet year = this.getFullYear();\n\t\t\tlet month = this.getMonth() + 2;\n\t\t\tif (month > 12) {\n\t\t\t\tmonth = 1;\n\t\t\t\tyear++;\n\t\t\t}\n\t\t\treturn new Date(`${year}-${month}-01`);\n\t\t};\n\t})();\n\nif (!Date.prototype.isSameDate)\n\t(function() {\n\t\tDate.prototype.isSameDate = function(date) {\n\t\t\treturn this.getDate() === date.getDate() && this.getMonth() === date.getMonth() && this.getFullYear() === date.getFullYear();\n\t\t};\n\t})();\n\nconst weekStart = (region, language) => {\n\tconst regionSat = \"AEAFBHDJDZEGIQIRJOKWLYOMQASDSY\".match(/../g);\n\tconst regionSun = \"AGARASAUBDBRBSBTBWBZCACNCODMDOETGTGUHKHNIDILINJMJPKEKHKRLAMHMMMOMTMXMZNINPPAPEPHPKPRPTPYSASGSVTHTTTWUMUSVEVIWSYEZAZW\".match(\n\t\t/../g\n\t);\n\tconst languageSat = [\"ar\", \"arq\", \"arz\", \"fa\"];\n\tconst languageSun = \"amasbndzengnguhehiidjajvkmknkolomhmlmrmtmyneomorpapssdsmsnsutatethtnurzhzu\".match(/../g);\n\n\treturn region\n\t\t? regionSun.includes(region)\n\t\t\t? 0\n\t\t\t: regionSat.includes(region)\n\t\t\t? 0 //6\n\t\t\t: 1\n\t\t: languageSun.includes(language)\n\t\t? 0\n\t\t: languageSat.includes(language)\n\t\t? 0 //6\n\t\t: 1;\n};\n\n/**\n * Get week start day depending on navigator language\n * @returns {number}\n */\nexport const weekStartLocale = () => {\n\tconst parts = locale.match(/^([a-z]{2,3})(?:-([a-z]{3})(?=$|-))?(?:-([a-z]{4})(?=$|-))?(?:-([a-z]{2}|\\d{3})(?=$|-))?/i);\n\treturn weekStart(parts[4], parts[1]);\n};\n\nexport const addDays = (date, days) => {\n\tconst result = new Date(date);\n\tresult.setDate(result.getDate() + days);\n\treturn result;\n};\n\n/**\n * Get week days\n * @param {boolean} [isLongFormat]\n * @returns {Array<string>}\n */\nexport const getWeekDays = (isLongFormat = false) => {\n\tconst weekdayDateMap = [...Array(8).keys()].map((e) => new Date(2021, 1, e));\n\tconst weekDays = [];\n\tfor (let i = weekStartLocale(); i < weekStartLocale() + 7; i++)\n\t\tweekDays.push(\n\t\t\tnew Intl.DateTimeFormat(locale, {\n\t\t\t\tweekday: isLongFormat ? \"long\" : \"short\",\n\t\t\t}).format(weekdayDateMap[i])\n\t\t);\n\n\treturn weekDays;\n};\n","import { render } from \"./Calendar.vue?vue&type=template&id=9e1f59f0&scoped=true\"\nimport script from \"./Calendar.vue?vue&type=script&lang=js\"\nexport * from \"./Calendar.vue?vue&type=script&lang=js\"\n\nimport \"./Calendar.vue?vue&type=style&index=0&id=9e1f59f0&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/amiyares/Projects/XOne/XOneWebVue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-9e1f59f0\"]])\n\nexport default __exports__","<template>\n\t<div v-if=\"isLoading\" class=\"xone-loader\"><div></div></div>\n\t<canvas v-show=\"!isLoading\" :id=\"`chart-${breadcrumbId}-${attributes.name}${objectIndex}`\"></canvas>\n</template>\n\n<script>\nimport { inject, ref, watchEffect, Ref, PropType, onUnmounted, nextTick, onMounted, watch } from \"vue\";\n\nimport { PropAttributes } from \"../../../composables/XoneAttributesHandler\";\nimport { XoneDataObject } from \"../../../composables/appData/core/XoneDataObject\";\nimport { XoneDataCollection } from \"../../../composables/appData/core/XoneDataCollection\";\nimport { hexToRgbA } from \"../../../composables/helperFunctions/ChartsHelper\";\nimport { XoneControl, XoneView } from \"../../../composables/XoneViewsHandler\";\nimport XmlNode from \"../../../composables/appData/Xml/JSONImpl/XmlNode\";\nimport { loadChart } from \"../../../composables/helperFunctions/ChartHelper\";\n\nexport default {\n\tname: \"ChartBar\",\n\tprops: {\n\t\t/**\n\t\t * xoneDataObject\n\t\t * @type {PropType<XoneDataObject>}\n\t\t * */\n\t\txoneDataObject: { type: Object, required: true },\n\t\t/**\n\t\t * attributes\n\t\t * @type { PropType<PropAttributes>}\n\t\t */\n\t\tattributes: { type: Object, default: null, required: true },\n\t\tcontrolWidth: { type: Number, default: 0 },\n\t\tcontrolHeight: { type: Number, default: 0 },\n\t},\n\tsetup(props) {\n\t\t/**\n\t\t * breadcrumbId\n\t\t * @type {string}\n\t\t */\n\t\tconst breadcrumbId = inject(\"breadcrumbId\");\n\n\t\t/**\n\t\t * objectInfo\n\t\t * @type {import('../../../composables/AppDataHandler').Objectinfo}\n\t\t */\n\t\tconst objectInfo = inject(\"objectInfo\");\n\n\t\tconst objectIndex = objectInfo.isContents ? objectInfo.recordIndex : \"\";\n\n\t\t/**\n\t\t * Contents\n\t\t * @type {Ref<XoneDataCollection>}\n\t\t */\n\t\tconst contents = ref();\n\n\t\t/**\n\t\t * xoneView\n\t\t * @type {XoneView}\n\t\t */\n\t\tconst xoneView = inject(\"xoneView\");\n\n\t\t/** @type {HTMLCanvasElement} */\n\t\tlet ctx;\n\n\t\tconst isLoading = ref(true);\n\n\t\tlet gridLines = false;\n\n\t\tlet refreshTimeOut;\n\t\tlet refreshTime = 100;\n\n\t\tconst refresh = async () => {\n\t\t\tif (!ctx) return;\n\n\t\t\tif (refreshTimeOut) clearTimeout(refreshTimeOut);\n\n\t\t\tisLoading.value = true;\n\n\t\t\trefreshTimeOut = setTimeout(async () => {\n\t\t\t\tif (!contents.value) contents.value = await props.xoneDataObject.getContents(props.attributes.contents);\n\n\t\t\t\t// Load contents data\n\t\t\t\tawait contents.value.loadAll(false);\n\n\t\t\t\t/**\n\t\t\t\t * contents data\n\t\t\t\t * @type {Ref<Array<XoneDataObject>>}\n\t\t\t\t */\n\t\t\t\tconst data = {\n\t\t\t\t\tlabels: [],\n\t\t\t\t\tdatasets: [],\n\t\t\t\t};\n\n\t\t\t\t// Fill chart data\n\t\t\t\tlet chartSerieTitle;\n\t\t\t\tconst categoryNames = [];\n\t\t\t\tconst categoryTitles = [];\n\t\t\t\tconst categoryColors = [];\n\t\t\t\tconst barThickness = [];\n\n\t\t\t\t/**\n\t\t\t\t * m_xmlNode\n\t\t\t\t * @type {{m_xmlNode:XmlNode}}\n\t\t\t\t */\n\t\t\t\tconst { m_xmlNode } = contents.value;\n\n\t\t\t\tm_xmlNode.SelectNodes(\"prop\").forEach((/** @type {XmlNode} */ e) => {\n\t\t\t\t\t// Chart serie title\n\t\t\t\t\tif (e.getAttrValue(\"chart-serie-title\") === \"true\") chartSerieTitle = e.getAttrValue(\"name\");\n\n\t\t\t\t\t// Chart value\n\t\t\t\t\tif (e.getAttrValue(\"chart-category\") !== \"true\") return;\n\t\t\t\t\tcategoryNames.push(e.getAttrValue(\"name\"));\n\t\t\t\t\tcategoryTitles.push(e.getAttrValue(\"title\"));\n\n\t\t\t\t\t// Chart category color\n\t\t\t\t\tcategoryColors.push(e.getAttrValue(\"chart-category-color\"));\n\n\t\t\t\t\t// Bar Thickness\n\t\t\t\t\tbarThickness.push(e.getAttrValue(\"chart-bar-thickness\") || undefined);\n\t\t\t\t});\n\n\t\t\t\t// Refresh data\n\t\t\t\tdata.datasets = [];\n\t\t\t\tdata.labels = [];\n\n\t\t\t\t// Create data\n\t\t\t\tcategoryNames.forEach(async (value, index) => {\n\t\t\t\t\tconst dataset = { label: categoryTitles[index] };\n\t\t\t\t\tdataset.data = [];\n\t\t\t\t\tdataset.backgroundColor = [];\n\t\t\t\t\tdataset.borderColor = [];\n\t\t\t\t\tdataset.borderWidth = 2;\n\t\t\t\t\tdataset.barThickness = barThickness[index];\n\n\t\t\t\t\tfor (let i = 0; i < contents.value.length; i++) {\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * rowDataObject\n\t\t\t\t\t\t * @type {XoneDataObject}\n\t\t\t\t\t\t */\n\t\t\t\t\t\tconst rowDataObject = await contents.value.get(i);\n\n\t\t\t\t\t\t// Chart Serie Title\n\t\t\t\t\t\tif (chartSerieTitle && index === 0) data.labels.push(rowDataObject[chartSerieTitle]);\n\n\t\t\t\t\t\tdataset.data.push(rowDataObject[value]);\n\t\t\t\t\t\tdataset.backgroundColor.push(hexToRgbA(categoryColors[index], 0.7));\n\t\t\t\t\t\tdataset.borderColor.push(categoryColors[index]);\n\t\t\t\t\t}\n\t\t\t\t\tdata.datasets.push(dataset);\n\t\t\t\t\tif (index === categoryNames.length - 1) {\n\t\t\t\t\t\tcreateChart(data);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tisLoading.value = false;\n\t\t\t}, refreshTime);\n\t\t};\n\n\t\tlet myChart;\n\t\tconst createChart = async (data) => {\n\t\t\twhile (groupId !== activeGroup.value) await new Promise((resolve) => setTimeout(() => resolve(), 150));\n\t\t\tif (!myChart) {\n\t\t\t\tmyChart = new Chart(ctx, {\n\t\t\t\t\ttype: props.attributes.viewMode === \"linechart\" ? \"line\" : \"bar\",\n\t\t\t\t\tdata: data,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\t// animation: false,\n\t\t\t\t\t\tresponsive: true,\n\t\t\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\t\t\tlegend: { display: false },\n\t\t\t\t\t\telements: {\n\t\t\t\t\t\t\tpoint: {\n\t\t\t\t\t\t\t\tradius: 3,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tscales: {\n\t\t\t\t\t\t\txAxes: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstacked: props.attributes.viewMode === \"stackedbarchart\",\n\t\t\t\t\t\t\t\t\tgridLines: { display: false },\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tyAxes: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstacked: props.attributes.viewMode === \"stackedbarchart\",\n\t\t\t\t\t\t\t\t\tgridLines: { display: gridLines },\n\t\t\t\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\t\t\t\tbeginAtZero: true,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\t// Vamos a quitar la animacion inicial y se la asignamos una vez existen los datos, así no se bloquea el ui si existen más cargas de contents en pantalla\n\t\t\t\tmyChart.options.animation = {\n\t\t\t\t\tduration: 1000,\n\t\t\t\t\teasing: \"easeOutQuart\",\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tmyChart.data = data;\n\t\t\t\tmyChart.update();\n\t\t\t}\n\t\t\t// En lugar de la animación del chart, hacemos que aparezca con un fadeIn\n\t\t\t// ctx.animate(\n\t\t\t// \t[\n\t\t\t// \t\t// keyframes\n\t\t\t// \t\t{ opacity: 0.1 },\n\t\t\t// \t\t{ opacity: 1 },\n\t\t\t// \t],\n\t\t\t// \t{\n\t\t\t// \t\t// timing options\n\t\t\t// \t\tduration: 500,\n\t\t\t// \t}\n\t\t\t// );\n\t\t};\n\n\t\t/**\n\t\t * Group Id\n\t\t * @type {string}\n\t\t */\n\t\tconst groupId = inject(\"groupId\");\n\n\t\t/**\n\t\t * Group active\n\t\t * @type {{activeGroup:Ref<string>}}\n\t\t */\n\t\tconst { activeGroup } = inject(\"groupHandler\");\n\n\t\t// Get chart element\n\t\tonMounted(() => {\n\t\t\tloadChart(async () => {\n\t\t\t\tawait new Promise((resolve) => setTimeout(() => nextTick().then(() => resolve()), 500));\n\t\t\t\tctx = document.getElementById(`chart-${breadcrumbId}-${props.attributes.name}${objectIndex}`);\n\t\t\t\t// Add control to view\n\t\t\t\tconst xoneControl = new XoneControl(props.attributes.name);\n\t\t\t\txoneControl.refresh = refresh;\n\t\t\t\txoneView.addControl(xoneControl);\n\t\t\t\twatchEffect(async () => {\n\t\t\t\t\tif (contents.value || groupId !== activeGroup.value) return;\n\t\t\t\t\trefresh();\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\tlet updateChartTimeout;\n\t\tconst updateChart = async () => {\n\t\t\tif (!myChart) return;\n\t\t\tif (updateChartTimeout) clearTimeout(updateChartTimeout);\n\t\t\tupdateChartTimeout = setTimeout(async () => {\n\t\t\t\tawait nextTick();\n\t\t\t\tcreateChart();\n\t\t\t}, 250);\n\t\t};\n\n\t\twatch(\n\t\t\t() => props.controlWidth,\n\t\t\t() => updateChart()\n\t\t);\n\t\twatch(\n\t\t\t() => props.controlHeight,\n\t\t\t() => updateChart()\n\t\t);\n\n\t\t// Clear contents\n\t\tonUnmounted(() => {\n\t\t\tif (contents.value) contents.value.clear();\n\t\t});\n\n\t\treturn { breadcrumbId, objectIndex, isLoading };\n\t},\n};\n</script>\n\n<style scoped>\ncanvas {\n\tposition: relative;\n\twidth: calc(var(--contents-width)-4px);\n\theight: calc(var(--contents-height)-4px);\n\tmax-height: var(--contents-max-height);\n\tanimation: fadeIn 0.5s;\n}\n</style>\n","export const hexToRgbA = (hex, opacity = 1) => {\n  let c;\n  if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n    c = hex.substring(1).split(\"\");\n    if (c.length == 3) {\n      c = [c[0], c[0], c[1], c[1], c[2], c[2]];\n    }\n    c = \"0x\" + c.join(\"\");\n    return \"rgba(\" + [(c >> 16) & 255, (c >> 8) & 255, c & 255].join(\",\") + \",\" + opacity + \")\";\n  }\n  return hex;\n};\n\nlet isLoadingChart = false;\n\nexport const getIsLoadingChart = () => isLoadingChart;\nexport const setIsLoadingChart = (value) => (isLoadingChart = value);\n","export const loadChart = Function(\n\t\"cBF\",\n\t'(async()=>{if(window.Chart)return cBF();try{await import(\"../modules/chartjs/Chart.min.js\");cBF();}catch(ex){console.error(ex);}finally{cBF();}})()'\n);\n","import { render } from \"./ChartBar.vue?vue&type=template&id=3cc8b416&scoped=true\"\nimport script from \"./ChartBar.vue?vue&type=script&lang=js\"\nexport * from \"./ChartBar.vue?vue&type=script&lang=js\"\n\nimport \"./ChartBar.vue?vue&type=style&index=0&id=3cc8b416&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/amiyares/Projects/XOne/XOneWebVue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3cc8b416\"]])\n\nexport default __exports__","<template>\n\t<div v-if=\"isLoading\" class=\"xone-loader\"><div></div></div>\n\t<canvas v-show=\"!isLoading\" :id=\"`chart-${breadcrumbId}-${attributes.name}${objectIndex}`\"></canvas>\n</template>\n\n<script>\nimport { inject, ref, watchEffect, Ref, PropType, onUnmounted, nextTick, onMounted, watch } from \"vue\";\n\nimport { PropAttributes } from \"../../../composables/XoneAttributesHandler\";\nimport { XoneDataObject } from \"../../../composables/appData/core/XoneDataObject\";\nimport { XoneDataCollection } from \"../../../composables/appData/core/XoneDataCollection\";\n// import { hexToRgbA } from \"../../../composables/helperFunctions/ChartsHelper\";\nimport { XoneControl, XoneView } from \"../../../composables/XoneViewsHandler\";\nimport XmlNode from \"../../../composables/appData/Xml/JSONImpl/XmlNode\";\nimport { loadChart } from \"../../../composables/helperFunctions/ChartHelper\";\n\nexport default {\n\tname: \"ChartPie\",\n\tprops: {\n\t\t/**\n\t\t * xoneDataObject\n\t\t * @type {PropType<XoneDataObject>}\n\t\t * */\n\t\txoneDataObject: { type: Object, required: true },\n\t\t/**\n\t\t * attributes\n\t\t * @type { PropType<PropAttributes>}\n\t\t */\n\t\tattributes: { type: Object, default: null, required: true },\n\t\tcontrolWidth: { type: Number, default: 0 },\n\t\tcontrolHeight: { type: Number, default: 0 },\n\t},\n\tsetup(props) {\n\t\t/**\n\t\t * breadcrumbId\n\t\t * @type {string}\n\t\t */\n\t\tconst breadcrumbId = inject(\"breadcrumbId\");\n\n\t\t/**\n\t\t * objectInfo\n\t\t * @type {import('../../../composables/AppDataHandler').Objectinfo}\n\t\t */\n\t\tconst objectInfo = inject(\"objectInfo\");\n\n\t\tconst objectIndex = objectInfo.isContents ? objectInfo.recordIndex : \"\";\n\n\t\t/**\n\t\t * Contents\n\t\t * @type {Ref<XoneDataCollection>}\n\t\t */\n\t\tconst contents = ref();\n\n\t\t/**\n\t\t * xoneView\n\t\t * @type {XoneView}\n\t\t */\n\t\tconst xoneView = inject(\"xoneView\");\n\n\t\t/** @type {HTMLCanvasElement} */\n\t\tlet ctx;\n\n\t\tconst isLoading = ref(true);\n\n\t\tlet refreshTimeOut;\n\t\tlet refreshTime = 100;\n\n\t\tconst refresh = async () => {\n\t\t\tif (!ctx) return;\n\n\t\t\tisLoading.value = true;\n\n\t\t\tif (refreshTimeOut) clearTimeout(refreshTimeOut);\n\n\t\t\trefreshTimeOut = setTimeout(async () => {\n\t\t\t\tif (!contents.value) contents.value = await props.xoneDataObject.getContents(props.attributes.contents);\n\n\t\t\t\t// Load contents data\n\t\t\t\tawait contents.value.loadAll(false);\n\n\t\t\t\t/**\n\t\t\t\t * contents data\n\t\t\t\t * @type {Ref<Array<XoneDataObject>>}\n\t\t\t\t */\n\t\t\t\tconst data = {\n\t\t\t\t\tlabels: [],\n\t\t\t\t\tdatasets: [],\n\t\t\t\t};\n\n\t\t\t\t// Fill chart data\n\t\t\t\tlet chartSerieTitle;\n\t\t\t\tlet chartName;\n\t\t\t\tlet chartTitle;\n\t\t\t\tlet serieColor = \"\";\n\n\t\t\t\t/**\n\t\t\t\t * m_xmlNode\n\t\t\t\t * @type {{m_xmlNode:XmlNode}}\n\t\t\t\t */\n\t\t\t\tconst { m_xmlNode } = contents.value;\n\n\t\t\t\tm_xmlNode.SelectNodes(\"prop\").forEach((/** @type {XmlNode} */ e) => {\n\t\t\t\t\t// Chart serie title\n\t\t\t\t\tif (e.getAttrValue(\"chart-serie-title\") === \"true\") chartSerieTitle = e.getAttrValue(\"name\");\n\n\t\t\t\t\t// Chart value\n\t\t\t\t\tif (e.getAttrValue(\"chart-value\") === \"true\") {\n\t\t\t\t\t\tchartName = e.getAttrValue(\"name\");\n\t\t\t\t\t\tchartTitle = e.getAttrValue(\"title\");\n\t\t\t\t\t}\n\n\t\t\t\t\t// Chart serie color\n\t\t\t\t\tif (e.getAttrValue(\"chart-serie-color\") === \"true\") serieColor = e.getAttrValue(\"name\");\n\t\t\t\t});\n\n\t\t\t\t// Clear data\n\t\t\t\tdata.datasets = [];\n\t\t\t\tdata.labels = [];\n\n\t\t\t\tconst dataset = { label: chartTitle };\n\n\t\t\t\tdataset.data = [];\n\t\t\t\tdataset.backgroundColor = [];\n\t\t\t\tdataset.borderColor = [];\n\t\t\t\tdataset.borderWidth = 1;\n\n\t\t\t\t// Create data\n\t\t\t\tfor (let i = 0; i < contents.value.length; i++) {\n\t\t\t\t\t/**\n\t\t\t\t\t * rowDataObject\n\t\t\t\t\t * @type {XoneDataObject}\n\t\t\t\t\t */\n\t\t\t\t\tconst rowDataObject = await contents.value.get(i);\n\n\t\t\t\t\t// Chart Serie Title\n\t\t\t\t\tif (chartSerieTitle) data.labels.push(rowDataObject[chartSerieTitle]);\n\n\t\t\t\t\tdataset.data.push(rowDataObject[chartName]);\n\t\t\t\t\tdataset.backgroundColor.push(rowDataObject[serieColor]);\n\t\t\t\t}\n\t\t\t\tdata.datasets.push(dataset);\n\n\t\t\t\tcreateChart(data);\n\t\t\t\tisLoading.value = false;\n\t\t\t}, refreshTime);\n\t\t};\n\n\t\tlet myChart;\n\t\tconst createChart = async (data) => {\n\t\t\twhile (groupId !== activeGroup.value) await new Promise((resolve) => setTimeout(() => resolve(), 150));\n\t\t\tif (!myChart) {\n\t\t\t\tmyChart = new Chart(ctx, {\n\t\t\t\t\ttype: props.attributes.viewMode === \"piechart\" ? \"pie\" : \"doughnut\",\n\t\t\t\t\tdata: data,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tcutoutPercentage: props.attributes.viewMode === \"piechart\" ? 0 : 70,\n\t\t\t\t\t\t// animation: false,\n\t\t\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\t\t\tresponsive: true,\n\t\t\t\t\t\t// animation: { duration: 1000 },\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\t// Vamos a quitar la animacion inicial y se la asignamos una vez existen los datos, así no se bloquea el ui si existen más cargas de contents en pantalla\n\t\t\t\tmyChart.options.animation = {\n\t\t\t\t\tduration: 1000,\n\t\t\t\t\teasing: \"easeOutQuart\",\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tmyChart.data = data;\n\t\t\t\tmyChart.update();\n\t\t\t}\n\t\t\t// En lugar de la animación del chart, hacemos que aparezca con un fadeIn\n\t\t\t// ctx.animate(\n\t\t\t// \t[\n\t\t\t// \t\t// keyframes\n\t\t\t// \t\t{ opacity: 0.1 },\n\t\t\t// \t\t{ opacity: 1 },\n\t\t\t// \t],\n\t\t\t// \t{\n\t\t\t// \t\t// timing options\n\t\t\t// \t\tduration: 500,\n\t\t\t// \t}\n\t\t\t// );\n\t\t};\n\n\t\t/**\n\t\t * Group Id\n\t\t * @type {string}\n\t\t */\n\t\tconst groupId = inject(\"groupId\");\n\n\t\t/**\n\t\t * Group active\n\t\t * @type {{activeGroup:Ref<string>}}\n\t\t */\n\t\tconst { activeGroup } = inject(\"groupHandler\");\n\n\t\t// Get chart element\n\t\tonMounted(() => {\n\t\t\tloadChart(async () => {\n\t\t\t\tawait new Promise((resolve) => setTimeout(() => nextTick().then(() => resolve()), 500));\n\n\t\t\t\tctx = document.getElementById(`chart-${breadcrumbId}-${props.attributes.name}${objectIndex}`);\n\t\t\t\t// Add control to view\n\t\t\t\tconst xoneControl = new XoneControl(props.attributes.name);\n\t\t\t\txoneControl.refresh = refresh;\n\t\t\t\txoneView.addControl(xoneControl);\n\t\t\t\twatchEffect(async () => {\n\t\t\t\t\tif (contents.value || groupId !== activeGroup.value) return;\n\t\t\t\t\trefresh();\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\tlet updateChartTimeout;\n\t\tconst updateChart = async () => {\n\t\t\tif (!myChart) return;\n\t\t\tif (updateChartTimeout) clearTimeout(updateChartTimeout);\n\t\t\tupdateChartTimeout = setTimeout(async () => {\n\t\t\t\tawait nextTick();\n\t\t\t\tcreateChart();\n\t\t\t}, 250);\n\t\t};\n\n\t\twatch(\n\t\t\t() => props.controlWidth,\n\t\t\t() => updateChart()\n\t\t);\n\t\twatch(\n\t\t\t() => props.controlHeight,\n\t\t\t() => updateChart()\n\t\t);\n\n\t\t// Clear contents\n\t\tonUnmounted(() => {\n\t\t\tif (contents.value) contents.value.clear();\n\t\t});\n\n\t\treturn { breadcrumbId, objectIndex, isLoading };\n\t},\n};\n</script>\n\n<style scoped>\ncanvas {\n\tposition: relative;\n\twidth: calc(var(--contents-width)-4px);\n\theight: calc(var(--contents-height)-4px);\n\tmax-height: var(--contents-max-height);\n\tanimation: fadeIn 0.5s;\n}\n</style>\n","import { render } from \"./ChartPie.vue?vue&type=template&id=46c631e0&scoped=true\"\nimport script from \"./ChartPie.vue?vue&type=script&lang=js\"\nexport * from \"./ChartPie.vue?vue&type=script&lang=js\"\n\nimport \"./ChartPie.vue?vue&type=style&index=0&id=46c631e0&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/amiyares/Projects/XOne/XOneWebVue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-46c631e0\"]])\n\nexport default __exports__","<template>\n\t<div class=\"xone-picturemap\">\n\t\t<!-- Zoom Buttons -->\n\t\t<div class=\"xone-picturemap-zoom\">\n\t\t\t<div>\n\t\t\t\t<button\n\t\t\t\t\t@click=\"modifyZoom(0.5)\"\n\t\t\t\t\t:style=\"{\n\t\t\t\t\t\tbackgroundColor: (zoom < 5 && '#fff') || '#f4f4f4',\n\t\t\t\t\t}\"\n\t\t\t\t>\n\t\t\t\t\t+\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\t@click=\"zoom > 1 && modifyZoom(-0.5)\"\n\t\t\t\t\t:style=\"{\n\t\t\t\t\t\topacity: zoom <= 1 ? 0.6 : 1,\n\t\t\t\t\t\tbackgroundColor: (zoom > 1 && '#fff') || '#f4f4f4',\n\t\t\t\t\t}\"\n\t\t\t\t>\n\t\t\t\t\t-\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<input\n\t\t\t\tv-if=\"!hideRange\"\n\t\t\t\t@click=\"$event.stopPropagation()\"\n\t\t\t\t@mousemove=\"$event.stopPropagation()\"\n\t\t\t\ttype=\"range\"\n\t\t\t\torient=\"vertical\"\n\t\t\t\tv-model=\"zoom\"\n\t\t\t\tmin=\"1\"\n\t\t\t\tmax=\"5\"\n\t\t\t\tstep=\".25\"\n\t\t\t/>\n\t\t</div>\n\t\t<!-- PictureMap Container -->\n\t\t<div\n\t\t\tref=\"picturemapElement\"\n\t\t\tclass=\"xone-picturemap-container\"\n\t\t\t:style=\"{\n\t\t\t\theight: controlHeight && `${zoom * controlHeight}px`,\n\t\t\t\twidth: controlWidth && `${zoom * controlWidth}px`,\n\t\t\t\t'--picturemap-cursor': isGrabbing ? 'grabbing' : 'grab',\n\t\t\t\t'--picturemap-items-cursor': isGrabbing ? 'grabbing' : 'pointer',\n\t\t\t}\"\n\t\t>\n\t\t\t<!-- PictureMap Container aspect-ratio Resized -->\n\t\t\t<div\n\t\t\t\tv-if=\"containerElementSize && !isLoading\"\n\t\t\t\tclass=\"xone-picturemap-items\"\n\t\t\t\t:style=\"{\n\t\t\t\t\theight: containerElementSize.height && `${containerElementSize.height}px`,\n\t\t\t\t\twidth: containerElementSize.width && `${containerElementSize.width}px`,\n\t\t\t\t\tbackgroundImage: contentsImage?.path && `url(${contentsImage.path})`,\n\t\t\t\t}\"\n\t\t\t>\n\t\t\t\t<!-- Items -->\n\t\t\t\t<template v-for=\"item in data\" :key=\"`pictureMap-${attributes.name}-${item.index}`\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\"xone-picturemap-item\"\n\t\t\t\t\t\tv-if=\"item.scaledX && item.scaledY\"\n\t\t\t\t\t\t:style=\"{\n\t\t\t\t\t\t\tleft: item.scaledX + 'px',\n\t\t\t\t\t\t\ttop: item.scaledY + 'px',\n\t\t\t\t\t\t\twidth: item.scaledImgWidthOff && item.scaledImgWidthOff + 'px',\n\t\t\t\t\t\t\theight: item.scaledImgHeightOff && item.scaledImgHeightOff + 'px',\n\t\t\t\t\t\t\tzIndex: item.zIndex,\n\t\t\t\t\t\t}\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<!-- Item Text -->\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tv-if=\"item.text\"\n\t\t\t\t\t\t\t:style=\"{\n\t\t\t\t\t\t\t\tcolor: item.textColor && item.textColor,\n\t\t\t\t\t\t\t}\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{ item.text }}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<!-- Item Image -->\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t@click=\"onItemSelected(item)\"\n\t\t\t\t\t\t\t:style=\"{\n\t\t\t\t\t\t\t\twidth: item.scaledImgWidthOff && item.scaledImgWidthOff + 'px',\n\t\t\t\t\t\t\t\tbackgroundImage: `url(${item.selected ? item.iconOn && item.iconOn : item.iconOff && item.iconOff})`,\n\t\t\t\t\t\t\t\theight: item.scaledImgHeightOff && item.scaledImgHeightOff + 'px',\n\t\t\t\t\t\t\t\tfilter: item.selected ? item.filterOn && item.filterOn : (item.filterOff && item.filterOff) || item.filterOn,\n\t\t\t\t\t\t\t}\"\n\t\t\t\t\t\t></button>\n\t\t\t\t\t</div>\n\t\t\t\t</template>\n\t\t\t</div>\n\t\t\t<!-- Loader -->\n\t\t\t<div v-else>\n\t\t\t\t<div class=\"xone-loader\">\n\t\t\t\t\t<div></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport { onMounted, PropType, Ref, ComputedRef, ref, inject, nextTick, watch, onUnmounted } from \"vue\";\n\nimport { PropAttributes } from \"../../../composables/XoneAttributesHandler\";\nimport { XoneDataObject } from \"../../../composables/appData/core/XoneDataObject\";\nimport { XoneDataCollection } from \"../../../composables/appData/core/XoneDataCollection\";\nimport { XoneControl, XoneView } from \"../../../composables/XoneViewsHandler\";\nimport { getImagePathAndSize } from \"../../../composables/helperFunctions/ImageHelper\";\nimport Image from \"../Image.vue\";\nimport { Color, HEX2RGB, Solver } from \"../../../composables/helperFunctions/ColorHelper\";\nimport XmlNode from \"../../../composables/appData/Xml/JSONImpl/XmlNode\";\nexport default {\n\tcomponents: { Image },\n\tname: \"PictureMap\",\n\n\tprops: {\n\t\t/**\n\t\t * xoneDataObject\n\t\t * @type {PropType<XoneDataObject>}\n\t\t * */\n\t\txoneDataObject: { type: Object, required: true },\n\n\t\t/**\n\t\t * attributes\n\t\t * @type { PropType<PropAttributes>}\n\t\t */\n\t\tattributes: { type: Object, default: null, required: true },\n\n\t\tcontrolWidth: { type: Number, default: 0 },\n\n\t\tcontrolHeight: { type: Number, default: 0 },\n\t},\n\tsetup(props) {\n\t\t/**\n\t\t * Contents\n\t\t * @type {Ref<XoneDataCollection>}\n\t\t */\n\t\tconst contents = ref();\n\n\t\t/**\n\t\t * xoneView\n\t\t * @type {XoneView}\n\t\t */\n\t\tconst xoneView = inject(\"xoneView\");\n\n\t\tconst data = ref([]);\n\n\t\t/**\n\t\t * contents Image\n\t\t * @type {Ref<Promise<{path:string,imgSize:{width:number,height:number}}>}\n\t\t */\n\t\tconst contentsImage = ref();\n\n\t\t// Get contents Image\n\t\tonMounted(async () => {\n\t\t\tif (props.attributes.image) {\n\t\t\t\tcontentsImage.value = await getImagePathAndSize(props.attributes.image, \"files\");\n\t\t\t\tif (props.attributes.image && !contentsImage.value)\n\t\t\t\t\tconsole.error(\"Not found: picturemap background image\", props.attributes.name, props.attributes.image);\n\t\t\t\tcalculateContainerAspectRatioSize();\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * Scale Factor\n\t\t * @type {{widthFactor: ComputedRef<number>, heightFactor: ComputedRef<number>}}\n\t\t */\n\t\tconst { widthFactor, heightFactor } = inject(\"scaleFactor\");\n\n\t\t//\n\t\t// Calculate Element Size\n\t\tconst containerElementSize = ref();\n\n\t\tconst isLoading = ref(true);\n\n\t\t// Scale Factors\n\t\tlet scaleFactorX;\n\t\tlet scaleFactorY;\n\n\t\t/**\n\t\t * Picturemap zoom\n\t\t * @type {Ref<number>}\n\t\t */\n\t\tconst zoom = ref(1);\n\n\t\t/**\n\t\t * Hide Range, atributo \"hide-range\" que oculta el rango del zoom que tiene el mapa\n\t\t * @type{Ref<boolean>}\n\t\t */\n\t\tconst hideRange = ref(props.xoneDataObject?.getFieldPropertyValue(props.attributes.name, \"hide-range\") === \"true\");\n\n\t\t/**\n\t\t * Add zoom\n\t\t */\n\t\tconst modifyZoom = async (value) => {\n\t\t\tzoom.value = Number(zoom.value) + value;\n\t\t\tif (zoom.value < 1) return (zoom.value = 1);\n\t\t\tif (zoom.value > 5) return (zoom.value = 5);\n\t\t};\n\n\t\twatch(\n\t\t\t() => zoom.value,\n\t\t\t(newValue, oldValue) => {\n\t\t\t\tif (newValue < 1 || newValue > 5) return;\n\t\t\t\tcalculateContainerAspectRatioSize(0);\n\n\t\t\t\tcontentsElement.scrollTo({\n\t\t\t\t\tleft: contentsElement.scrollLeft + (contentsElement.offsetWidth * (newValue - oldValue)) / 2,\n\t\t\t\t\ttop: contentsElement.scrollTop + (contentsElement.offsetHeight * (newValue - oldValue)) / 2,\n\t\t\t\t\tbehavior: \"auto\",\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\n\t\t//\n\t\t// Handler grab\n\n\t\t/**\n\t\t * picturemapElement\n\t\t * @type {Ref<HTMLElement>}\n\t\t */\n\t\tconst picturemapElement = ref();\n\n\t\t/**\n\t\t * contents Element\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tlet contentsElement;\n\n\t\tlet pos = { top: 0, left: 0, x: 0, y: 0 };\n\n\t\tlet dragAllowedTimeout;\n\t\tconst isGrabbing = ref(false);\n\n\t\tconst mouseDownHandler = function(e) {\n\t\t\tpos = {\n\t\t\t\t// The current scroll\n\t\t\t\tleft: contentsElement.scrollLeft,\n\t\t\t\ttop: contentsElement.scrollTop,\n\t\t\t\t// Get the current mouse position\n\t\t\t\tx: e.clientX,\n\t\t\t\ty: e.clientY,\n\t\t\t};\n\t\t\tif (dragAllowedTimeout) clearInterval(dragAllowedTimeout);\n\n\t\t\tdragAllowedTimeout = setTimeout(() => {\n\t\t\t\tcontentsElement.addEventListener(\"mousemove\", mouseMoveHandler);\n\t\t\t\tcontentsElement.addEventListener(\"mouseup\", mouseUpHandler);\n\t\t\t}, 100);\n\t\t};\n\n\t\tconst mouseMoveHandler = function(e) {\n\t\t\tif (e.buttons === 0) {\n\t\t\t\tmouseUpHandler();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!isGrabbing.value) isGrabbing.value = true;\n\n\t\t\t// How far the mouse has been moved\n\t\t\tconst dx = e.clientX - pos.x;\n\t\t\tconst dy = e.clientY - pos.y;\n\n\t\t\t// Scroll the element\n\t\t\tcontentsElement.scrollTop = pos.top - dy;\n\t\t\tcontentsElement.scrollLeft = pos.left - dx;\n\t\t};\n\n\t\tconst mouseUpHandler = function() {\n\t\t\tsetTimeout(() => (isGrabbing.value = false), 25);\n\n\t\t\tcontentsElement.removeEventListener(\"mousemove\", mouseMoveHandler);\n\t\t\tcontentsElement.removeEventListener(\"mouseup\", mouseUpHandler);\n\t\t};\n\n\t\tconst mouseLeaveHandler = function() {\n\t\t\tsetTimeout(() => (isGrabbing.value = false), 25);\n\n\t\t\tcontentsElement.addEventListener(\"mousemove\", mouseMoveHandler);\n\t\t\tcontentsElement.addEventListener(\"mouseup\", mouseUpHandler);\n\t\t};\n\n\t\tconst mouseWheel = function(e) {\n\t\t\tif (e.deltaY < 0) modifyZoom(0.25);\n\t\t\tif (e.deltaY > 0 && zoom.value > 1) modifyZoom(-0.25);\n\t\t\te.preventDefault();\n\t\t};\n\n\t\tonMounted(() => {\n\t\t\tcontentsElement = picturemapElement.value?.parentElement;\n\t\t\tcontentsElement.addEventListener(\"mousedown\", mouseDownHandler);\n\t\t\tcontentsElement.addEventListener(\"mouseleave\", mouseLeaveHandler);\n\t\t\tcontentsElement.addEventListener(\"wheel\", mouseWheel);\n\t\t});\n\n\t\tonUnmounted(() => {\n\t\t\tcontentsElement.removeEventListener(\"mousedown\", mouseDownHandler);\n\t\t\tcontentsElement.removeEventListener(\"mouseleave\", mouseLeaveHandler);\n\t\t\tcontentsElement.removeEventListener(\"wheel\", mouseWheel);\n\t\t});\n\n\t\t/**\n\t\t * Calculate container size\n\t\t */\n\t\tconst calculateContainerAspectRatioSize = async (timeout = 500) => {\n\t\t\tawait nextTick();\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst contentsImgSize = contentsImage.value?.imgSize;\n\n\t\t\t\t// Scale from image size\n\t\t\t\tif (contentsImgSize) {\n\t\t\t\t\t// Nota para mi yo del futuro: Si existe imagen de fondo en el contents, la tomo como referencia para sacar el factor de escalado de cada coordenada\n\t\t\t\t\tscaleFactorX = (zoom.value * props.controlWidth) / contentsImgSize.width;\n\t\t\t\t\tscaleFactorY = (zoom.value * props.controlHeight) / contentsImgSize.height;\n\t\t\t\t} else {\n\t\t\t\t\t// Nota para mi yo del futuro: No existe imagen, calculo el factor global de escalado de cada coordenada\n\t\t\t\t\t// Scale from width and  height scale factor\n\t\t\t\t\tscaleFactorX = widthFactor.value;\n\t\t\t\t\tscaleFactorY = heightFactor.value;\n\t\t\t\t}\n\n\t\t\t\t// Get min scale from width / height scale\n\t\t\t\tlet scaleFactor = scaleFactorX < scaleFactorY ? scaleFactorX : scaleFactorY;\n\n\t\t\t\t// Set container aspect-ratio width / height\n\t\t\t\tcontainerElementSize.value = {\n\t\t\t\t\twidth: (zoom.value * (props.controlWidth * scaleFactor)) / scaleFactorX,\n\t\t\t\t\theight: (zoom.value * (props.controlHeight * scaleFactor)) / scaleFactorY,\n\t\t\t\t};\n\n\t\t\t\t// Scale content items\n\t\t\t\tscaleItems();\n\t\t\t}, timeout);\n\t\t};\n\n\t\twatch(\n\t\t\t() => props.controlWidth,\n\t\t\t() => calculateContainerAspectRatioSize()\n\t\t);\n\t\twatch(\n\t\t\t() => props.controlHeight,\n\t\t\t() => calculateContainerAspectRatioSize()\n\t\t);\n\n\t\t// key attributes\n\t\tlet xCoord;\n\t\tlet yCoord;\n\t\tlet iconOff;\n\t\tlet iconOn;\n\t\tlet iconWidth;\n\t\tlet iconHeigth;\n\t\tlet iconText;\n\t\tlet iconTextColor;\n\t\tlet iconMarkColor;\n\t\tlet iconTouchColor;\n\n\t\tnextTick(async () => {\n\t\t\t// Get contents\n\t\t\tif (!contents.value) contents.value = await props.xoneDataObject.getContents(props.attributes.contents);\n\n\t\t\t// Get key attributes\n\n\t\t\t/**\n\t\t\t * m_xmlNode\n\t\t\t * @type {{m_xmlNode:XmlNode}}\n\t\t\t */\n\t\t\tconst { m_xmlNode } = contents.value;\n\n\t\t\tm_xmlNode.SelectNodes(\"prop\").forEach((/** @type {XmlNode} */ e) => {\n\t\t\t\tif (e.getAttrValue(\"xcoord\") === \"true\") xCoord = e.getAttrValue(\"name\");\n\t\t\t\tif (e.getAttrValue(\"ycoord\") === \"true\") yCoord = e.getAttrValue(\"name\");\n\t\t\t\tif (e.getAttrValue(\"icon-mark\") === \"true\") iconOff = e.getAttrValue(\"name\");\n\t\t\t\tif (e.getAttrValue(\"icon-touch\") === \"true\") iconOn = e.getAttrValue(\"name\");\n\t\t\t\tif (e.getAttrValue(\"icon-mark-color\") === \"true\") iconMarkColor = e.getAttrValue(\"name\");\n\t\t\t\tif (e.getAttrValue(\"icon-touch-color\") === \"true\") iconTouchColor = e.getAttrValue(\"name\");\n\t\t\t\tif (e.getAttrValue(\"icon-width\") === \"true\") iconWidth = e.getAttrValue(\"name\");\n\t\t\t\tif (e.getAttrValue(\"icon-height\") === \"true\") iconHeigth = e.getAttrValue(\"name\");\n\t\t\t\tif (e.getAttrValue(\"icon-text\") === \"true\") iconText = e.getAttrValue(\"name\");\n\t\t\t\tif (e.getAttrValue(\"icon-text-color\") === \"true\") iconTextColor = e.getAttrValue(\"name\");\n\t\t\t});\n\n\t\t\t// Add Control to View\n\t\t\tconst xoneControl = new XoneControl(props.attributes.name);\n\t\t\txoneControl.refresh = refresh;\n\t\t\txoneView.addControl(xoneControl);\n\n\t\t\t// Refresh contents\n\t\t\trefresh();\n\t\t});\n\n\t\tonUnmounted(() => {\n\t\t\tif (contents.value) contents.value.clear();\n\t\t});\n\n\t\t//\n\t\t// Refresh contents\n\t\tconst refresh = async () => {\n\t\t\t// Load contents data\n\t\t\tisLoading.value = true;\n\n\t\t\tawait nextTick();\n\n\t\t\t// LoadAll\n\t\t\tawait contents.value.loadAll(false);\n\n\t\t\tdata.value = [];\n\n\t\t\tfor (let i = 0; i < contents.value.length; i++) {\n\t\t\t\tconst contentsItem = await contents.value.get(i);\n\n\t\t\t\tconst dataValue = {};\n\t\t\t\t// Index\n\t\t\t\tdataValue.index = i;\n\t\t\t\t// Coords\n\t\t\t\tdataValue.xCoord = contentsItem[xCoord];\n\t\t\t\tdataValue.yCoord = contentsItem[yCoord];\n\t\t\t\t// text / textColor\n\t\t\t\tdataValue.text = contentsItem[iconText];\n\t\t\t\tdataValue.textColor = contentsItem[iconTextColor];\n\t\t\t\tif (iconOff) {\n\t\t\t\t\tconst valueOff = await getImagePathAndSize(contentsItem[iconOff], \"files\");\n\t\t\t\t\t// Icon off width and height from image size\n\t\t\t\t\tif (!valueOff) return console.error(\"Not found: icon-mark\", props.attributes.name, contentsItem[iconOff]);\n\t\t\t\t\tdataValue.iconOff = valueOff.path;\n\t\t\t\t\tdataValue.imgWidthOff = valueOff.imgSize.width;\n\t\t\t\t\tdataValue.imgHeightOff = valueOff.imgSize.height;\n\t\t\t\t}\n\t\t\t\t// Icon on width and height from image size\n\t\t\t\tif (iconOn)\n\t\t\t\t\tgetImagePathAndSize(contentsItem[iconOn], \"files\").then((valueOn) => {\n\t\t\t\t\t\tif (!valueOn) return console.error(\"Not found: icon-touch\", props.attributes.name, contentsItem[iconOn]);\n\t\t\t\t\t\tdataValue.iconOn = valueOn.path;\n\t\t\t\t\t\tdataValue.imgWidthOn = valueOn.imgSize.width;\n\t\t\t\t\t\tdataValue.imgHeightOn = valueOn.imgSize.height;\n\t\t\t\t\t});\n\n\t\t\t\t// Icon mark / touch color\n\t\t\t\tdataValue.iconMarkColor = contentsItem[iconMarkColor];\n\t\t\t\tdataValue.iconTouchColor = contentsItem[iconTouchColor];\n\t\t\t\t// Nota para mi yo del futuro: El color de la imagen debe de venir en negro para  convertirla aplicando filtros, de lo contrario el color va a salir un poco random...\n\t\t\t\tif (dataValue.iconMarkColor) {\n\t\t\t\t\tconst rgb = HEX2RGB(dataValue.iconMarkColor);\n\t\t\t\t\tconst color = new Color(rgb[0], rgb[1], rgb[2]);\n\t\t\t\t\tconst solver = new Solver(color);\n\t\t\t\t\tconst result = solver.solve();\n\t\t\t\t\tdataValue.filterOff = result.filter;\n\t\t\t\t\tif (result.loss > 10) console.warn(\"Color lost\", dataValue.iconMarkColor, result.loss);\n\t\t\t\t}\n\t\t\t\tif (dataValue.iconTouchColor) {\n\t\t\t\t\tconst rgb = HEX2RGB(dataValue.iconTouchColor);\n\t\t\t\t\tconst color = new Color(rgb[0], rgb[1], rgb[2]);\n\t\t\t\t\tconst solver = new Solver(color);\n\t\t\t\t\tconst result = solver.solve();\n\t\t\t\t\tdataValue.filterOn = result.filter;\n\t\t\t\t\tif (result.loss > 10) console.warn(\"Color lost\", dataValue.iconTouchColor, result.loss);\n\t\t\t\t}\n\t\t\t\t// Icon width and height from attribute\n\t\t\t\tif (iconWidth && iconHeigth) {\n\t\t\t\t\tdataValue.imgWidthOff = contentsItem[iconWidth];\n\t\t\t\t\tdataValue.imgHeightOff = contentsItem[iconHeigth];\n\t\t\t\t}\n\n\t\t\t\tdata.value.push(dataValue);\n\t\t\t}\n\n\t\t\t// Scale Items\n\t\t\tscaleItems();\n\n\t\t\t// Select first item\n\t\t\tif (data.value.length !== 0) onItemSelected(data.value[0]);\n\n\t\t\t// Order items by size\n\t\t\tlet i = 1;\n\t\t\tdata.value.sort((a, b) => b.imgWidthOff * b.imgHeightOff - a.imgWidthOff * a.imgHeightOff).forEach((e) => (e.zIndex = i = i + 1));\n\n\t\t\tisLoading.value = false;\n\t\t};\n\n\t\t// Get Items Factor X\n\t\tconst getItemFactorX = () => {\n\t\t\tlet zoomFactor = 1;\n\t\t\tlet scaledWidth = containerElementSize.value?.width ?? 0;\n\t\t\tlet width = props.controlWidth / scaleFactorX;\n\t\t\tif (contentsImage.value?.imgSize && scaledWidth !== 0) {\n\t\t\t\tzoomFactor = width / contentsImage.value.imgSize.width;\n\t\t\t}\n\t\t\treturn (scaledWidth / width) * zoomFactor;\n\t\t};\n\n\t\t// Get Items Factor Y\n\t\tconst getItemFactorY = () => {\n\t\t\tlet zoomFactor = 1;\n\t\t\tlet scaledHeight = containerElementSize.value?.height ?? 0;\n\t\t\tlet height = props.controlHeight / scaleFactorY;\n\t\t\tif (contentsImage.value?.imgSize && scaledHeight !== 0) {\n\t\t\t\tzoomFactor = height / contentsImage.value.imgSize.height;\n\t\t\t}\n\t\t\treturn (scaledHeight / height) * zoomFactor;\n\t\t};\n\n\t\t// Scale all Items\n\t\tconst scaleItems = () => data.value.forEach(scaleItem);\n\n\t\t// Scale Item\n\t\tconst scaleItem = (item) => {\n\t\t\titem.scaledX = item.xCoord * getItemFactorX();\n\t\t\titem.scaledY = item.yCoord * getItemFactorY();\n\n\t\t\titem.scaledImgWidthOff = item.imgWidthOff * getItemFactorX();\n\t\t\titem.scaledImgHeightOff = item.imgHeightOff * getItemFactorY();\n\t\t};\n\n\t\t// On Item Selected\n\t\tconst onItemSelected = async (item) => {\n\t\t\tif (isGrabbing.value) return;\n\t\t\tdata.value.forEach((e) => (e.selected = false));\n\t\t\titem.selected = true;\n\n\t\t\tif (!contents.value) return;\n\n\t\t\t/**\n\t\t\t * xoneDataObject\n\t\t\t * @type {XoneDataObject}\n\t\t\t */\n\t\t\tconst xoneDataObject = await contents.value.get(item.index);\n\n\t\t\tif (xoneDataObject) xoneDataObject.ExecuteNode(\"selecteditem\").catch(console.error);\n\t\t};\n\n\t\treturn {\n\t\t\tpicturemapElement,\n\t\t\tcontentsImage,\n\t\t\tisLoading,\n\t\t\tcontainerElementSize,\n\t\t\tdata,\n\t\t\tonItemSelected,\n\t\t\tzoom,\n\t\t\thideRange,\n\t\t\tmodifyZoom,\n\t\t\tisGrabbing,\n\t\t};\n\t},\n};\n</script>\n\n<style scoped>\n.xone-picturemap {\n\toverflow: auto;\n\twidth: var(--contents-width);\n\theight: var(--contents-height);\n}\n\n.xone-picturemap-zoom {\n\tposition: absolute;\n\tdisplay: flex;\n\tflex-direction: row;\n\ttop: 10px;\n\tleft: 10px;\n\tz-index: 9999;\n\tborder: 1px solid rgb(204, 204, 204);\n\tbackground-color: #fff;\n\tborder-radius: 2px;\n\tpointer-events: all;\n\tmargin-top: 10px;\n}\n.xone-picturemap-zoom > div {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.xone-picturemap-zoom button {\n\tborder: 1px solid rgb(204, 204, 204);\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\twidth: 30px;\n\theight: 30px;\n\tfont-size: 25px;\n}\n\n.xone-picturemap-container {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n}\n\n.xone-picturemap-container:hover {\n\tcursor: var(--picturemap-cursor);\n}\n\n.xone-picturemap-container > div {\n\tposition: relative;\n\tanimation: fadeIn 0.3s;\n}\n\n.xone-picturemap-item {\n\tposition: absolute;\n\tz-index: 1;\n\twidth: 50px;\n\theight: 50px;\n\tfont-size: 0.8rem;\n\tbackground-repeat: no-repeat;\n\tbackground-position: center;\n\tbackground-size: contain;\n\tbackground-color: transparent;\n\tborder: none;\n\toutline: none;\n\tpointer-events: visiblePainted;\n}\n\n.xone-picturemap-item > div {\n\tposition: absolute;\n\twidth: 100%;\n\theight: 100%;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tfont-size: 0.7rem;\n\tz-index: 999;\n\tpointer-events: none;\n}\n\n.xone-picturemap-zoom > div > button {\n\tcursor: pointer;\n}\n\nbutton {\n\tbackground-repeat: no-repeat;\n\tbackground-position: center;\n\tbackground-size: contain;\n\tbackground-color: transparent;\n\tpointer-events: visiblePainted;\n\n\twidth: 100%;\n\theight: 100%;\n\tborder: none;\n\toutline: none;\n}\n\nbutton:hover {\n\tcursor: var(--picturemap-items-cursor);\n}\n\ndiv {\n\tbackground-repeat: no-repeat;\n\tbackground-position: center;\n\t/* background-size: contain; */\n\tbackground-size: 100% 100%;\n\toverflow: hidden;\n}\n\ninput[type=\"range\"][orient=\"vertical\"] {\n\t-webkit-appearance: slider-vertical;\n\twidth: 8px;\n\theight: 50px;\n\tmargin: 5px;\n\toverflow: hidden;\n}\n\ninput[type=\"range\"][orient=\"vertical\"]::-webkit-slider-thumb {\n\tcursor: ns-resize;\n\tbox-shadow: -80px 0 0 80px lightgray;\n}\n</style>\n","import { render } from \"./PictureMap.vue?vue&type=template&id=4a338f92&scoped=true\"\nimport script from \"./PictureMap.vue?vue&type=script&lang=js\"\nexport * from \"./PictureMap.vue?vue&type=script&lang=js\"\n\nimport \"./PictureMap.vue?vue&type=style&index=0&id=4a338f92&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/amiyares/Projects/XOne/XOneWebVue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4a338f92\"]])\n\nexport default __exports__","import { render } from \"./Contents.vue?vue&type=template&id=24a533b4&scoped=true\"\nimport script from \"./Contents.vue?vue&type=script&lang=js\"\nexport * from \"./Contents.vue?vue&type=script&lang=js\"\n\nimport \"./Contents.vue?vue&type=style&index=0&id=24a533b4&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/amiyares/Projects/XOne/XOneWebVue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-24a533b4\"]])\n\nexport default __exports__","<template>\n\t<iframe v-if=\"isUrl\" :src=\"propValue\" :width=\"controlWidth\" :height=\"controlHeight\"></iframe>\n\t<iframe v-else :srcdoc=\"propValue\" :width=\"controlWidth\" :height=\"controlHeight\"></iframe>\n</template>\n\n<script>\nimport { inject, PropType, ref, Ref, watchEffect } from \"vue\";\nimport { PropAttributes } from \"../../composables/XoneAttributesHandler\";\nimport { XoneDataObject } from \"../../composables/appData/core/XoneDataObject\";\n\nexport default {\n\tprops: {\n\t\t/** xoneDataObject\n     @type {PropType<XoneDataObject>} \n     */\n\t\txoneDataObject: { type: Object, required: true },\n\t\t/** attributes\n\t\t * @type { PropType<PropAttributes>}\n\t\t */\n\t\tattributes: { type: Object, required: true },\n\t\tcontrolWidth: { type: Number, default: 0 },\n\t\tcontrolHeight: { type: Number, default: 0 },\n\t},\n\tsetup(props) {\n\t\tconst isUrl = ref(false);\n\n\t\t/**\n\t\t * breadcrumbId\n\t\t * @type {string}\n\t\t */\n\t\tconst breadcrumbId = inject(\"breadcrumbId\");\n\n\t\t/**\n\t\t * prop model value\n\t\t * @type {Ref<any>}\n\t\t */\n\t\tlet propValue = ref();\n\n\t\t// Get appData model value\n\t\twatchEffect(() => {\n\t\t\tif (props.xoneDataObject?.model) propValue.value = props.xoneDataObject?.model[props.attributes.name];\n\n\t\t\tif (!propValue.value?.toString().contains(\"<\") && !propValue.value?.toString().contains(\">\"))\n\t\t\t\t// URL\n\t\t\t\treturn (isUrl.value = true);\n\n\t\t\tisUrl.value = false;\n\t\t});\n\n\t\treturn {\n\t\t\tpropValue,\n\t\t\tisUrl,\n\t\t};\n\t},\n};\n</script>\n\n<style scoped>\niframe {\n\tbox-sizing: border-box;\n\tborder: none;\n}\n</style>\n","import { render } from \"./Web.vue?vue&type=template&id=5bcfca02&scoped=true\"\nimport script from \"./Web.vue?vue&type=script&lang=js\"\nexport * from \"./Web.vue?vue&type=script&lang=js\"\n\nimport \"./Web.vue?vue&type=style&index=0&id=5bcfca02&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/amiyares/Projects/XOne/XOneWebVue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5bcfca02\"]])\n\nexport default __exports__","<template>\n  <video :width=\"controlWidth\" :height=\"controlHeight\" controls>\n    <source :src=\"`/files/${propValue}`\" />\n  </video>\n</template>\n\n<script>\nimport { PropType, ref, Ref, watchEffect } from \"vue\";\nimport { PropAttributes } from \"../../composables/XoneAttributesHandler\";\nimport { XoneDataObject } from \"../../composables/appData/core/XoneDataObject\";\n\nexport default {\n  props: {\n    /** xoneDataObject\n     @type {PropType<XoneDataObject>} \n     */\n    xoneDataObject: { type: Object, required: true },\n    /** attributes\n     * @type { PropType<PropAttributes>}\n     */\n    attributes: { type: Object, required: true },\n    controlWidth: { type: Number, default: 0 },\n    controlHeight: { type: Number, default: 0 },\n  },\n  setup(props) {\n    /**\n     * prop model value\n     * @type {Ref<any>}\n     */\n    let propValue = ref();\n\n    // Get appData model value\n    watchEffect(() => {\n      if (props.xoneDataObject?.model) propValue.value = props.xoneDataObject?.model[props.attributes.name];\n    });\n\n    return { propValue };\n  },\n};\n</script>\n\n<style scoped>\nvideo {\n  box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  -webkit-box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  background-repeat: no-repeat;\n  background-position: center;\n  transition: all 0.1s;\n}\n</style>\n","import { render } from \"./Video.vue?vue&type=template&id=42c3aa31&scoped=true\"\nimport script from \"./Video.vue?vue&type=script&lang=js\"\nexport * from \"./Video.vue?vue&type=script&lang=js\"\n\nimport \"./Video.vue?vue&type=style&index=0&id=42c3aa31&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/amiyares/Projects/XOne/XOneWebVue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-42c3aa31\"]])\n\nexport default __exports__","<template>\n\t<div v-if=\"routeBreadcrumbs && routeBreadcrumbs.length !== 0\" class=\"xone-breadcrumb\">\n\t\t<template v-for=\"breadcrumb in routeBreadcrumbs\" :key=\"breadcrumb.id\"\n\t\t\t><div class=\"xone-breadcrumb-item\">\n\t\t\t\t<div v-if=\"breadcrumb !== routeBreadcrumbs[0]\" :style=\"{ fontSize: attributes.breadcrumbFontSize }\">\n\t\t\t\t\t&nbsp;&nbsp;/&nbsp;&nbsp;\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\t@click=\"onBreadcrumbClick(breadcrumb)\"\n\t\t\t\t\t:style=\"{\n\t\t\t\t\t\tcolor: getBreadcrumbColor(breadcrumb),\n\t\t\t\t\t\tfontSize: getBreadcrumbFontSize(breadcrumb),\n\t\t\t\t\t\tcursor: breadcrumb !== lastBreadcrumb ? 'pointer' : 'auto',\n\t\t\t\t\t}\"\n\t\t\t\t>\n\t\t\t\t\t{{ breadcrumb.title || breadcrumb.name }}\n\t\t\t\t</div>\n\t\t\t</div></template\n\t\t>\n\t</div>\n</template>\n\n<script>\nimport { inject, ComputedRef, PropType } from \"vue\";\nimport { useRouter } from \"vue-router\";\n\nexport default {\n\tname: \"Breadcrumb\",\n\tprops: {\n\t\t/**\n\t\t * attributes\n\t\t * @type { PropType<import('../../composables/XoneAttributesHandler').PropAttributes>}\n\t\t */\n\t\tattributes: { type: Object, default: null, required: true },\n\t},\n\tsetup(props) {\n\t\tconst router = useRouter();\n\n\t\t/**\n\t\t * @type {ComputedRef<Breadcrumb[]>}\n\t\t */\n\t\tconst routeBreadcrumbs = inject(\"routeBreadcrumbs\");\n\n\t\t/**\n\t\t * @type {ComputedRef<import('../../composables/AppDataHandler').Breadcrumb>}\n\t\t */\n\t\tconst lastBreadcrumb = inject(\"lastBreadcrumb\");\n\n\t\treturn {\n\t\t\trouteBreadcrumbs,\n\t\t\tlastBreadcrumb,\n\t\t\tonBreadcrumbClick: (breadcrumb) => {\n\t\t\t\trouter.push({\n\t\t\t\t\tname: \"Coll\",\n\t\t\t\t\tquery: { id: breadcrumb.id },\n\t\t\t\t});\n\t\t\t},\n\t\t\tgetBreadcrumbColor: (breadcrumb) => {\n\t\t\t\treturn breadcrumb === lastBreadcrumb.value\n\t\t\t\t\t? props.attributes.breadcrumbSelectedForeColor || props.attributes.breadcrumbForeColor\n\t\t\t\t\t: props.attributes.breadcrumbForeColor;\n\t\t\t},\n\t\t\tgetBreadcrumbFontSize: (breadcrumb) => {\n\t\t\t\treturn breadcrumb === lastBreadcrumb.value\n\t\t\t\t\t? props.attributes.breadcrumbSelectedFontSize || props.attributes.breadcrumbFontSize\n\t\t\t\t\t: props.attributes.breadcrumbFontSize;\n\t\t\t},\n\t\t};\n\t},\n};\n</script>\n\n<style scoped>\n.xone-breadcrumb,\n.xone-breadcrumb-item {\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\talign-items: center;\n}\n</style>\n","import { render } from \"./Breadcrumb.vue?vue&type=template&id=54d926b6&scoped=true\"\nimport script from \"./Breadcrumb.vue?vue&type=script&lang=js\"\nexport * from \"./Breadcrumb.vue?vue&type=script&lang=js\"\n\nimport \"./Breadcrumb.vue?vue&type=style&index=0&id=54d926b6&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/amiyares/Projects/XOne/XOneWebVue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-54d926b6\"]])\n\nexport default __exports__","import { render } from \"./Prop.vue?vue&type=template&id=419645a1&scoped=true\"\nimport script from \"./Prop.vue?vue&type=script&lang=js\"\nexport * from \"./Prop.vue?vue&type=script&lang=js\"\n\nimport \"./Prop.vue?vue&type=style&index=0&id=419645a1&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/amiyares/Projects/XOne/XOneWebVue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-419645a1\"]])\n\nexport default __exports__","import { render } from \"./Container.vue?vue&type=template&id=97ac2f9c&scoped=true\"\nimport script from \"./Container.vue?vue&type=script&lang=js\"\nexport * from \"./Container.vue?vue&type=script&lang=js\"\n\nimport \"./Container.vue?vue&type=style&index=0&id=97ac2f9c&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/amiyares/Projects/XOne/XOneWebVue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-97ac2f9c\"]])\n\nexport default __exports__","/**\n * XoneFileManager\n */\nclass XoneFileManager {\n  /**\n   * fileExists\n   * @param {string} filePath\n   */\n  fileExists(filePath) {\n    filePath = filePath.replace(\"source/\", \"/\"); // TODO: el filePath viene mal concateado, hay que quitar el source\n\n    const http = new XMLHttpRequest();\n    http.open(\"GET\", filePath, false);\n    http.send();\n\n    const res = http.status !== 404 ? 0 : -1; // Parece ser que si se devuelve 0 es que existe, tengo que hablar con ésta gente para que me de el contacto de su camello, yo también quiero gozar así!\n    return res;\n  }\n\n  /**\n   * download\n   * @param {string} filePath\n   */\n  download(filePath) {\n    filePath = filePath.replace(\"/source/\", \"/\"); // TODO: el filePath viene mal concateado, hay que quitar el source\n\n    const element = document.createElement(\"a\");\n    element.setAttribute(\"href\", filePath);\n    element.setAttribute(\"target\", \"_blank\");\n    element.style.display = \"none\";\n\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n  }\n\n  /**\n   * asyncDownload\n   * @param {string} filePath\n   */\n  async asyncDownload(filePath) {\n    await this.download(filePath);\n  }\n\n  // TODO: crear backend con una llamada para devolver la lista de directorios y ficheros\n  listDirectories() {\n    return [];\n  }\n\n  // TODO: crear backend con una llamada para devolver la lista de directorios y ficheros\n  listFiles() {\n    return [];\n  }\n}\n\nexport default XoneFileManager;\n","import { normalizeWebColor } from \"./helperFunctions/ColorHelper\";\n\n/**\n * XonePDF\n */\nclass XonePDF {\n  /** @type {number} */\n  _width;\n\n  /** @type {number} */\n  _height;\n\n  /** @type {HTMLDivElement} */\n  _template;\n\n  /** @type {HTMLDivElement} */\n  _templateAbsolute;\n\n  /** @type {HTMLDivElement} */\n  _currentTable;\n\n  /** @type {Array<Array<HTMLDivElement>>} */\n  _divs;\n\n  permissions() {}\n  setEncryption() {}\n  open() {}\n  close() {\n    this.clearPDF();\n  }\n  beginHeader() {}\n  endHeader() {}\n  beginFooter() {}\n  endFooter() {}\n  getCurrentPage() {}\n\n  getVerticalPosition() {\n    this._template.style.display = null;\n    const value = this._template.lastChild?.getBoundingClientRect().y + this._template.lastChild?.getBoundingClientRect().height;\n    this._template.style.display = \"none\";\n    return value || 0;\n  }\n\n  getHorizontalPosition() {\n    this._template.style.display = null;\n    const value = this._template.lastChild?.getBoundingClientRect().x + this._template.lastChild?.getBoundingClientRect().width;\n    this._template.style.display = \"none\";\n    return value || 0;\n  }\n\n  /**\n   * launchPDF\n   */\n  launchPDF() {\n    this._template.style.display = null;\n    const newWindow = window.open(\"\", \"\", \"\");\n    newWindow.document.write(\"<html>\");\n    newWindow.document.write(`\n    <head>\n        <title>${this._name}</title>\n        <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n        \n        @font-face {\n          font-family: \"Roboto\";\n          src: url(\"/fonts/Roboto-Medium.ttf\");\n        }\n        body {\n          font-family: \"Roboto\", Helvetica, Arial, sans-serif;\n          -webkit-font-smoothing: antialiased;\n          -moz-osx-font-smoothing: grayscale;\n        }\n        </style>\n      </head>\n      <body>\n    `);\n\n    const container = document.createElement(\"div\");\n    container.style.display = \"flex\";\n    container.style.flexDirection = \"column\";\n    container.style.alignItems = \"center\";\n    container.appendChild(this._templateAbsolute);\n    container.appendChild(this._template);\n\n    newWindow.document.write(container.outerHTML);\n    newWindow.document.write(\"</body>\\n</html>\");\n    newWindow.document.close();\n    newWindow.focus();\n    this.clearPDF();\n\n    setTimeout(() => newWindow.print(), 500);\n  }\n\n  /**\n   * Create document\n   * @param {string} name\n   * @param {number} [width]\n   * @param {number} [height]\n   */\n  create(name, width = 595, height = 842) {\n    this._name = name;\n\n    this._width = width;\n    this._height = height;\n    // Absolute Template Element\n    const elementAbsolute = document.createElement(\"div\");\n    elementAbsolute.style.width = width + \"px\";\n    elementAbsolute.style.height = height + \"px\";\n    elementAbsolute.style.position = \"absolute\";\n    this._templateAbsolute = elementAbsolute;\n    // Element\n    const element = elementAbsolute.cloneNode(true);\n    element.style.position = \"relative\";\n    element.style.display = \"flex\";\n    element.style.flexDirection = \"column\";\n    element.style.width = `${Number(width) - 160}px`;\n    element.style.height = `${Number(height) - 40}px`;\n    element.style.margin = \"20px 80px\";\n    element.style.display = \"none\";\n    element.setAttribute(\"class\", \"XonePdf\");\n    // Clear old PDF\n    this.clearPDF();\n    // Add new PDF\n    document.body.prepend(element);\n\n    this._template = element;\n  }\n\n  clearPDF() {\n    document.querySelectorAll(\".XonePdf\").forEach((e) => document.body.removeChild(e));\n  }\n\n  setFont(font) {\n    this._font = font;\n  }\n\n  setFontStyle(fontStyle) {\n    this._fontStyle = fontStyle;\n  }\n\n  setAlignment(alignment) {\n    this._alignment = alignment;\n  }\n\n  setFontSize(fontSize) {\n    this._fontSize = fontSize;\n  }\n\n  setFontColor(fontColor) {\n    this._fontColor = fontColor;\n  }\n\n  createTable(columns) {\n    this._currentTableNewLine = false;\n    this._currentTableColumns = columns;\n\n    // Create table\n    const tableElement = document.createElement(\"div\");\n    tableElement.style.display = \"flex\";\n    tableElement.style.flexDirection = \"column\";\n    this._currentTable = tableElement;\n\n    // Create Rows\n    this.createRow();\n\n    // Create Rows Columns\n    this.createColumns(this._currentTable.lastChild, columns);\n\n    this._cellBorder = \"all\";\n  }\n\n  createRow() {\n    // Create row\n    const rowElement = document.createElement(\"div\");\n    rowElement.style.display = \"flex\";\n    rowElement.style.flexDirection = \"row\";\n    rowElement.style.flexGrow = \"1\";\n    this._currentTable.appendChild(rowElement);\n  }\n\n  createColumns(rowElement, columns) {\n    // Create columns\n    this._divs = [...Array(Number(columns))].map(() => {\n      // Create column\n      const columnElement = document.createElement(\"div\");\n      columnElement.style.flexGrow = \"1\";\n      rowElement.appendChild(columnElement);\n      return columnElement;\n    });\n  }\n\n  addTable() {\n    this._template.appendChild(this._currentTable);\n    this._currentTable = null;\n  }\n\n  addTableSetXY(x, y) {\n    if (!isNaN(Number(x))) x = x + \"px\";\n    // if (!isNaN(Number(y))) y = y + \"px\";\n    this._currentTable.style.position = \"absolute\";\n    this._currentTable.style.left = x;\n    // this._currentTable.style.bottom = y;\n    this._currentTable.style.top = `${this._height - Number(y)}px`;\n    this._templateAbsolute.appendChild(this._currentTable);\n    this._currentTable = null;\n  }\n\n  addRectangle(x, y, width, height, lineSize, backgroundColor, borderColor) {\n    lineSize = Number(lineSize) / 2;\n    if (width === 0) width = 0.1;\n    if (height === 0) height = 0.1;\n    if (lineSize === 0) lineSize = 0.1;\n    if (!isNaN(Number(width))) width += \"px\";\n    if (!isNaN(Number(height))) height += \"px\";\n    if (!isNaN(Number(lineSize))) lineSize += \"px\";\n    const element = document.createElement(\"div\");\n    element.style.position = \"absolute\";\n    element.style.left = x + \"px\";\n    // TODO: Esto no tiene logica, addRectangle toma la coordenada 0 desde abajo, y pinta el control para arriba,\n    // el resto de controles se pintan para abajo....mejor no razonarlo y hacerlo igual de mal que esta hecho en android,\n    // hay que hacer un master para entender esto\n    element.style.bottom = y + \"px\";\n    // element.style.top = `${this._height - Number(y)}px`;\n    element.style.width = width;\n    element.style.height = height;\n    element.style.border = `${lineSize} solid ${normalizeWebColor(borderColor)}`;\n    element.style.background = normalizeWebColor(backgroundColor);\n    this._templateAbsolute.appendChild(element);\n  }\n\n  newLine() {\n    this._template.append(document.createElement(\"hr\"));\n  }\n  newPage() {}\n\n  fromHtml(html) {\n    this._template.innerHTML = html;\n  }\n\n  setTableWidth(width) {\n    // TODO: seguimos con la ilogica, este width es en pixeles y ademas define el width minimo, de ahi puede crecer, es tremendamente logico\n    if (!isNaN(Number(width))) width = width + \"px\";\n    this._currentTable.style.minWidth = width;\n    this._currentTable.style.minWidth = width;\n  }\n\n  setTableCellWidths(...widths) {\n    // TODO: seguimos con la ilogica, estos width son en porcentaje del contol contenedor....todo muy normal, igual que el metodo de arriba\n    // yo no se que se habian fumado cuando han programado esto asi xD\n    widths.forEach((width, index) => {\n      if (!isNaN(Number(width))) width = width + \"%\";\n      this._divs[index].style.width = width;\n    });\n  }\n\n  setCellBorder(cellBorder) {\n    this._cellBorder = cellBorder;\n    const element = this._divs?.length !== 0 ? this._divs[0] : this._template?.lastChild || this._templateAbsolute.lastChild;\n\n    if (!element) return;\n\n    const borderStyle = \"1px solid black\";\n\n    switch (cellBorder) {\n      case \"none\":\n        return (element.style.border = \"none\");\n      case \"all\":\n        return (element.style.border = borderStyle);\n      case \"top\":\n        return (element.style.borderTop = borderStyle);\n      case \"right\":\n        return (element.style.borderRight = borderStyle);\n      case \"bottom\":\n        return (element.style.borderBottom = borderStyle);\n      case \"left\":\n        return (element.style.borderLeft = borderStyle);\n    }\n  }\n\n  addCellText(text) {\n    if (this._currentTable) {\n      if (this._divs.length === 0) {\n        this._currentTableNewLine = true;\n        this.createRow();\n        this.createColumns(this._currentTable.lastChild, this._currentTableColumns);\n        this._currentTable.firstChild.childNodes.forEach((e, index) => {\n          this._divs[index].style.border = e.style.border;\n          this._divs[index].style.width = e.style.width;\n        });\n      }\n      // if (!this._currentTableNewLine)\n      this.setCellBorder(this._cellBorder);\n      this._divs[0].appendChild(this.createText(text));\n      this._divs.shift();\n    } else this._template.appendChild(this.createText(text));\n  }\n\n  addCellImage(imagePath, width, height) {\n    if (this._currentTable) {\n      if (this._divs.length === 0) {\n        this._currentTableNewLine = true;\n        this.createRow();\n        this.createColumns(this._currentTable.lastChild, this._currentTableColumns);\n        this._currentTable.firstChild.childNodes.forEach((e, index) => {\n          this._divs[index].style.border = e.style.border;\n        });\n      }\n      // if (!this._currentTableNewLine)\n      this.setCellBorder(this._cellBorder);\n      this._divs[0].appendChild(this.createImage(imagePath, width, height));\n      this._divs.shift();\n    } else this._template.appendChild(this.createImage(imagePath, width, height));\n  }\n\n  addImageSetXY(imagePath, width, height, x, y) {\n    if (!isNaN(Number(x))) x = x + \"px\";\n    // if (!isNaN(Number(y))) y = y + \"px\";\n    const imageElement = this.createImage(imagePath, width, height);\n    imageElement.style.position = \"absolute\";\n    imageElement.style.left = x;\n    // imageElement.style.bottom = y;\n    imageElement.style.top = `${this._height - Number(y)}px`;\n    this._templateAbsolute.appendChild(imageElement);\n  }\n\n  addTextSetX(text, width) {\n    const textElement = this.createText(text);\n    textElement.style.marginLeft = width + \"px\";\n    this._template.appendChild(textElement);\n  }\n\n  addTextSetXY(text, x, y) {\n    if (!isNaN(Number(x))) x = x + \"px\";\n    // if (!isNaN(Number(y))) y = y + \"px\";\n    const textElement = this.createText(text);\n    textElement.style.position = \"absolute\";\n    textElement.style.left = x;\n    // textElement.style.bottom = y;\n    textElement.style.top = `${this._height - Number(y)}px`;\n    this._templateAbsolute.appendChild(textElement);\n  }\n\n  addCheckboxSetXY(text, x, y, width, value) {\n    if (!isNaN(Number(x))) x = x + \"px\";\n    const checkElement = document.createElement(\"input\");\n    checkElement.innerText = text;\n    checkElement.value = value.toString() === \"true\";\n    checkElement.setAttribute(\"type\", \"checkbox\");\n    checkElement.style.width = width + \"px\";\n    checkElement.style.position = \"absolute\";\n    checkElement.style.left = x;\n    // textElement.style.bottom = y;\n    checkElement.style.top = `${this._height - Number(y)}px`;\n    this._templateAbsolute.appendChild(checkElement);\n  }\n\n  addCheckbox(text, width, value) {\n    if (!isNaN(Number(x))) x = x + \"px\";\n    const checkElement = document.createElement(\"input\");\n    checkElement.innerText = text;\n    checkElement.value = value.toString() === \"true\";\n    checkElement.setAttribute(\"type\", \"checkbox\");\n    checkElement.style.width = width + \"px\";\n    // textElement.style.bottom = y;\n    this._template.appendChild(checkElement);\n  }\n\n  addText(text) {\n    this._template.appendChild(this.createText(text));\n  }\n\n  addTextLine(text) {\n    this.addText(text);\n  }\n\n  /**\n   *\n   * @param {*} text\n   * @returns {HTMLElement}\n   */\n  createText(text) {\n    /** @type {HTMLLabelElement} */\n    const textElement = document.createElement(\"p\");\n    textElement.innerText = text;\n    // set attributes\n    if (this._fontSize) textElement.style.fontSize = this._fontSize + \"px\";\n    if (this._fontColor) textElement.style.color = normalizeWebColor(this._fontColor);\n\n    const element = this._divs?.length !== 0 ? this._divs[0] : this._template.lastChild || this._templateAbsolute.lastChild;\n\n    if (this._alignment.includes(\"center\")) element.style.textAlign = \"center\";\n    if (this._alignment.includes(\"right\")) element.style.textAlign = \"right\";\n    if (this._fontStyle.includes(\"bold\")) element.style.fontWeight = \"bold\";\n\n    return textElement;\n  }\n\n  /**\n   *\n   * @param {*} imagePath\n   * @param {*} width\n   * @param {*} height\n   * @returns {HTMLElement}\n   */\n  createImage(imagePath, width, height) {\n    /** @type {HTMLElement} */\n    const imageElement = document.createElement(\"image\");\n    imageElement.setAttribute(\"src\", imagePath.replace(\"./\", \"\"));\n    imageElement.setAttribute(\"width\", width);\n    imageElement.setAttribute(\"height\", height);\n\n    return imageElement;\n  }\n}\n\nexport default XonePDF;\n","const { clipboard } = navigator;\n\nclass XoneClipboard {\n  /**\n   * getText\n   * @returns {Promise<string>}\n   */\n  async getText() {\n    return await clipboard.readText();\n  }\n\n  /**\n   * setText\n   * @param {string} value\n   * @returns {Promise<void>}\n   */\n  async setText(value) {\n    return await clipboard.writeText(value);\n  }\n\n  /**\n   * clear\n   * @returns {Promise<void>}\n   */\n  async clear() {\n    return await clipboard.writeText(\"\");\n  }\n\n  /**\n   * hasSomething\n   * @returns {Promise<boolean>}\n   */\n  async hasSomething() {\n    return !!(await clipboard.readText());\n  }\n}\n\nexport default new XoneClipboard();\n","class XoneSystemSettings {\n\tcheckMarketUpdate() {}\n\tclearApplicationData() {}\n\tclearBitmapCache() {}\n\tclearJavascriptCache() {}\n\tgetAndroidVersion() {}\n\tgetApiLevel() {}\n\tgetBrightness() {}\n\tgetBrightnessMode() {}\n\tgetDownloadsPath() {}\n\tgetExternalStoragePath() {}\n\tgetGalleryPath() {}\n\tgetGrantedPermissions() {}\n\tgetHardwareIds() {\n\t\treturn { deviceIdCount: 1, deviceId0: localStorage.getItem(\"_deviceId\"), androidId: localStorage.getItem(\"_deviceId\") };\n\t}\n\tgetnetworktime() {}\n\tgetNotGrantedPermissions() {}\n\tgetSharedUserId() {}\n\tgetWallpaper() {}\n\tisAirplaneMode() {}\n\tisIgnoringBatteryOptimazations() {}\n\tisPasswordSecured() {}\n\tispermissiongranted() {}\n\trequestIgnoringBatteryOptimazations() {}\n\trequestPermissions() {}\n\tsetBrightness() {}\n\tsetBrightnessMode() {}\n\tsetWallpaper() {}\n}\n\nexport default new XoneSystemSettings();\n","class XoneDebugTools {\n\tGetDeviceID() {\n\t\treturn localStorage.getItem(\"_deviceId\");\n\t}\n\tGetLog() {}\n\tSendDatabase() {}\n\tSendLog() {}\n\tSendReplicaDebugDatabase() {}\n\tSendReplicaFilesDatabase() {}\n}\n\nexport default XoneDebugTools;\n","import XoneFileManager from \"./XoneFileManager\";\nimport XonePDF from \"./XonePDF\";\nimport XoneAnimation from \"./XoneAnimation\";\nimport XoneClipboard from \"./XoneClipboard\";\nimport xoneSystemSettings from \"./XoneSystemSettings\";\nimport XoneDebugTools from \"./XoneDebugTools\";\n\n/**\n * createObject\n * @param {string} obj\n */\nwindow.createObject = (obj) => {\n\tif (obj.toLowerCase() === \"xonepdf\") return new XonePDF();\n\tif (obj.toLowerCase() === \"filemanager\") return new XoneFileManager();\n\tif (obj.toLowerCase() === \"debugtools\") return new XoneDebugTools();\n};\n\n/**\n * $http\n */\nwindow.$http = {\n\t/**\n\t * get\n\t * @param {string} url\n\t * @param {Object} options\n\t * @param {Function} dataFunction\n\t * @param {Function} [errorFunction]\n\t * @return {Promise<void>}\n\t */\n\tget: async function(url, options, dataFunction, errorFunction = (_, msg) => console.error(msg)) {\n\t\tconst fetchOptions = { headers: options?.headers || {} };\n\t\ttry {\n\t\t\tconst response = await fetch(url, {\n\t\t\t\tmethod: \"GET\",\n\t\t\t\t...fetchOptions,\n\t\t\t});\n\t\t\tconst data = await response.json();\n\t\t\tdataFunction(data);\n\t\t} catch (ex) {\n\t\t\terrorFunction(500, \"Error executing $http.get\", ex);\n\t\t}\n\t},\n\n\t/**\n\t * post\n\t * @param {string} url\n\t * @param {Object} options\n\t * @param {Function} dataFunction\n\t * @param {Function} [errorFunction]\n\t * @return {Promise<void>}\n\t */\n\tpost: async function(url, options, dataFunction, errorFunction = (_, msg) => console.error(msg)) {\n\t\tconst fetchOptions = { headers: options?.headers || {}, body: {} };\n\t\ttry {\n\t\t\tif (options?.data) fetchOptions.body = JSON.stringify(options.data);\n\n\t\t\tconst response = await fetch(url, {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\t...fetchOptions,\n\t\t\t});\n\t\t\tconst data = await response.json();\n\t\t\tdataFunction(data);\n\t\t} catch (ex) {\n\t\t\terrorFunction(500, \"Error executing $http.post\", ex);\n\t\t}\n\t},\n};\n\n/**\n * Clipboard\n */\nwindow.clipboard = XoneClipboard;\n\n/**\n * XOneOCR\n */\nwindow.XOneOCR = class XOneOCR {\n\tstartScan() {\n\t\tconsole.log(\"OCR Start Scan\");\n\t}\n};\n\n/**\n * fingerprintManager\n */\nwindow.fingerprintManager = new (class FingetprintManager {\n\tisHardwareAvailable() {\n\t\treturn false;\n\t}\n\thasEnrolledFingerprints() {\n\t\treturn false;\n\t}\n})();\n\n/**\n * replica\n */\nwindow.replica = new (class Replica {\n\tgetRecordsRX() {\n\t\treturn 0;\n\t}\n\tgetRecordsTX() {\n\t\treturn 0;\n\t}\n\tgetRecordsPend() {\n\t\treturn 0;\n\t}\n\tgetTotalRecordsRX() {\n\t\treturn 0;\n\t}\n\tgetTotalRecordsTX() {\n\t\treturn 0;\n\t}\n\tgetLog() {\n\t\treturn \"\";\n\t}\n\tstartReplica() {}\n\tstart() {}\n\tstopReplica() {}\n\tstop() {}\n})();\n\n/**\n * Animation\n */\nwindow.Animation = XoneAnimation;\n\n/**\n * systemSettings\n */\nwindow.systemSettings = xoneSystemSettings;\n\nwindow.createBookmark = (title, url) => browser.bookmarks.create({ title, url }).then(() => console.log(\"Bookmark crated\"));\n","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport router from \"./router\";\nimport Container from \"./components/Container.vue\";\nimport \"./composables/helperFunctions/DateHelper\";\nimport \"./composables/helperFunctions/DeviceHelper\";\nimport \"./composables/ScriptGlobalObjects\";\nimport dragAndDrop from \"./composables/DragAndDrop\";\n\n// Cargamos el fichero de configuración\n\n// Get App Configuration File and Script_Wrapper\nconst getConfig = Function(\n\t\"cbF\",\n\t\"(async()=>{try{const c=await import('../configuration.js');cbF(c.default);}catch(ex){console.error('Error loading configuration.js',ex);}})()\"\n);\n\ngetConfig((config) => {\n\tconst mode = config.mode || \"SPA\";\n\n\t// Iniciamos la App\n\tif (mode === \"DESIGNER\") dragAndDrop.setIsDesigner(true);\n\tcreateApp(App).use(router).component(\"Container\", Container).mount(\"xone-app\");\n\n\t// PWA\n\tif (mode === \"PWA\")\n\t\tif (navigator.serviceWorker)\n\t\t\t// SW\n\t\t\tnavigator.serviceWorker.register(\"./sw.js\");\n\n\t// Disable navigator forward button\n\twindow.addEventListener(\n\t\t\"popstate\",\n\t\t(event) => {\n\t\t\tif (!event.state) return;\n\t\t\tif (typeof event.state == \"object\" && event.state.obsolete !== true) {\n\t\t\t\thistory.replaceState({ obsolete: true }, \"\");\n\t\t\t\thistory.pushState(event.state, \"\");\n\t\t\t}\n\n\t\t\tif (typeof event.state == \"object\" && event.state.obsolete === true) {\n\t\t\t\thistory.back();\n\t\t\t}\n\t\t},\n\t\tfalse\n\t);\n\n\t// Lock scale\n\tconst viewportmeta = document.querySelector('meta[name=\"viewport\"]');\n\tif (viewportmeta) {\n\t\tviewportmeta.content = \"width=device-width, minimum-scale=1.0, maximum-scale=1.0, initial-scale=1.0\";\n\t\tdocument.body.addEventListener(\n\t\t\t\"gesturestart\",\n\t\t\tfunction () {\n\t\t\t\tviewportmeta.content = \"width=device-width, minimum-scale=0.25, maximum-scale=1.6\";\n\t\t\t},\n\t\t\tfalse\n\t\t);\n\t}\n});\n\n// Creamos un nodo xone-app para contener la aplicación\nclass XoneApp extends HTMLElement {\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tconnectedCallback() {\n\t\tconst divElement = document.createElement(\"div\");\n\t\tdivElement.id = \"app\";\n\t\tthis.appendChild(divElement);\n\t}\n}\nwindow.customElements.define(\"xone-app\", XoneApp);\n","import TextUtils from \"./TextUtils\";\nexport default class StringUtils {\n    static ParseDateString(arg0, str) {\n        throw new Error(\"Method not implemented.\");\n    }\n    static removeChars(text, ch) {\n        if (text.startsWith(ch))\n            text = text.substr(1);\n        if (text.length > 1 && text.endsWith(ch))\n            text = text.substr(0, text.length - 1);\n        return text;\n    }\n    static Replace(strSQL, arg1, str) {\n        return strSQL.replace(arg1, str);\n    }\n    static ParseBoolValue(value, bDefault = false) {\n        if (value == null)\n            return bDefault;\n        if (typeof value === 'string') {\n            return value.length == 0 ? bDefault : value.equalsIgnoreCase('true') || value.equals('1') || !!+value; // here we parse to number first\n        }\n        return !!value;\n    }\n    static IsEmptyString(text) {\n        return TextUtils.isEmpty(text);\n    }\n    static areEquals(text1, text2) {\n        return text1 === text2;\n    }\n    /**\n     * Dado un valor comprueba si es nulo para devolver cadena vacía. Si no, devuelve su conversión\n     * a cadena.\n     *\n     * @param Source   Valor que se quiere convertir.\n     * @param sDefault\n     * @return La cadena convertida o la por defecto.\n     */\n    static SafeToString(Source, sDefault = \"\") {\n        try {\n            // Si es nulo, cadena vacía directamente\n            if (Source == null) {\n                return sDefault;\n            }\n            if (typeof Source === 'string')\n                return Source;\n            return Source.toString();\n            // /*\n            //  * 20/05/2016\n            //  * Si ya es CharSequence (String, StringBuffer, StringBuilder), invocamos su toString().\n            //  * En el caso de pasarle un String, que es bastante comun, este retorna su propia\n            //  * instancia y es rapido y no hace falta hacerle un check fuera de esta funcion.\n            //  */\n            // if (Source instanceof CharSequence) {\n            //     if (TextUtils.isEmpty((CharSequence) Source)) {\n            //         return sDefault;\n            //     }\n            //     return Source.toString();\n            // }\n            // // De lo contrario, simplemente el ToString de lo que sea\n            // if (Source instanceof Calendar) {\n            //     SimpleDateFormat dateformat = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n            //     return dateformat.format(((Calendar) Source).getTime().getTime());\n            // }\n            // if (Source instanceof Date) {\n            //     SimpleDateFormat dateformat = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n            //     return dateformat.format(((Date) Source).getTime());\n            // }\n            // /*\n            //  * TODO 24/05/2018 Juan Carlos\n            //  * Añado este check de doubles para que trate de eliminar la notación científica al\n            //  * convertirlo a string para por ejemplo el cstr() de vbscript\n            //  *\n            //  * Posiblemente también sea necesario hacerlo con floats.\n            //  */\n            // if (Source instanceof Double) {\n            //     return doubleFormatter.format((double) Source);\n            // }\n            // if (Source instanceof Object[]) {\n            //     StringBuilder bld = new StringBuilder();\n            //     try {\n            //         Object[] arr = (Object[]) Source;\n            //         for (Object value : arr) {\n            //             if (bld.length() > 0) {\n            //                 bld.append(\"\\r\\n\");\n            //             }\n            //             bld.append(value);\n            //         }\n            //     } catch (Exception e) {\n            //         e.printStackTrace();\n            //     }\n            //     return bld.toString();\n            // }\n            // String value = String.valueOf(Source);\n            // if (TextUtils.isEmpty(value)) {\n            //     return sDefault;\n            // }\n            // return value;\n        }\n        catch (e) {\n            return sDefault;\n        }\n    }\n}\nStringUtils.XONE_EMPTY_STRING = \"##XONE_EMPTY_STRING##\";\nStringUtils.XONE_METHOD_DEFAULT = \"##xoneMethodDefault##\";\n\n//# sourceMappingURL=StringUtils.js.map\n","import { XoneDataCollection } from \"../appData/core/XoneDataCollection\";\nimport XmlNode from \"../appData/Xml/JSONImpl/XmlNode\";\nimport { loremIpsum } from \"lorem-ipsum\";\n\n/**\n * generate Unique Id\n * @returns {string}\n */\nexport const generateUniqueId = () => Math.random().toString(36).substr(2, 9);\n\nexport const generateUniqueDeviceId = () => {\n\treturn `${Math.random().toString(36).substr(2, 9)}-${Math.random().toString(36).substr(2, 9)}-${Math.random()\n\t\t.toString(36)\n\t\t.substr(2, 9)}-${Math.random().toString(36).substr(2, 9)}`;\n};\n\nexport const generateRandomString = (length = 20) => loremIpsum().substring(0, length);\n\n/**\n * generate a Document from xml string\n * @param {string} xmlString\n * @returns {Document}\n */\nexport const parseXoneXml = (xmlString) => new DOMParser().parseFromString(xmlString, \"text/xml\");\n\nconst isEmpty = (x) => typeof x == \"undefined\" || x.length == 0 || x == null;\n\nconst capComment = 1,\n\tcapSelector = 2,\n\tcapEnd = 3,\n\tcapAttr = 4;\nconst commentX = /\\/\\*[\\s\\S]*?\\*\\//g;\nconst lineAttrX = /([^\\:]+):([^\\;]*);/;\nconst altX = /(\\/\\*[\\s\\S]*?\\*\\/)|([^\\s\\;\\{\\}][^\\;\\{\\}]*(?=\\{))|(\\})|([^\\;\\{\\}]+\\;(?!\\s*\\*\\/))/gim;\n\n/**\n * Input is css string and current pos, returns JSON object\n * @param {string} cssString\n * @param {object} [args]\n */\nexport const parseXoneCss = (\n\tcssString,\n\targs = {\n\t\tcomments: false,\n\t\tstripComments: true,\n\t}\n) => {\n\tconst node = {};\n\n\tlet match = null;\n\tlet count = 0;\n\n\tif (args.stripComments) {\n\t\targs.comments = false;\n\t\tcssString = cssString.replace(commentX, \"\");\n\t}\n\twhile ((match = altX.exec(cssString))) {\n\t\tif (!isEmpty(match[capComment]) && args.comments) {\n\t\t\t// Comment\n\t\t\tnode[count++] = match[capComment].trim();\n\t\t} else if (!isEmpty(match[capSelector])) {\n\t\t\t// New node, we recurse\n\t\t\tconst name = match[capSelector].trim();\n\t\t\t// This will return when we encounter a closing brace\n\t\t\tconst newNode = parseXoneCss(cssString, args);\n\n\t\t\t[name]\n\t\t\t\t.map((e) => e?.trim())\n\t\t\t\t.forEach((sel) => {\n\t\t\t\t\tif (sel in node) {\n\t\t\t\t\t\tnewNode.attributes?.forEach((att) => (node[sel][att] = newNode.attributes[att]));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode[sel] = newNode;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t} else if (!isEmpty(match[capEnd])) {\n\t\t\t// Node has finished\n\t\t\treturn node;\n\t\t} else if (!isEmpty(match[capAttr])) {\n\t\t\tconst line = match[capAttr].trim();\n\t\t\tconst attr = lineAttrX.exec(line);\n\t\t\tif (!attr) continue;\n\t\t\t// Attribute\n\t\t\tconst name = attr[1].trim();\n\t\t\tconst value = attr[2].trim();\n\t\t\tnode[name] = value;\n\t\t}\n\t}\n\n\treturn node;\n};\n\n/**\n *\n * @param {XoneDataCollection} dataColl\n * @param {number} [rowsLength]\n */\nexport const createTestingDataGeneration = () =>\n\t(window.generateTestingData = (dataColl, rowsLength = 10) => {\n\t\t/** @type {{m_xmlNode:XmlNode}} */\n\t\tconst { m_xmlNode } = dataColl;\n\n\t\tif (m_xmlNode.getAttrValue(\"objname\").toString().toLowerCase() === \"usuarios\") rowsLength = 1;\n\n\t\tconst props = {};\n\t\tm_xmlNode.SelectNodes(\"prop\").map((/** @type {XmlNode} */ e) => {\n\t\t\t/** @type {string} */\n\t\t\tconst propName = e.getAttrValue(\"name\");\n\t\t\t// if (propName.startsWith(\"MAP_\")) return;\n\t\t\tprops[propName] = e.getAttrValue(\"type\");\n\t\t});\n\n\t\tconst data = [...Array(rowsLength).keys()].map((n) => {\n\t\t\tconst row = { ...props };\n\t\t\tObject.entries(props).forEach(([key, value]) => {\n\t\t\t\tif (key === \"LOGIN\") value = \"admin\";\n\t\t\t\telse if (key === \"PWD\") value = null;\n\t\t\t\telse if (key === \"IDEMPRESA\") value = 1;\n\t\t\t\telse if (value.toString().startsWith(\"T\")) value = generateRandomString();\n\t\t\t\telse if (value === \"NC\") value = Math.random() >= 0.5 ? 1 : 0;\n\t\t\t\telse if (value.toString().startsWith(\"N\")) value = Math.floor(Math.random() * 100);\n\t\t\t\telse if (value.toString().startsWith(\"D\")) value = new Date(Math.floor(Math.random() * 2636111528424));\n\t\t\t\telse if (value === \"IMG\") value = `https://picsum.photos/200?id=${generateUniqueId()}`;\n\t\t\t\telse value = \"\";\n\n\t\t\t\trow[key] = value;\n\t\t\t});\n\t\t\trow.ID = n + 1;\n\t\t\treturn row;\n\t\t});\n\t\treturn data;\n\t});\n\nString.prototype.compress = function (asArray) {\n\t\"use strict\";\n\t// Build the dictionary.\n\tasArray = asArray === true;\n\tvar i,\n\t\tdictionary = {},\n\t\tuncompressed = this,\n\t\tc,\n\t\twc,\n\t\tw = \"\",\n\t\tresult = [],\n\t\tASCII = \"\",\n\t\tdictSize = 256;\n\tfor (i = 0; i < 256; i += 1) {\n\t\tdictionary[String.fromCharCode(i)] = i;\n\t}\n\n\tfor (i = 0; i < uncompressed.length; i += 1) {\n\t\tc = uncompressed.charAt(i);\n\t\twc = w + c;\n\t\t//Do not use dictionary[wc] because javascript arrays\n\t\t//will return values for array['pop'], array['push'] etc\n\t\t// if (dictionary[wc]) {\n\t\tif (dictionary.hasOwnProperty(wc)) {\n\t\t\tw = wc;\n\t\t} else {\n\t\t\tresult.push(dictionary[w]);\n\n\t\t\tASCII += String.fromCharCode(dictionary[w]);\n\t\t\t// Add wc to the dictionary.\n\n\t\t\tdictionary[wc] = dictSize++;\n\t\t\tw = String(c);\n\t\t}\n\t}\n\n\t// Output the code for w.\n\tif (w !== \"\") {\n\t\tresult.push(dictionary[w]);\n\n\t\tASCII += String.fromCharCode(dictionary[w]);\n\t}\n\treturn asArray ? result : ASCII;\n};\n\nString.prototype.decompress = function () {\n\t(\"use strict\");\n\t// Build the dictionary.\n\tvar i,\n\t\ttmp = [],\n\t\tdictionary = [],\n\t\tcompressed = this,\n\t\tw,\n\t\tresult,\n\t\tk,\n\t\tentry = \"\",\n\t\tdictSize = 256;\n\tfor (i = 0; i < 256; i += 1) {\n\t\tdictionary[i] = String.fromCharCode(i);\n\t}\n\n\tif (compressed && typeof compressed === \"string\") {\n\t\t// convert string into Array.\n\t\tfor (i = 0; i < compressed.length; i += 1) {\n\t\t\ttmp.push(compressed[i].charCodeAt(0));\n\t\t}\n\n\t\tcompressed = tmp;\n\n\t\ttmp = null;\n\t}\n\n\tw = String.fromCharCode(compressed[0]);\n\tresult = w;\n\tfor (i = 1; i < compressed.length; i += 1) {\n\t\tk = compressed[i];\n\n\t\tif (dictionary[k]) {\n\t\t\tentry = dictionary[k];\n\t\t} else {\n\t\t\tif (k === dictSize) {\n\t\t\t\tentry = w + w.charAt(0);\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tresult += entry;\n\n\t\t// Add w+entry[0] to the dictionary.\n\t\tdictionary[dictSize++] = w + entry.charAt(0);\n\n\t\tw = entry;\n\t}\n\treturn result;\n};\n","import { Exception } from \"../../Exceptions/Exception\";\nimport NumberUtils from \"../../Utils/NumberUtils\";\nimport ObjUtils from \"../../Utils/ObjUtils\";\nimport StringUtils from \"../../Utils/StringUtils\";\nexport default class XoneWebCoreResulset {\n    /**\n     *\n     */\n    constructor(connection, options) {\n        this.m_stringData = [\"Valor prueba texto\", \"Texto corto\", \"0002346\", \"Otro texto\", \"Un texto mas largo de prueba\", \"Mas texto\"];\n        this.m_maxRows = 100;\n        this.m_keys = [];\n        this.isResultset = true;\n        this.m_connection = connection;\n        this.m_nIterate = -1;\n        this.m_options = options;\n        this.m_data = [];\n        this.m_maxRows = this.m_data.length;\n        this.m_keys = [];\n        // this.m_parsed=new SqlParser(\"ROWID\");\n        // this.m_parsed.ParseSqlString(strCmd)\n    }\n    async populate(options) {\n        var result = await this.m_connection.fetchDataAsync(options || this.m_options);\n        if (result.hasError == true) {\n            throw new Exception(result.err);\n        }\n        this.m_data = Array.isArray(result.data) ? result.data : [];\n        this.m_maxRows = this.m_data.length;\n        this.m_keys = this.m_maxRows == 0 ? [] : Object.keys(this.m_data[0]);\n        return this;\n    }\n    getBytes(fld) {\n        return null;\n    }\n    getColumnCount() {\n        return this.m_maxRows == 0 ? 0 : this.m_keys.length;\n    }\n    getColumnTypes() {\n        return [1, 2, 3, 4, 5, 6, 7, 8];\n    }\n    getColumnName(ordinal) {\n        return this.m_maxRows == 0 ? 0 : this.m_keys[ordinal];\n    }\n    getData() {\n        return this.m_data;\n    }\n    close() {\n        this.m_nIterate = -1;\n        this.m_data = null;\n        this.m_maxRows = 0;\n    }\n    resolverField(fld) {\n        if (typeof fld == \"number\")\n            return this.m_keys[fld];\n        return fld;\n    }\n    getValue(fld, nType) {\n        switch (nType) {\n            case 0: // Numero\n                return NumberUtils.SafeToInt(this.m_data[this.m_nIterate][this.resolverField(fld)]);\n            case 2:\n                return NumberUtils.SafeToDouble(this.m_data[this.m_nIterate][this.resolverField(fld)]);\n            case 3:\n                return ObjUtils.SafeToDate(this.m_data[this.m_nIterate][this.resolverField(fld)]);\n            default:\n                return StringUtils.SafeToString(this.m_data[this.m_nIterate][this.resolverField(fld)]);\n        }\n    }\n    getString(fld) {\n        return this.getValue(fld, 1);\n    }\n    getInt(fld) {\n        return this.getValue(fld, 0);\n    }\n    getDate(fld) {\n        return this.getValue(fld, 3);\n    }\n    get PageLen() {\n        var _a, _b;\n        return ((_b = (_a = this.m_options) === null || _a === void 0 ? void 0 : _a.page) === null || _b === void 0 ? void 0 : _b.length) || -1;\n    }\n    get PageCache() {\n        var _a, _b;\n        return ((_b = (_a = this.m_options) === null || _a === void 0 ? void 0 : _a.page) === null || _b === void 0 ? void 0 : _b.cache) || -1;\n    }\n    async next() {\n        // if (this.PageLen > 0) {\n        //     if (this.PageCache > 0) {\n        //     } else {\n        //         await this.populate();\n        //     }\n        // }\n        return ++this.m_nIterate < this.m_maxRows;\n    }\n    async EOF() {\n        return this.m_nIterate >= this.m_maxRows;\n    }\n    async moveTo(position) {\n        return position == this.m_maxRows || (this.m_nIterate = position) == this.m_maxRows;\n    }\n}\n\n//# sourceMappingURL=XoneWebCoreResulset.js.map\n","export class SwipeHandler {\n\t_xThreshhold = 75; // slide this._xThreshhold\n\t_allowedTime = 500; // ms allowed to swipe\n\t_yThreshhold = 75; // slide this._yThreshhold\n\n\t/**\n\t * Constructor\n\t * @param {Function} callbackFunction\n\t */\n\tconstructor(callbackFunction) {\n\t\tthis.callbackFunction = callbackFunction;\n\t}\n\n\t/**\n\t * Touch Start\n\t * @param {TouchEvent} e\n\t */\n\ttouchStart(e) {\n\t\tif (!this.isSwipeable(e.target)) return e.stopPropagation();\n\t\tthis.touchobj = e.changedTouches[0];\n\t\tthis.dist = 0;\n\t\tthis.startX = this.touchobj.pageX;\n\t\tthis.startY = this.touchobj.pageY;\n\t\t// get start time\n\t\tthis.startTime = new Date().getTime();\n\t}\n\n\t/**\n\t * Touch End\n\t * @param {TouchEvent} e\n\t */\n\ttouchEnd(e) {\n\t\tif (!this.isSwipeable(e.target)) return e.stopPropagation();\n\t\tthis.touchobj = e.changedTouches[0];\n\t\tthis.dist = this.touchobj.pageX - this.startX;\n\t\t// get swipe time\n\t\tthis.elapsedTime = new Date().getTime() - this.startTime;\n\t\tif (\n\t\t\tthis.elapsedTime > this._allowedTime ||\n\t\t\tMath.abs(this.dist) < this._xThreshhold ||\n\t\t\tMath.abs(this.touchobj.pageY - this.startY) > this._yThreshhold\n\t\t)\n\t\t\treturn;\n\n\t\tthis.callbackFunction(this.dist < 0 ? 1 : -1);\n\t}\n\n\t/**\n\t * isSwipeable\n\t * @param {HTMLElement} element\n\t * @return {boolean}\n\t */\n\tisSwipeable(element) {\n\t\tdo {\n\t\t\tif (element === this.touchElement) return true;\n\t\t\tif (element.getAttribute(\"swipeable\") === \"false\") return false;\n\t\t\telement = element.parentElement;\n\t\t} while (element);\n\t\treturn true;\n\t}\n\n\t/**\n\t * Initializate\n\t * @param {HTMLElement} touchElement\n\t */\n\tinit(touchElement) {\n\t\tthis.touchElement = touchElement;\n\t\tthis.touchElement.addEventListener(\"touchstart\", this.touchStart.bind(this), { passive: true });\n\t\tthis.touchElement.addEventListener(\"touchend\", this.touchEnd.bind(this), {\n\t\t\tpassive: true,\n\t\t});\n\t}\n\n\tclear() {\n\t\t// clear events\n\t\tthis.touchElement.removeEventListener(\"touchstart\", this.touchStart);\n\t\tthis.touchElement.removeEventListener(\"touchend\", this.touchEnd);\n\t}\n}\n","var __awaiter =\n  (this && this.__awaiter) ||\n  function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n      return value instanceof P\n        ? value\n        : new P(function(resolve) {\n            resolve(value);\n          });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n      function fulfilled(value) {\n        try {\n          step(generator.next(value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function rejected(value) {\n        try {\n          step(generator[\"throw\"](value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function step(result) {\n        result.done\n          ? resolve(result.value)\n          : adopt(result.value).then(fulfilled, rejected);\n      }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  };\nimport * as fs from \"fs\";\nexport class FileManagerNodeJs {\n  readFileSync(path, options) {\n    return fs.readFileSync(path, options);\n  }\n  readJsonFileSync(path, options) {\n    var file = fs.readFileSync(path, options);\n    return JSON.parse(file.toString());\n  }\n}\nexport class FileManagerOnline {\n  // readFileSync(path, options) {\n  //   return fs.readFileSync(path, options);\n  // }\n\n  readFileSync(filePath, mimeType = \"text/string\") {\n    const xmlhttp = new XMLHttpRequest();\n    xmlhttp.open(\"GET\", filePath, false);\n    // if (mimeType != null) {\n    //   if (xmlhttp.overrideMimeType) {\n    //     xmlhttp.overrideMimeType(mimeType);\n    //   }\n    // }\n    xmlhttp.setRequestHeader(\"Content-type\", \"charset=UTF-8\");\n    xmlhttp.send();\n    if (xmlhttp.status == 200 && xmlhttp.readyState == 4) {\n      return xmlhttp.responseText;\n    } else {\n      // TODO Throw exception\n      return null;\n    }\n  }\n\n  async readFileAsync(filePath) {\n    try {\n      const response = await fetch(filePath, { mode: \"no-cors\" });\n      const text = await response.clone().text();\n\n      let i = text.indexOf(\"encoding=\");\n      let encoding = \"UTF-8\";\n      if (i !== -1) {\n        let st = text.substring(i + 10);\n        encoding = st.substring(0, st.indexOf('\"'));\n      }\n      const buffer = await response.arrayBuffer();\n\n      const decoder = new TextDecoder(encoding);\n\n      return decoder.decode(buffer);\n    } catch (ex) {\n      console.error(\"readFileAsync\", filePath, ex);\n    }\n  }\n\n  readJsonFileSync(filePath, mimeType = \"text/json\") {\n    const res = this.readFileSync(filePath, mimeType);\n    return res ? JSON.parse(res) : null;\n    // const xmlhttp = new XMLHttpRequest();\n    // xmlhttp.open(\"GET\", filePath, false);\n    // if (mimeType != null) {\n    //   if (xmlhttp.overrideMimeType) {\n    //     xmlhttp.overrideMimeType(mimeType);\n    //   }\n    // }\n\n    // xmlhttp.send();\n    // if (xmlhttp.status == 200 && xmlhttp.readyState == 4) {\n    //   return JSON.parse(xmlhttp.responseText);\n    // } else {\n    //   // TODO Throw exception\n    //   return null;\n    // }\n  }\n}\n\n//# sourceMappingURL=FileManager.js.map\n","import { computed, nextTick, ref, Ref, ComputedRef } from \"vue\";\nimport { XoneDataCollection } from \"./appData/core/XoneDataCollection\";\nimport xoneUI from \"./XoneUI\";\n\n/**\n * @typedef {Object} RowInfo\n * @property {number} id\n * @property {string} recordId\n * @property {function(any): void} setRecordId\n * @property {boolean} visible\n * @property {string} height\n * @property {string} width\n * @property {booolean} isExpanded\n * @property {booolean} isLoaded\n * @property {booolean} isFirstLoad\n * @property {function(): void} refresh\n * @property {function(): void} setIsLoaded\n * @property {function(function): void} setRefresh\n */\n\n/**\n * ContentsLoaderHandler\n */\nexport class ContentsLoaderHelper {\n\t/**\n\t * Contents items info (index, size, visibility)...\n\t * @type {Ref<RowInfo[]>}\n\t */\n\tcontentsRowsInfo = ref([]);\n\n\t/**\n\t * @type {HTMLElement}\n\t */\n\telement;\n\n\t/**\n\t * @type {XoneDataCollection}\n\t */\n\tcontents;\n\n\t/**\n\t * @type {number}\n\t */\n\trowsPerPage = 20;\n\n\t/**\n\t * @type {number}\n\t */\n\trowsPerPageByObjectId = 5;\n\n\t/**\n\t * @type {number}\n\t */\n\trowsPerLoad = 50;\n\n\t/**\n\t * @type {boolean}\n\t */\n\tisCheckingRowsVisibility;\n\n\t/**\n\t * @type {ref<boolean>}\n\t */\n\tisLoadingRowsInfo = ref(true);\n\n\t/**\n\t * Bloquea la carga de nuevos rows, se utiliza para poder ocultar el loading sin que eso conlleve agregar más rows innecesarios al contents si entra de nuevo automáticamente por un evento de scroll\n\t * @type {boolean}\n\t */\n\tlockLoadRowsInfo = false;\n\n\t/**\n\t * @type {boolean}\n\t */\n\tisInGroup;\n\n\t/**\n\t * @type {boolean}\n\t */\n\tisDrawer;\n\n\t/**\n\t * @type {Ref<number>}\n\t */\n\trowsLength = ref(0);\n\n\t/**\n\t * @type {Map<string,HTMLElement>}\n\t */\n\tmapDivElements = new Map();\n\n\t/**\n\t * @type {string}\n\t */\n\telementName;\n\n\t/**\n\t * @type {boolean}\n\t */\n\tallRecordsLoaded = false;\n\n\t/**\n\t * loadByObjectId, si el contents carga el mismo nº de registros que se piden, es porque es un content \"pesado\" en datos, cargaremos dinamicamente de row en row para mejorar la navegacion (fluid-load)\n\t * @type {boolean}\n\t */\n\tloadByObjectId;\n\n\t/**\n\t * @type {string}\n\t */\n\tbreadcrumbId;\n\n\t/**\n\t * Comprobar después de la primera carga de rows que exista scroll o que no se hayan renderizado todos los valores devueltos para cargar otro siguiente bloque si fuese necesario\n\t * @type {boolean}\n\t */\n\tcheckLoadScroll = true;\n\n\t/**\n\t * @type {ref<boolean>}\n\t */\n\tisLoading = ref(true);\n\n\t/**\n\t * Constructor\n\t * @param {string} elementName\n\t * @param {string} breadcrumbId\n\t * @param {number} [rowsPerPage]\n\t */\n\tconstructor(elementName, breadcrumbId, rowsPerPage = null) {\n\t\tthis.elementName = elementName;\n\t\tthis.breadcrumbId = breadcrumbId;\n\t\tthis.setPaginationSize(rowsPerPage);\n\t}\n\n\t/**\n\t * bindOnScroll\n\t * @param {HTMLElement} element\n\t */\n\tbindOnScrollEvent(element) {\n\t\tthis.element = element;\n\t\telement.addEventListener(\"scroll\", this.onScroll.bind(this));\n\t}\n\n\t/**\n\t * clear\n\t */\n\tclear() {\n\t\tthis.reset();\n\t\tthis.element.removeEventListener(\"scroll\", this.onScroll);\n\t}\n\n\t/**\n\t * getContentsRowsInfo\n\t * @returns {Ref<Array<RowInfo>>}\n\t */\n\tgetContentsRowsInfo() {\n\t\treturn this.contentsRowsInfo;\n\t}\n\n\t/**\n\t * getIsLoading\n\t * @return {ComputedRef<boolean>} value\n\t */\n\tgetIsLoading() {\n\t\t// return computed(() => this.isLoading.value); // || this.isLoadingRowsInfo.value);\n\t\treturn computed(() => this.isLoading.value || this.isLoadingRowsInfo.value);\n\t}\n\n\t/**\n\t * getrowsLength\n\t * @returns {Ref<number>} value\n\t */\n\tgetRowsLength() {\n\t\treturn this.rowsLength.value;\n\t}\n\n\t/**\n\t * setPaginationSize\n\t * @param {number|undefined} value\n\t */\n\tsetPaginationSize(value) {\n\t\tif (!value) return;\n\t\tif (isNaN(value)) return;\n\t\tvalue = Number(value);\n\t\tthis.rowsPerPage = value;\n\t\tthis.rowsPerPageByObjectId = value;\n\t\tthis.checkLoadScroll = false;\n\t}\n\n\t/**\n\t * reset\n\t */\n\tasync reset() {\n\t\tthis.lockLoadRowsInfo = false;\n\t\tthis.mapDivElements.clear(); // Clear divs cache\n\t\tthis.contentsRowsInfo.value = []; // Clear rows info\n\t\tthis.rowsLength.value = 0; // Init rowsLenght\n\t\tthis.allRecordsLoaded = false; // Init allRecordsLoaded\n\t\t// this.isLoadingRowsInfo.value = false; // Init IsLoadingRowsInfo\n\t\tthis.isCheckingRowsVisibility = false; // Init isCHeckingRowVisibility\n\t\tawait nextTick();\n\t}\n\n\t/**\n\t * On contents scroll\n\t * @param {*} e\n\t */\n\tonScroll() {\n\t\tif (this.isCheckingRowsVisibility || this.isLoadingRowsInfo.value || this.isLoading.value) {\n\t\t\tif (this.timeoutOnScroll) clearTimeout(this.timeoutOnScroll);\n\t\t\treturn (this.timeoutOnScroll = setTimeout(() => this.onScroll())), 25;\n\t\t}\n\t\t// Check elements visibility in scroll\n\t\tthis.checkScrollElementsVisibility();\n\t\t// Check if we have to load more child components\n\t\tthis.checkLoadRowsInfo();\n\t}\n\n\t/**\n\t * checkScrollElementsVisibility\n\t * @param {*} e\n\t */\n\tcheckScrollElementsVisibility() {\n\t\ttry {\n\t\t\tthis.isCheckingRowsVisibility = true;\n\t\t\tif (this.scrollElementsVisibilityTimeout) clearTimeout(this.scrollElementsVisibilityTimeout);\n\t\t\tthis.scrollElementsVisibilityTimeout = setTimeout(() => {\n\t\t\t\tthis.contentsRowsInfo.value.forEach((/** @type {RowInfo} */ element) => {\n\t\t\t\t\tconst { scrollTop, clientHeight } = this.element;\n\t\t\t\t\t// Get Elements from cache\n\t\t\t\t\tlet divElement = this.mapDivElements.get(element.id);\n\t\t\t\t\t// Cache elements\n\t\t\t\t\tif (!divElement) {\n\t\t\t\t\t\tdivElement = document.getElementById(`${this.elementName.replace(\"@\", \"\")}${element.id}${this.breadcrumbId}`);\n\t\t\t\t\t\tif (!divElement) return;\n\t\t\t\t\t\tthis.mapDivElements.set(element.id, divElement);\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\t// Hide elements above scroll\n\t\t\t\t\t\tdivElement.offsetTop + divElement.clientHeight + window.outerHeight < scrollTop ||\n\t\t\t\t\t\t// Hide elements below scroll\n\t\t\t\t\t\t(divElement.offsetTop + divElement.clientHeight > scrollTop + clientHeight + window.outerHeight &&\n\t\t\t\t\t\t\tdivElement.offsetTop > scrollTop + clientHeight)\n\t\t\t\t\t) {\n\t\t\t\t\t\t// set height\n\t\t\t\t\t\tif (element.height === \"auto\") element.height = divElement.clientHeight ? divElement.clientHeight + \"px\" : \"auto\";\n\t\t\t\t\t\t// set width\n\t\t\t\t\t\tif (element.width === \"auto\") element.width = divElement.clientWidth ? divElement.clientWidth + \"px\" : \"auto\";\n\t\t\t\t\t\t// set visibility\n\t\t\t\t\t\telement.visible = false;\n\t\t\t\t\t} else if (\n\t\t\t\t\t\t// Show elements on scroll\n\t\t\t\t\t\t!element.visible\n\t\t\t\t\t) {\n\t\t\t\t\t\telement.height = \"auto\";\n\t\t\t\t\t\telement.width = \"auto\";\n\t\t\t\t\t\telement.visible = true;\n\t\t\t\t\t}\n\t\t\t\t\tthis.isCheckingRowsVisibility = false;\n\t\t\t\t});\n\t\t\t}, 100);\n\t\t} catch {\n\t\t\tthis.isCheckingRowsVisibility = false;\n\t\t}\n\t}\n\n\tcheckLoadRowsInfo() {\n\t\t/** @type {HTMLDivElement} */\n\t\tconst element = this.element;\n\n\t\tif (\n\t\t\t(this.allRecordsLoaded && this.contentsRowsInfo.value.length >= this.rowsLength.value) ||\n\t\t\telement.scrollHeight - element.clientHeight - window.outerHeight / 2 >= element.scrollTop\n\t\t)\n\t\t\treturn;\n\n\t\tthis.loadRowsInfo(null, element);\n\t}\n\n\t/**\n\t * loadRows\n\t * @param {XoneDataCollection} [contents]\n\t * @param {import(\"./XoneAttributesHandler\").PropAttributes} [attributes]\n\t * @param {boolean} [isFirstLoad]\n\t */\n\tasync loadRows(contents = null, attributes = null, isFirstLoad = false) {\n\t\ttry {\n\t\t\tif (contents) {\n\t\t\t\tawait this.reset();\n\t\t\t\tthis.contents = contents;\n\t\t\t}\n\t\t\tthis.isLoading.value = true;\n\t\t\tthis.isLoadingRowsInfo.value = true;\n\n\t\t\tawait this.checkGroupIsVisible();\n\n\t\t\t/**\n\t\t\t * coleccion special\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tconst isSpecial = this.contents.m_xmlNode.getAttrValue(\"special\") === \"true\";\n\n\t\t\t/**\n\t\t\t * carga fluida, carga los registros de 1 en 1 para no bloquear el UI\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tconst isFluidLoad = this.contents.m_xmlNode.getAttrValue(\"fluid-load\") === \"true\" || attributes?.fluidLoad;\n\n\t\t\tif (isFirstLoad && this.contents.length !== 0) {\n\t\t\t\t// Se supone que ya se ha cargado en un before-edit y aquí no tenemos que hacer nada?\n\t\t\t} else if (!isSpecial) {\n\t\t\t\tif (this.contents.isLock()) await this.contents.loadAll(false);\n\t\t\t\telse\n\t\t\t\t\tawait this.contents.loadAll(false, {\n\t\t\t\t\t\tstart: this.getRowsLength(),\n\t\t\t\t\t\tlength: this.rowsPerLoad,\n\t\t\t\t\t});\n\t\t\t} else if (this.getRowsLength() === this.contents.length) this.allRecordsLoaded = true;\n\n\t\t\t// Marcamos si se han cargado todos los datos\n\t\t\tif (this.contents.length === 0 || this.contents.isLock() || this.contents.length !== this.rowsPerLoad) this.allRecordsLoaded = true;\n\t\t\tthis.rowsLength.value += this.contents.length;\n\n\t\t\t// Si tenemos un contents con muchos datos o queremos carga fluida, usaremos el ID del objeto para la carga\n\t\t\tif (contents && !isSpecial) this.loadByObjectId = this.rowsPerLoad === this.contents.length || isFluidLoad;\n\t\t} catch (ex) {\n\t\t\txoneUI.showSnackbar({ color: \"#F44336\", textColor: \"white\", text: ex });\n\t\t\tthis.allRecordsLoaded = true;\n\t\t\tconsole.error(ex);\n\t\t} finally {\n\t\t\tthis.isLoading.value = false;\n\t\t}\n\t}\n\n\t/**\n\t * loadRowsInfo\n\t */\n\tasync loadRowsInfo() {\n\t\tif (this.lockLoadRowsInfo) return;\n\t\tthis.lockLoadRowsInfo = true;\n\t\tthis.isLoadingRowsInfo.value = true;\n\n\t\t// Si tenemo scrollbar vamos a hacer un pequeño delay para no bloquear el  UI distribuyendo el proceso\n\t\tif (this.contentsRowsInfo.value.length === 0 || this.element.scrollHeight > this.element.clientHeight)\n\t\t\tawait new Promise((resolve) => setTimeout(() => nextTick(() => resolve()), 1));\n\n\t\tconst newRowsNumber = this.loadByObjectId ? this.rowsPerPageByObjectId : this.rowsPerPage;\n\n\t\tconst init = this.contentsRowsInfo.value.length === 0 ? 0 : this.contentsRowsInfo.value[this.contentsRowsInfo.value.length - 1].id + 1;\n\n\t\tconst end = init + newRowsNumber;\n\n\t\tfor (let i = init; i < end; i++) {\n\t\t\t// Si no estamos en el grupo del contents esperamos\n\t\t\tawait this.checkGroupIsVisible();\n\n\t\t\tif (i >= this.getRowsLength()) {\n\t\t\t\t// Todos los datos cargados\n\t\t\t\tif (this.allRecordsLoaded) {\n\t\t\t\t\treturn this.resetLoadRows();\n\t\t\t\t}\n\t\t\t\t// Cargamos más datos\n\t\t\t\tawait this.loadRows();\n\t\t\t\tif (this.allRecordsLoaded) {\n\t\t\t\t\treturn this.resetLoadRows();\n\t\t\t\t}\n\t\t\t}\n\t\t\t/** @type {RowInfo} */\n\t\t\tconst rowInfo = {\n\t\t\t\tid: i,\n\t\t\t\trecordId: !this.loadByObjectId\n\t\t\t\t\t? null\n\t\t\t\t\t: await (async () => {\n\t\t\t\t\t\t\tlet iData = i;\n\t\t\t\t\t\t\twhile (iData >= this.rowsPerLoad) iData -= this.rowsPerLoad;\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tconst obj = await this.contents.get(iData);\n\t\t\t\t\t\t\t\treturn obj.ID.toString();\n\t\t\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\t\t\tconsole.error(\"Error getting XoneDataObject ID\", ex);\n\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t  })(),\n\t\t\t\tsetRecordId: (value) => (rowInfo.recordId = value?.toString()),\n\t\t\t\tvisible: true,\n\t\t\t\theight: \"auto\",\n\t\t\t\twidth: \"auto\",\n\t\t\t\tisExpanded: false,\n\t\t\t\tisFirstLoad: init === 0,\n\t\t\t\trefresh: () => {},\n\t\t\t\tsetRefresh: (callbackFunction) => (rowInfo.refresh = callbackFunction),\n\t\t\t\tsetIsLoaded: (value) => (rowInfo.isLoaded = value),\n\t\t\t};\n\t\t\tthis.contentsRowsInfo.value.push(rowInfo);\n\t\t}\n\t\tthis.resetLoadRows();\n\t}\n\n\tasync resetLoadRows() {\n\t\t// delete window.isLoadingContents;\n\t\tthis.isLoadingRowsInfo.value = false;\n\n\t\t/** @type {HTMLDivElement} */\n\t\tconst element = this.element;\n\n\t\tlet hasScroll = false;\n\n\t\t// Vamos a meter un delay para que rendericen los rows y calculemos si necesitamos cargar más filas o no...\n\t\tfor (let i = 0; i < 100; i++) {\n\t\t\tif (this.element.scrollHeight > element.clientHeight + 200) {\n\t\t\t\thasScroll = true;\n\t\t\t\tthis.checkScrollElementsVisibility();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (!this.contentsRowsInfo.value.some((e) => !e.isLoaded)) break;\n\t\t\tawait new Promise((resolve) => setTimeout(() => resolve(), 5));\n\t\t}\n\n\t\tconst newRowsNumber = this.loadByObjectId ? this.rowsPerPageByObjectId : this.rowsPerPage;\n\n\t\tthis.lockLoadRowsInfo = false;\n\n\t\tif (hasScroll || this.contentsRowsInfo.value.length < newRowsNumber) return;\n\n\t\tif (!this.checkLoadScroll) return;\n\n\t\tthis.loadRowsInfo();\n\t}\n\n\tasync checkGroupIsVisible() {\n\t\tif (!this.isDrawer) while (!this.isInGroup) await new Promise((resolve) => setTimeout(() => resolve(), 250));\n\t\telse {\n\t\t\tlet groupElement = this.element;\n\t\t\twhile (groupElement.parentElement && groupElement.getAttribute(\"group\") !== \"true\") groupElement = groupElement.parentElement;\n\t\t\twhile (groupElement.style.opacity === \"0\") await new Promise((resolve) => setTimeout(() => resolve(), 500));\n\t\t}\n\t}\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./MsgBox.vue?vue&type=style&index=0&id=2b0d8532&scoped=true&lang=css\"","import TextUtils from \"../../Utils/TextUtils\";\nexport var eJoinType;\n(function (eJoinType) {\n    eJoinType[eJoinType[\"eLeftJoin\"] = 0] = \"eLeftJoin\";\n    eJoinType[eJoinType[\"eRightJoin\"] = 1] = \"eRightJoin\";\n    eJoinType[eJoinType[\"eInnerJoin\"] = 2] = \"eInnerJoin\";\n})(eJoinType || (eJoinType = {}));\n;\nexport class QueryTable {\n    /**\n     * Construye una tabla de una sentencia SELECT\n     *\n     * @param Name  Nombre de la tabla en la base de datos.\n     * @param Alias Alias de la tabla en la unión JOIN del SQL.\n     */\n    constructor(Name, Alias) {\n        this.m_bUseParrentisisAtJoins = false;\n        // Almacenar estos datos que son los básicos\n        this.m_strTableName = Name;\n        this.m_strTableAlias = Alias;\n        // Por defecto usamos prefijo\n        this.m_bUsePrefix = true;\n        // K11090501: El parser de SQL no almacena el tipo de JOIN. Debería.\n        this.m_joinType = eJoinType.eLeftJoin;\n    }\n    /**\n     * Devuelve la siguiente tabla en una cadena de JOINs.\n     *\n     * @return\n     */\n    getSecondTable() {\n        return this.m_secondTable;\n    }\n    /**\n     * Asigna valor a la siguiente tabla en la cadena de JOINs.\n     *\n     * @param value Tabla que sigue a esta en la cadena de JOINS de la sentencia SQL.\n     */\n    setSecondTable(value) {\n        this.m_secondTable = value;\n    }\n    /**\n     * M09072901:\tPermitir que se puedan traducir los joins a formato where en blackberry\n     * Expone la bandera que indica si hay que traducir las uniones o no.\n     */\n    getTranslateJoins() {\n        return this.m_bTranslateJoins;\n    }\n    /**\n     * M09072901:\tPermitir que se puedan traducir los joins a formato where en blackberry\n     * Asigna valor a la bandera que indica si hay que traducir las uniones o no. Si hay tabla\n     * secundaria le propaga el valor que se le haya indicado.\n     */\n    setTranslateJoins(value) {\n        this.m_bTranslateJoins = value;\n        if (this.m_secondTable != null) {\n            this.m_secondTable.setTranslateJoins(value);\n        }\n    }\n    /**\n     * @return Devuelve el nombre real de la tabla.\n     */\n    getActualName() {\n        if (!this.m_bUsePrefix) {\n            return this.m_strTableName;\n        }\n        return \"##PREF##\" + this.m_strTableName;\n    }\n    /**\n     * Devuelve o asigna el alias a la tabla\n     *\n     * @return Esta función devuelve el alias de la tabla en la sentencia SQL a que pertenece.\n     */\n    getAlias() {\n        return this.m_strTableAlias;\n    }\n    /**\n     * Asigna valor al alias de la tabla en la sentencia SQL a que pertenece.\n     *\n     * @param value Nuevo valor para el alias de la tabla en la sentencia.\n     */\n    setAlias(value) {\n        this.m_strTableAlias = value;\n    }\n    /**\n     * @return Devuelve la condición de unión entre esta tabla y la que le sigue.\n     */\n    getJoinCondition() {\n        return this.m_strJoinCondition;\n    }\n    /**\n     * K11090501: El parser de SQL no almacena el tipo de JOIN. Debería.\n     * Exponer el tipo de join\n     *\n     * @return\n     */\n    getJoinType() {\n        return this.m_joinType;\n    }\n    /**\n     * Asigna valor a la condición de unión entre esta tabla y la que le sigue en la sentencia.\n     * <p>\n     * K11090501: El parser de SQL no almacena el tipo de JOIN. Debería.\n     * Pasar el tipo de join también\n     *\n     * @param value Nuevo valor para la condición de unión.\n     */\n    setJoinCondition(value, Type) {\n        this.m_strJoinCondition = value;\n        // K11090501: El parser de SQL no almacena el tipo de JOIN. Debería.\n        this.m_joinType = Type;\n    }\n    /**\n     * @return Devuelve una cadena de unión con esta tabla y las que le siguen en la cadena de JOINs.\n     */\n    getTableName() {\n        let str, strTmp;\n        // Si no tiene segunda tabla, solamente es esta\n        if (this.m_secondTable == null) { // No hay unión\n            str = String.format(\"%s%s\", this.m_bUsePrefix ? \"##PREF##\" : \"\", this.m_strTableName);\n            return str;\n        } // No hay unión\n        // M09072901:\tPermitir que se puedan traducir los joins a formato where en blackberry\n        // Ahora tenemos que ver si hay traducción de uniones, en cuyo caso habrá que devolver otra cosa\n        if (this.m_bTranslateJoins) {\n            return this.TranslatedJoinTableName();\n        }\n        // m_bUseParrentisisAtJoins\n        let openParent = \"(\";\n        let closeParent = \")\";\n        if (!this.m_bUseParrentisisAtJoins) {\n            openParent = \"\";\n            closeParent = \"\";\n        }\n        //\n        // Si tiene segunda tabla, devolver la unión de ambas\n        str = openParent + this.m_secondTable.getTableName();\n        if (TextUtils.isEmpty(this.m_secondTable.getJoinCondition())) { // Incluir el alias\n            strTmp = \" \" + this.m_secondTable.getAlias();\n            str += strTmp;\n        } // Incluir el alias\n        //\n        // Adicionar las uniones y esas cosillas\n        // K11090501: El parser de SQL no almacena el tipo de JOIN. Debería.\n        let strJoin = \"LEFT OUTER JOIN\";\n        switch (this.m_joinType) {\n            case eJoinType.eRightJoin:\n                strJoin = \"RIGHT JOIN\";\n                break;\n            case eJoinType.eInnerJoin:\n                strJoin = \"INNER JOIN\";\n                break;\n        }\n        strTmp = String.format(\" %s %s%s %s ON %s\" + closeParent, strJoin, this.m_bUsePrefix ? \"##PREF##\" : \"\", this.m_strTableName, this.m_strTableAlias, this.m_strJoinCondition);\n        str += strTmp;\n        return str;\n    }\n    /**\n     * M09072901:\tPermitir que se puedan traducir los joins a formato where en blackberry\n     * Devuelve una cadena con los nombres de tablas pero traduciendo las uniones a formato filtrado.\n     */\n    TranslatedJoinTableName() {\n        let strOut = this.m_bUsePrefix ? \"##PREF##\" : \"\";\n        strOut += this.m_strTableName;\n        // Ahora tendremos que poner el alias si lo lleva\n        if (!TextUtils.isEmpty(this.m_strTableAlias)) {\n            strOut += (\" \" + this.m_strTableAlias);\n        }\n        // Y finalmente si hay siguiente tabla habrá que concatenarla\n        if (this.m_secondTable != null) {\n            strOut += (\",\" + this.m_secondTable.TranslatedJoinTableName());\n        }\n        return strOut;\n    }\n    /**\n     * Asigna valor al nombre (real) de la tabla en la sentencia SQL a la que pertenece.\n     *\n     * @param value Nuevo valor para el nombre de la tabla.\n     */\n    setTableName(value) {\n        this.m_strTableName = value;\n    }\n    /**\n     * @return Devuelve la bandera que indica si la tabla usa prefijo o no.\n     */\n    getUsePrefix() {\n        return this.m_bUsePrefix;\n    }\n    /**\n     * Asigna valor a la bandera que indica que hay que usar prefijo al recomponer el SQL.\n     *\n     * @param value TRUE si se quiere incluir el prefijo al recomponer el SQL.\n     */\n    setUsePrefix(value) {\n        this.m_bUsePrefix = value;\n    }\n    /**\n     * M09072901:\tPermitir que se puedan traducir los joins a formato where en blackberry\n     * Devuelve las condiciones para insertar en el WHERE generado como consecuencia de la\n     * traducción de las uniones. Si ya había WHERE se adicionarán al que había, si no lo hay\n     * se generará uno nuevo.\n     */\n    getTranslatedJoinConditions() {\n        let strOut = \"\";\n        // Obtener la condición de la primera tabla\n        if (!TextUtils.isEmpty(this.m_strJoinCondition)) {\n            strOut += (\"(\" + this.m_strJoinCondition + \")\");\n        }\n        if (this.m_secondTable != null) { // Pedir la condición de esa tabla\n            let strTmp = this.m_secondTable.getTranslatedJoinConditions();\n            if (!TextUtils.isEmpty(strTmp)) {\n                strOut += (\" AND \" + strTmp);\n            }\n        } // Pedir la condición de esa tabla\n        return strOut;\n    }\n}\n\n//# sourceMappingURL=QueryTable.js.map\n","import TextUtils from \"../../Utils/TextUtils\";\nexport default class QueryField {\n    /**\n     * Construye una estructura de representación de un campo y su alias en la sentencia SQL\n     *\n     * @param FieldName Nombre del campo en base de datos.\n     * @param AliasName Alias del campo en la sentencia.\n     */\n    constructor(FieldName, AliasName) {\n        this.m_strField = FieldName;\n        this.m_strAlias = AliasName;\n    }\n    /**\n     * Nombre del campo en la tabla en base de datos\n     *\n     * @return Devuelve el nombre real del campo.\n     */\n    getName() {\n        return this.m_strField;\n    }\n    getResolvedName() {\n        return TextUtils.isEmpty(this.m_strAlias) ? this.m_strField : this.m_strAlias;\n    }\n    /**\n     * Asigna valor nuevo al nombre del campo\n     *\n     * @param value Nuevo valor para el nombre del campo.\n     */\n    setName(value) {\n        this.m_strField = value;\n    }\n    /**\n     * Alias del campo en la sentencia SELECT\n     *\n     * @return Devuelve el alias del campo en la sentencia SELECT.\n     */\n    getAlias() {\n        return this.m_strAlias;\n    }\n    /**\n     * Asigna valor al alias del campo en la sentencia SELECT.\n     *\n     * @param value Nuevo valor del alias del campo en la sentencia.\n     */\n    setAlias(value) {\n        this.m_strAlias = value;\n    }\n}\n\n//# sourceMappingURL=QueryField.js.map\n","import Hashtable from \"../../Collections/HashMap/Hashtable\";\nimport QueryField from \"./QueryField\";\nimport { eJoinType, QueryTable } from \"./QueryTable\";\nimport SqlType from \"../../Utils/SqlType\";\nimport StringBuilder from \"../../Utils/StringBuilder\";\nimport StringUtils from \"../../Utils/StringUtils\";\nimport TextUtils from \"../../Utils/TextUtils\";\nimport IllegalArgumentException from \"../../Exceptions/IllegalArgumentException\";\nimport { XoneMessageKeys } from \"../../Exceptions/XoneMessageKeys\";\nimport Vector from \"../../Collections/Vector\";\nclass ParserStatus {\n}\n/* Se ha obtenido el keyword inicial que permite identificar la sentencia */\nParserStatus.PARSER_KEYWORD = 0;\n/* Se ha terminado el parsing */\nParserStatus.PARSER_COMPLETE = 1;\n/* Estados para parsear una sentencia DELETE */\nParserStatus.PARSER_DELETE_EXPECTING_FROM = 2;\nParserStatus.PARSER_DELETE_EXPECTING_TABLE = 3;\nParserStatus.PARSER_DELETE_EXPECTING_WHERE = 4;\nParserStatus.PARSER_DELETE_WHERE = 5;\n/* Estados para parsear una sentencia INSERT */\nParserStatus.PARSER_INSERT_EXPECTING_INTO = 6;\nParserStatus.PARSER_INSERT_EXPECTING_TABLE = 7;\nParserStatus.PARSER_INSERT_EXPECTING_FIELDS_BEGIN = 8;\nParserStatus.PARSER_INSERT_EXPECTING_FIELD_NAME = 9;\nParserStatus.PARSER_INSERT_EXPECTING_FIELD_SEPARATOR = 10;\nParserStatus.PARSER_INSERT_EXPECTING_VALUES = 11;\nParserStatus.PARSER_INSERT_EXPECTING_VALUES_BEGIN = 12;\nParserStatus.PARSER_INSERT_EXPECTING_VALUE = 13;\nParserStatus.PARSER_INSERT_EXPECTING_VALUE_SEPARATOR = 14;\n/* Estados para parsear una sentencia UPDATE */\nParserStatus.PARSER_UPDATE_EXPECTING_TABLE = 15;\nParserStatus.PARSER_UPDATE_EXPECTING_SET = 16;\nParserStatus.PARSER_UPDATE_EXPECTING_FIELD_NAME = 17;\nParserStatus.PARSER_UPDATE_EXPECTING_EQUAL_SIGN = 18;\nParserStatus.PARSER_UPDATE_EXPECTING_FIELD_VALUE = 19;\nParserStatus.PARSER_UPDATE_EXPECTING_SEPARATOR = 20;\nParserStatus.PARSER_UPDATE_EXPECTING_WHERE = 21;\nParserStatus.PARSER_UPDATE_WHERE = 22;\nexport class SqlParser {\n    /**\n     * Creates a new instance of SqlParser\n     */\n    constructor(Source, Messages) {\n        /**\n         * Palabras reservadas de SQL\n         */\n        this.m_strReservedWords = [\n            \"insert\", \"update\", \"delete\", \"into\", \"values\", \"set\", \"where\",\n            \"from\", \"having\", \"group\", \"by\", \"order\"\n        ];\n        //\n        // M09072901:\tPermitir que se puedan traducir los joins a formato where en blackberry\n        // Por defecto en el Blackberry las consultas ser�n traducidas... personalizar para futuras bases de datos\n        this.m_bTranslateJoins = false;\n        /**\n         * F12110902: Modificaciones al parser de SQL para gestionar uniones. TRUE\n         * si queremos que las sentencias SQL que forman un UNION se encierren entre\n         * par�ntesis. Para sqlite por defecto ser� FALSE.\n         */\n        this.m_bSurroundUnions = false;\n        if (Source instanceof SqlParser)\n            this.SqlParserFromParser(Source);\n        else {\n            this.m_strRowIdFieldName = Source;\n            this.m_sqlType = SqlType.SQLTYPE_UNKNOWN;\n            this.m_lstFields = new Hashtable();\n            // A12042602: Permitir que se puedan almacenar los tipos de datos de una sentencia SQL.\n            this.m_lstFieldsType = new Hashtable();\n            // Esta lista es para cuando se parsea un SELECT\n            this.m_lstSelectFields = new Vector();\n            ////m_lstSelectFields = new Vector();\n            // M11051201: Mecanismo para soporte multilenguaje en los componentes y dem�s cosas.\n            this.m_messages = Messages ? Messages : null;\n        }\n    }\n    /**\n     * Construye un parser a partir de otro\n     *\n     * @param Source Sentencia parseada original a partir de la que se compone\n     *               esta.\n     */\n    SqlParserFromParser(Source) {\n        // M11051201: Mecanismo para soporte multilenguaje en los componentes y dem�s cosas.\n        this.m_messages = Source.getMessageHolder();\n        this.m_strRowIdFieldName = Source.GetRowIdFieldName();\n        this.m_sqlType = Source.GetSqlType();\n        this.m_lstFields = new Hashtable();\n        // A12042602: Permitir que se puedan almacenar los tipos de datos de una sentencia SQL.\n        this.m_lstFieldsType = new Hashtable();\n        this.m_strTable = Source.GetTableName();\n        this.m_strWhere = Source.GetWhereSentence();\n        // Copiar los campos\n        Source.GetFields().entrySet().forEach(entry => this.m_lstFields.put(entry[0], entry[1]));\n        // Enumeration<String> enm = setHash.keys();\n        // while (enm.hasMoreElements()) {// Recorrer la lista\n        //     String strKey = enm.nextElement();\n        //     String strVal = setHash.get(strKey);\n        //     this.m_lstFields.put(strKey, strVal);\n        // }// Leer datos y copiar\n        this.m_strSentence = Source.GetSentence();\n        this.m_lstSelectFields = new Vector();\n    }\n    /**\n     * @return Devuelve el nombre del campo ROWID de este parser.\n     */\n    GetRowIdFieldName() {\n        return this.m_strRowIdFieldName;\n    }\n    /**\n     * Asigna el nombre del campo ROWID de este parser\n     *\n     * @param value Nuevo valor para el nombre del campo ROWID.\n     */\n    SetRowIdFieldName(value) {\n        this.m_strRowIdFieldName = value;\n    }\n    /**\n     * @return Devuelve la sentencia WHERE de este parser.\n     */\n    GetWhereSentence() {\n        var _a;\n        return (_a = this.m_strWhere) === null || _a === void 0 ? void 0 : _a.replace(\"*\", \"\"); // amiyares 18/06/2021: el parser falla y agrega en la condición un * que explota la llamada a la API, comentar con Luis a ver si podemos quitar parseos locales\n    }\n    /**\n     * M11051201: Mecanismo para soporte multilenguaje en los componentes y\n     * dem�s cosas. Devuelve el holder de mensajes de este parser...\n     */\n    getMessageHolder() {\n        return this.m_messages;\n    }\n    /**\n     * Asigna la sentencia WHERE de este parser\n     *\n     * @param value Nuevo valor para la sentencia WHERE del parser.\n     */\n    SetWhereSentence(value) {\n        this.m_strWhere = value.toString();\n    }\n    /**\n     * @return Devuelve el ROWID de este parser.\n     */\n    GetRowId() {\n        let strRID = null;\n        let n, k;\n        //\n        // Si ya lo tiene, lo devuelve...\n        if (!TextUtils.isEmpty(this.m_strRowId)) {\n            return this.m_strRowId;\n        }\n        //\n        // Si no, habr� que buscarlo...\n        if (this.m_lstFields.containsKey(this.m_strRowIdFieldName)) {\n            strRID = this.m_lstFields.get(this.m_strRowIdFieldName);\n        }\n        if (TextUtils.isEmpty(strRID)) { // Buscarlo en el WHERE\n            strRID = this.GetWhereSentence();\n            // ADD TAG Juan Carlos. Chequeos extra.\n            // Tiene WHERE\n            if (!TextUtils.isEmpty(strRID)) {\n                n = strRID.indexOf(\"'\");\n                k = strRID.indexOf(\"'\", n + 1);\n                strRID = strRID.substring(n + 1, k); /* substring OK */\n            } // Tiene WHERE\n        } // Buscarlo en el WHERE\n        else {\n            strRID = StringUtils.removeChars(strRID, \"'\");\n        }\n        //\n        // Sea lo que sea, lo tiene...\n        if (!TextUtils.isEmpty(strRID)) {\n            this.m_strRowId = strRID;\n        }\n        //\n        // Devolverlo\n        return this.m_strRowId;\n    }\n    /**\n     * Expone la lista de campos de la sentencia parseada\n     *\n     * @return Devuelve la lista de campos de una sentencia INSERT o UPDATE.\n     */\n    GetFields() {\n        return this.m_lstFields;\n    }\n    /**\n     * @return Devuelve el tipo de operaci�n que tiene este parser.\n     */\n    GetSqlType() {\n        return this.m_sqlType;\n    }\n    /**\n     * Asigna el tipo de operaci�n que tiene este parser\n     *\n     * @param value Nuevo valor para el tipo de sentencia SQL.\n     */\n    SetSqlType(value) {\n        this.m_sqlType = value;\n    }\n    /**\n     * Expone el nombre de la tabla de esta sentencia\n     *\n     * @return Devuelve el nombre de la tabla de una sentencia de modificaci�n\n     * (INSERT, UPDATE o DELETE)\n     */\n    GetTableName() {\n        return this.m_strTable;\n    }\n    /**\n     * Asigna el nombre de la tabla de esta sentencia de modificaci�n.\n     *\n     * @param value Nuevo valor para el nombre de la tabla en la sentencia de\n     *              modificaci�n.\n     */\n    SetTableName(value) {\n        this.m_strTable = value;\n    }\n    /**\n     * M09072901: Permitir que se puedan traducir los joins a formato where en\n     * blackberry Devuelve el valor de la bandera que indica si se traducen las\n     * uniones o no.\n     */\n    getTranslateJoins() {\n        return this.m_bTranslateJoins;\n    }\n    /**\n     * M09072901: Permitir que se puedan traducir los joins a formato where en\n     * blackberry Asigna valor a la bandera que indica si hay que traducir las\n     * uniones o no.\n     */\n    setTranslateJoins(value) {\n        this.m_bTranslateJoins = value;\n    }\n    /**\n     * F12110902: Modificaciones al parser de SQL para gestionar uniones.\n     *\n     * @return Devuelve TRUE si las sentencias que forman una uni�n se encierran\n     * entre par�ntesis.\n     */\n    getSurroundUnions() {\n        return this.m_bSurroundUnions;\n    }\n    /**\n     * F12110902: Modificaciones al parser de SQL para gestionar uniones. Asigna\n     * valor a la bandera que indica si las uniones se encierran entre\n     * par�ntesis.\n     *\n     * @param value Nuevo valor para la banderilla.\n     */\n    setSurroundUnions(value) {\n        this.m_bSurroundUnions = value;\n    }\n    /**\n     * Expone la cadena que se ha parseado en este objeto.\n     *\n     * @return Devuelve la sentencia completa, tal como se pas� a ParseSql\n     */\n    GetSentence() {\n        return this.m_strSentence || \"\";\n    }\n    /**\n     * TRUE si el query es una uni�n (solo para SELECT)\n     *\n     * @return Devuelve la bandera que indica si el SELECT es una uni�n.\n     */\n    getIsUnionQuery() {\n        return this.m_bIsUnionQuery;\n    }\n    /**\n     * Adiciona a esta sentencia las parejas campo/valor del SQL que se pasa\n     * como par�metro.\n     *\n     * @param Source Sentencia parseada que se usa como origen de la copia.\n     * @param Force  TRUE si se quiere forzar la copia (los valores de Source\n     *               siempre sobreescriben los locales) FALSE si solo se copian los\n     *               valores de Source que no est�n en el local.\n     * @return Devuelve TRUE si la operaci�n es correcta.\n     * @throws ReplicationException\n     */\n    AddFields(Source, Force) {\n        //let strField:string, strValue:string;\n        try {\n            //\n            // Copiar los campos\n            Source.GetFields().entrySet().forEach(entry => {\n                if ((!Force && !this.m_lstFields.containsKey(entry[0])) || Force) {\n                    this.SetFieldValue(entry[0], entry[1]);\n                }\n            });\n            // Enumeration<String> enm = Source.GetFields().keys();\n            // while (enm.hasMoreElements()) {// Recorrer la lista\n            //     strField = enm.nextElement();\n            //     strValue = Source.GetFields().get(strField);\n            //     if ((!Force && !this.m_lstFields.containsKey(strField)) || Force) {\n            //         SetFieldValue(strField, strValue);\n            //     }\n            // }// Revisa los campos del SQL origen\n            return true;\n        }\n        catch (e) {\n            // M11051201: Mecanismo para soporte multilenguaje en los componentes y dem�s cosas.\n            ////throw new ReplicationException(ReplicationErrorCodes.RPLR_DATA_ERROR, e.getMessage(), \"Error adicionando campos a la operaci�n.\");\n            throw e;\n            //  new Exception(\n            //         GetMessage(XoneMessageKeys.SYS_MSG_SQL_ADDFIELDERROR, \"Error adding fields to the operation.\"));\n        }\n    }\n    /**\n     * Serializa el parser en un arreglo de bytes y lo devuelve.\n     *\n     * @return Devuelve el arreglo de bytes correspondiente al parser\n     * serializado.\n     * @throws IOException\n     */\n    // TODO: Esto creo que no hace falta\n    // public byte[] Serialize() throws IOException {\n    //     LittleEndianDataOutputStream bw = new LittleEndianDataOutputStream();\n    //     //\n    //     // Ahora escribimos nuestras cositas\n    //     bw.writeByte((byte) 0x4a);\n    //     bw.writeByte((byte) 0x4c);\n    //     // El c�digo de la operaci�n\n    //     bw.writeByte((byte) m_sqlType);\n    //     // El tama�o del Table\n    //     StringUtils.SerializeString(m_strTable, bw);\n    //     // ROWID\n    //     StringUtils.SerializeString(m_strRowId, bw);\n    //     // WHERE\n    //     StringUtils.SerializeString(m_strWhere, bw);\n    //     // Y finalmente serializar la lista de campos\n    //     Enumeration<String> e = m_lstFields.keys();\n    //     bw.writeInt(m_lstFields.size());\n    //     while (e.hasMoreElements()) {// Recorrer y copiar\n    //         String strFieldName = e.nextElement();\n    //         String strFieldValue = m_lstFields.get(strFieldName);\n    //         for (int i = 0; i < strFieldName.length; i++) {\n    //             bw.writeByte((byte) strFieldName.charAt(i));\n    //         }\n    //         // Separador\n    //         bw.writeByte((byte) 0);\n    //         // Valor\n    //         if (!TextUtils.isEmpty(strFieldValue)) {// Ahora el valor\n    //             for (int i = 0; i < strFieldValue.length; i++) {\n    //                 bw.writeByte((byte) strFieldValue.charAt(i));\n    //             }\n    //         }// Ahora el valor\n    //         // Separador\n    //         bw.writeByte((byte) 0);\n    //     }// Recorrer y copiar\n    //     // Devolver lo que sea\n    //     return bw.toByteArray();\n    // }\n    /**\n     * Dado un buffer binario, lee de �l los datos y los coloca en sus campos.\n     *\n     * @param Source Fuente de datos en la que viene el parser serializado.\n     * @return Devuelve TRUE si se pueden leer correctamente los datos del\n     * parser.\n     * @throws IOException\n     */\n    // TODO: Esto creo que no es necesario\n    // public boolean Deserialize(byte[] Source) throws IOException {\n    //     // Inicializar las estructuras\n    //     BeginParse();\n    //     // Primeramente comprobar el tama�o m�nimo\n    //     if (Source == null) {\n    //         throw new IOException(\n    //                 \"Error de datos. El buffer de origen es nulo.\");\n    //     }\n    //     if (Source.length < 22) {\n    //         return false; // Error, demasiado pocos datos\n    //     }\n    //     // Ahora comprobar la versi�n de la cabecera\n    //     ByteArrayInputStream bs = new ByteArrayInputStream(Source);\n    //     LittleEndianDataInputStream reader = new LittleEndianDataInputStream(bs);\n    //     int index;\n    //     // Cabecera\n    //     byte b = reader.readByte();\n    //     if (b != 0x4a) {\n    //         return false; // Error\n    //     }\n    //     if (0x4c != reader.readByte()) {\n    //         return false; // Error\n    //     }\n    //     // Ahora leer el tipo de operaci�n\n    //     m_sqlType = (int) reader.readByte();\n    //     index = 3;\n    //     // Traer la tabla\n    //     int nLen = reader.readInt();\n    //     index += 4;\n    //     m_strTable = \"\";\n    //     do {\n    //         if (0 != (b = reader.readByte())) {\n    //             m_strTable += (char) b;\n    //         }\n    //         index++;\n    //     } while (b != 0);\n    //     // Si el largo de la cadena no es correcto, nos explotamos\n    //     if (nLen != m_strTable.length) {\n    //         return false;\n    //     }\n    //     // Traer el ROWID\n    //     nLen = reader.readInt();\n    //     index += 4;\n    //     m_strRowId = \"\";\n    //     if (nLen > 0) {// El ROWID podr�a venir vac�o\n    //         do {\n    //             if (0 != (b = reader.readByte())) {\n    //                 m_strRowId += (char) b;\n    //             }\n    //             index++;\n    //         } while (b != 0);\n    //         // Comprobar el largo\n    //     }// El ROWID podr�a venir vac�o\n    //     else {\n    //         reader.readByte(); // El separador habr� que leerlo igual\n    //     }\n    //     if (nLen != m_strRowId.length) {\n    //         return false;\n    //     }\n    //     // Traer el WHERE\n    //     nLen = reader.readInt();\n    //     index += 4;\n    //     m_strWhere = \"\";\n    //     if (nLen > 0) {// Los INSERT no traen WHERE\n    //         do {\n    //             if (0 != (b = reader.readByte())) {\n    //                 m_strWhere += (char) b;\n    //             }\n    //             index++;\n    //         } while (b != 0);\n    //     }// Los INSERT no traen WHERE\n    //     else {\n    //         reader.readByte(); // EL separador habr� que leerlo igual\n    //     }\n    //     // Comprobar el largo\n    //     if (nLen != m_strWhere.length) {\n    //         return false;\n    //     }\n    //     // Y ahora la lista de campos\n    //     int nCount = reader.readInt();\n    //     for (int i = 0; i < nCount; i++) {// Leer esa cantidad de parejas\n    //         String strKey = \"\";\n    //         String strVal = \"\";\n    //         do {// Leer la clave\n    //             if (0 != (b = reader.readByte())) {\n    //                 strKey += (char) b;\n    //             }\n    //         } while (b != 0);\n    //         do {// Leer el valor\n    //             if (0 != (b = reader.readByte())) {\n    //                 strVal += (char) b;\n    //             }\n    //         } while (b != 0);\n    //         //\n    //         // Adicionar a la lista\n    //         m_lstFields.put(strKey, strVal);\n    //     }// Leer esa cantidad de parejas\n    //     // Ahora comprobar si no hay ROWID, porque podr�a estar en la lista de campos\n    //     if (TextUtils.isEmpty(m_strRowId)) {\n    //         m_strRowId = GetRowId();\n    //     }\n    //     return true;\n    // }\n    /**\n     * Inicializa las variables para comenzar el parsing de una cadena\n     */\n    BeginParse() {\n        this.m_nParserIndex = 0;\n        this.m_strCurrentToken = null;\n        this.m_lstFields = new Hashtable(); // Crear una nueva para limpiar lo que haya\n        this.m_strTable = null;\n        this.m_strWhere = \"\"; // Cadena vac�a porque es para concatenar...\n        this.m_strRowId = null;\n    }\n    /**\n     * TRUE si el campo en cuesti�n existe en el parser\n     *\n     * @param Field Campo cuya existencia se quiere comprobar\n     * @return Devuelve TRUE si e lcampo existe en esta estructura de datos.\n     */\n    FieldExists(Field) {\n        return this.m_lstFields.containsKey(Field);\n    }\n    /**\n     * Devuelve el valor de un campo de una sentencia SQL de modificaci�n\n     * (INSERT o UPDATE)\n     *\n     * @param Field Campo cuyo valor se quiere obtener.\n     * @return Devuelve el valor del campo que se indica como par�metro...\n     */\n    GetFieldValue(Field) {\n        if (!this.m_lstFields.containsKey(Field)) {\n            return null;\n        }\n        return this.m_lstFields.get(Field);\n    }\n    /**\n     * @return Devuelve un token que puede estar precedido por separadores.\n     */\n    GetNextSpacedToken() {\n        let strToken = null;\n        while (this.m_nParserIndex < this.m_strSentence.length) { // Mientras haya algo que rapi�ar\n            strToken = this.GetNextToken();\n            if (strToken.localeCompare(\" \") == 0 || strToken.localeCompare(\"\\t\") == 0 || strToken.localeCompare(\"\\n\") == 0 || strToken.localeCompare(\"\\r\") == 0) {\n                continue; // Cagarse en los separadores...\n            }\n            break;\n        } // Mientras haya algo que rapi�ar\n        return strToken;\n    }\n    /**\n     * Obtiene el siguiente token de la cadena que se tiene en el parser...\n     *\n     * @return Devuelve el siguiente token de la sentencia de modificaci�n de\n     * datos que se est� parseando.\n     */\n    GetNextToken() {\n        let ch;\n        /*\n         * ADD TAG 29/07/2016\n         * El uso de String en esta funcion provocaba cientos de ciclos de recoleccion de basura en\n         * esta funcion, en tokens gigantes. Lo cambio por StringBuilder, la mejora de velocidad es\n         * notable\n         */\n        let strToken = new StringBuilder();\n        let bStringToken = false;\n        //\n        // El token actual se obtiene desde el puntero marcado hasta el siguiente separador\n        while (this.m_nParserIndex < this.m_strSentence.length) { // Esto indicar�a fin de cadena\n            ch = this.m_strSentence.charAt(this.m_nParserIndex++);\n            if (ch == '\\'') { // Puede ser un inicio de cadena\n                if (!bStringToken) {\n                    bStringToken = true; // Empieza una cadena\n                }\n                else { // Puede que la cadena termine\n                    if (this.m_nParserIndex > this.m_strSentence.length) { // Error\n                        // M11051201: Mecanismo para soporte multilenguaje en los componentes y dem�s cosas.\n                        ////throw new Exception(\"Error de sintaxis en la sentencia SQL\");\n                        throw new IllegalArgumentException(this.GetMessage(XoneMessageKeys.SYS_MSG_SQL_SYNTAXERROR, \"Syntax error in SQL Sentence.\"));\n                    } // Error\n                    //\n                    // Obtener el siguiente para ver si es un doble ap�strofe\n                    if (this.m_nParserIndex < this.m_strSentence.length) { // Vienen cosas detr�s\n                        if (this.m_strSentence.charAt(this.m_nParserIndex) == '\\'') { // Sumar este y el siguiente\n                            strToken.append(ch);\n                            this.m_nParserIndex++;\n                        } // Sumar este y el siguiente\n                        else { // Termina una cadena\n                            strToken.append(ch);\n                            ////return (m_strCurrentToken = strToken);\n                            break;\n                        } // Termina una cadena\n                    } // Vienen cosas detr�s\n                    else { // Termina una cadena\n                        strToken.append(ch);\n                        ////return (m_strCurrentToken = strToken);\n                        break;\n                    } // Termina una cadena\n                } // Puede que la cadena termine\n            } // Puede ser un inicio de cadena\n            else { // No es una comilla\n                if (!bStringToken) { // Los separadores dentro de las cadenas son cagables\n                    if (this.IsSeparator(ch)) { // Si no hay nada, este es el token\n                        if (strToken.length() > 0) { // Patr�s y devolverlo\n                            this.m_nParserIndex--;\n                            return (this.m_strCurrentToken = strToken).toString();\n                        } // Patr�s y devolverlo\n                        this.m_strCurrentToken = new StringBuilder().append(ch);\n                        return this.m_strCurrentToken.toString();\n                    } // Si no hay nada, este es el token\n                } // Los separadores dentro de las cadenas son cagables\n            } // No es una comilla\n            //\n            // Si no es un separador, suma y sigue\n            strToken.append(ch);\n        } // Esto indicar�a fin de cadena\n        //\n        // Si ten�amos un inicio de token de texto, tiene que estar correctamente terminado\n        if (bStringToken) { // Cadena\n            if (strToken.length() < 2) { // Error\n                // M11051201: Mecanismo para soporte multilenguaje en los componentes y dem�s cosas.\n                ////throw new Exception(\"Error de sintaxis. Cadena sin terminar.\");\n                throw new IllegalArgumentException(this.GetMessage(XoneMessageKeys.SYS_MSG_SQL_INCOMPLETETOKEN, \"Syntax Error. String token incomplete.\"));\n            } // Error\n            if (strToken.charAt(strToken.length() - 1) != '\\'') { // Error\n                // M11051201: Mecanismo para soporte multilenguaje en los componentes y dem�s cosas.\n                ////throw new Exception(\"Error de sintaxis. Cadena sin terminar.\");\n                throw new IllegalArgumentException(this.GetMessage(XoneMessageKeys.SYS_MSG_SQL_INCOMPLETETOKEN, \"Syntax Error. String token incomplete.\"));\n            } // Error\n        } // Cadena\n        //\n        // Si es fin de cadena, devolvemos lo que haya\n        return (this.m_strCurrentToken = strToken).toString();\n    }\n    /**\n     * @return Devuelve un token que puede ser valor para un SET en un UPDATE.\n     */\n    GetNextValueToken() {\n        let strToken;\n        let strValue;\n        let nParOpen = 0;\n        //\n        // El primer token puede comenzar precedido de espacios que aqu� nos cargamos\n        strValue = this.GetNextSpacedToken();\n        // F08080402:   El parser de SQL no reconoce los literales que comienzan con par�ntesis\n        // Puede que directamente el primero sea un par�ntesis\n        if (strValue.equals(\"(\")) {\n            nParOpen++;\n        }\n        //\n        // Ahora coger todo lo que viene detr�s hasta que encontremos un cierre\n        while (this.m_nParserIndex < this.m_strSentence.length) { // Mientras haya cosas en la sentencia\n            strToken = this.GetNextToken();\n            // F08080402:   El parser de SQL no reconoce los literales que comienzan con par�ntesis\n            if (strToken.compareTo(\"(\") == 0) {\n                nParOpen++; // Contar y saltar\n            }\n            else \n            // F08080402:   El parser de SQL no reconoce los literales que comienzan con par�ntesis\n            // Este else no exist�a antes\n            { // Si no es par�ntesis, seguimos\n                if (strToken.compareTo(\")\") == 0) { // Contar y saltar\n                    if (this.m_nParserIndex == this.m_strSentence.length && this.m_status == ParserStatus.PARSER_INSERT_EXPECTING_VALUE) { // Un caso particular\n                        this.m_nParserIndex--;\n                        return strValue;\n                    } // Un caso particular\n                    if (--nParOpen < 0) { // Error\n                        // M11051201: Mecanismo para soporte multilenguaje en los componentes y dem�s cosas.\n                        ////throw new Exception(\"Error de sintaxis\");\n                        throw new IllegalArgumentException(this.GetMessage(XoneMessageKeys.SYS_MSG_SQL_SYNTAXERROR, \"Syntax error in SQL Sentence.\"));\n                    } // Error\n                } // Contar y saltar\n                if (strToken.compareTo(\" \") == 0 && nParOpen == 0) { // Espacio... fin de la coisa\n                    // F08080401:   EL parser SQL.NET no entiende f�rmulas con espacios\n                    // Ver si lo que viene detr�s podr�a ser parte de una f�rmula o algo por el estilo\n                    let strTmpToken = this.PeekNextSpacedToken();\n                    if (strTmpToken.equals(\",\") || this.IsReservedWord(strTmpToken)) { // Pozi... podr�a ser el final\n                        this.m_nParserIndex--;\n                        break;\n                    } // Pozi... podr�a ser el final\n                    // De lo contrario seguir, sumar el valor y considerarlo una f�rmula\n                } // Espacio... fin de la coisa\n                if (strToken.compareTo(\",\") == 0) { // Terminado\n                    // F09072202: Problemas con las f�rmulas con comas\n                    if (nParOpen == 0) { // Completada\n                        this.m_nParserIndex--;\n                        break;\n                    } // Completada\n                } // Terminado\n            } // Si no es par�ntesis, seguimos\n            strValue += strToken;\n        } // Mientras haya cosas en la sentencia\n        return strValue;\n    }\n    /**\n     * @param Token Token que se quiere analizar para comprobar si es una palabra\n     *              reservada.\n     * @return Devuelve TRUE si el token que se pasa como par�metro es una\n     * palabra reservada de SQL.\n     */\n    IsReservedWord(Token) {\n        for (let s in this.m_strReservedWords) { // Cada palabra reservada\n            if (0 == (s.compareToIgnoreCase(Token))) {\n                return true;\n            }\n        } // Cada palabra reservada\n        // De lo contrario otra cosa ser�\n        return false;\n    }\n    /**\n     * @return Devuelve el siguiente token espaciado sin incrementar el contador\n     * de caracteres del parser.\n     */\n    PeekNextSpacedToken() {\n        let strToken = null;\n        let nTmpParserIndex = this.m_nParserIndex;\n        while (nTmpParserIndex < this.m_strSentence.length) { // Mientras haya algo que rapi�ar\n            strToken = this.PeekNextToken(nTmpParserIndex);\n            nTmpParserIndex += strToken.length;\n            if (strToken.equals(\" \") || strToken.equals(\"\\t\") || strToken.equals(\"\\n\") || strToken.equals(\"\\r\")) {\n                continue; // Cagarse en los separadores...\n            }\n            break;\n        } // Mientras haya algo que rapi�ar\n        return strToken;\n    }\n    /**\n     * @param Index Indice a partir del que se quiere empezar a buscar el\n     *              siguiente token.\n     * @return Devuelve el siguiente token de la sentencia sin incrementar el\n     * contador de caracteres del parser.\n     */\n    PeekNextToken(Index) {\n        let ch;\n        let strToken = \"\";\n        let bStringToken = false;\n        //\n        // El token actual se obtiene desde el puntero marcado hasta el siguiente separador\n        let cStringToken = ' ';\n        while (Index < this.m_strSentence.length) { // Esto indicar�a fin de cadena\n            ch = this.m_strSentence.charAt(Index++);\n            if (ch == '\\'' || ch == '\\\"') { // Puede ser un inicio de cadena\n                if (!bStringToken) { // Empieza una cadena\n                    bStringToken = true; // Empieza una cadena\n                    cStringToken = ch;\n                } // Empieza una cadena\n                else { // Puede que la cadena termine\n                    if (Index > this.m_strSentence.length) { // Error\n                        // M11051201: Mecanismo para soporte multilenguaje en los componentes y dem�s cosas.\n                        ////throw new Exception(\"Error de sintaxis en la sentencia SQL\");\n                        throw new IllegalArgumentException(this.GetMessage(XoneMessageKeys.SYS_MSG_SQL_SYNTAXERROR, \"Syntax error in SQL Sentence.\"));\n                    } // Error\n                    // Obtener el siguiente para ver si es un doble ap�strofe\n                    if (Index < this.m_strSentence.length) { // Vienen cosas detr�s\n                        if (this.m_strSentence.charAt(Index) == cStringToken) { // Sumar este y el siguiente\n                            strToken += ch;\n                            Index++;\n                        } // Sumar este y el siguiente\n                        else { // Termina una cadena\n                            strToken += ch;\n                            break;\n                        } // Termina una cadena\n                    } // Vienen cosas detr�s\n                    else { // Termina una cadena\n                        strToken += ch;\n                        break;\n                    } // Termina una cadena\n                } // Puede que la cadena termine\n            } // Puede ser un inicio de cadena\n            else { // No es una comilla\n                if (!bStringToken) { // Los separadores dentro de las cadenas son cagables\n                    if (this.IsSeparator(ch)) { // Si no hay nada, este es el token\n                        if (strToken.length > 0) { // Patr�s y devolverlo\n                            Index--;\n                            return strToken;\n                        } // Patr�s y devolverlo\n                        return \"\" + ch;\n                    } // Si no hay nada, este es el token\n                } // Los separadores dentro de las cadenas son cagables\n            } // No es una comilla\n            // Si no es un separador, suma y sigue\n            strToken += ch;\n        } // Esto indicar�a fin de cadena\n        //\n        // Si ten�amos un inicio de token de texto, tiene que estar correctamente terminado\n        if (bStringToken) { // Cadena\n            if (strToken.length < 2) { // Error\n                // M11051201: Mecanismo para soporte multilenguaje en los componentes y dem�s cosas.\n                ////throw new Exception(\"Error de sintaxis. Cadena sin terminar.\");\n                throw new IllegalArgumentException(this.GetMessage(XoneMessageKeys.SYS_MSG_SQL_INCOMPLETETOKEN, \"Syntax Error. String token incomplete.\"));\n            } // Error\n            if (strToken.charAt(strToken.length - 1) != cStringToken) { // Error\n                // M11051201: Mecanismo para soporte multilenguaje en los componentes y dem�s cosas.\n                ////throw new Exception(\"Error de sintaxis. Cadena sin terminar.\");\n                throw new IllegalArgumentException(this.GetMessage(XoneMessageKeys.SYS_MSG_SQL_INCOMPLETETOKEN, \"Syntax Error. String token incomplete.\"));\n            } // Error\n        } // Cadena\n        //\n        // Si es fin de cadena, devolvemos lo que haya\n        return strToken;\n    }\n    /// TRUE si el par�metro es una f�rmula\n    static IsFormula(Value) {\n        //\n        // Si es una cadena vac�a, est� claro que no es una f�rmula\n        if (SqlParser.EMPTY.equals(Value)) {\n            return false;\n        }\n        //\n        // Si tiene menos de 2 caracteres, tampoco es una f�rmula\n        if (Value.length < 2) {\n            return false;\n        }\n        //\n        // Si est� entre comillas tampoco puede ser una f�rmula...\n        if (Value.charAt(0) == '\\'' && Value.charAt(Value.length - 2) == '\\'') {\n            return false;\n        }\n        //\n        // Ahora hay que buscar si tiene alg�n operador... entonces ser�a una f�rmula\n        //String strTmp =\"+,-,*,/,|,&\";\n        let strOpers = [\"+\", \"-\", \"*\", \"/\", \"|\", \"&\"];\n        for (let s in strOpers) { // Buscar cada uno\n            if (Value.contains(s)) {\n                return true;\n            }\n        } // Buscar cada uno\n        //\n        // Si ha llegado aqu�, entonces no ser� una f�rmula\n        return false;\n    }\n    /**\n     * TRUE si el caracter que se ha pasado como par�metro es un separador\n     *\n     * @param ch Caracter que se quiere analizar.\n     * @return Devuelve TRUE si se trata de un separador.\n     */\n    IsSeparator(ch) {\n        switch (ch) {\n            case ' ':\n            case ',':\n            case '\\t':\n            case '\\r':\n            case '\\n':\n            case '(':\n            case ')':\n            case '+':\n            case '-':\n            case '*':\n            case '/':\n            case '=':\n            case '|':\n            case '&':\n                return true;\n            default:\n                return false;\n        }\n    }\n    /// Normaliza el SQL que tiene dentro\n    Normalize(bNormalize) {\n        //\n        // Si ya est� normalizado no tenemos nada que hacer...\n        if (this.m_strRowIdFieldName.compareTo(\"ROWID\") == 0) {\n            return true;\n        }\n        let strSrcFld = bNormalize ? \"ROWID\" : this.m_strRowIdFieldName;\n        let strDstFld = bNormalize ? this.m_strRowIdFieldName : \"ROWID\";\n        switch (this.m_sqlType) {\n            case SqlType.SQLTYPE_UPDATE:\n            case SqlType.SQLTYPE_DELETE:\n                let strVal = this.m_strWhere;\n                if (!SqlParser.EMPTY.equals(strVal)) { // Tiene valor\n                    // F07121401:   La normalizaci�n de sentencias SQL se traga el WHERE\n                    // Incluir el WHERE en la sentencia... vaya palet� pordi�...\n                    strVal = String.format(\" WHERE %s='%s'\", strSrcFld, this.GetRowId());\n                    this.SetWhereSentence(strVal);\n                } // Tiene valor\n                break;\n            case SqlType.SQLTYPE_INSERT:\n                if (this.m_lstFields.containsKey(strDstFld)) { // Cambiarlo\n                    strVal = this.m_lstFields.get(strDstFld);\n                    this.m_lstFields.delete(strDstFld);\n                    this.m_lstFields.put(strSrcFld, strVal);\n                } // Cambiarlo\n                break;\n        }\n        //\n        // Cambiar el nombre del ROWID\n        this.m_strRowIdFieldName = strSrcFld;\n        return true;\n    }\n    /**\n     * Parsea una cadena INSERT\n     *\n     * @return Devuelve TRUE si la sentencia se parsea correctamente.\n     */\n    ParseInsertStatement() {\n        let strToken;\n        let lstFields = null, lstValues = null;\n        if (this.m_status != ParserStatus.PARSER_KEYWORD) {\n            return false;\n        }\n        try {\n            this.m_status = ParserStatus.PARSER_INSERT_EXPECTING_INTO;\n            while (this.m_nParserIndex < this.m_strSentence.length) { // Mientras queden cosas\n                switch (this.m_status) {\n                    case ParserStatus.PARSER_INSERT_EXPECTING_INTO:\n                        strToken = this.GetNextSpacedToken();\n                        if (0 != (strToken.compareToIgnoreCase(\"into\"))) {\n                            return false; // Error de sintaxis\n                        }\n                        this.m_status = ParserStatus.PARSER_INSERT_EXPECTING_TABLE;\n                        break;\n                    case ParserStatus.PARSER_INSERT_EXPECTING_TABLE:\n                        this.m_strTable = this.GetNextSpacedToken();\n                        this.m_status = ParserStatus.PARSER_INSERT_EXPECTING_FIELDS_BEGIN;\n                        break;\n                    case ParserStatus.PARSER_INSERT_EXPECTING_FIELDS_BEGIN:\n                        strToken = this.GetNextSpacedToken();\n                        if (strToken.compareTo(\"(\") != 0) {\n                            return false; // Error de sintaxis\n                        }\n                        this.m_status = ParserStatus.PARSER_INSERT_EXPECTING_FIELD_NAME;\n                        lstFields = new Array();\n                        lstValues = new Array();\n                        break;\n                    case ParserStatus.PARSER_INSERT_EXPECTING_FIELD_NAME:\n                        strToken = this.GetNextSpacedToken();\n                        if (strToken.compareTo(\",\") == 0) {\n                            return false; // Error\n                        }\n                        // Adicionar el nombre del campo\n                        // F12050308: Acondicionar los tokens en el parsing de sentencias SQL.\n                        // Un poco de trim por favor\n                        lstFields.push(strToken.trim());\n                        this.m_status = ParserStatus.PARSER_INSERT_EXPECTING_FIELD_SEPARATOR;\n                        break;\n                    case ParserStatus.PARSER_INSERT_EXPECTING_FIELD_SEPARATOR:\n                        strToken = this.GetNextSpacedToken();\n                        if (strToken.compareTo(\",\") == 0) { // Esperar el siguiente campo\n                            this.m_status = ParserStatus.PARSER_INSERT_EXPECTING_FIELD_NAME;\n                            break;\n                        } // Esperar el siguiente campo\n                        if (strToken.compareTo(\")\") == 0) { // Ahora vienen los valores\n                            this.m_status = ParserStatus.PARSER_INSERT_EXPECTING_VALUES;\n                            break;\n                        } // Ahora vienen los valores\n                        //\n                        // Cualquier otra cosa es un error\n                        return false;\n                    case ParserStatus.PARSER_INSERT_EXPECTING_VALUES:\n                        strToken = this.GetNextSpacedToken();\n                        if (0 != (strToken.compareToIgnoreCase(\"values\"))) {\n                            return false; // Error\n                        }\n                        this.m_status = ParserStatus.PARSER_INSERT_EXPECTING_VALUES_BEGIN;\n                        break;\n                    case ParserStatus.PARSER_INSERT_EXPECTING_VALUES_BEGIN:\n                        strToken = this.GetNextSpacedToken();\n                        if (strToken.compareTo(\"(\") != 0) {\n                            return false;\n                        }\n                        this.m_status = ParserStatus.PARSER_INSERT_EXPECTING_VALUE;\n                        break;\n                    case ParserStatus.PARSER_INSERT_EXPECTING_VALUE:\n                        strToken = this.GetNextValueToken();\n                        if (strToken.compareTo(\",\") == 0) {\n                            return false;\n                        }\n                        // F12050308: Acondicionar los tokens en el parsing de sentencias SQL.\n                        lstValues.push(strToken.trim());\n                        this.m_status = ParserStatus.PARSER_INSERT_EXPECTING_VALUE_SEPARATOR;\n                        break;\n                    case ParserStatus.PARSER_INSERT_EXPECTING_VALUE_SEPARATOR:\n                        strToken = this.GetNextSpacedToken();\n                        if (strToken.compareTo(\",\") == 0) { // Esperar el siguiente valor\n                            this.m_status = ParserStatus.PARSER_INSERT_EXPECTING_VALUE;\n                            break;\n                        } // Esperar el siguiente valor\n                        if (strToken.compareTo(\")\") == 0) { // Completo\n                            this.m_status = ParserStatus.PARSER_COMPLETE;\n                            break;\n                        } // Completo\n                        return false;\n                    case ParserStatus.PARSER_COMPLETE:\n                        break;\n                    default:\n                        return false;\n                }\n            } // Mientras queden cosas\n            //\n            // Cuadrar campos con valores... tienen que ser la misma cantidad\n            if (lstFields.length != lstValues.length) {\n                return false; // Error de sintaxis\n            }\n            let strField, strValue;\n            for (let i = 0; i < lstFields.length; i++) { // Revisar cada campo\n                strField = lstFields[i];\n                strValue = lstValues[i];\n                //\n                // De paso, si encontramos el ROWID, ya lo ponemos donde va...\n                if (!TextUtils.isEmpty(this.m_strRowIdFieldName) && strField.compareTo(this.m_strRowIdFieldName) == 0) { // Obtener el ROWID\n                    if (strValue.charAt(0) == '\\'' && strValue.charAt(strValue.length - 1) == '\\'') {\n                        this.m_strRowId = strValue.substring(1, strValue.length - 1); /*\n                         * substring\n                         * OK\n                         */\n                    }\n                    else { // Comprobar si es la palabra reservada NULL\n                        // F12080902: Problemas con el parser de SQL cuando el ROWID=NULL.\n                        if (strValue.compareToIgnoreCase(SqlParser.NULL_VALUE) == 0) { // ROWID nulo\n                            this.m_strRowId = strValue = null;\n                        } // ROWID nulo\n                        else {\n                            this.m_strRowId = strValue;\n                        }\n                    } // Comprobar si es la palabra reservada NULL\n                } // Obtener el ROWID\n                // Guardar la parejita...\n                // F12080902: Problemas con el parser de SQL cuando el ROWID=NULL.\n                if (!StringUtils.IsEmptyString(strValue)) {\n                    this.m_lstFields.put(strField, strValue);\n                }\n            } // Revisar cada campo\n            this.m_sqlType = SqlType.SQLTYPE_INSERT;\n            return true;\n        }\n        catch (e) {\n            e.printStackTrace();\n            return false;\n        }\n    }\n    /**\n     * Parsea una cadena DELETE\n     *\n     * @return Devuelve TRUE si la sentencia se parsea correctamente.\n     */\n    ParserDeleteStatement() {\n        let strToken;\n        let bRowIdField = false;\n        let bNextValueIsRowId = false;\n        if (this.m_status != ParserStatus.PARSER_KEYWORD) {\n            return false;\n        }\n        try {\n            //\n            // Ahora hay que ir cogiendo tokens\n            this.m_status = ParserStatus.PARSER_DELETE_EXPECTING_FROM;\n            while (this.m_nParserIndex < this.m_strSentence.length) { // Mientras sepa que quedan cosas\n                switch (this.m_status) {\n                    case ParserStatus.PARSER_DELETE_EXPECTING_FROM:\n                        strToken = this.GetNextSpacedToken();\n                        //\n                        // Si es una palabra, tiene que ser FROM\n                        if (0 != (strToken.compareToIgnoreCase(\"from\"))) {\n                            return false; // Error de sintaxis\n                        }\n                        //\n                        // cambiar de estado\n                        this.m_status = ParserStatus.PARSER_DELETE_EXPECTING_TABLE;\n                        break;\n                    case ParserStatus.PARSER_DELETE_EXPECTING_TABLE:\n                        strToken = this.GetNextSpacedToken();\n                        this.m_strTable = strToken;\n                        this.m_status = ParserStatus.PARSER_DELETE_EXPECTING_WHERE;\n                        break;\n                    case ParserStatus.PARSER_DELETE_EXPECTING_WHERE:\n                        strToken = this.GetNextSpacedToken();\n                        if (0 != (strToken.compareToIgnoreCase(\"where\"))) {\n                            return false; // Error de sintaxis\n                        }\n                        //\n                        // Cambiar de estado\n                        this.m_strWhere = \"\";\n                        this.m_status = ParserStatus.PARSER_DELETE_WHERE;\n                        break;\n                    case ParserStatus.PARSER_DELETE_WHERE:\n                        //\n                        // Todo lo que viene aqu� es WHERE\n                        strToken = this.GetNextToken();\n                        // Comprobar si sacamos el ROWID de aqu�\n                        if (strToken.compareTo(this.m_strRowIdFieldName) == 0) {\n                            bRowIdField = true;\n                        }\n                        if (bRowIdField) { // El campo anterior era el ROWID\n                            if (strToken.compareTo(\"=\") == 0) {\n                                bNextValueIsRowId = true;\n                            }\n                        } // El campo anterior era el ROWID\n                        if (bNextValueIsRowId) { // Si esto es un valor, es el ROWID\n                            if (strToken.length > 2) { // Valor\n                                if (strToken.charAt(0) == '\\'' && strToken.charAt(strToken.length - 1) == '\\'') {\n                                    this.m_strRowId = strToken.substring(1, strToken.length - 1); /*\n                                     * substring\n                                     * OK\n                                     */\n                                }\n                            } // Valor\n                        } // Si esto es un valor, es el ROWID\n                        this.m_strWhere += strToken;\n                        break;\n                    default:\n                        return false; // Error malio malio\n                }\n            } // Mientras sepa que quedan cosas\n            //\n            // Al final arreglamos el WHERE\n            if (!SqlParser.EMPTY.equals(this.m_strWhere)) {\n                this.m_strWhere = \" WHERE \" + this.m_strWhere;\n            }\n            //\n            this.m_sqlType = SqlType.SQLTYPE_DELETE;\n            return true;\n        }\n        catch (e) {\n            e.printStackTrace();\n            return false;\n        }\n    }\n    /**\n     * Parsea una cadena UPDATE\n     *\n     * @return Devuelve TRUE si la sentencia se parsea correctamente.\n     */\n    ParseUpdateStatement() {\n        let strToken;\n        let strField = null, strValue;\n        let bNextValueIsRowId = false;\n        let bRowIdField = false;\n        try {\n            if (this.m_status != ParserStatus.PARSER_KEYWORD) {\n                return false;\n            }\n            this.m_status = ParserStatus.PARSER_UPDATE_EXPECTING_TABLE;\n            while (this.m_nParserIndex < this.m_strSentence.length) { // Mientras la cadena tenga cosas\n                switch (this.m_status) {\n                    case ParserStatus.PARSER_UPDATE_EXPECTING_TABLE:\n                        this.m_strTable = this.GetNextSpacedToken();\n                        this.m_status = ParserStatus.PARSER_UPDATE_EXPECTING_SET;\n                        break;\n                    case ParserStatus.PARSER_UPDATE_EXPECTING_SET:\n                        strToken = this.GetNextSpacedToken();\n                        if (0 != strToken.compareToIgnoreCase(\"set\")) {\n                            return false;\n                        }\n                        this.m_status = ParserStatus.PARSER_UPDATE_EXPECTING_FIELD_NAME;\n                        break;\n                    case ParserStatus.PARSER_UPDATE_EXPECTING_FIELD_NAME:\n                        strField = this.GetNextSpacedToken();\n                        this.m_status = ParserStatus.PARSER_UPDATE_EXPECTING_EQUAL_SIGN;\n                        break;\n                    case ParserStatus.PARSER_UPDATE_EXPECTING_EQUAL_SIGN:\n                        strToken = this.GetNextSpacedToken();\n                        if (strToken.compareTo(\"=\") != 0) {\n                            return false;\n                        }\n                        this.m_status = ParserStatus.PARSER_UPDATE_EXPECTING_FIELD_VALUE;\n                        break;\n                    case ParserStatus.PARSER_UPDATE_EXPECTING_FIELD_VALUE:\n                        strValue = this.GetNextValueToken();\n                        //\n                        // Guardar en la lista\n                        this.m_lstFields.put(strField, strValue);\n                        this.m_status = ParserStatus.PARSER_UPDATE_EXPECTING_SEPARATOR;\n                        break;\n                    case ParserStatus.PARSER_UPDATE_EXPECTING_SEPARATOR:\n                        strToken = this.GetNextSpacedToken();\n                        if (0 == strToken.compareToIgnoreCase(\"where\")) { // Final\n                            this.m_status = ParserStatus.PARSER_UPDATE_WHERE;\n                            break;\n                        } // Final\n                        if (strToken.compareTo(\",\") != 0) {\n                            return false; // Error de sintaxis\n                        }\n                        //\n                        // Si es una coma, entonces nos vamos al siguiente\n                        strField = null;\n                        this.m_status = ParserStatus.PARSER_UPDATE_EXPECTING_FIELD_NAME;\n                        break;\n                    case ParserStatus.PARSER_UPDATE_EXPECTING_WHERE:\n                        strToken = this.GetNextSpacedToken();\n                        if (0 != strToken.compareToIgnoreCase(\"where\")) {\n                            return false; // Error de sintaxis\n                        }\n                        this.m_status = ParserStatus.PARSER_UPDATE_WHERE;\n                        break;\n                    case ParserStatus.PARSER_UPDATE_WHERE:\n                        //\n                        // Todo lo que viene es WHERE\n                        strToken = this.GetNextToken();\n                        if (strToken.compareTo(this.m_strRowIdFieldName) == 0) {\n                            bRowIdField = true;\n                        }\n                        if (bRowIdField) { // El campo anterior era el ROWID\n                            if (strToken.compareTo(\"=\") == 0) {\n                                bNextValueIsRowId = true;\n                            }\n                        } // El campo anterior era el ROWID\n                        if (bNextValueIsRowId) { // Si esto es un valor, es el ROWID\n                            if (strToken.length > 2) { // Valor\n                                if (strToken.charAt(0) == '\\'' && strToken.charAt(strToken.length - 1) == '\\'') {\n                                    this.m_strRowId = strToken.substring(1, strToken.length - 1); /*\n                                     * substring\n                                     * OK\n                                     */\n                                }\n                            } // Valor\n                        } // Si esto es un valor, es el ROWID\n                        //\n                        // Por dem�s todo se suma al WHERE\n                        this.m_strWhere += strToken;\n                        break;\n                    default:\n                        return false; // Error de sintaxis\n                }\n            } // Mientras la cadena tenga cosas\n            //\n            // Al final arreglamos el WHERE\n            if (!SqlParser.EMPTY.equals(this.m_strWhere)) {\n                this.m_strWhere = \" WHERE \" + this.m_strWhere;\n            }\n            this.m_sqlType = SqlType.SQLTYPE_UPDATE;\n            /*\n             * TODO 21/11/2018 Juan Carlos\n             * El parser estaba dando por válidas SQL que no deberían. Debe retornar false en casos\n             * como este: UPDATE GEN_USUARIOS SET TESTN=\n             *\n             * De lo contrario se llega a explotar mucho más tarde en el código y nos podemos tirar\n             * un buen rato averiguando qué ha pasado.\n             */\n            if (this.m_status == ParserStatus.PARSER_UPDATE_EXPECTING_FIELD_VALUE) {\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            e.printStackTrace();\n            return false;\n        }\n    }\n    /**\n     * Parsea una sentencia SQL y devuelve el tipo obtenido.\n     *\n     * @param Sentence Sentencia SQL que se quiere parsear.\n     * @return Devuelve el tipo de sentencia SQL seg�n el proceso de\n     * interpretaci�n.\n     */\n    ParseSqlString(Sentence) {\n        let strKeyword;\n        let nOpenPars = 0;\n        let bIsPar, bParseOk;\n        //\n        // Inicializar el parser para comenzar el proceso\n        this.m_strSentence = Sentence.trim();\n        this.BeginParse();\n        //\n        do {\n            bIsPar = false;\n            strKeyword = this.GetNextToken();\n            if (strKeyword.compareTo(\"(\") == 0) { // Par�ntesis\n                nOpenPars++;\n                bIsPar = true;\n            } // Par�ntesis\n        } while (bIsPar);\n        //\n        // Aqu� se habr� obtenido una palabra clave de verdad...\n        this.m_status = ParserStatus.PARSER_KEYWORD;\n        let s = strKeyword.toLowerCase();\n        if (s.compareTo(\"insert\") == 0) {\n            bParseOk = this.ParseInsertStatement();\n        }\n        else if (s.compareTo(\"update\") == 0) {\n            bParseOk = this.ParseUpdateStatement();\n        }\n        else if (s.compareTo(\"delete\") == 0) {\n            bParseOk = this.ParserDeleteStatement();\n        }\n        else if (s.equals(\"select\")) {\n            bParseOk = this.ParseSelectStatement();\n        }\n        else {\n            return (this.m_sqlType = SqlType.SQLTYPE_ERROR);\n        }\n        //\n        // Si hubo alg�n error, poner el tipo correcto para indicar dicho error...\n        if (!bParseOk) {\n            return (this.m_sqlType = SqlType.SQLTYPE_ERROR);\n        }\n        //\n        // Si hab�a par�ntesis de apertura hay que balancearlos\n        if (nOpenPars > 0) { // Buscar par�ntesis cerrados\n            do {\n                bIsPar = false;\n                strKeyword = this.GetNextToken();\n                if (strKeyword.compareTo(\")\") == 0) { // OK\n                    nOpenPars--;\n                    bIsPar = true;\n                } // OK\n            } while (bIsPar);\n            //\n            // Si el token era otra cosa, esto es un error\n            if (nOpenPars > 0) {\n                return (this.m_sqlType = SqlType.SQLTYPE_ERROR);\n            }\n        } // Buscar par�ntesis cerrados\n        //\n        // Devolver lo que sea\n        return this.m_sqlType;\n    }\n    /**\n     * Regenera una sentencia DELETE... aqu� hace falta la tabla y el WHERE nada\n     * m�s...\n     *\n     * @return Devuelve la sentencia ya regenerada.\n     */\n    RegenerateDelete() {\n        let strSql = new StringBuilder();\n        if (TextUtils.isEmpty(this.m_strTable)) {\n            return null;\n        }\n        strSql.append(\"DELETE FROM \");\n        strSql.append(this.m_strTable);\n        strSql.append(\" \");\n        strSql.append(this.m_strWhere);\n        return strSql.toString();\n    }\n    /**\n     * Regenera una sentencia INSERT a partir de la lista de campos que hay en\n     * este objeto\n     *\n     * @return Devuelve la sentencia ya regenerada.\n     */\n    RegenerateInsert() {\n        let strFields = new StringBuilder();\n        let strValues = new StringBuilder();\n        let strField, strValue, strSql;\n        //\n        // Si no hay campos, nada que hacer...\n        if (this.m_lstFields.length == 0) {\n            return null;\n        }\n        this.m_lstFields.entrySet().forEach(entry => {\n            if (!SqlParser.EMPTY.equals(strField)) { // Tiene valor\n                if (strFields.length() > 0) { // Las comas\n                    strFields.append(\",\");\n                    strValues.append(\",\");\n                } // Las comas\n                strFields.append(entry[0]);\n                strValues.append(entry[1]);\n            } // Tiene valor\n        });\n        // Enumeration<String> enm = this.m_lstFields.keys();\n        // while (enm.hasMoreElements()) {// Recorrer la lista\n        //     strField = enm.nextElement();\n        //     strValue = this.m_lstFields.get(strField);\n        //     if (!SqlParser.EMPTY.equals(strField)) {// Tiene valor\n        //         if (strFields.length > 0) {// Las comas\n        //             strFields.append(\",\");\n        //             strValues.append(\",\");\n        //         }// Las comas\n        //         strFields.append(strField);\n        //         strValues.append(strValue);\n        //     }// Tiene valor\n        // }// Recorrer la lista\n        if (strFields.length() == 0) {\n            return null;\n        }\n        strSql = String.format(\"INSERT INTO %s (%s) VALUES (%s)\", this.m_strTable, strFields.toString(), strValues.toString());\n        return strSql;\n    }\n    /**\n     * Parsea una sentencia SELECT separando los campos, las tablas con uniones\n     * y dem�s cosillas\n     *\n     * @return Devuelve TRUE si la sentencia se parsea correctamente.\n     */\n    ParseSelectStatement() {\n        let nStep, nOpenPar;\n        let bField = false, bAlias = false, bTable = false;\n        let strToken = \"\", strField = \"\", strAlias = \"\", strTable = \"\", strJoin = \"\";\n        let nTableStep = 0, nJoinOpenPar = 0, nInitPar;\n        // F12042501: Tener en cuenta que las tablas en los selects pueden ser expresiones.\n        let nTableOpenPar = 0;\n        let strPrevToken = \"\";\n        let bAddTable;\n        this.m_nParserIndex = 0;\n        // F11090206: Problemas con los joins sin par�ntesis que tienen expresiones con par�ntesis.\n        let bOpenJoinFormula = false;\n        // K11090501: El parser de SQL no almacena el tipo de JOIN. Deber�a.\n        // Ponemos el join por defecto, que es el que m�s se usa.\n        let jt = eJoinType.eLeftJoin;\n        let nLen = this.m_strSentence.length;\n        if (nLen > 0)\n            return true;\n        for (nStep = nInitPar = nOpenPar = 0; this.m_nParserIndex < nLen;) { // Ir obteniendo los tokens\n            /*\n             * if (!GetNextSQLToken(pQuery, nIndex, &nTokIdxFrom, &nTokIdxTo))\n             * return -1;\n             */\n            //\n            // Obtener el token para procesarlo\n            strToken = this.GetNextSqlToken();\n            //\n            // Ahora ver en qu� posici�n estamos\n            switch (nStep) { // M�quina de estados\n                case 0:\n                    //\n                    // No se ha iniciado la tabla todav�a\n                    if (this.IsSeparator(strToken)) {\n                        break;\n                    }\n                    if (strToken.equals(\"(\")) { // Par�ntesis de apertura\n                        nInitPar++;\n                        break;\n                    } // Par�ntesis de apertura\n                    strToken = strToken.toLowerCase();\n                    if (strToken.equals(\"union\")) { // IR a esperar por un ALL\n                        nStep = 5;\n                        break;\n                    } // IR a esperar por un ALL\n                    //\n                    // Si es un ORDER BY, solo es v�lido si es un UNION QUERY\n                    if (strToken.equals(\"order\")) { // Solo para uniones\n                        if (this.getIsUnionQuery()) {\n                            this.AddUnionQuery();\n                        }\n                        //\n                        // Obtener los datos de ordenamiento\n                        nStep = 4;\n                        strPrevToken = null;\n                        nOpenPar = 0;\n                        break;\n                    } // Solo para uniones\n                    if (!strToken.equals(\"select\")) {\n                        return false;\n                    }\n                    nStep = 1;\n                    nOpenPar = 0;\n                    bField = bAlias = false;\n                    strField = strAlias = strPrevToken = \"\";\n                    break;\n                case 1:\n                    //\n                    // Lista de campos\n                    if (!strToken.equals(\",\") || (strToken.equals(\",\") && nOpenPar > 0)) { // No es una coma\n                        if ((!strToken.equalsIgnoreCase(\"as\") && !strToken.equalsIgnoreCase(\"from\") && !strToken.equalsIgnoreCase(\"distinct\")) || nOpenPar > 0) {\n                            strPrevToken += strToken;\n                        }\n                        if (this.IsSeparator(strToken)) {\n                            break;\n                        }\n                    } // No es una coma\n                    if (strToken.equals(\"(\")) \n                    // Par�ntesis\n                    {\n                        nOpenPar++;\n                    }\n                    if (strToken.equals(\")\")) { // Cierre de par�ntesis\n                        if (--nOpenPar < 0) {\n                            return false;\n                        }\n                    } // Cierre de par�ntesis\n                    //\n                    // Si no es un separador, ver si es una coma\n                    if (nOpenPar == 0) { // Las comas y palabras reservadas, fuera de par�ntesis\n                        if (strToken.equals(\",\")) { // Coma... final de campo\n                            if (!bField) {\n                                return false; // Error\n                            }\n                            if (!bAlias) { // Por si hay algo m�s en el campo\n                                strField = strPrevToken.trim();\n                            } // Por si hay algo m�s en el campo\n                            //\n                            // Adicionar el campo\n                            this.AddField(strField, strAlias);\n                            strField = strAlias = strPrevToken = \"\";\n                            bField = bAlias = false;\n                            break;\n                        } // Coma... final de campo\n                        //\n                        // Distinct tambi�n vale qui�n dijo que no\n                        if (strToken.equalsIgnoreCase(\"distinct\")) { // Distinct\n                            this.m_bDistinct = true;\n                            strPrevToken = \"\";\n                            break;\n                        } // Distinct\n                        // No es una coma, ver si es un FROM... entonces se acab� la lista\n                        if (strToken.equalsIgnoreCase(\"from\")) { // Ahora vendr�n m�s cositas\n                            // Ante todo ver si hay residuos\n                            if (bField) { // Queda un campo, agregarlo, digo yo\n                                if (!bAlias) { // Por si hay algo m�s en el campo\n                                    strField = strPrevToken.trim();\n                                } // Por si hay algo m�s en el campo\n                                this.AddField(strField, strAlias);\n                                bField = false;\n                                strField = strAlias = strPrevToken = \"\";\n                            } // Queda un campo, agregarlo, digo yo\n                            nStep = 2;\n                            nTableStep = 0;\n                            nOpenPar = 0;\n                            bTable = bAlias = false;\n                            break;\n                        } // Ahora vendr�n m�s cositas\n                        //\n                        // No es un from, ni una coma, ser� un AS?\n                        if (strToken.equalsIgnoreCase(\"as\")) { // Si es un AS, deber�a haber empezado el campo hace rato\n                            if (!bField) {\n                                return false; // Error\n                            }\n                            if (bAlias) {\n                                return false; // Error\n                            }\n                            bAlias = true;\n                            // Armar el campo con lo que se tiene hasta el momento\n                            strField = strPrevToken.trim();\n                            strPrevToken = \"\";\n                            break;\n                        } // Si es un AS, deber�a haber empezado el campo hace rato\n                    } // Las comas y palabras reservadas, fuera de par�ntesis\n                    //\n                    // Ni un from ni una coma, ni un AS... pues ser� o el campo o el alias\n                    if (!bField) { // Campo\n                        strField = strToken;\n                        bField = true;\n                    } // Campo\n                    else { // Alias\n                        if (bAlias) {\n                            strAlias = strToken;\n                        }\n                    } // Alias\n                    break;\n                case 2:\n                    //\n                    // Aqu� habr� que actuar en funci�n del paso de tabla en que estemos\n                    switch (nTableStep) {\n                        case 0:\n                            //\n                            // Esperando inicio de tablas\n                            // Inicio de tablas\n                            if (this.IsSeparator(strToken)) {\n                                break;\n                            }\n                            if (strToken.equals(\"(\")) { // Abre par�ntesis\n                                nOpenPar++;\n                                break;\n                            } // Abre par�ntesis\n                            //\n                            // Ver si es una palabra reservada\n                            if (strToken.equalsIgnoreCase(\"order\") || strToken.equalsIgnoreCase(\"left\") || strToken.equalsIgnoreCase(\"right\") || strToken.equalsIgnoreCase(\"inner\") || strToken.equalsIgnoreCase(\"where\") || strToken.equalsIgnoreCase(\"group\")) { // Acaba una tabla\n                                if (!bTable) {\n                                    return false; // Error\n                                }\n                                //\n                                // Adicionar esta tabla. La primera no tiene condici�n\n                                // K11090501: El parser de SQL no almacena el tipo de JOIN. Deber�a.\n                                this.AddTable(strTable, strAlias, strJoin, jt);\n                                strTable = strAlias = strJoin = \"\";\n                                bTable = bAlias = false;\n                                // K11090501: El parser de SQL no almacena el tipo de JOIN. Deber�a.\n                                // Comprobar qu� tipo de join es...\n                                jt = eJoinType.eLeftJoin; // Para el siguiente...\n                                if (strToken.equalsIgnoreCase(\"right\")) {\n                                    jt = eJoinType.eRightJoin;\n                                }\n                                else if (strToken.equalsIgnoreCase(\"inner\")) {\n                                    jt = eJoinType.eInnerJoin;\n                                }\n                                // Si lo que lleg� fue un WHERE, saltar directamente a WHERE\n                                if (strToken.equalsIgnoreCase(\"where\")) { // Aqu� no hay m�s nada\n                                    nOpenPar = 0;\n                                    nStep = 3;\n                                    break;\n                                } // Aqu� no hay m�s nada\n                                // Si lo que lleg� fue un WHERE, saltar directamente a WHERE\n                                if (strToken.equalsIgnoreCase(\"order\")) { // Aqu� no hay m�s nada\n                                    nOpenPar = 0;\n                                    nStep = 4;\n                                    break;\n                                } // Aqu� no hay m�s nada\n                                //\n                                // Si lo que lleg� fue un GROUP saltar directamente a esperar el BY\n                                if (strToken.equalsIgnoreCase(\"group\")) { // Esperar BY\n                                    nStep = 7;\n                                    break;\n                                } // Esperar BY\n                                //\n                                // Pasamos al siguiente paso que ser� esperando el join condition\n                                nTableStep = 1; // Est� en LEFT\n                                break;\n                            } // Acaba una tabla\n                            //\n                            // No es par�ntesis, ser� un nombre de tabla\n                            if (!bTable) { // Tabla\n                                strTable = strToken;\n                                bTable = true;\n                            } // Tabla\n                            else { // Puede ser alias\n                                if (!bAlias) { // Alias\n                                    strAlias = strToken;\n                                    bAlias = true;\n                                } // Alias\n                            } // Puede ser alias\n                            break;\n                        case 1:\n                            //\n                            // Esperando JOIN\n                            if (this.IsSeparator(strToken)) {\n                                break;\n                            }\n                            if (strToken.equalsIgnoreCase(\"outer\")) { // Ahora tiene que esperar JOIN\n                                nTableStep = 2;\n                                break;\n                            } // Ahora tiene que esperar JOIN\n                            if (strToken.equalsIgnoreCase(\"join\")) { // Lleg� el JOIN antes de tiempo\n                                nTableStep = 3;\n                                // F12042501: Tener en cuenta que las tablas en los selects pueden ser expresiones.\n                                // Porque la tabla podr�a ser una expresi�n, no solo un nombre.\n                                strPrevToken = \"\";\n                                nTableOpenPar = 0;\n                                break;\n                            } // Lleg� el JOIN antes de tiempo\n                            //\n                            // Si no, error\n                            return false; // Error\n                        case 2:\n                            //\n                            // Esperando segunda tabla de la uni�n\n                            if (this.IsSeparator(strToken)) {\n                                break;\n                            }\n                            if (strToken.equalsIgnoreCase(\"join\")) { // Lleg� el JOIN antes de tiempo\n                                nTableStep = 3;\n                                // F12042501: Tener en cuenta que las tablas en los selects pueden ser expresiones.\n                                // Porque la tabla podr�a ser una expresi�n, no solo un nombre.\n                                strPrevToken = \"\";\n                                nTableOpenPar = 0;\n                                break;\n                            } // Lleg� el JOIN antes de tiempo\n                            //\n                            // Si no, error\n                            return true; // Error\n                        case 3:\n                            // F12042501: Tener en cuenta que las tablas en los selects pueden ser expresiones.\n                            // Podr�amos estar armando una expresi�n.\n                            // Esperando la segunda tabla\n                            if (this.IsSeparator(strToken)) { // Si estamos dentro de una expresi�n\n                                if (nTableOpenPar == 0) {\n                                    break;\n                                }\n                                else { // Es simplemente otro mais\n                                    strPrevToken += strToken;\n                                    break;\n                                } // Es simplemente otro mais\n                            } // Si estamos dentro de una expresi�n\n                            // Si es un par�ntesis\n                            if (strToken.equals(\"(\")) { // Expresi�n?\n                                nTableOpenPar++;\n                                strPrevToken += strToken;\n                                break;\n                            } // Expresi�n?\n                            if (strToken.equals(\")\")) { // Descontar\n                                if (--nTableOpenPar < 0) { // Error\n                                    return false;\n                                } // Error\n                                // Adicionamos y seguimos\n                                strPrevToken += strToken;\n                                if (nTableOpenPar == 0) { // Se acab� la tabla aqu�\n                                    strTable = strPrevToken;\n                                    bTable = true;\n                                    strPrevToken = \"\";\n                                } // Se acab� la tabla aqu�\n                                break;\n                            } // Descontar\n                            if (nTableOpenPar > 0) { // Simplemente uno mais\n                                strPrevToken += strToken;\n                                break;\n                            } // Simplemente uno mais\n                            if (strToken.equalsIgnoreCase(\"on\")) { // Final de tabla?\n                                nTableStep = 4;\n                                nJoinOpenPar = 0;\n                                strJoin = \"\";\n                                break;\n                            } // Final de tabla?\n                            // Tabla y alias\n                            if (!bTable) { // Tabla\n                                strTable = strToken;\n                                bTable = true;\n                            } // Tabla\n                            else { // No es tabla\n                                if (!bAlias) { // Alias\n                                    strAlias = strToken;\n                                    bAlias = true;\n                                } // Alias\n                                else {\n                                    return false; // Error\n                                }\n                            } // No es tabla\n                            break;\n                        case 4: { // Recogiendo condici�n de JOIN\n                            if (strToken.equals(\"(\")) { // Contar par�ntesis\n                                nJoinOpenPar++;\n                                // F11090206: Problemas con los joins sin par�ntesis que tienen expresiones con par�ntesis.\n                                bOpenJoinFormula = true;\n                            } // Contar par�ntesis\n                            if (strToken.equals(\")\")) { // Cierre de par�ntesis\n                                if (--nJoinOpenPar <= 0) { // Final del Join\n                                    if (!bOpenJoinFormula) { // Final de verdad\n                                        // Si no hay par�ntesis abiertos... error\n                                        if (--nOpenPar < 0) {\n                                            return false; // Error\n                                        }\n                                        if (!bTable) {\n                                            return false; // Error\n                                        }\n                                        // K11090501: El parser de SQL no almacena el tipo de JOIN. Deber�a.\n                                        this.AddTable(strTable, strAlias, strJoin, jt);\n                                        strTable = strAlias = strJoin = \"\";\n                                        bTable = bAlias = false;\n                                        nTableStep = 5;\n                                        break;\n                                    } // Final de verdad\n                                    bOpenJoinFormula = false;\n                                } // Final del Join\n                            } // Cierre de par�ntesis\n                            else { // Podr�a ser un join sin par�ntesis\n                                // F12042502: Falta un caso en joins sin par�ntesis.\n                                // Podr�a ser un join sin par�ntesis para separar las tablas.\n                                if (strToken.equalsIgnoreCase(\"left\") || strToken.equalsIgnoreCase(\"right\") || strToken.equalsIgnoreCase(\"inner\")) { // Ver si no tiene par�ntesis\n                                    if (nOpenPar == 0 && nJoinOpenPar == 0) { // No hay par�ntesis\n                                        if (!bTable) {\n                                            return false; // Error\n                                        }\n                                        // K11090501: El parser de SQL no almacena el tipo de JOIN. Deber�a.\n                                        this.AddTable(strTable, strAlias, strJoin, jt);\n                                        strTable = strAlias = strJoin = \"\";\n                                        bTable = bAlias = false;\n                                        // Analizar cu�l es...\n                                        jt = eJoinType.eLeftJoin; // Para el siguiente...\n                                        if (strToken.equalsIgnoreCase(\"right\")) {\n                                            jt = eJoinType.eRightJoin;\n                                        }\n                                        else if (strToken.equalsIgnoreCase(\"inner\")) {\n                                            jt = eJoinType.eInnerJoin;\n                                        }\n                                        nTableStep = 1;\n                                        break;\n                                    } // No hay par�ntesis\n                                } // Ver si no tiene par�ntesis\n                            } // Podr�a ser un join sin par�ntesis\n                            bAddTable = false;\n                            // Puede que venga un WHERE o cualquier otra cosa como en el caso 5\n                            if (strToken.equalsIgnoreCase(\"where\")) { // Pasar al paso de where\n                                nOpenPar = 0;\n                                nStep = 3;\n                                bAddTable = true;\n                            } // Pasar al paso de where\n                            if (strToken.equalsIgnoreCase(\"group\")) { // Puede que venga la agrupaci�n directamente\n                                nOpenPar = 0;\n                                nStep = 7;\n                                bAddTable = true;\n                            } // Puede que venga la agrupaci�n directamente\n                            if (strToken.equalsIgnoreCase(\"order\")) { // Puede que venga el orden directamente\n                                nOpenPar = 0;\n                                nStep = 4;\n                                bAddTable = true;\n                            } // Puede que venga el orden directamente\n                            if (bAddTable) { // Adicionar la tabla y salir\n                                // K11090501: El parser de SQL no almacena el tipo de JOIN. Deber�a.\n                                this.AddTable(strTable, strAlias, strJoin, jt);\n                                strTable = strAlias = strJoin = \"\";\n                                bTable = bAlias = false;\n                                break;\n                            } // Adicionar la tabla y salir\n                            //\n                            // Lo que sea, lo va sumando en la condici�n JOIN, incluidos los separadores\n                            strJoin += strToken;\n                            break;\n                        }\n                        case 5:\n                            //\n                            // Esperando otro JOIN o UNION o WHERE u ORDER\n                            if (this.IsSeparator(strToken)) {\n                                break;\n                            }\n                            if (strToken.equals(\")\")) { // Par�ntesis final\n                                if (nOpenPar == 0) { // No hay ning�n par�ntesis de JOIN abierto\n                                    if (--nInitPar < 0) {\n                                        return false; // Error\n                                    }\n                                } // No hay ning�n par�ntesis de JOIN abierto\n                                else { // Descontar un par�ntesis.\n                                    strJoin = \"\";\n                                    nOpenPar--;\n                                    break;\n                                } // Descontar un par�ntesis.\n                            } // Par�ntesis final\n                            if (strToken.equalsIgnoreCase(\"left\") || strToken.equalsIgnoreCase(\"right\") || strToken.equalsIgnoreCase(\"inner\")) { // Pasar al siguiente\n                                nTableStep = 1;\n                                break;\n                            } // Pasar al siguiente\n                            //\n                            // Ver si viene WHERE\n                            if (strToken.equalsIgnoreCase(\"where\")) { // Vendr� un WHERE\n                                nOpenPar = 0;\n                                nStep = 3;\n                                break;\n                            } // Vendr� un WHERE\n                            // F11120702: No se reconoce GROUP en una parte de ParseSelectStatement.\n                            // Aqu� tambi�n poder�a de venir un GROUP BY\n                            if (strToken.equalsIgnoreCase(\"group\")) { // Puede que venga la agrupaci�n directamente\n                                nOpenPar = 0;\n                                nStep = 7;\n                                break;\n                            } // Puede que venga la agrupaci�n directamente\n                            // Ver si es una uni�n\n                            if (strToken.equalsIgnoreCase(\"union\")) { // Si hay par�ntesis abiertos error\n                                if (nOpenPar > 0) {\n                                    return false;\n                                }\n                                //\n                                // Cambiar de estado y esperar ALL\n                                nStep = 5;\n                                break;\n                            } // Si hay par�ntesis abiertos error\n                            //\n                            // Puede ser que llegue un ORDER BY en este estado...\n                            if (strToken.equalsIgnoreCase(\"order\")) { // No puede haber par�ntesis abiertos tampoco\n                                if (nOpenPar > 0) {\n                                    return false;\n                                }\n                                //\n                                // Cambiar el estado y esperar BY\n                                nStep = 4;\n                                break;\n                            } // No puede haber par�ntesis abiertos tampoco\n                            break;\n                    }\n                    break;\n                case 3:\n                    //\n                    // Esperando un WHERE\n                    if (strToken.equalsIgnoreCase(\"order\")) { // Ordenamiento\n                        nStep = 4;\n                        this.m_strWhere = strPrevToken.trim();\n                        break;\n                    } // Ordenamiento\n                    //\n                    // Si llega GROUP, pasar a esperar BY\n                    if (strToken.equalsIgnoreCase(\"group\")) { // Agrupaci�n\n                        //\n                        // Si hay par�ntesis desbalanceados, error de sintaxis\n                        if (nOpenPar > 0) \n                        // Error\n                        {\n                            return false;\n                        }\n                        nStep = 7;\n                        this.m_strWhere = strPrevToken.trim();\n                        break;\n                    } // Agrupaci�n\n                    // F12110902: Modificaciones al parser de SQL para gestionar uniones.\n                    // Aqu� podr�a venir una uni�n siempre que el where no est� entre par�ntesis\n                    if (strToken.equalsIgnoreCase(\"union\")) { // UNION\n                        // Si hay par�ntesis abiertos, m�lido\n                        if (nOpenPar > 0) {\n                            return false;\n                        }\n                        this.m_strWhere = strPrevToken.trim();\n                        nStep = 5;\n                        break;\n                    } // UNION\n                    if (strToken.equals(\"(\")) \n                    // Abrir par�ntesis\n                    {\n                        nOpenPar++;\n                    }\n                    //\n                    // Si es un par�ntesis pudiera ser simplemente un cierre\n                    if (strToken.equals(\")\")) { // Cierra par�ntesis\n                        if (nOpenPar == 0) { // Si no hay par�ntesis abierto al inicio\n                            if (--nInitPar < 0) {\n                                return false;\n                            }\n                            //\n                            // Un par�ntesis cerrado puede ser indicio de fin de query... prepararse\n                            // por si las moscas\n                            this.m_strWhere = strPrevToken.trim();\n                            nStep = 0;\n                            break;\n                        } // Si no hay par�ntesis abierto al inicio\n                        if (--nOpenPar == 0) { // Par�ntesis final de un WHERE\n                            //\n                            // Final de un WHERE entre par�ntesis, simplemente preparar la cosa\n                            // porque igual el query termina aqu� m�s adelante.... no cambiar de estado\n                            strPrevToken += strToken;\n                            this.m_strWhere = strPrevToken.trim();\n                            break;\n                        } // Par�ntesis final de un WHERE\n                    } // Cierra par�ntesis\n                    //\n                    // Lo que sea, irlo sumando para tenerlo como WHERE\n                    strPrevToken += strToken;\n                    break;\n                case 4:\n                    //\n                    // Esperando el BY del ORDER BY\n                    //\n                    if (this.IsSeparator(strToken)) {\n                        break;\n                    }\n                    if (strToken.equalsIgnoreCase(\"by\")) { // Lleb� el BY, pasar a leer el ORDER\n                        strPrevToken = \"\";\n                        nStep = 9;\n                        nOpenPar = 0;\n                        break;\n                    } // Lleb� el BY, pasar a leer el ORDER\n                    //\n                    // Error\n                    return false;\n                case 5:\n                    //\n                    // Esperando el ALL\n                    if (this.IsSeparator(strToken)) {\n                        break;\n                    }\n                    if (strToken.equalsIgnoreCase(\"all\")) { // OK\n                        nStep = 6;\n                        break;\n                    } // OK\n                    // F12110902: Modificaciones al parser de SQL para gestionar uniones.\n                    // No tiene por qu� ser union all...\n                    if (strToken.equalsIgnoreCase(\"select\") || strToken.equals(\"(\")) { // Asumir que nos hemos saltado un ALL\n                        this.AddUnionQuery();\n                        nOpenPar = 0;\n                        nStep = 1;\n                        // Limpiar tuti\n                        strPrevToken = strField = strAlias = strJoin = strTable = \"\";\n                        break;\n                    } // Asumir que nos hemos saltado un ALL\n                    // Error\n                    return false;\n                case 6:\n                    //\n                    // Apreparar este SELECT como una uni�n y copiar todos los datos\n                    // de este hacia uno en lista.\n                    this.AddUnionQuery();\n                    nStep = nOpenPar = 0;\n                    // F12110902: Modificaciones al parser de SQL para gestionar uniones.\n                    // Limpiar tuti\n                    strPrevToken = strField = strAlias = strJoin = strTable = \"\";\n                    break;\n                case 7:\n                    //\n                    // Esperando el BY del GROUP\n                    if (this.IsSeparator(strToken)) {\n                        break;\n                    }\n                    if (strToken.equalsIgnoreCase(\"by\")) { // OK\n                        strPrevToken = \"\";\n                        nOpenPar = 0;\n                        nStep = 8;\n                        break;\n                    } // OK\n                    //\n                    // Error\n                    return false;\n                case 8:\n                    //\n                    // Si llega HAVING saltar el estado de espera de las condiciones de HAVING\n                    if (strToken.equalsIgnoreCase(\"having\")) { // Completar lo que haya hasta aqu�\n                        if (nOpenPar > 0) {\n                            return false;\n                        }\n                        nStep = 10;\n                        this.m_strGroupBy = strPrevToken.trim();\n                        nOpenPar = 0;\n                        strPrevToken = \"\";\n                        break;\n                    } // Completar lo que haya hasta aqu�\n                    //\n                    // En este estado, todo lo que llegue ser� para la agrupaci�n\n                    if (strToken.equalsIgnoreCase(\"order\")) { // Puede venir ordenamiento\n                        if (nOpenPar > 0) {\n                            return false;\n                        }\n                        nStep = 4;\n                        this.m_strGroupBy = strPrevToken.trim();\n                        break;\n                    } // Puede venir ordenamiento\n                    //\n                    if (strToken.equals(\"(\")) {\n                        nOpenPar++;\n                    }\n                    //\n                    // Si cierra par�ntesis puede ser final de agrupaci�n\n                    if (strToken.equals(\")\")) { // Ver qu� es lo que cierra\n                        if (nOpenPar == 0) { // Si no hay par�ntesis abierto al inicio\n                            if (--nInitPar < 0) {\n                                return false;\n                            }\n                            //\n                            // Un par�ntesis cerrado puede ser indicio de fin de query... prepararse\n                            // por si las moscas\n                            this.m_strGroupBy = strPrevToken.trim();\n                            nStep = 0;\n                            break;\n                        } // Si no hay par�ntesis abierto al inicio\n                        if (--nOpenPar == 0) { // Par�ntesis final de un GROUP BY\n                            //\n                            // Final de un GROUP BY entre par�ntesis, simplemente preparar la cosa\n                            // porque igual el query termina aqu� m�s adelante.... no cambiar de estado\n                            strPrevToken += strToken;\n                            this.m_strGroupBy = strPrevToken.trim();\n                            break;\n                        } // Par�ntesis final de un GROUP BY\n                    } // Ver qu� es lo que cierra\n                    //\n                    // Agregar para tener la expresi�n completa aqu�\n                    strPrevToken += strToken;\n                    break;\n                case 9:\n                    //\n                    // Leyendo los valores que componen un ORDER BY\n                    //\n                    // En este estado, todo lo que llegue ser� para el ORDER BY\n                    if (strToken.equalsIgnoreCase(\"having\")) { // Puede venir ordenamiento\n                        if (nOpenPar > 0) {\n                            return false;\n                        }\n                        nStep = 10;\n                        this.m_strOrderBy = strPrevToken.trim();\n                        nOpenPar = 0;\n                        strPrevToken = \"\";\n                        break;\n                    } // Puede venir ordenamiento\n                    if (strToken.equals(\"(\")) \n                    // Contarlo\n                    {\n                        nOpenPar++;\n                    }\n                    if (strToken.equals(\")\")) { // Cerrar par�ntesis\n                        if (nOpenPar == 0) { // Si no hay par�ntesis abierto al inicio\n                            if (--nInitPar < 0) {\n                                return false;\n                            }\n                            //\n                            // Un par�ntesis cerrado puede ser indicio de fin de query... prepararse\n                            // por si las moscas\n                            this.m_strOrderBy = strPrevToken.trim();\n                            nStep = 0;\n                            break;\n                        } // Si no hay par�ntesis abierto al inicio\n                        if (--nOpenPar == 0) { // Par�ntesis final de un ORDER BY\n                            //\n                            // Final de un ORDER BY entre par�ntesis, simplemente preparar la cosa\n                            // porque igual el query termina aqu� m�s adelante.... no cambiar de estado\n                            strPrevToken += strToken;\n                            this.m_strOrderBy = strPrevToken.trim();\n                            break;\n                        } // Par�ntesis final de un ORDER BY\n                    } // Cerrar par�ntesis\n                    //\n                    // Agregar para tener la expresi�n completa aqu�\n                    strPrevToken += strToken;\n                    break;\n                case 10:\n                    //\n                    // Para componer la expresi�n del HAVING, parecido al WHERE\n                    //\n                    //\n                    if (strToken.equals(\"(\")) {\n                        nOpenPar++;\n                    }\n                    //\n                    // Si cierra par�ntesis puede ser final de agrupaci�n\n                    if (strToken.equals(\")\")) { // Ver qu� es lo que cierra\n                        if (nOpenPar == 0) { // Si no hay par�ntesis abierto al inicio\n                            if (--nInitPar < 0) {\n                                return false;\n                            }\n                            //\n                            // Un par�ntesis cerrado puede ser indicio de fin de query... prepararse\n                            // por si las moscas\n                            this.m_strHaving = strPrevToken.trim();\n                            nStep = 0;\n                            break;\n                        } // Si no hay par�ntesis abierto al inicio\n                        if (--nOpenPar == 0) { // Par�ntesis final de un GROUP BY\n                            //\n                            // Final de un GROUP BY entre par�ntesis, simplemente preparar la cosa\n                            // porque igual el query termina aqu� m�s adelante.... no cambiar de estado\n                            strPrevToken += strToken;\n                            this.m_strHaving = strPrevToken.trim();\n                            break;\n                        } // Par�ntesis final de un GROUP BY\n                    } // Ver qu� es lo que cierra\n                    //\n                    // Puede venir ORDER BY\n                    if (strToken.equalsIgnoreCase(\"order\")) { // ORDER BY\n                        if (nOpenPar > 0) {\n                            return false;\n                        }\n                        this.m_strHaving = strPrevToken.trim();\n                        strPrevToken = \"\";\n                        nStep = 4;\n                        break;\n                    } // ORDER BY\n                    //\n                    // Agregar para tener la expresi�n completa aqu�\n                    strPrevToken += strToken;\n                    break;\n            } // M�quina de estados\n            /////nIndex = nTokIdxTo + 1;\n        } // Ir obteniendo los tokens\n        //\n        // Aqu� ver los residuos :-P\n        if (bTable) { // Queda una tabla por agregar\n            // K11090501: El parser de SQL no almacena el tipo de JOIN. Deber�a.\n            this.AddTable(strTable, strAlias, strJoin, jt);\n        } // Queda una tabla por agregar\n        //\n        // Si queda un WHERE a medias\n        if (nStep == 3 && strPrevToken.length > 0) {\n            this.m_strWhere = strPrevToken;\n        }\n        // Ajustar las cadenas\n        if (!TextUtils.isEmpty(this.m_strWhere)) {\n            this.m_strWhere = this.m_strWhere.trim();\n        }\n        // Lo mismo con el GROUP BY\n        if (nStep == 8 && strPrevToken.length > 0) {\n            this.m_strGroupBy = strPrevToken;\n        }\n        // Ajustar un poco\n        if (!TextUtils.isEmpty(this.m_strGroupBy)) {\n            this.m_strGroupBy = this.m_strGroupBy.trim();\n        }\n        // Lo mismo para el ORDER BY\n        if (nStep == 9 && strPrevToken.length > 0) {\n            this.m_strOrderBy = strPrevToken;\n        }\n        // Ajustar un poco\n        if (!TextUtils.isEmpty(this.m_strOrderBy)) {\n            this.m_strOrderBy = this.m_strOrderBy.trim();\n        }\n        // Lo mismo para el HAVING\n        if (nStep == 10 && strPrevToken.length > 0) {\n            this.m_strHaving = strPrevToken;\n        }\n        // Ajustar un poco\n        if (!TextUtils.isEmpty(this.m_strHaving)) {\n            this.m_strHaving = this.m_strHaving.trim();\n        }\n        //\n        // Si esta es una uni�n, poner tambi�n este query en la uni�n y dejarlo vac�o\n        // de forma que solo queden queries en la lista de uni�n\n        if (this.m_bIsUnionQuery && this.m_lstSelectFields.length > 0) {\n            this.AddUnionQuery();\n        }\n        //\n        // Supuestamente deber�a tenerlo todo aqu�..\n        this.m_sqlType = SqlType.SQLTYPE_SELECT;\n        return true;\n    }\n    /**\n     * Adiciona un query ya parseado a una uni�n. Los queries parseados se\n     * adicionan a una lista por su orden\n     */\n    AddUnionQuery() {\n        // Si no existe la lista la creamos\n        if (this.m_lstUnionQueries == null) {\n            this.m_lstUnionQueries = new Array();\n        }\n        // Crear un query nuevo, adicionarle los datos de este y ponerlo en lista\n        let newQuery = new SqlParser(this);\n        // F12110902: Modificaciones al parser de SQL para gestionar uniones.\n        // Si estamos parseando un select, esto ser� un select\n        newQuery.SetSqlType(SqlType.SQLTYPE_SELECT);\n        if (!newQuery.CopyData(this)) {\n            return false;\n        }\n        this.m_lstUnionQueries.push(newQuery);\n        this.Clear(false);\n        this.m_bIsUnionQuery = true;\n        return true;\n    }\n    /**\n     * @param Token Elemento que se quiere comprobar.\n     * @return Devuelve TRUE si el par�metro que se pasa es un separador en una\n     * sentencia SELECT.\n     */\n    // private boolean IsSeparator(String Token) {\n    //     if (Token.equals(\"\\r\") || Token.equals(\"\\n\") || Token.equals(\"\\t\") || Token.equals(\" \") || Token.equals(\",\")) {\n    //         return true;\n    //     }\n    //     return false;\n    // }\n    /**\n     * @return Devuelve el siguiente token de una sentencia SELECT\n     */\n    GetNextSqlToken() {\n        let bTextStart = false;\n        let i = 0, nTokIdxTo = 0, nLen = this.m_strSentence.length;\n        let strToken = null;\n        for (i = this.m_nParserIndex; i < nLen;) { // Ir revisando\n            switch (this.m_strSentence.charAt(i)) {\n                case '=':\n                case '+':\n                case '-':\n                case '*':\n                case '/':\n                    if (!bTextStart) { // Solo si no est� en un texto\n                        if (i > nLen) {\n                            nTokIdxTo = i - 1; // El operador indica fin del anterior\n                        }\n                        else {\n                            nTokIdxTo = i; // El operador es en s� un token\n                        }\n                        if (nTokIdxTo == this.m_nParserIndex) {\n                            nTokIdxTo++;\n                        }\n                        // F09042201:\tSubstring no funciona igual en java que en .NET Arreglar Blackberry\n                        strToken = this.m_strSentence.substring(this.m_nParserIndex, nTokIdxTo /*\n                         * -\n                         * m_nParserIndex\n                         */);\n                        this.m_nParserIndex = nTokIdxTo;\n                        return strToken;\n                    } // Solo si no est� en un texto\n                    else {\n                        i++;\n                    }\n                    break;\n                case '\\'':\n                    if (!bTextStart) { // Ver si es que empieza una cadena entrecomillada\n                        // F11041402: Problemas en el parser de sentencias SELECT con expresiones complejas.\n                        // Si tiene texto antes devolverlo\n                        if (i > this.m_nParserIndex) { // Tiene texto\n                            nTokIdxTo = i;\n                            strToken = this.m_strSentence.substring(this.m_nParserIndex, nTokIdxTo /*\n                             * -\n                             * m_nParserIndex\n                             */);\n                            this.m_nParserIndex = nTokIdxTo;\n                            return strToken;\n                        } // Tiene texto\n                        //return null;\n                        bTextStart = true;\n                    } // Ver si es que empieza una cadena entrecomillada\n                    else { // Hab�a un texto iniciado, terminar aqui\n                        if (i > nLen) {\n                            nTokIdxTo = i;\n                        }\n                        else {\n                            nTokIdxTo = i + 1;\n                        }\n                        // F09042201:\tSubstring no funciona igual en java que en .NET Arreglar Blackberry\n                        strToken = this.m_strSentence.substring(this.m_nParserIndex, nTokIdxTo /*\n                         * -\n                         * m_nParserIndex\n                         */);\n                        this.m_nParserIndex = nTokIdxTo;\n                        return strToken;\n                    } // Hab�a un texto iniciado, terminar aqui\n                    if (!bTextStart) { // Sefin�\n                        //\n                        // Si ya hay un token, termina aqu�\n                        if (i > this.m_nParserIndex) {\n                            nTokIdxTo = i - 1;\n                        }\n                        else {\n                            nTokIdxTo = i;\n                        }\n                        // F09042201:\tSubstring no funciona igual en java que en .NET Arreglar Blackberry\n                        strToken = this.m_strSentence.substring(this.m_nParserIndex, nTokIdxTo /*\n                         * -\n                         * m_nParserIndex\n                         */);\n                        this.m_nParserIndex = i;\n                        return strToken;\n                    } // Sefin�\n                    i++;\n                    break;\n                case '\\r':\n                case '\\n':\n                case '\\t':\n                case ' ':\n                case ',':\n                case '(':\n                case ')':\n                    //\n                    // Separadores\n                    if (!bTextStart) { // Sefin�\n                        //\n                        // Si ya hay un token, termina aqu�\n                        if (i > nLen) {\n                            nTokIdxTo = i - 1;\n                        }\n                        else {\n                            nTokIdxTo = i;\n                        }\n                        if (nTokIdxTo == this.m_nParserIndex) {\n                            nTokIdxTo++;\n                        }\n                        // F09042201:\tSubstring no funciona igual en java que en .NET Arreglar Blackberry\n                        strToken = this.m_strSentence.substring(this.m_nParserIndex, nTokIdxTo /*\n                         * -\n                         * m_nParserIndex\n                         */);\n                        this.m_nParserIndex = nTokIdxTo;\n                        return strToken;\n                    } // Sefin�\n                    i++;\n                    break;\n                //\n                // Cuenta como uno m�s\n                default:\n                    i++;\n                    break;\n            }\n        } // Ir revisando\n        // Si estamos al final, entonces devolver lo que quede\n        if (this.m_nParserIndex < i) {\n            // F09042201:\tSubstring no funciona igual en java que en .NET Arreglar Blackberry\n            strToken = this.m_strSentence.substring(this.m_nParserIndex, nLen /* m_nParserIndex */);\n            this.m_nParserIndex = i;\n        }\n        return strToken;\n    }\n    /**\n     * Regenera una sentencia UPDATE a partir de la lista de campos que hay en\n     * este objeto\n     *\n     * @return Devuelve la cadena con la sentencia regenerada.\n     */\n    RegenerateUpdate() {\n        let strValues = \"\";\n        let strSql;\n        //\n        // Si no hay campos, nada que hacer...\n        if (this.m_lstFields.length == 0) {\n            return null;\n        }\n        this.m_lstFields.entrySet().forEach(element => {\n            if (!SqlParser.EMPTY.equals(element[0])) { // Tiene valor\n                if (strValues.length > 0) \n                // Las comas\n                {\n                    strValues += \",\";\n                }\n                strValues += String.format(\"%s=%s\", element[0], element[1]);\n            } // Tiene valor\n        });\n        // Enumeration<String> enm = this.m_lstFields.keys();\n        // while (enm.hasMoreElements()) {// Recorrer la lista\n        //     strField = enm.nextElement();\n        //     strValue = this.m_lstFields.get(strField);\n        //     if (!SqlParser.EMPTY.equals(strField)) {// Tiene valor\n        //         if (strValues.length > 0)\n        //         // Las comas\n        //         {\n        //             strValues += \",\";\n        //         }\n        //         strValues += String.format(\"%s=%s\", strField, strValue);\n        //     }// Tiene valor\n        // }// Recorrer la lista\n        if (strValues.length == 0) {\n            return null;\n        }\n        strSql = String.format(\"UPDATE %s SET %s %s\", this.m_strTable, strValues, this.m_strWhere);\n        return strSql;\n    }\n    /// Regenera el SQL y lo devuelve\n    RegenerateSql() {\n        //\n        // En funci�n del tipo que sea, tendremos que generar diferentes tipos\n        // de sentencia SQL...\n        switch (this.m_sqlType) {\n            case SqlType.SQLTYPE_INSERT:\n                return this.RegenerateInsert();\n            case SqlType.SQLTYPE_DELETE:\n                return this.RegenerateDelete();\n            case SqlType.SQLTYPE_UPDATE:\n                return this.RegenerateUpdate();\n            case SqlType.SQLTYPE_SELECT:\n                return this.RegenerateSelect();\n        }\n        return null;\n    }\n    /**\n     * Regenera una sentencia SELECT a partir de los datos parseados\n     *\n     * @return Devuelve la cadena con la sentencia SELECT regenerada a partir de\n     * esta estructura de datos.\n     */\n    RegenerateSelect() {\n        let strQuery;\n        let strTmp;\n        if (this.m_bIsUnionQuery) {\n            return this.RegenerateUnionQuery();\n        }\n        //\n        // De lo contrario genera como siempre\n        if (this.m_tableFrom == null) {\n            return null;\n        }\n        //\n        // Obtener el query preliminar\n        // M09072901:\tPermitir que se puedan traducir los joins a formato where en blackberry\n        // Indicarle a la tabla si tiene que traducir los joins o no...\n        this.m_tableFrom.setTranslateJoins(this.m_bTranslateJoins);\n        strQuery = \"SELECT \" + (this.m_bDistinct ? \"DISTINCT \" : \"\") + this.GetFieldList() + \" FROM \" + this.m_tableFrom.getTableName();\n        if (this.m_tableFrom.getSecondTable() == null) { // Adicionar el alias\n            strTmp = \" \" + this.m_tableFrom.getAlias();\n            strQuery += strTmp;\n        } // Adicionar el alias\n        //\n        // Quitar lo que sobra\n        strQuery = strQuery.trim();\n        for (; strQuery.endsWith(\"\\t\"); strQuery = strQuery.substring(0, strQuery.length - 1)) {\n        }\n        for (; strQuery.endsWith(\"\\r\\n\"); strQuery = strQuery.substring(0, strQuery.length - 2)) {\n        }\n        //\n        // Si hay WHERE, ponerlo despu�s de lo anterior\n        if (!TextUtils.isEmpty(this.m_strWhere)) { // Colocarlo al finalillo\n            strTmp = \" WHERE (\" + this.m_strWhere + \")\";\n            strQuery += strTmp;\n        } // Colocarlo al finalillo\n        // M09072901:\tPermitir que se puedan traducir los joins a formato where en blackberry\n        // Si tenemos que traducir los joins entonces habr� que agregar sus condiciones aqu�\n        if (this.m_bTranslateJoins) { // Pedirle la cadena de condiciones a la tabla\n            strTmp = this.m_tableFrom.getTranslatedJoinConditions();\n            if (!TextUtils.isEmpty(strTmp)) { // Si ya tiene WHERE ponerlo\n                if (TextUtils.isEmpty(this.m_strWhere)) {\n                    strTmp = \" WHERE (\" + strTmp + \")\";\n                }\n                else {\n                    strTmp = (\" AND (\" + strTmp + \")\");\n                }\n            } // Si ya tiene WHERE ponerlo\n            strQuery += strTmp;\n        } // Pedirle la cadena de condiciones a la tabla\n        //\n        // Si hay GROUP BY, ponerlo despu�s del WHERE\n        if (!TextUtils.isEmpty(this.m_strGroupBy)) { // Agregar el pedazo que falta\n            strTmp = \" GROUP BY \" + this.m_strGroupBy;\n            strQuery += strTmp;\n        } // Agregar el pedazo que falta\n        //\n        // Si tiene HAVING\n        if (!TextUtils.isEmpty(this.m_strHaving)) { // Agregar el HAVING\n            strTmp = \" HAVING \" + this.m_strHaving;\n            strQuery += strTmp;\n        } // Agregar el HAVING\n        //\n        // Si hay ORDER BY se pone aqu�\n        if (!TextUtils.isEmpty(this.m_strOrderBy)) { // Agregar el ordenamiento\n            strTmp = \" ORDER BY \" + this.m_strOrderBy;\n            strQuery += strTmp;\n        } // Agregar el ordenamiento\n        // Si tiene LIMIT, ponerlo\n        return strQuery;\n    }\n    /**\n     * @return Devuelve una cadena formateada con los campos que contiene la\n     * lista parseada.\n     */\n    GetFieldList() {\n        let str = new StringBuilder();\n        this.m_lstSelectFields.forEach(fld => {\n            !str.isEmpty() && str.append(',');\n            str.append(fld.getName());\n            !TextUtils.isEmpty(fld.getAlias()) && str.append(\" AS \" + fld.getAlias());\n        });\n        // Luis: Esto es lo mismo que arriba pero compactado en javascript\n        // String str = \"\", strTmp;\n        // this.int i = 0, nCount = this.m_lstSelectFields.size();\n        // for (this.int j = 0; j < this.m_lstSelectFields.size(); j++) {// Recorrer la lista de campos\n        //     QueryField fld = this.m_lstSelectFields.elementAt(j);\n        //     str += fld.getName();\n        //     if (!TextUtils.isEmpty(fld.getAlias())) {// Adicionar cositas\n        //         strTmp = \" AS \" + fld.getAlias();\n        //         str += strTmp;\n        //     }// Adicionar cositas\n        //     if (i < nCount - 1) {\n        //         str += \",\";\n        //     }\n        //     //////if (0 ==((++n) % 5) && n < nCount - 1)\n        //     // Adicionar unos cambios de l�nea\n        //     //////str += \"\\r\\n\\t\\t\";\n        //     // Hala... contemos :-P\n        //     i++;\n        // }// Recorrer la lista de campos\n        // Completo\n        return str.length() === 0 ? '*' : str.toString();\n    }\n    /**\n     * Regenera una sentencia SELECT de uni�n a partir de la lista de queries\n     * que hay en este parser\n     *\n     * @return Devuelve la sentencia SELECT regenerada.\n     */\n    RegenerateUnionQuery() {\n        let strQuery = new StringBuilder();\n        this.m_lstUnionQueries.forEach(query => {\n            strQuery.isEmpty() && strQuery.append(\" \\r\\nUNION ALL\\r\\n \");\n            this.m_bSurroundUnions && strQuery.append(\"(\");\n            strQuery.append(query.RegenerateSql());\n            this.m_bSurroundUnions && strQuery.append(\")\");\n        });\n        !TextUtils.isEmpty(this.m_strOrderBy) && strQuery.append(\"\\r\\nORDER BY \" + this.m_strOrderBy);\n        // Luis: Esto es lo mismo que arriba pero compactado en javascript\n        // String strQuery = \"\", strTmp, strNewQuery;\n        // for (this.int i = 0; i < this.m_lstUnionQueries.size(); i++) {// Cada query habr� que regenerarlo\n        //     SqlParser query = this.m_lstUnionQueries.elementAt(i);\n        //     strNewQuery = query.RegenerateSql();\n        //     if (!TextUtils.isEmpty(strQuery))\n        //     // Adicionar el UNION ALL\n        //     {\n        //         strQuery += \" \\r\\nUNION ALL\\r\\n \";\n        //     }\n        //     // F12110902: Modificaciones al parser de SQL para gestionar uniones.\n        //     // Tendremos par�ntesis... o no...\n        //     strTmp = this.m_bSurroundUnions ? \"(\" : Utils.EMPTY_STRING;\n        //     strTmp += strNewQuery;\n        //     strTmp += this.m_bSurroundUnions ? \")\" : Utils.EMPTY_STRING;\n        //     strQuery += strTmp;\n        // }// Cada query habr� que regenerarlo\n        //\n        // Si al final tiene ORDER BY, ponerlo aqu�\n        // if (!TextUtils.isEmpty(this.m_strOrderBy)) {// Componer el ordenamiento\n        //     strTmp = \"\\r\\nORDER BY \" + this.m_strOrderBy;\n        //     strQuery += strTmp;\n        // }// Componer el ordenamiento\n        return strQuery.toString();\n    }\n    /**\n     * Asigna valor a un campo de este parser.\n     *\n     * @param FieldName  Nombre del campo cuyo valor se quiere modificar.\n     * @param FieldValue Valor que se quiere asignar al campo. Ojo con los separadores\n     *                   y delimitadores que tienen que venir incluidos en el valor.\n     */\n    SetFieldValue(FieldName, FieldValue) {\n        if (this.m_lstFields == null) {\n            this.m_lstFields = new Hashtable();\n        }\n        this.m_lstFields.put(FieldName, FieldValue);\n    }\n    /**\n     * A12042602: Permitir que se puedan almacenar los tipos de datos de una\n     * sentencia SQL.\n     *\n     * @param FieldName Nombre del campo cuyo tipo se quiere asignar\n     * @param FieldType Tipo de dato.\n     */\n    SetFieldType(FieldName, FieldType) {\n        if (this.m_lstFieldsType == null) {\n            this.m_lstFieldsType = new Hashtable();\n        }\n        this.m_lstFieldsType.put(FieldName, FieldType);\n    }\n    /**\n     * A12042602: Permitir que se puedan almacenar los tipos de datos de una\n     * sentencia SQL.\n     *\n     * @param FieldName Nombre del campo cuyo tipo se quiere obtener.\n     * @return\n     */\n    GetFieldType(FieldName) {\n        if (this.m_lstFieldsType == null) {\n            return 0;\n        }\n        if (!this.m_lstFieldsType.containsKey(FieldName)) {\n            return 0;\n        }\n        return this.m_lstFieldsType.get(FieldName);\n    }\n    /**\n     * Elimina los campos de esta sentencia que est�n contenidos en el que se\n     * pasa como par�metro.\n     *\n     * @param Source      Parser cuyos campos se analizan para buscar coincidencias.\n     * @param PriorityMap Ignorado. Reservado para versiones futuras.\n     * @return Devuelve la cantidad de campos que quedan despu�s de eliminar los\n     * que coinciden.\n     * @throws ReplicationException\n     */\n    StripSqlFields(Source, PriorityMap) {\n        // let strField=\"\", strValue=\"\", strValueTo=\"\";\n        // let bFormulaTo=false, bFormulaFrom=false, bStrip=false;\n        let nRemaining = Source.GetFields().length;\n        try {\n            this.m_lstFields.entrySet().forEach(element => {\n                if (SqlParser.IsFormula(element[0]) && SqlParser.IsFormula(this.GetFieldValue(element[0]))) { // Ponerle el mismo valor que el original\n                    if (this.m_sqlType == SqlType.SQLTYPE_INSERT) {\n                        this.SetFieldValue(element[0], element[1]);\n                    }\n                    else {\n                        this.m_lstFields.delete(element[0]);\n                    }\n                    nRemaining--;\n                } // Ponerle el mismo valor que el original\n            });\n            // Luis: Esto es lo mismo que arriba pero compactado en javascript\n            // Enumeration<String> enm = this.m_lstFields.keys();\n            // while (enm.hasMoreElements()) {// Recorrer la lista\n            //     strField = enm.nextElement();\n            //     strValue = m_lstFields.get(strField);\n            //     if (m_lstFields.containsKey(strField)) {// Ahora ver si es una formulilla\n            //         bStrip = true;\n            //         strValueTo = GetFieldValue(strField);\n            //         bFormulaFrom = IsFormula(strValue);\n            //         bFormulaTo = IsFormula(strValueTo);\n            //         /*\n            //          * Si tanto el valor de origen como el de destino son\n            //          * f�rmulas entonces las dos prevalecer�n porque se\n            //          * aplicar�n de forma acumulativa. En realidad este\n            //          * comportamiento no debe ser tomado exactamente as�, pero\n            //          * por el momento debe resolver los problemas\n            //          */\n            //         if (bFormulaFrom && bFormulaTo) {\n            //             bStrip = false;\n            //         }\n            //         //\n            //         if (bStrip) {// Ponerle el mismo valor que el original\n            //             if (m_sqlType == SqlType.SQLTYPE_INSERT) {\n            //                 SetFieldValue(strField, strValue);\n            //             } else {\n            //                 m_lstFields.remove(strField);\n            //             }\n            //             nRemaining--;\n            //         }// Ponerle el mismo valor que el original\n            //     }// Ahora ver si es una formulilla\n            // }// Revisa cada campo del SQL origen\n            //\n            // Puede darse el caso especial que se trate de un INSERT y que solo le quede el ROWID\n            // En ese caso habr� que quitarle uno\n            if ((this.m_sqlType == SqlType.SQLTYPE_INSERT && Source.GetSqlType() == SqlType.SQLTYPE_UPDATE) && (this.GetRowId().compareTo(Source.GetRowId()) == 0)) {\n                nRemaining--;\n            }\n            return nRemaining;\n        }\n        catch (e) {\n            // M11051201: Mecanismo para soporte multilenguaje en los componentes y dem�s cosas.\n            ////throw new ReplicationException(ReplicationErrorCodes.RPLR_DATA_ERROR, e.getMessage(), \"Error eliminando campos de la operaci�n.\");\n            throw e;\n            // new ReplicationException(\n            //         ReplicationErrorCodes.RPLR_DATA_ERROR,\n            //         e.getMessage(),\n            //         GetMessage(XoneMessageKeys.SYS_MSG_SQL_STRIPFIELDERROR, \"Error stripping operation fields.\"));\n        }\n    }\n    /**\n     * Copia datos de una sentencia parseada hacia esta sentencia.\n     *\n     * @param Source Sentencia desde la que se quieren copiar los datos.\n     * @return Devuelve TRUE si los datos se copian correctamente.\n     */\n    CopyData(Source) {\n        let table;\n        this.Clear();\n        Source.getQueryFields().forEach(field => {\n            this.AddField(field.getName(), field.getAlias());\n        });\n        // // Comprobar si hay que copiar\n        // for (int i = 0; i < Source.getQueryFields().size(); i++) {// Copia cada campo\n        //     QueryField field = Source.getQueryFields().elementAt(i);\n        //     // Copiar\n        //     this.AddField(field.getName(), field.getAlias());\n        // }// Copia cada campo\n        // Ahora copia cada tabla con sus correspondientes tablas encadenadas y cosas as�\n        table = Source.getTableFrom();\n        /*\n         * TODO ADD TAG Juan Carlos\n         * Esto puede venir a null, por ejemplo desde una de las sobrecargas de EmbedFilters(), y\n         * puede significar que se le ha olvidado a alguien poner el FROM. Me gustar�a lanzar una\n         * excepci�n detallada, pero aqu� las cosas s�lo retornan booleano...\n         */\n        if (table == null) {\n            return false;\n        }\n        this.CopyTable(table);\n        // Indicar si es DISTINCT o no\n        this.m_bDistinct = Source.getDistinct();\n        // Copiar otras cosas que hagan falta para este query, como WHERES, GROUPS, ORDERS y HAVINGS\n        // que tambi�n forman parte del query\n        this.m_strWhere = Source.GetWhereSentence();\n        this.m_strGroupBy = Source.getGroupBySentence();\n        this.m_strOrderBy = Source.getOrderBySentence();\n        this.m_strHaving = Source.getHavingSentence();\n        //////m_strTop = Source.TopSentence;\n        //////m_strLimit = Source.LimitSentence;\n        return true;\n    }\n    /**\n     * TRUE si se trata de un SELECT que tiene DISTINCT\n     *\n     * @return Devuelve la bandera que indica si la sentencia SELECT tiene\n     * DISTINCT o no.\n     */\n    getDistinct() {\n        return this.m_bDistinct;\n    }\n    /**\n     * Expone la sentencia ORDER BY de un SELECT.\n     *\n     * @return Devuelve la sentencia ORDER BY de esta sentencia SQL.\n     */\n    getOrderBySentence() {\n        return this.m_strOrderBy || null;\n    }\n    /**\n     * Asigna valor a la sentencia ORDER BY de esta sentencia SQL.\n     *\n     * @param value Nuevo valor de la sentencia ORDER BY de este SELECT.\n     */\n    setOrderBySentence(value) {\n        this.m_strOrderBy = value;\n    }\n    /**\n     * Expone la sentencia GROUP BY de esta sentencia SQL.\n     *\n     * @return Devuelve el valor de la sentencia GROUP BY de este SQL.\n     */\n    getGroupBySentence() {\n        return this.m_strGroupBy;\n    }\n    /**\n     * Asigna valor a la sentencia GROUP BY de esta sentencia SQL.\n     *\n     * @param value Nuevo valor de la sentencia GROUP BY de este SQL.\n     */\n    setGroupBySentence(value) {\n        this.m_strGroupBy = value;\n    }\n    /**\n     * Copia los datos de una tabla parseada hacia esta sentencia. Si hay tablas\n     * enlazadas tambi�n las copia.\n     *\n     * @param Table Tabla o cadena de ellas que se quiere copiar hacia esta\n     *              sentencia\n     * @return Devuelve TRUE si la copia de los datos de la tabla es correcta.\n     */\n    CopyTable(Table) {\n        let next;\n        // Copiar primero la segunda...\n        if (null != (next = Table.getSecondTable())) {\n            this.CopyTable(next);\n        }\n        // Ahora copiar esta\n        // K11090501: El parser de SQL no almacena el tipo de JOIN. Deber�a.\n        // Copiar con el tipo...\n        this.AddTable(Table.getActualName(), Table.getAlias(), Table.getJoinCondition(), Table.getJoinType());\n        return true;\n    }\n    /**\n     * Adiciona una tabla procedente de una sentencia SELECT que se est�\n     * parseando.\n     * <p>\n     * K11090501: El parser de SQL no almacena el tipo de JOIN. Deber�a. Un\n     * par�metro para indicar qu� tipo de join es...\n     *\n     * @param TableName     Nombre de la tabla en la base de datos.\n     * @param TableAlias    Alias de la tabla en la sentencia SELECT.\n     * @param JoinCondition Condici�n de uni�n entre esta tabla y la que le precede.\n     */\n    AddTable(TableName, TableAlias, JoinCondition, JoinType) {\n        let tbl;\n        let strName = TableName;\n        //\n        // Si lo primero que trae es un prefijo, quit�rselo\n        // A12042501: Si la tabla tiene el prefijo como parte del parsing tiene que mantenerlo.\n        // El prefijo tiene que ir en plan tabla a tabla...\n        let bPrefix = false;\n        if (strName.startsWith(\"##PREF##\")) { // Sacar el valor de UsePrefix de aqu�\n            // F09042201:\tSubstring no funciona igual en java que en .NET Arreglar Blackberry\n            strName = strName.substring(8, strName.length);\n            this.m_bUsePrefix = bPrefix = true;\n        } // Sacar el valor de UsePrefix de aqu�\n        // Agregar la tabla a la lista\n        tbl = new QueryTable(strName.trim(), TableAlias.trim());\n        tbl.setSecondTable(this.m_tableFrom);\n        // K11090501: El parser de SQL no almacena el tipo de JOIN. Deber�a.\n        // Pasar el join...\n        tbl.setJoinCondition(JoinCondition.trim(), JoinType);\n        // A12042501: Si la tabla tiene el prefijo como parte del parsing tiene que mantenerlo.\n        // El prefijo tabla a tabla solo si lo lleva\n        tbl.setUsePrefix(bPrefix);\n        this.m_tableFrom = tbl;\n    }\n    /**\n     * Expone la lista de tablas de la consulta\n     *\n     * @return Devuelve una tabla de SELECT con la lista o tabla �nica\n     */\n    getTableFrom() {\n        return this.m_tableFrom;\n    }\n    /**\n     * TRUE si hay que incluir el prefijo a la hora de reconstruir las\n     * sentencias SQL\n     *\n     * @return Devuelve la bandera que indica si hay que usar prefijo para\n     * reconstruir la sentencia SELECT.\n     */\n    getUsePrefix() {\n        return this.m_bUsePrefix;\n    }\n    /**\n     * Asigna valor a la bandera que indica si hay que usar prefijo para\n     * recomponer la sentencia SQL.\n     *\n     * @param value TRUE si hay que incluir el prefijo al reconstruir la sentencia\n     *              SQL.\n     */\n    setUsePrefix(value) {\n        this.m_bUsePrefix = value;\n    }\n    /**\n     * Sentencia HAVING del SELECT si se trata de un GROUP BY filtrado despu�s\n     *\n     * @return Devuelve la sentencia HAVING del SELECT.\n     */\n    getHavingSentence() {\n        return this.m_strHaving;\n    }\n    /**\n     * Asigna valor a la sentencia HAVING de esta sentencia SELECT.\n     *\n     * @param value Nuevo valor de la sentencia HAVING.\n     */\n    setHavingSentence(value) {\n        this.m_strHaving = value;\n    }\n    /**\n     * Limpia las estructuras de datos usadas para parsear sentencias SELECT.\n     *\n     * @param ClearUnions TRUE si se quiere limpiar tambi�n la lista de uniones.\n     */\n    Clear(ClearUnions = true) {\n        if (this.m_tableFrom != null) { // Eliminar las tablas\n            this.m_tableFrom = null;\n        } // Eliminar las tablas\n        if (this.m_lstSelectFields != null) {\n            this.m_lstSelectFields = new Vector();\n        }\n        // Si hay queries de uni�n eliminarlos\n        if (ClearUnions) { // Limpiar las uniones tambi�n\n            if (this.m_lstUnionQueries != null) {\n                this.m_lstUnionQueries = new Array();\n            }\n        } // Limpiar las uniones tambi�n\n        //\n        this.m_bDistinct = false;\n        this.m_strWhere = null;\n        this.m_strGroupBy = null;\n        this.m_strOrderBy = null;\n        this.m_strHaving = null;\n    }\n    /**\n     * Lista de queries que componen una uni�n\n     *\n     * @return Devuelve una lista con los queries que forman una uni�n.\n     */\n    getUnionQueries() {\n        return this.m_lstUnionQueries;\n    }\n    /**\n     * Expone la lista de campos de una sentencia SELECT\n     *\n     * @return Devuelve la lista de campos de la sentencia SELECT.\n     */\n    getQueryFields() {\n        return this.m_lstSelectFields;\n    }\n    /**\n     * Expone la lista de campos de una sentencia SELECT\n     *\n     * @return Devuelve la lista de campos de la sentencia SELECT.\n     */\n    clearQueryFields() {\n        this.m_lstSelectFields = new Vector();\n    }\n    /**\n     * Adiciona un campo de sentencia SELECT a la lista de campos durante el\n     * parseo de una sentencia SELECT o durante la copia de un query original.\n     *\n     * @param FieldName  Nombre del campo en la base de datos.\n     * @param FieldAlias Alias del campo en la sentencia SELECT.\n     * @return Devuelve el nuevo campo reci�n adicionado o el que ya exista, si\n     * no es nuevo.\n     */\n    AddField(FieldName, FieldAlias) {\n        let field;\n        for (let i = 0; i < this.m_lstSelectFields.length; i++) { // Si ya existe, mu mal mu mal\n            let f = this.m_lstSelectFields[i];\n            if (f.getName().equals(FieldName) && f.getAlias().equals(FieldAlias)) {\n                return f;\n            }\n        } // Si ya existe, mu mal mu mal\n        // Si no existe, lo creamos\n        field = new QueryField(FieldName, FieldAlias);\n        this.m_lstSelectFields.push(field);\n        return field;\n    }\n    /**\n     * M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas. Devuelve\n     * un mensaje dada su clave.\n     *\n     * @param Key     Clave del mensaje.\n     * @param Default Mensaje por defecto por si no existe esta clave o no hay\n     *                holder.\n     */\n    GetMessage(Key, Default) {\n        if (this.m_messages == null) {\n            return Default;\n        }\n        return this.m_messages.GetMessage(Key, Default);\n    }\n    getKeys() {\n        return this.m_keys;\n    }\n    addkey(value) {\n        if (this.m_keys == null)\n            this.m_keys = [];\n        this.m_keys.push(value);\n    }\n    clearKeys() {\n        this.m_keys = [];\n    }\n    /**\n     * 20/02/2014 Luis: Si el SQL contiene fórmulas o funciones debemos ejecutar directamente el SQL\n     * 09012014 Helper para devolver los campos en formato de android\n     *\n     * @param fields\n     * @return\n     */\n    // TODO: Esta es la estructura de Android, que no esta mal, pero hayq eu implementarla\n    //     public static ContentValues convertFieldsToContentValues(Hashtable<String, String> fields) {\n    //         if (fields == null) {\n    //             return null;\n    //         }\n    //         ContentValues values = new ContentValues();\n    //         Set<String> sAllKeys = fields.keySet();\n    //         for (String sKey : sAllKeys) {\n    //             String sValue = fields.get(sKey);\n    // //            if (sValue == null || NULL_VALUE.equals(sValue)) {\n    //             // 04/04/2019 Juan Carlos: El valor null puede venir en minúsculas\n    //             if (sValue == null || NULL_VALUE.equalsIgnoreCase(sValue)) {\n    //                 values.putNull(sKey);\n    //                 continue;\n    //             }\n    //             if (checkIfNotFunctionValue(sValue)) {\n    //                 sValue = Utils.cleanStringValue(sValue).replace(\"''\", \"'\");\n    //                 values.put(sKey, sValue);\n    //                 continue;\n    //             }\n    //             return null;\n    //         }\n    //         return values;\n    //     }\n    // TODO ADD TAG: LUIS En debug desde ? En release desde 20/02/2014 Si el SQL contiene formulas o funciones debemos ejecutar directamente el SQL\n    static checkIfNotFunctionValue(value) {\n        if (value.startsWith(\"'\") && value.endsWith(\"'\")) {\n            return true;\n        }\n        try {\n            Number.parseFloat(value);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /*\n     * Helper para quitar el where\n     */\n    static getWhereOnlyFields(where) {\n        if (TextUtils.isEmpty(where)) {\n            return \"\";\n        }\n        let clean = where.trim();\n        if (clean.substring(0, 6).compareToIgnoreCase(\"WHERE \") == 0) {\n            return clean.substring(6).trim();\n        }\n        return where;\n    }\n}\nSqlParser.NULL_VALUE = \"NULL\";\nSqlParser.EMPTY = \"\";\n\n//# sourceMappingURL=SqlParser.js.map\n","import Hashtable from \"../../Collections/HashMap/Hashtable\";\nimport Vector from \"../../Collections/Vector\";\nimport BufferedReader from \"../../Helpers/BufferedReader\";\nimport StringBuilder from \"../../Utils/StringBuilder\";\nimport TextUtils from \"../../Utils/TextUtils\";\nimport { Utils } from \"../../Utils/Utils\";\nimport CssParseException from \"./CssParseException\";\nimport XoneCssRule from \"./XoneCssRule\";\nvar ParseStates;\n(function (ParseStates) {\n    ParseStates[ParseStates[\"ExpectingSelector\"] = 0] = \"ExpectingSelector\";\n    ParseStates[ParseStates[\"ExpectingCommentOpenComplete\"] = 1] = \"ExpectingCommentOpenComplete\";\n    ParseStates[ParseStates[\"GettingComment\"] = 2] = \"GettingComment\";\n    ParseStates[ParseStates[\"ExpectingCommentClose\"] = 3] = \"ExpectingCommentClose\";\n    ParseStates[ParseStates[\"GettingSelector\"] = 4] = \"GettingSelector\";\n    ParseStates[ParseStates[\"ExpectingOpenBrace\"] = 5] = \"ExpectingOpenBrace\";\n    ParseStates[ParseStates[\"ExpectingRuleKey\"] = 6] = \"ExpectingRuleKey\";\n    ParseStates[ParseStates[\"GettingRuleKey\"] = 7] = \"GettingRuleKey\";\n    ParseStates[ParseStates[\"ExpectingRuleValue\"] = 8] = \"ExpectingRuleValue\";\n    ParseStates[ParseStates[\"GettingRuleValue\"] = 9] = \"GettingRuleValue\";\n})(ParseStates || (ParseStates = {}));\n;\nexport default class XoneCssParser {\n    /**\n     * Constructor de la clase para crearnos las cositas que nos hacen falta.\n     */\n    constructor(sName, is, sEncoding, bStrictMode) {\n        this.m_strName = \"\";\n        this.m_bStrictMode = false;\n        this.m_strName = sName;\n        this.m_bStrictMode = bStrictMode;\n        this.m_bundleRules = new Hashtable();\n        this.parse(new BufferedReader(is), sEncoding);\n    }\n    getName() {\n        return this.m_strName;\n    }\n    isStrictMode() {\n        return this.m_bStrictMode;\n    }\n    /**\n     * F11092607: Tener en cuenta los separadores entre clave y valor en los CSS.\n     * Función para moverse al siguiente token ignorando separadores.\n     *\n     * @param line\n     * @param br\n     * @param startPos\n     * @return\n     * @throws IOException\n     */\n    moveToNextToken(line, br, startPos) {\n        let k = startPos;\n        let ch = \"\";\n        while (null != line) {\n            let n = line.length;\n            while (k < n) {\n                ch = line.charAt(k);\n                switch (ch) {\n                    case '\\t':\n                    case ' ':\n                        k++;\n                        break;\n                    default:\n                        // Error\n                        return ch;\n                }\n            }\n            line = br.readLine();\n            k = 0;\n            ch = \"\";\n        }\n        return ch;\n    }\n    /**\n     * Carga el fichero que se le pasa como parámetro y parsea su contenido.\n     * 27/07/2018 Mejoras para lanzar errores de parseo descriptivos\n     *\n     * @param is        Stream origen de los datos, que en teoría deberían proceder de un fichero\n     *                  CSS o de un nodo XML. Al terminar o lanzar una excepción será cerrado.\n     * @param sEncoding El charset usado para leer el fichero. Para evitar problemas, debería ser\n     *                  UTF-8 como indica el estándar\n     * @throws IOException\n     */\n    // private parse(is:any, sEncoding:string):void{\n    //     // Juan Carlos, respetar el atributo encoding en los CSS.\n    //     if (TextUtils.isEmpty(sEncoding)) {\n    //         sEncoding = \"ISO8859_1\";\n    //     }\n    //     InputStreamReader isr = null;\n    //     BufferedReader br = null;\n    //     try {\n    //         isr = new InputStreamReader(is, sEncoding);\n    //         br = new BufferedReader(isr);\n    //         parse(br);\n    //     } finally {\n    //         Utils.closeSafely(br, isr, is);\n    //     }\n    // }\n    parse(br, sEncoding) {\n        let strLine = \"\";\n        let parseState = ParseStates.ExpectingSelector;\n        let states = new Vector();\n        let strSelector = Utils.EMPTY_STRING;\n        let strRuleKey = Utils.EMPTY_STRING;\n        let strRuleValue = Utils.EMPTY_STRING;\n        let cssRule = null;\n        let nLine = 0;\n        while (null != (strLine = br.readLine())) {\n            let nPosition = 0;\n            let nLineLength = strLine.length;\n            nLine++;\n            while (nPosition < nLineLength) {\n                let sCurrentCharacter = strLine.charAt(nPosition);\n                switch (parseState) {\n                    case ParseStates.ExpectingSelector:\n                        // No hay selector iniciado\n                        if (XoneCssParser.m_strValidChars.indexOf(sCurrentCharacter) != -1) {\n                            // Caracter válido para iniciar selector\n                            parseState = ParseStates.GettingSelector;\n                            break;\n                        }\n                        // Si no hay selector iniciado podría ser un espacio\n                        switch (sCurrentCharacter) {\n                            case '\\t':\n                            case ' ':\n                                nPosition++;\n                                break;\n                            case '/':\n                                nPosition++;\n                                states.push(parseState);\n                                parseState = ParseStates.ExpectingCommentOpenComplete;\n                                break;\n                            default:\n                                // Error\n                                throw new CssParseException(this.getName(), nLine, strLine, \"Expected selector, got \\\"\" + sCurrentCharacter + \"\\\"\");\n                        }\n                        break;\n                    case ParseStates.ExpectingCommentOpenComplete:\n                        // Solo esperamos asterisco\n                        if (sCurrentCharacter != '*') {\n                            throw new CssParseException(this.getName(), nLine, strLine, \"Expected open comment asterisk, got \\\"\" + sCurrentCharacter + \"\\\"\");\n                        }\n                        nPosition++;\n                        parseState = ParseStates.GettingComment;\n                        break;\n                    case ParseStates.GettingComment:\n                        // Lo que viene es comentario\n                        if (sCurrentCharacter == '*') {\n                            parseState = ParseStates.ExpectingCommentClose;\n                        }\n                        // Nos cagamos en el comentario\n                        nPosition++;\n                        break;\n                    case ParseStates.ExpectingCommentClose:\n                        // Ver si termina el comentario\n                        if (sCurrentCharacter == '/') {\n                            // Comentario completo\n                            parseState = states.pop();\n                            nPosition++;\n                        }\n                        else {\n                            // De lo contrario el comentario no ha terminado\n                            parseState = ParseStates.GettingComment;\n                        }\n                        break;\n                    case ParseStates.GettingSelector:\n                        // Selector iniciado\n                        if (XoneCssParser.m_strValidChars.indexOf(sCurrentCharacter) != -1) {\n                            // Sumamos este\n                            strSelector += sCurrentCharacter;\n                            nPosition++;\n                            break;\n                        }\n                        switch (sCurrentCharacter) {\n                            case '\\t':\n                            case ' ':\n                                // Selector terminado\n                                nPosition++;\n                                parseState = ParseStates.ExpectingOpenBrace;\n                                break;\n                            case '{':\n                                // Selector terminado, regla iniciada\n                                nPosition++;\n                                parseState = ParseStates.ExpectingRuleKey;\n                                break;\n                            case '/':\n                                // Podría ser un comentario\n                                parseState = ParseStates.ExpectingOpenBrace;\n                                states.push(parseState);\n                                parseState = ParseStates.ExpectingCommentOpenComplete;\n                                nPosition++;\n                                break;\n                            case ':':\n                                // A12042502: Los selectores de CSS pueden estar tipificados.\n                                // Este caracter es válido en los selectores...\n                                strSelector += sCurrentCharacter;\n                                nPosition++;\n                                break;\n                            default:\n                                // Error\n                                throw new CssParseException(this.getName(), nLine, strLine, \"Expected selector, got \\\"\" + sCurrentCharacter + \"\\\"\");\n                        }\n                        break;\n                    case ParseStates.ExpectingOpenBrace:\n                        // Esperando una llave\n                        switch (sCurrentCharacter) {\n                            case ' ':\n                            case '\\t':\n                                nPosition++;\n                                break;\n                            case '{':\n                                // Regla iniciada\n                                nPosition++;\n                                parseState = ParseStates.ExpectingRuleKey;\n                                break;\n                            case '/':\n                                // Podría ser un comentario\n                                parseState = ParseStates.ExpectingOpenBrace;\n                                states.push(parseState);\n                                parseState = ParseStates.ExpectingCommentOpenComplete;\n                                nPosition++;\n                                break;\n                            default:\n                                throw new CssParseException(this.getName(), nLine, strLine, \"Expected open brace character, got \\\"\" + sCurrentCharacter + \"\\\"\");\n                        }\n                        break;\n                    case ParseStates.ExpectingRuleKey:\n                        // Estamos esperando un inicio de clave de regla\n                        if (XoneCssParser.m_strValidChars.indexOf(sCurrentCharacter) != -1) {\n                            // Inicio de clave válido\n                            strRuleKey += sCurrentCharacter;\n                            nPosition++;\n                            parseState = ParseStates.GettingRuleKey;\n                            break;\n                        }\n                        switch (sCurrentCharacter) {\n                            case '}':\n                                // Regla terminada?\n                                if (cssRule != null) {\n                                    this.m_bundleRules.put(strSelector, cssRule);\n                                    cssRule = null;\n                                }\n                                strSelector = strRuleKey = strRuleValue = \"\";\n                                nPosition++;\n                                // Estado esperando nueva definición\n                                parseState = ParseStates.ExpectingSelector;\n                                break;\n                            case ' ':\n                            case '\\t':\n                                nPosition++;\n                                break;\n                            case '/':\n                                states.push(parseState);\n                                parseState = ParseStates.ExpectingCommentOpenComplete;\n                                nPosition++;\n                                break;\n                            default:\n                                throw new CssParseException(this.getName(), nLine, strLine, \"Expected new rule key character, got \\\"\" + sCurrentCharacter + \"\\\"\");\n                        }\n                        break;\n                    case ParseStates.GettingRuleKey:\n                        // Obteniendo clave de regla\n                        if (XoneCssParser.m_strValidChars.indexOf(sCurrentCharacter) != -1 && sCurrentCharacter != '.') {\n                            // Contamos\n                            strRuleKey += sCurrentCharacter;\n                            nPosition++;\n                            break;\n                        }\n                        // F11092607: Tener en cuenta los separadores entre clave y valor en los CSS.\n                        // Moverse al siguiente token ignorando separadores.\n                        sCurrentCharacter = this.moveToNextToken(strLine, br, nPosition);\n                        if (sCurrentCharacter != ':') {\n                            throw new CssParseException(this.getName(), nLine, strLine, \"Unexpected token while getting rule key, got\\\"\" + sCurrentCharacter + \"\\\"\");\n                        }\n                        // Terminada la clave\n                        parseState = ParseStates.ExpectingRuleValue;\n                        nPosition++;\n                        break;\n                    case ParseStates.ExpectingRuleValue:\n                        // Aquí tiene que empezar el valor ya\n                        switch (sCurrentCharacter) {\n                            case ';':\n                                throw new CssParseException(this.getName(), nLine, strLine, \"Unexpected blank value\");\n                            case '}':\n                                // 11/04/2019 Mostrar errores de CSS rotos\n                                throw new CssParseException(this.getName(), nLine, strLine, \"Unexpected end bracket value\");\n                        }\n                        // De lo contrario empieza el valor\n                        strRuleValue += sCurrentCharacter;\n                        nPosition++;\n                        parseState = ParseStates.GettingRuleValue;\n                        break;\n                    case ParseStates.GettingRuleValue:\n                        // Cualquier cosa es un valor\n                        if (sCurrentCharacter == ';') {\n                            // Valor completo\n                            if (cssRule == null) {\n                                cssRule = new XoneCssRule(strSelector);\n                            }\n                            cssRule.addRule(strRuleKey, strRuleValue);\n                            nPosition++;\n                            parseState = ParseStates.ExpectingRuleKey;\n                            strRuleKey = strRuleValue = \"\";\n                            break;\n                        }\n                        else if (sCurrentCharacter == '\\\\') {\n                            /*\n                             * Carácter de escape. Si es algo que reconozcamos, como los dos puntos,\n                             * sumamos el valor y nos saltamos 2 posiciones, no 1.\n                             */\n                            let sNextCharacter = strLine.charAt(nPosition + 1);\n                            if (sNextCharacter == ':') {\n                                strRuleValue += sNextCharacter;\n                                nPosition = nPosition + 2;\n                                break;\n                            }\n                            strRuleValue += sCurrentCharacter;\n                            nPosition++;\n                            break;\n                        }\n                        else if (sCurrentCharacter == ':') {\n                            if (this.m_bStrictMode) {\n                                let sbMessage = new StringBuilder(\"Missing semicolon value terminator.\");\n                                if (!TextUtils.isEmpty(strSelector)) {\n                                    sbMessage.append(\"\\nIn selector: \");\n                                    sbMessage.append(strSelector);\n                                }\n                                if (!TextUtils.isEmpty(strRuleKey)) {\n                                    sbMessage.append(\"\\nIn CSS rule: \");\n                                    sbMessage.append(strRuleKey);\n                                }\n                                throw new CssParseException(this.getName(), nLine, strLine, sbMessage.toString());\n                            }\n                        }\n                        else if (sCurrentCharacter == '}') {\n                            // 11/04/2019 Mostrar errores de CSS rotos\n                            if (this.m_bStrictMode) {\n                                let sbMessage = new StringBuilder(\"Unexpected end bracket found while getting rule value. Missing semicolon value terminator?\");\n                                if (!TextUtils.isEmpty(strSelector)) {\n                                    sbMessage.append(\"\\nIn selector: \");\n                                    sbMessage.append(strSelector);\n                                }\n                                if (!TextUtils.isEmpty(strRuleKey)) {\n                                    sbMessage.append(\"\\nIn CSS rule: \");\n                                    sbMessage.append(strRuleKey);\n                                }\n                                throw new CssParseException(this.getName(), nLine, strLine, sbMessage.toString());\n                            }\n                        }\n                        // Cualquier otra cosa, sumamos al valor\n                        strRuleValue += sCurrentCharacter;\n                        nPosition++;\n                        break;\n                    default:\n                        throw new CssParseException(this.getName(), nLine, strLine, \"Unexpected parse state: \" + parseState);\n                }\n            }\n        }\n    }\n    /**\n     * Dado el nombre de un selector devuelve la regla CSS que responde a dicho selector o NULL si\n     * no existe.\n     *\n     * @param strSelector\n     * @return\n     */\n    getRuleBySelector(strSelector) {\n        return this.m_bundleRules.get(strSelector);\n    }\n    addRule(strSelector, cssRule) {\n        this.m_bundleRules.put(strSelector, cssRule);\n    }\n}\nXoneCssParser.PARCELABLE_VERSION = 2;\nXoneCssParser.BUNDLE_KEY_DATA = \"data\";\nXoneCssParser.BUNDLE_KEY_CRC = \"crc\";\nXoneCssParser.m_strValidChars = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.-_\";\n\n//# sourceMappingURL=XoneCssParser.js.map\n","export default class BufferedReader {\n    /**\n     *\n     */\n    constructor(data = \"\") {\n        this.m_pointer = 0;\n        this.m_lines = Array.from(data.replace(/\\r/gi, \"\").split('\\n'));\n    }\n    readLine() {\n        if (this.m_pointer >= this.m_lines.length)\n            return null;\n        return this.m_lines[this.m_pointer++];\n    }\n}\n\n//# sourceMappingURL=BufferedReader.js.map\n","import { Exception } from \"../../Exceptions/Exception\";\nexport default class CssParseException extends Exception {\n    /**\n     *\n     */\n    constructor(name, nLine, sLine, message) {\n        super(message);\n    }\n}\n\n//# sourceMappingURL=CssParseException.js.map\n","import Hashtable from \"../../Collections/HashMap/Hashtable\";\nexport default class XoneCssRule {\n    constructor(sSelectorName) {\n        this.m_strName = sSelectorName;\n        this.m_bundleRules = new Hashtable();\n    }\n    getName() {\n        return this.m_strName;\n    }\n    /**\n     * El método String.intern() nos ahorra bastante memoria aquí.\n     * TODO 26/07/2018 Juan Carlos\n     * Esto de internar las cadenas es horriblemente lento en algunos teléfonos. Revisar.\n     * <p>\n     * Tag: Luis 1604201802\n     * Corregido un error en los valores de los css, que no pueden tener espacio. Se le hace trim()\n     *\n     * @param sRuleKey\n     * @param sRuleValue\n     */\n    addRule(sRuleKey, sRuleValue) {\n        this.m_bundleRules.put(sRuleKey, sRuleValue.trim());\n    }\n    getRuleValue(sRuleKey) {\n        if (this.m_bundleRules.containsKey(sRuleKey)) {\n            return this.m_bundleRules.get(sRuleKey);\n        }\n        // No lo conejo\n        return null;\n    }\n    deleteRule(sRuleKey) {\n        if (this.m_bundleRules.containsKey(sRuleKey)) {\n            this.m_bundleRules.delete(sRuleKey);\n        }\n    }\n    contains(sRuleKey) {\n        return this.m_bundleRules.containsKey(sRuleKey);\n    }\n}\n\n//# sourceMappingURL=XoneCssRule.js.map\n","export default class Calendar {\n    /**\n     *\n     */\n    constructor(date) {\n        if (!date)\n            date = new Date();\n        if (typeof date == 'number') {\n            let tmp = new Date();\n            tmp.setTime(date);\n            date = tmp;\n        }\n        this.m_date = date;\n    }\n    setTime(d) {\n        this.m_date = d;\n    }\n    static getInstance() {\n        return new Calendar();\n    }\n    get(Value) {\n        switch (Value) {\n            case Calendar.DAY_OF_MONTH:\n                return this.m_date.getDate();\n            case Calendar.MONTH:\n                return this.m_date.getMonth() + 1;\n            case Calendar.YEAR:\n                return this.m_date.getFullYear();\n            default:\n                return 0;\n        }\n    }\n    getTime() {\n        return this.m_date;\n    }\n    toString() {\n        return this.m_date.toDateString();\n    }\n}\nCalendar.ALL_STYLES = 0;\nCalendar.AM = 0;\nCalendar.AM_PM = 9;\nCalendar.APRIL = 3;\nCalendar.AUGUST = 7;\nCalendar.DATE = 5;\nCalendar.DAY_OF_MONTH = 5;\nCalendar.DAY_OF_WEEK = 7;\nCalendar.DAY_OF_WEEK_IN_MONTH = 8;\nCalendar.DAY_OF_YEAR = 6;\nCalendar.DECEMBER = 11;\nCalendar.DST_OFFSET = 16;\nCalendar.ERA = 0;\nCalendar.FEBRUARY = 1;\nCalendar.FIELD_COUNT = 17;\nCalendar.FRIDAY = 6;\nCalendar.HOUR = 10;\nCalendar.HOUR_OF_DAY = 11;\nCalendar.JANUARY = 0;\nCalendar.JULY = 6;\nCalendar.JUNE = 5;\nCalendar.LONG = 2;\nCalendar.LONG_FORMAT = 2;\nCalendar.LONG_STANDALONE = 32770;\nCalendar.MARCH = 2;\nCalendar.MAY = 4;\nCalendar.MILLISECOND = 14;\nCalendar.MINUTE = 12;\nCalendar.MONDAY = 2;\nCalendar.MONTH = 2;\nCalendar.NARROW_FORMAT = 4;\nCalendar.NARROW_STANDALONE = 32772;\nCalendar.NOVEMBER = 10;\nCalendar.OCTOBER = 9;\nCalendar.PM = 1;\nCalendar.SATURDAY = 7;\nCalendar.SECOND = 13;\nCalendar.SEPTEMBER = 8;\nCalendar.SHORT = 1;\nCalendar.SHORT_FORMAT = 1;\nCalendar.SHORT_STANDALONE = 32769;\nCalendar.SUNDAY = 1;\nCalendar.THURSDAY = 5;\nCalendar.TUESDAY = 3;\nCalendar.UNDECIMBER = 12;\nCalendar.WEDNESDAY = 4;\nCalendar.WEEK_OF_MONTH = 4;\nCalendar.WEEK_OF_YEAR = 3;\nCalendar.YEAR = 1;\nCalendar.ZONE_OFFSET = 15;\n\n//# sourceMappingURL=Calendar.js.map\n","// import * as fs from \"fs\";\nimport { FileManagerOnline } from \"./FileManager\";\nlet fs;\nconst fileManagerOnline = new FileManagerOnline();\nexport default class FileLoaderBrowser {\n\tLoadFile(FileName, bIsCryptoFile) {\n\t\ttry { \n\t\t\tconst res = (window.isPreview) ? localStorage.getItem(FileName): fileManagerOnline.readFileSync(FileName);\n\t\t\tlocalStorage.setItem(FileName, res);\n\t\t\t// return fs.readFileSync(FileName);\n\t\t\t// return this.readFileSync(FileName);\n\t\t\treturn res;\n\t\t} catch {\n\t\t\treturn localStorage.getItem(FileName);\n\t\t}\n\t}\n\tFileExist(FileName, bIsCryptoFile) {\n\t\treturn fs.existsSync(FileName);\n\t}\n\tgetAbsolutePath(FileName) {\n\t\treturn FileName;\n\t}\n\tgetIncludeFilePath(sPath, bIsCryptoFile) {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n}\n\n//# sourceMappingURL=FileLoaderBrowser.js.map\n","<template>\n\t<!-- \n\t----\n\tFixed Top \n\t----\n\t-->\n\t<div ref=\"fixedTopElement\" :id=\"`fixed-top-${breadcrumb.id}`\" class=\"xone-fixed\" style=\"display: bock\" v-if=\"groups.fixedTop.length !== 0\">\n\t\t<Container\n\t\t\tv-for=\"fixed in groups.fixedTop\"\n\t\t\t:key=\"`fixed-top-${fixed.attributes.name}`\"\n\t\t\t:xoneDataObject=\"xoneDataObject\"\n\t\t\t:control=\"fixed\"\n\t\t\t:containerWidth=\"containerWidth\"\n\t\t\t:containerHeight=\"containerHeight\"\n\t\t></Container>\n\t</div>\n\t<!-- \n\t----\n\tGroups\n\t----\n\t-->\n\t<Groups v-if=\"!attributes.noTab\" :attributes=\"attributes\" :groups=\"groups.tabs\" @onHeightChanged=\"onGroupsHeaderHeightChanged\"></Groups>\n\n\t<div\n\t\tclass=\"xone-groups-content-box\"\n\t\t:style=\"{\n\t\t\t//position: groups.drawerLeft.length !== 0 ? 'absolute' : '',\n\t\t\tmaxHeight: contentElementHeight && `${contentElementHeight}px`,\n\t\t\toverflow: drawers.overflow,\n\t\t}\"\n\t>\n\t\t<!-- \n\t\t----\n\t\tGroups content\n\t\t----\n\t\t-->\n\t\t<div\n\t\t\tref=\"contentElement\"\n\t\t\tclass=\"xone-group\"\n\t\t\t:style=\"{\n\t\t\t\tmarginLeft: null,\n\t\t\t\tmaxHeight: contentElementHeight && `${contentElementHeight - groupsHeaderHeight}px`,\n\t\t\t}\"\n\t\t>\n\t\t\t<Container\n\t\t\t\t:class=\"('tabcontent', groupAnimation)\"\n\t\t\t\tv-for=\"group in groups.tabs\"\n\t\t\t\t:key=\"`group-${group.attributes.name}`\"\n\t\t\t\t:xoneDataObject=\"xoneDataObject\"\n\t\t\t\t:control=\"group\"\n\t\t\t\t:containerWidth=\"containerWidth\"\n\t\t\t\t:containerHeight=\"contentElementHeight - groupsHeaderHeight\"\n\t\t\t></Container>\n\t\t</div>\n\t\t<!-- \n\t\t----\n\t\tDrawers\n\t\t----\n\t\t-->\n\t\t<!-- Close Drawers -->\n\t\t<div\n\t\t\tclass=\"xone-close-drawer\"\n\t\t\t:class=\"[drawers.showLeft || drawers.showRight ? 'fade-in' : 'fade-out']\"\n\t\t\tv-if=\"drawers.showLeft || drawers.showRight\"\n\t\t\t@click=\"drawers.closeDrawers()\"\n\t\t></div>\n\t\t<!-- Drawer Left -->\n\t\t<Container\n\t\t\tv-if=\"groups.drawerLeft.length !== 0\"\n\t\t\t:id=\"`xone-sidenav-left-${breadcrumb.id}`\"\n\t\t\tclass=\"xone-sidenav-left\"\n\t\t\t:xoneDataObject=\"xoneDataObject\"\n\t\t\t:control=\"groups.drawerLeft[0]\"\n\t\t\t:containerWidth=\"containerWidth\"\n\t\t\t:containerHeight=\"containerHeight\"\n\t\t\t:style=\"{\n\t\t\t\topacity: drawers.showLeft ? 1 : 0,\n\t\t\t\tmarginLeft: `${drawers.showLeft ? 0 : -drawers.leftWidth}px`,\n\t\t\t\tpointerEvents: drawers.showLeft ? 'all' : 'none',\n\t\t\t}\"\n\t\t></Container>\n\t\t<!-- Drawer Right -->\n\t\t<Container\n\t\t\tv-if=\"groups.drawerRight.length !== 0\"\n\t\t\t:id=\"`xone-sidenav-right-${breadcrumb.id}`\"\n\t\t\tclass=\"xone-sidenav-right\"\n\t\t\t:xoneDataObject=\"xoneDataObject\"\n\t\t\t:control=\"groups.drawerRight[0]\"\n\t\t\t:containerWidth=\"containerWidth\"\n\t\t\t:containerHeight=\"containerHeight\"\n\t\t\t:style=\"{\n\t\t\t\topacity: drawers.showRight ? 1 : 0,\n\t\t\t\tmarginRight: `${drawers.showRight ? 0 : -drawers.rightWidth}px`,\n\t\t\t\tpointerEvents: drawers.showRight ? 'all' : 'none',\n\t\t\t}\"\n\t\t></Container>\n\t</div>\n\t<!--\n\t----\n\tFixed bottom\n\t----\n\t-->\n\t<div ref=\"fixedBottomElement\" :id=\"`fixed-bottom-${breadcrumb.id}`\" class=\"xone-fixed\" v-if=\"groups.fixedBottom.length !== 0\">\n\t\t<Container\n\t\t\tv-for=\"fixed in groups.fixedBottom\"\n\t\t\t:key=\"`fixed-bottom-${fixed.attributes.name}`\"\n\t\t\t:xoneDataObject=\"xoneDataObject\"\n\t\t\t:control=\"fixed\"\n\t\t\t:containerWidth=\"containerWidth\"\n\t\t\t:containerHeight=\"containerHeight\"\n\t\t></Container>\n\t</div>\n</template>\n\n<script>\n// vue\nimport { computed, inject, onBeforeMount, onMounted, onUnmounted, provide, reactive, ref, Ref, watchEffect, ComputedRef, watch, PropType } from \"vue\";\n// components\nimport Groups from \"./Groups.vue\";\n// composables\nimport { SwipeHandler } from \"../composables/SwipeHandler\";\nimport AppDataHandler, { Breadcrumb, Objectinfo } from \"../composables/AppDataHandler\";\nimport {\n\tgetCollGroups,\n\tshowGroup,\n\tslideGroup,\n\tgetDrawersWidth,\n\twatchContentElementSize,\n\tCollGroups,\n} from \"../composables/helperFunctions/GroupsHelper\";\nimport { xoneAttributesHandler, ContainerAttributes } from \"../composables/XoneAttributesHandler\";\nimport xoneUI, { setShowGroupCallback, setXoneDataObject } from \"../composables/XoneUI\";\nimport { XoneDataObject } from \"../composables/appData/core/XoneDataObject\";\nimport { XoneView } from \"../composables/XoneViewsHandler\";\n\nexport default {\n\tprops: {\n\t\tbreadcrumb: {\n\t\t\ttype: Object,\n\t\t\tdefault: null,\n\t\t},\n\t\tisLayout: { type: Boolean, default: false },\n\t\t/** @type {PropType<Objectinfo>} */\n\t\tobjectInfo: { type: Object, default: null },\n\t},\n\tcomponents: {\n\t\tGroups,\n\t},\n\tsetup(props) {\n\t\t/**\n\t\t * Get XoneDataObject\n\t\t * @type {XoneDataObject}\n\t\t */\n\t\tconst xoneDataObject = AppDataHandler.getDataObject(props.breadcrumb.id);\n\n\t\t// Do Model Reactive\n\t\txoneDataObject.doModelReactive();\n\n\t\t/**\n\t\t * Last breadcrumb in stack\n\t\t * @type {ComputedRef<Breadcrumb>}\n\t\t */\n\t\tconst lastBreadcrumb = inject(\"lastBreadcrumb\");\n\n\t\t// Provide breadcrumbId info to child components\n\t\tprovide(\"breadcrumbId\", props.breadcrumb.id);\n\n\t\t/**\n\t\t * Layout model\n\t\t * @type {Ref<Object>}\n\t\t */\n\t\tconst layout = ref();\n\n\t\t/**\n\t\t * Viewport size conditions sm / md / lg\n\t\t * @type {Ref<string>}\n\t\t */\n\t\tconst sizeConditions = inject(\"sizeConditions\");\n\n\t\t/**\n\t\t * orientation vertical / horizontal\n\t\t * @type {Ref<string>}\n\t\t */\n\t\tconst orientation = inject(\"orientation\");\n\n\t\tconst getLayoutAsync = async () => {\n\t\t\t// Get Layout\n\t\t\tlayout.value = await xoneDataObject.getLayoutAsync();\n\t\t\txoneDataObject.setLayout(layout.value);\n\n\t\t\t//\n\t\t\t// Execute onvisualconditionschange\n\t\t\txoneDataObject.ExecuteNode(\"onvisualconditionschange\", sizeConditions.value, orientation.value).catch(console.error);\n\t\t};\n\n\t\tlayout.value = xoneDataObject.getLayout();\n\t\txoneDataObject.setLayout(layout.value);\n\n\t\t// Change size Conditions\n\t\twatch(\n\t\t\t() => sizeConditions.value,\n\t\t\t() => getLayoutAsync()\n\t\t);\n\n\t\t// watch(\n\t\t// \t() => orientation.value,\n\t\t// \t() => getLayoutAsync()\n\t\t// );\n\n\t\t/**\n\t\t * Collection attributes\n\t\t * @type {ComputedRef<ContainerAttributes>}\n\t\t */\n\t\tconst attributes = computed(() => xoneAttributesHandler.getContainerAttributes(layout.value.attributes));\n\n\t\tconst isBeforeEditExecuted = ref(false);\n\t\tprovide(\"isBeforeEditExecuted\", isBeforeEditExecuted);\n\n\t\t// Execute node before-edit\n\t\tonBeforeMount(() =>\n\t\t\txoneDataObject\n\t\t\t\t.ExecuteNode(\"before-edit\")\n\t\t\t\t.catch(console.error)\n\t\t\t\t.finally(() => (isBeforeEditExecuted.value = true))\n\t\t);\n\n\t\t// onBeforeUnmount(() => {\n\t\t// \txoneDataObject\n\t\t// \t\t.ExecuteNode(\"onback\")\n\t\t// \t\t.catch(console.error)\n\t\t// \t\t.finally(() => console.log(xoneDataObject));\n\t\t// });\n\n\t\t// Execute node after-edit\n\t\tonMounted(async () => {\n\t\t\txoneDataObject.ExecuteNode(\"onvisualconditionschange\", sizeConditions.value, orientation.value).catch(console.error);\n\t\t\txoneUI.hideLoader();\n\t\t\twhile (!isBeforeEditExecuted.value) await new Promise((resolve) => setTimeout(() => resolve(), 5));\n\t\t\txoneDataObject.ExecuteNode(\"after-edit\").catch(console.error);\n\t\t});\n\n\t\t//\n\t\t// Manage coll groups\n\n\t\t/**\n\t\t * Groups\n\t\t * @type {ComputedRef<CollGroups>}\n\t\t */\n\t\tconst groups = computed(() => getCollGroups(layout.value?.controls));\n\n\t\t/**\n\t\t * Active Group\n\t\t * @type {Ref<string>}\n\t\t */\n\t\tconst activeGroup = ref(groups.value.tabs.length !== 0 && groups.value.tabs[0].attributes.id);\n\n\t\tconst changeGroup = (id, isToggle = false, isHide = false) => showGroup(id, groups.value, drawers, activeGroup, groupAnimation, isToggle, isHide);\n\n\t\t/**\n\t\t * Window Size\n\t\t * @type {{containerWidth: Ref<number>|ComputedRef<number>, containerHeight: Ref<number>|ComputedRef<number>}}\n\t\t */\n\t\tconst { containerWidth, containerHeight } = inject(\"containerSize\");\n\n\t\t/**\n\t\t * Group tab content element\n\t\t * @type {Ref<number>}\n\t\t */\n\t\tconst contentElementHeight = ref(containerWidth.value);\n\n\t\tconst fixedTopElement = ref();\n\t\tconst fixedBottomElement = ref();\n\n\t\t// Watch contents element height changes\n\t\twatchContentElementSize(contentElementHeight, containerHeight, containerWidth, fixedTopElement, fixedBottomElement, props.breadcrumb.id);\n\n\t\t/**\n\t\t * xone View\n\t\t * @type {XoneView}\n\t\t */\n\t\tconst xoneView = new XoneView(xoneDataObject);\n\t\txoneView.showGroup = (id) => changeGroup(id);\n\t\txoneView.hideGroup = (id) => changeGroup(id, false, true);\n\t\txoneView.toggleGroup = (id) => changeGroup(id, true);\n\n\t\tprovide(\"xoneView\", xoneView);\n\n\t\t// Current XoneDataObject focused\n\t\twatchEffect(() => {\n\t\t\tif (props.breadcrumb.id === lastBreadcrumb.value?.id) {\n\t\t\t\t// Send changeGroup to XoneUI showGroup method\n\t\t\t\tsetShowGroupCallback(changeGroup);\n\t\t\t\t// Send refresh items\n\t\t\t\tsetXoneDataObject(xoneDataObject);\n\t\t\t}\n\t\t});\n\n\t\t// Provide groupHandler to child components\n\t\tprovide(\"groupHandler\", {\n\t\t\t// active group\n\t\t\tactiveGroup: activeGroup,\n\t\t\t// change group callback function\n\t\t\tchangeGroup,\n\t\t});\n\n\t\t/**\n\t\t * Group transition animation\n\t\t * @type {Ref<string>}\n\t\t */\n\t\tconst groupAnimation = ref(\"\");\n\n\t\t/**\n\t\t * contentElement\n\t\t * @type {Ref<HTMLElement>}\n\t\t */\n\t\tconst contentElement = ref();\n\t\t/**\n\t\t * Change current group by swipe\n\t\t * @type {SwipeHandler}\n\t\t */\n\t\tlet swipeHandler;\n\t\t// Initialize group swipe handler\n\t\tonMounted(() => {\n\t\t\tif (!attributes.value.groupSwipe) return;\n\t\t\tswipeHandler = new SwipeHandler(\n\t\t\t\t// swipe group callback function\n\t\t\t\t(step) => slideGroup(step, groups.value, activeGroup, groupAnimation)\n\t\t\t);\n\t\t\tswipeHandler.init(contentElement.value);\n\t\t});\n\t\t// clear group swipe handler\n\t\tonUnmounted(() => swipeHandler?.clear());\n\n\t\t/**\n\t\t * drawers\n\t\t */\n\t\tconst drawers = reactive({\n\t\t\tleftWidth: 0,\n\t\t\trightWidth: 0,\n\t\t\tshowLeft: false,\n\t\t\tshowRight: false,\n\t\t\toverflow: \"hidden\",\n\t\t\tcloseDrawers: () => {\n\t\t\t\tdrawers.showLeft = false;\n\t\t\t\tdrawers.showRight = false;\n\t\t\t},\n\t\t\tcurrentWindowWidth: containerWidth.value,\n\t\t});\n\n\t\t// Get drawers width\n\t\tonMounted(() => getDrawersWidth(drawers, containerWidth, props.breadcrumb.id));\n\n\t\t// Provide object info\n\t\tprovide(\"objectInfo\", props.objectInfo || { isContents: false });\n\n\t\tconst groupsHeaderHeight = ref(0);\n\n\t\tconst onGroupsHeaderHeightChanged = (value) => (groupsHeaderHeight.value = value);\n\n\t\treturn {\n\t\t\tattributes,\n\t\t\tgroups,\n\t\t\tdrawers,\n\t\t\tgroupAnimation,\n\t\t\tcontainerWidth,\n\t\t\tcontainerHeight,\n\t\t\txoneDataObject,\n\t\t\tfixedTopElement,\n\t\t\tfixedBottomElement,\n\t\t\tcontentElementHeight,\n\t\t\tcontentElement,\n\t\t\tonGroupsHeaderHeightChanged,\n\t\t\tgroupsHeaderHeight,\n\t\t};\n\t},\n};\n</script>\n\n<style scoped>\n.xone-fixed {\n\tdisplay: block;\n}\n\n.xone-groups-content-box {\n\twidth: var(--app-width);\n\tposition: relative;\n\tdisplay: flex;\n\t/* overflow: hidden; */\n\toverflow: hidden;\n\tflex-grow: 1;\n\tflex-shrink: 1;\n}\n\n.xone-close-drawer {\n\tz-index: 999;\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100vw;\n\theight: 100vh;\n\tbackground-color: black;\n\tpointer-events: all;\n}\n\n.fade-in {\n\tanimation: fadeIn05 0.3s;\n\topacity: 0.5;\n}\n\n.fade-out {\n\tanimation: fadeOut05 0.3s;\n\topacity: 0;\n}\n\n.xone-group {\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-shrink: 0;\n\tflex-grow: 1;\n\toverflow: hidden;\n\theight: auto;\n\ttransition: opacity 0s, margin-left 0.3s, margin-right 0.3s;\n}\n\n.xone-sidenav-left {\n\tz-index: 999;\n\tposition: absolute;\n\tflex-shrink: 0;\n\ttop: auto;\n\tleft: 0;\n\twidth: auto;\n\tpointer-events: all;\n\topacity: 0;\n\ttransition: all 0.3s;\n\t/* box-shadow: 0 0 10px 2px rgba(0, 0, 0, 0.2), 0 0px 10px rgba(0, 0, 0, 0.24); */\n}\n\n.xone-sidenav-right {\n\tz-index: 999;\n\tposition: absolute;\n\tflex-shrink: 0;\n\ttop: auto;\n\tright: 0;\n\twidth: auto;\n\tpointer-events: all;\n\topacity: 0;\n\ttransition: all 0.3s;\n\t/* box-shadow: 0 0 10px 2px rgba(0, 0, 0, 0.2), 0 0px 10px rgba(0, 0, 0, 0.24); */\n}\n\n/* Change group animations */\n.slide-left {\n\tanimation: slideLeft 0.2s; /* ease-out */\n}\n\n.slide-right {\n\tanimation: slideRight 0.2s; /*ease-out*/\n}\n\n@keyframes fadeIn05 {\n\tfrom {\n\t\topacity: 0;\n\t}\n\tto {\n\t\topacity: 0.5;\n\t}\n}\n\n@-webkit-keyframes fadeIn05 {\n\tfrom {\n\t\topacity: 0;\n\t}\n\tto {\n\t\topacity: 0.5;\n\t}\n}\n</style>\n","<template>\n\t<div\n\t\tclass=\"tab\"\n\t\tref=\"groupsElement\"\n\t\t:style=\"{\n\t\t\t// BackgroundColor\n\t\t\tbackgroundColor: attributes.tabBgColor,\n\t\t}\"\n\t>\n\t\t<button\n\t\t\t:class=\"['tablinks', activeGroup === group.attributes.id && 'activeGroup']\"\n\t\t\tv-for=\"group in groups\"\n\t\t\t:key=\"`grp-btn-${group.attributes.id}`\"\n\t\t\t@click=\"changeGroup(group.attributes.id)\"\n\t\t\t:style=\"{\n\t\t\t\t// Variables\n\t\t\t\t'--text-color': attributes.tabForecolor,\n\t\t\t\t'--selected-text-color': attributes.tabSelectedForecolor,\n\t\t\t\t// Padding\n\t\t\t\tpaddingTop: attributes.tabPaddings.top,\n\t\t\t\tpaddingRight: attributes.tabPaddings.right,\n\t\t\t\tpaddingBottom: attributes.tabPaddings.bottom,\n\t\t\t\tpaddingLeft: attributes.tabPaddings.left,\n\t\t\t\t// FontSize\n\t\t\t\tfontSize: attributes.tabFontSize,\n\t\t\t}\"\n\t\t>\n\t\t\t{{ group.attributes.name }}\n\t\t</button>\n\t</div>\n</template>\n\n<script>\nimport { inject, nextTick, ref, watch } from \"vue\";\n\nexport default {\n\tname: \"Group\",\n\n\tprops: {\n\t\tattributes: { type: Object, required: true },\n\t\tgroups: {\n\t\t\ttype: Array,\n\t\t\tdefault: new Array(),\n\t\t},\n\t\tcontainerHeight: { type: Number, default: 0 },\n\t},\n\n\temits: [\"onHeightChanged\"],\n\n\tsetup(props, context) {\n\t\t/** @type {{activeGroup: Ref<string>, changeGroup: Function}} */\n\t\tconst { activeGroup, changeGroup } = inject(\"groupHandler\");\n\n\t\t/** @type {Ref<HTMLElement>} */\n\t\tconst groupsElement = ref();\n\n\t\tnextTick(() => context.emit(\"onHeightChanged\", groupsElement.value?.clientHeight || 0));\n\n\t\twatch(\n\t\t\t() => props.containerHeight,\n\t\t\tasync () => {\n\t\t\t\tawait nextTick();\n\t\t\t\tcontext.emit(\"onHeightChanged\", groupsElement.value?.clientHeight || 0);\n\t\t\t}\n\t\t);\n\n\t\treturn { activeGroup, changeGroup, groupsElement };\n\t},\n};\n</script>\n\n<style scoped>\n/* Style the tab */\n.tab {\n\toverflow: hidden;\n\t/* border: 1px solid #ccc; */\n\tborder-top: none;\n\tborder-right: none;\n\tborder-left: none;\n\tdisplay: flex;\n\toverflow-x: auto;\n\tflex-shrink: 0;\n}\n\n/* Style the buttons inside the tab */\n.tab button {\n\tbackground-color: inherit;\n\tcolor: var(--text-color);\n\tborder: none;\n\toutline: none;\n\tcursor: pointer;\n\tpadding: 7px 8px;\n\ttransition: 0.3s;\n\tfont-size: 17px;\n\tflex-shrink: 0;\n\tbox-sizing: border-box;\n\t-moz-box-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n}\n\n/* Change background color of buttons on hover */\n.tab button:hover {\n\tcolor: black;\n\t/* border-bottom: 1px solid black; */\n}\n\n/* Create an activeGroup/current tablink class */\n.tab button.activeGroup {\n\tcolor: var(--selected-text-color);\n\t/* border-bottom: 1px solid var(--selected-text-color); */\n}\n</style>\n","import { render } from \"./Groups.vue?vue&type=template&id=6ef7afb2&scoped=true\"\nimport script from \"./Groups.vue?vue&type=script&lang=js\"\nexport * from \"./Groups.vue?vue&type=script&lang=js\"\n\nimport \"./Groups.vue?vue&type=style&index=0&id=6ef7afb2&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/amiyares/Projects/XOne/XOneWebVue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6ef7afb2\"]])\n\nexport default __exports__","import { watchEffect, Ref, watch, nextTick, onMounted, inject } from \"vue\";\nimport { xoneAttributesHandler } from \"../XoneAttributesHandler\";\n\n/**\n * @typedef {Object} CollGroups\n * @property {Array} tabs\n * @property {Array} fixedTop\n * @property {Array} fixedBottom\n * @property {Array} drawerLeft\n * @property {Array} drawerRight\n */\n\n/**\n * Get coll groups\n * @param {Array} controls\n * @return {CollGroups}\n */\nexport const getCollGroups = (controls) => {\n\t// Tabs\n\treturn {\n\t\ttabs: controls\n\t\t\t?.filter((e) => {\n\t\t\t\tconst containerAttributes = xoneAttributesHandler.getContainerAttributes(e.attributes);\n\t\t\t\treturn e.attributes.node === \"group\" && !containerAttributes.fixed && !containerAttributes.drawerOrientation;\n\t\t\t})\n\t\t\t.filter((e) => e.controls?.length !== 0),\n\n\t\t// Fixed top\n\t\tfixedTop: controls\n\t\t\t?.filter((e) => {\n\t\t\t\tconst containerAttributes = xoneAttributesHandler.getContainerAttributes(e.attributes);\n\t\t\t\treturn e.attributes.node === \"group\" && containerAttributes.fixed && containerAttributes.orientation === \"top\";\n\t\t\t})\n\t\t\t.filter((e) => e.controls?.length !== 0),\n\n\t\t// Fixed bottom\n\t\tfixedBottom: controls\n\t\t\t?.filter((e) => {\n\t\t\t\tconst containerAttributes = xoneAttributesHandler.getContainerAttributes(e.attributes);\n\t\t\t\treturn e.attributes.node === \"group\" && containerAttributes.fixed && containerAttributes.orientation === \"bottom\";\n\t\t\t})\n\t\t\t.filter((e) => e.controls?.length !== 0),\n\n\t\t// Drawer left\n\t\tdrawerLeft: controls\n\t\t\t?.filter((e) => {\n\t\t\t\tconst containerAttributes = xoneAttributesHandler.getContainerAttributes(e.attributes);\n\t\t\t\treturn e.attributes.node === \"group\" && !containerAttributes.fixed && containerAttributes.drawerOrientation === \"left\";\n\t\t\t})\n\t\t\t.filter((e) => e.controls?.length !== 0),\n\n\t\t// Drawer right\n\t\tdrawerRight: controls\n\t\t\t?.filter((e) => {\n\t\t\t\tconst containerAttributes = xoneAttributesHandler.getContainerAttributes(e.attributes);\n\t\t\t\treturn e.attributes.node === \"group\" && !containerAttributes.fixed && containerAttributes.drawerOrientation === \"right\";\n\t\t\t})\n\t\t\t.filter((e) => e.controls?.length !== 0),\n\t};\n};\n\n/**\n * Change group | Open / Close drawer\n * @param {String} id\n * @param {Object} groups\n * @param {Object} drawers\n * @param {Ref<string>} activeGroup\n * @param {Ref<string>} groupAnimation\n * @param {boolean} [isToggle]\n * @param {boolean} [isToggle]\n */\nexport const showGroup = (id, groups, drawers, activeGroup, groupAnimation, isToggle = false, isHide = false) => {\n\t// Tabs\n\tconst tabGroup = groups.tabs.find((/** @type {{attributes: Object}} */ e) => e.attributes.id == id);\n\tif (tabGroup) {\n\t\tgroupAnimation.value = Number(activeGroup.value) === Number(id) ? \"\" : (Number(activeGroup.value) > Number(id) && \"slide-right\") || \"slide-left\";\n\t\tsetTimeout(() => (groupAnimation.value = \"\"), 250);\n\t\tactiveGroup.value = id;\n\t\tdocument.getElementById(\"content\")?.scroll(0, 0);\n\t\treturn;\n\t}\n\t// Drawer left\n\tconst leftDrawerGroup = groups.drawerLeft.find((/** @type {*} */ e) => e.attributes.id == id);\n\tif (leftDrawerGroup) {\n\t\tdrawers.showRight = false;\n\t\tif (isHide) drawers.showLeft = false;\n\t\telse if (drawers.showLeft || (isToggle && drawers.showLeft)) {\n\t\t\tdrawers.showLeft = false;\n\t\t\t// setTimeout(() => (drawers.overflow = \"hidden\"), 250);\n\t\t} else {\n\t\t\t// drawers.overflow = \"visible\";\n\t\t\tdrawers.showLeft = true;\n\t\t}\n\t\treturn;\n\t}\n\t// Drawer right\n\tconst rightDrawerGroup = groups.drawerRight.find((/** @type {*} */ e) => e.attributes.id == id);\n\tif (rightDrawerGroup) {\n\t\tdrawers.showLeft = false;\n\t\tif (isHide) drawers.showRight = false;\n\t\telse if (drawers.showRight || (isToggle && drawers.showRight)) {\n\t\t\tdrawers.showRight = false;\n\t\t\t// setTimeout(() => (drawers.overflow = \"hidden\"), 250);\n\t\t} else {\n\t\t\t// drawers.overflow = \"visible\";\n\t\t\tdrawers.showRight = true;\n\t\t}\n\t\treturn;\n\t}\n};\n\n/**\n * Slide group\n * @param {number} step\n * @param {Object} groups\n * @param {Ref<string>} activeGroup\n * @param {Ref<string>} groupAnimation\n */\nexport const slideGroup = (step, groups, activeGroup, groupAnimation) => {\n\tconst currentGroup = groups.tabs.find((/** @type {*} */ e) => e.attributes.id === activeGroup.value);\n\tif (!currentGroup) return;\n\tconst groupIndex = groups.tabs.indexOf(currentGroup);\n\tconst newGroup = groups.tabs[groupIndex + step];\n\tif (!newGroup) return;\n\tgroupAnimation.value = step < 0 ? \"slide-right\" : \"slide-left\";\n\tsetTimeout(() => (groupAnimation.value = \"\"), 250);\n\tactiveGroup.value = newGroup.attributes.id;\n};\n\n/**\n * Get width from drawer elements\n * @param {Object} drawers\n * @param {Ref<number>} containerWidth\n * @param {String} breadcrumbId\n */\nexport const getDrawersWidth = (drawers, containerWidth, breadcrumbId) => {\n\t{\n\t\t/**\n\t\t * drawer left element\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tconst drawerLeftElement = document.getElementById(`xone-sidenav-left-${breadcrumbId}`);\n\t\t/**\n\t\t * drawer right element\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tconst drawerRightElement = document.getElementById(`xone-sidenav-right-${breadcrumbId}`);\n\t\tconst setDrawersWidth = () => {\n\t\t\tdrawers.leftWidth = drawerLeftElement?.offsetWidth;\n\t\t\tdrawers.rightWidth = drawerRightElement?.offsetWidth;\n\t\t};\n\t\tsetDrawersWidth();\n\t\twatchEffect(() => {\n\t\t\tif (drawers.currentWindowWidth === containerWidth.value) return;\n\t\t\tdrawers.currentWindowWidth = containerWidth.value;\n\t\t\tsetTimeout(() => nextTick().then(() => setDrawersWidth(), 1));\n\t\t});\n\t}\n};\n\n/**\n * Watch contents element height changes\n * @param {Ref<Number>} contentsElementHeight\n * @param {Ref<Number>} containerHeight\n * @param {Ref<Number>} containerWidth\n * @param {Ref<HTMLElement>} fixedTopElement\n * @param {Ref<HTMLElement>} fixedBottomElement\n * @param {string} breadcrumbId\n */\nexport const watchContentElementSize = (\n\tcontentsElementHeight,\n\tcontainerHeight,\n\tcontainerWidth,\n\tfixedTopElement,\n\tfixedBottomElement,\n\tbreadcrumbId\n) => {\n\tconst resize = () => {\n\t\tresizeContentElementSize(contentsElementHeight, containerHeight, fixedTopElement, fixedBottomElement);\n\t};\n\tonMounted(() => {\n\t\tresize();\n\t\twatch(\n\t\t\t() => containerHeight.value,\n\t\t\t() => resize()\n\t\t);\n\t\twatch(\n\t\t\t() => containerWidth.value,\n\t\t\t() => resize()\n\t\t);\n\n\t\t/**\n\t\t * @type {import(\"@vue/reactivity\").ComputedRef<import(\"../AppDataHandler\").Breadcrumb>}\n\t\t */\n\t\tconst lastBreadcrumb = inject(\"lastBreadcrumb\");\n\t\twatchEffect(() => {\n\t\t\tif (lastBreadcrumb.value?.id === breadcrumbId) resize();\n\t\t});\n\t});\n};\n\n/**\n * Resize content element\n * @param {Ref<Number>} contentsElementHeight\n * @param {Ref<Number>} containerHeight\n * @param {Ref<HTMLElement>} fixedTopElement\n * @param {Ref<HTMLElement>} fixedBottomElement\n */\nconst resizeContentElementSize = async (contentsElementHeight, containerHeight, fixedTopElement, fixedBottomElement) => {\n\tawait nextTick();\n\tPromise.resolve().then(() => {\n\t\tcontentsElementHeight.value = containerHeight.value - (fixedTopElement.value?.offsetHeight ?? 0) - (fixedBottomElement.value?.offsetHeight ?? 0);\n\t});\n};\n","import { render } from \"./Coll.vue?vue&type=template&id=89d676b6&scoped=true\"\nimport script from \"./Coll.vue?vue&type=script&lang=js\"\nexport * from \"./Coll.vue?vue&type=script&lang=js\"\n\nimport \"./Coll.vue?vue&type=style&index=0&id=89d676b6&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/amiyares/Projects/XOne/XOneWebVue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-89d676b6\"]])\n\nexport default __exports__","export default class XoneConnDataFlags {\n}\nXoneConnDataFlags.PREFIX_MODIFIED = 0x00000001;\nXoneConnDataFlags.CONNSTRING_MODIFIED = 0x00000002;\nXoneConnDataFlags.ROWIDFIELD_MODIFIED = 0x00000004;\nXoneConnDataFlags.SQLFIELD_MODIFIED = 0x00000008;\nXoneConnDataFlags.ROWIDLEN_MODIFIED = 0x00000010;\nXoneConnDataFlags.OPERIDLEN_MODIFIED = 0x00000020;\nXoneConnDataFlags.DATEMASK_MODIFIED = 0x00000040;\nXoneConnDataFlags.TABLEQUOTE_MODIFIED = 0x00000080;\nXoneConnDataFlags.FIELDQUOTE_MODIFIED = 0x00000100;\nXoneConnDataFlags.SUBQUERIES_MODIFIED = 0x00000200;\n\n//# sourceMappingURL=XoneConnDataFlags.js.map\n","export class Guid {\n    constructor(guid) {\n        if (!guid) {\n            throw new TypeError(\"Invalid argument; `value` has no value.\");\n        }\n        this.value = Guid.EMPTY;\n        if (guid && Guid.isGuid(guid)) {\n            this.value = guid;\n        }\n    }\n    static isGuid(guid) {\n        const value = guid.toString();\n        return guid && (guid instanceof Guid || Guid.validator.test(value));\n    }\n    static create() {\n        return new Guid([Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\"));\n    }\n    static createEmpty() {\n        return new Guid(\"emptyguid\");\n    }\n    static parse(guid) {\n        return new Guid(guid);\n    }\n    static raw() {\n        return [Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\");\n    }\n    static gen(count) {\n        let out = \"\";\n        for (let i = 0; i < count; i++) {\n            // tslint:disable-next-line:no-bitwise\n            out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n        }\n        return out;\n    }\n    equals(other) {\n        // Comparing string `value` against provided `guid` will auto-call\n        // toString on `guid` for comparison\n        return Guid.isGuid(other) && this.value === other.toString();\n    }\n    isEmpty() {\n        return this.value === Guid.EMPTY;\n    }\n    toString() {\n        return this.value;\n    }\n    toJSON() {\n        return {\n            value: this.value,\n        };\n    }\n}\nGuid.validator = new RegExp(\"^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$\", \"i\");\nGuid.EMPTY = \"00000000-0000-0000-0000-000000000000\";\n\n//# sourceMappingURL=Guid.js.map\n","import Hashtable from \"../Collections/HashMap/Hashtable\";\nimport Calendar from \"../Utils/Calendar\";\nimport ObjectDeveloper from \"../Utils/ObjectDeveloper\";\nimport ObjUtils from \"../Utils/ObjUtils\";\nimport StringUtils from \"../Utils/StringUtils\";\nimport { Utils } from \"../Utils/Utils\";\nimport XoneConnDataFlags from \"./XoneConnDataFlags\";\nimport { Guid } from \"../Utils/Guid\";\nexport default class XoneConnectionData {\n    /**\n     * Crea una conexión con el nombre que se le indica.\n     *\n     * @param Name  Nombre de la conexión a crear.\n     * @param Owner Aplicación a la cual pertenece la conexión.\n     */\n    constructor(Name, Owner) {\n        /**\n         * Nombre de la conexión\n         */\n        this.m_strName = \"\";\n        /**\n         * Prefijo de las tablas con esta conexión.\n         */\n        this.m_strPrefix = \"\";\n        /**\n         * Separador para encerrar nombres de tablas (apertura)\n         */\n        this.m_strTableQuoteOpen = \"\";\n        /**\n         * Separador para encerrar nombres de tablas (cierre)\n         */\n        this.m_strTableQuoteClose = \"\";\n        /**\n         * Separador para encerrar nombres de campos (apertura)\n         */\n        this.m_strFieldQuoteOpen = \"\";\n        /**\n         * Separador para encerrar nombres de campos (cierre)\n         */\n        this.m_strFieldQuoteClose = \"\";\n        if (StringUtils.IsEmptyString(Name)) {\n            this.m_strName = XoneConnectionData.MAIN_CONNECTION;\n        }\n        else {\n            this.m_strName = Name;\n        }\n        // Guardar el propietario\n        this.m_owner = Owner;\n        // ADD TAG Crear el objeto para el developer\n        this.m_developer = new ObjectDeveloper();\n        // Valores por defectos para los nombres de los campos y demás\n        this.m_strRowIdFieldName = \"ROWID\";\n        this.m_strSqlFieldName = \"SQL\";\n        //        this.m_nOperIdLength = 50;\n        /*\n         * TODO ADD TAG 04/05/2015 Juan Carlos:\n         * Subo el límite de 50 a 100, en principio\n         * es código muy viejo y realmente ni hace falta.\n         */\n        this.m_nOperIdLength = 100;\n        this.m_nRowIdLength = 35;\n        // Crear la lista de InitStrings\n        this.m_lstInitStrings = new Array();\n        // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n        this.m_messages = Owner.getMessageHolder();\n        // A13080703: Mecanismo para adicionar propiedades extendidas a las conexiones.\n        this.m_extendedProperties = new Hashtable();\n        // TAG 20050205: Luis: exponer metodos script en esta clase\n        //this.addJavascriptFunctions();\n    }\n    PrepareFilter(strSQL) {\n        throw new Error(\"Method not implemented.\");\n    }\n    // A13080703: Mecanismo para adicionar propiedades extendidas a las conexiones.\n    // TAG 20050204: Luis: exponer en los script las propiedades extendidas del conmstring para tratarlas\n    // esto permite agregar dinamicamente por script propiedades al connstring\n    //@ScriptAllowed\n    addExtendedProperty(key, value) {\n        if (this.m_extendedProperties == null) {\n            this.m_extendedProperties = new Hashtable();\n        }\n        this.m_extendedProperties.put(key, value);\n        return 0;\n    }\n    // TAG 20050204: Luis: exponer en los script las propiedades extendidas del conmstring para tratarlas\n    // esto permite agregar dinamicamente por script propiedades al connstring\n    //@ScriptAllowed\n    removeExtendedProperty(key) {\n        if (this.m_extendedProperties != null) {\n            if (this.m_extendedProperties.containsKey(key)) {\n                this.m_extendedProperties.delete(key);\n            }\n        }\n        return 0;\n    }\n    // TAG 20050204: Luis: exponer en los script las propiedades extendidas del conmstring para tratarlas\n    // esto permite agregar dinamicamente por script propiedades al connstring\n    //@ScriptAllowed\n    getExtendedProperty(key) {\n        if (this.m_extendedProperties == null) {\n            return null;\n        }\n        if (!this.m_extendedProperties.containsKey(key)) {\n            return null;\n        }\n        return this.m_extendedProperties.get(key);\n    }\n    getExtendedList() {\n        return this.m_extendedProperties;\n    }\n    /**\n     * Expone el nombre de la conexión.\n     *\n     * @return Devuelve el nombre de la conexión.\n     */\n    getName() {\n        return this.m_strName;\n    }\n    /**\n     * Expone o asigna valor al prefijo de las tablas en esta conexión.\n     *\n     * @return Devuelve el prefijo de las tablas en esta conexión.\n     */\n    getPrefix() {\n        return this.m_strPrefix;\n    }\n    /**\n     * Asigna valor al prefijo de datos de las tablas en esta conexión.\n     *\n     * @param value Nuevo valor del prefijo.\n     */\n    setPrefix(value) {\n        this.m_strPrefix = value;\n        this.m_nFlags |= XoneConnDataFlags.PREFIX_MODIFIED;\n    }\n    /**\n     * Expone o asigna valor al nodo XML con los datos de la conexión\n     *\n     * @return Devuelve el nodo XML del que se hayan sacado los datos de esta conexión.\n     */\n    getNodeData() {\n        return this.m_xmlNodeData;\n    }\n    /**\n     * A11092603: Permitir que la maquinaria utilice transacciones si la conexión lo permite.\n     *\n     * @return TRUE si la conexión soporta transacciones.\n     */\n    supportsTransactions() {\n        return this.m_bSupportsTransactions;\n    }\n    /**\n     * Asigna un nodo de datos XML para sacar de él los datos de declaración de la conexión\n     *\n     * @param value Nodo XML con los datos de la conexión.\n     */\n    setNodeData(value) {\n        if (null != (this.m_xmlNodeData = value)) { // Sacar algunas cosas del nodo\n            // A11111101: Soportar plataformas a nivel de nodos de conexión.\n            // Comprobar si tiene nodo platform\n            if (!StringUtils.IsEmptyString(this.m_strPlatform)) {\n                this.m_platform = this.m_xmlNodeData.SelectSingleNode(\"platform\", \"name\", this.m_strPlatform);\n            }\n            let str = \"\";\n            // A11111101: Soportar plataformas a nivel de nodos de conexión.\n            // Sacar los valores usando GetNodeValue\n            // El prefijo se puede definir según la sintaxis antigua\n            //////if (!StringUtils.IsEmptyString(str = XmlUtils.GetNodeAttr(this.m_xmlNodeData, \"prefix\")))\n            if (!StringUtils.IsEmptyString(str = this.GetNodeValue(\"prefix\"))) {\n                this.setPrefix(str);\n            }\n            // Los tags para encerrar nombres de campos y tablas\n            //////if (!StringUtils.IsEmptyString(str = XmlUtils.GetNodeAttr(this.m_xmlNodeData, \"tablequote\")))\n            if (!StringUtils.IsEmptyString(str = this.GetNodeValue(\"tablequote\"))) { // Sacar los datos\n                if (str.length == 1) { // Los dos son iguales\n                    this.setTableQuoteOpen(str);\n                    this.setTableQuoteClose(str);\n                } // Los dos son iguales\n                else { // Diferentes\n                    this.setTableQuoteOpen(str.substring(0, 1));\n                    // F09042201:\tSubstring no funciona igual en java que en .NET Arreglar Blackberry\n                    this.setTableQuoteClose(str.substring(1, str.length));\n                } // Diferentes\n            } // Sacar los datos\n            //////if (!StringUtils.IsEmptyString(str = XmlUtils.GetNodeAttr(this.m_xmlNodeData, \"fieldquote\")))\n            if (!StringUtils.IsEmptyString(str = this.GetNodeValue(\"fieldquote\"))) { // Sacar los datos\n                if (str.length == 1) { // Los dos son iguales\n                    this.setFieldQuoteOpen(str);\n                    this.setFieldQuoteClose(str);\n                } // Los dos son iguales\n                else { // Diferentes\n                    this.setTableQuoteOpen(str.substring(0, 1));\n                    // F09042201:\tSubstring no funciona igual en java que en .NET Arreglar Blackberry\n                    this.setTableQuoteClose(str.substring(1, str.length));\n                } // Diferentes\n            } // Sacar los datos\n            // A11092603: Permitir que la maquinaria utilice transacciones si la conexión lo permite.\n            // Ver si soportamos transacciones o no\n            //////m_bSupportsTransactions =StringUtils.ParseBoolValue(this.m_xmlNodeData.getAttrValue(\"transactions\"), false);\n            this.m_bSupportsTransactions = StringUtils.ParseBoolValue(this.GetNodeValue(\"transactions\"), false);\n            // F11041502:\tComo parte  de la asignación del nodo XML sacar la cadena de conexión.\n            //////if (!StringUtils.IsEmptyString(str =this.m_xmlNodeData.getAttrValue(\"connstring\")))\n            if (!StringUtils.IsEmptyString(str = this.GetNodeValue(\"connstring\"))) {\n                this.m_strConnString = str;\n            }\n            if (!StringUtils.IsEmptyString(str = this.GetNodeValue(\"datemask\"))) {\n                this.setDatemask(str);\n            }\n        } // Sacar algunas cosas del nodo\n    }\n    /**\n     * Expone o asigna valor a la cadena de conexión\n     *\n     * @return Devuelve la cadena de conexión para este objeto.\n     */\n    // TAG 20050207: Luis: exponer el connstring a la humanidad para que puedan utilizarlo\n    //@ScriptAllowed\n    getConnString() {\n        return this.m_strConnString;\n    }\n    /**\n     * Asigna valor a la cadena de conexión de este objeto.\n     *\n     * @param value Nuevo valor para la cadena de conexión.\n     */\n    // TAG 20050207: Luis: exponer el connstring a la humanidad para que puedan utilizarlo\n    //@ScriptAllowed\n    setConnString(value) {\n        this.m_strConnString = value;\n        this.m_nFlags |= XoneConnDataFlags.CONNSTRING_MODIFIED;\n    }\n    /**\n     * Expone o asigna valor a la banderilla que indica si la conexión replica o no.\n     *\n     * @return Devuelve la bandera que indica si esta conexión está replicando o no.\n     */\n    getIsReplicating() {\n        return this.m_bIsReplicating;\n    }\n    /**\n     * Asigna valor a la bandera que indica si la conexión está replicando o no.\n     *\n     * @param value TRUE para indicar que la conexión replica a la hora de ejecutar sentencias SQL.\n     */\n    setIsReplicating(value) {\n        this.m_bIsReplicating = value;\n    }\n    /**\n     * Expone o asigna valor al MID que va a usar esta conexión para replicar\n     *\n     * @return Devuelve el valor del MID asignado a esta conexión.\n     */\n    getMID() {\n        return this.m_nMid;\n    }\n    /**\n     * Asigna valor al MID de esta conexión.\n     *\n     * @param value Nuevo valor del MID para generar ROWIDs y demás cosillas.\n     */\n    setMID(value) {\n        this.m_nMid = value;\n    }\n    /**\n     * Expone o asigna valor al DBID que va a usar esta conexión para replicar\n     *\n     * @return Devuelve el valor del DBID asignado a esta conexión para la réplica.\n     */\n    getDBID() {\n        return this.m_nDbId;\n    }\n    /**\n     * Asigna valor al DBID usado para generar ROWIDs y cosas por el estilo.\n     *\n     * @param value Nuevo valor del DBID para esta conexión.\n     */\n    setDBID(value) {\n        this.m_nDbId = value;\n    }\n    /**\n     * Expone o asigna valor al campo ROWID de la base de datos que se va a usar\n     *\n     * @return Devuelve el nombre del campo ROWID para esta conexión.\n     */\n    getRowIdFieldName() {\n        return this.m_strRowIdFieldName;\n    }\n    /**\n     * Asigna valor al nombre del campo ROWID de esta conexión de datos.\n     *\n     * @param value Nuevo valor para el nombre del campo ROWID de la conexión.\n     */\n    setRowIdFieldName(value) {\n        this.m_strRowIdFieldName = value;\n        if (StringUtils.IsEmptyString(this.m_strRowIdFieldName)) {\n            this.m_strRowIdFieldName = \"ROWID\";\n        }\n        else {\n            this.m_nFlags |= XoneConnDataFlags.ROWIDFIELD_MODIFIED;\n        }\n    }\n    /**\n     * Expone o asigna valor al campo SQL de la base de datos que se va a usar\n     *\n     * @return Devuelve el nombre del campo SQL para esta conexión.\n     */\n    getSqlFieldName() {\n        return this.m_strSqlFieldName;\n    }\n    /**\n     * Asigna valor al nombre del campo SQL para esta conexión.\n     *\n     * @param value Nombre del nuevo campo SQL para esta conexión.\n     */\n    setSqlFieldName(value) {\n        this.m_strSqlFieldName = value;\n        this.m_nFlags |= XoneConnDataFlags.SQLFIELD_MODIFIED;\n    }\n    /**\n     * Expone o asigna valor al tamaño del ROWID en esta conexión\n     *\n     * @return Devuelve el tamaño del campo ROWID para esta conexión.\n     */\n    getRowIdLength() {\n        return this.m_nRowIdLength;\n    }\n    /**\n     * Asigna valor al tamaño del campo ROWID de esta conexión.\n     *\n     * @param value Nuevo tamaño del campo ROWID para esta conexión (más de 35)\n     */\n    setRowIdLength(value) {\n        this.m_nRowIdLength = value;\n        // No puede ser menor que 35.. es el tamaño mínimo...\n        if (this.m_nRowIdLength < 35) {\n            this.m_nRowIdLength = 35;\n        }\n        else {\n            this.m_nFlags |= XoneConnDataFlags.ROWIDLEN_MODIFIED;\n        }\n    }\n    /**\n     * Expone o asigna valor al tamaño del OPERID en esta conexión\n     *\n     * @return Devuelve el tamaño del campo OPERID para esta conexión.\n     */\n    getOperIdLength() {\n        return this.m_nOperIdLength;\n    }\n    /**\n     * Asigna valor al tamaño del campo OPERID de esta conexión.\n     *\n     * @param value Nuevo tamaño del campo OPERID para esta conexión.\n     */\n    setOperIdLength(value) {\n        this.m_nOperIdLength = value;\n        // El tamaño no puede ser menor que el mínimo (50)\n        if (this.m_nOperIdLength < 50) {\n            this.m_nOperIdLength = 50;\n        }\n        else {\n            this.m_nFlags |= XoneConnDataFlags.OPERIDLEN_MODIFIED;\n        }\n    }\n    /**\n     * Expone la lista de cadenas de inicialización para esta conexión en concreto\n     *\n     * @return Devuelve una lista de cadenas de inicialización para esta conexión.\n     */\n    getInitStrings() {\n        return this.m_lstInitStrings;\n    }\n    /**\n     * Expone o asigna valor al datemask de esta conexión\n     *\n     * @return Devuelve la máscara de fecha para esta conexión.\n     */\n    getDatemask() {\n        return this.m_strDatemask;\n    }\n    /**\n     * Asigna valor a la máscara de fecha para esta conexión.\n     *\n     * @param value Nuevo valor para la máscara de fecha de la conexión.\n     */\n    setDatemask(value) {\n        this.m_strDatemask = value;\n        if (!StringUtils.IsEmptyString(this.m_strDatemask)) {\n            this.m_nFlags |= XoneConnDataFlags.DATEMASK_MODIFIED;\n        }\n    }\n    /**\n     * Expone las banderas que indican qué campos se han modificado desde el exterior.\n     *\n     * @return Devuelve el valor del campo de banderas de la conexión.\n     */\n    getFlags() {\n        return this.m_nFlags;\n    }\n    /**\n     * Separador para encerrar nombres de tablas (apertura)\n     *\n     * @return Devuelve el separador de inicio para encerrar los nombres de tablas.\n     */\n    getTableQuoteOpen() {\n        return this.m_strTableQuoteOpen;\n    }\n    /**\n     * Asigna valor para el separador de inicio de los nombres de tablas.\n     *\n     * @param value Caracter o secuencia de caracteres para iniciar los nombres de tablas.\n     */\n    setTableQuoteOpen(value) {\n        if (!StringUtils.IsEmptyString(this.m_strTableQuoteOpen = value)) {\n            this.m_nFlags |= XoneConnDataFlags.TABLEQUOTE_MODIFIED;\n        }\n    }\n    /**\n     * Separador para encerrar nombres de tablas (cierre)\n     *\n     * @return Devuelve el caracter o secuencia de caracteres para finalizar los nombres de tablas.\n     */\n    getTableQuoteClose() {\n        return this.m_strTableQuoteOpen;\n    }\n    /**\n     * Asigna valor al caracter o secuencia de caracteres para finalizar los nombres de tablas.\n     *\n     * @param value Nuevo valor para el caracter o secuencia de caracteres de terminación de los nombres de tablas.\n     */\n    setTableQuoteClose(value) {\n        if (!StringUtils.IsEmptyString(this.m_strTableQuoteClose = value)) {\n            this.m_nFlags |= XoneConnDataFlags.TABLEQUOTE_MODIFIED;\n        }\n    }\n    /**\n     * Separador para encerrar nombres de campos (apertura)\n     *\n     * @return Devuelve el caracter o secuencia de caracteres para iniciar los nombres de campos.\n     */\n    getFieldQuoteOpen() {\n        return this.m_strFieldQuoteOpen;\n    }\n    /**\n     * Asigna valor al caracter o secuencia de caracteres para iniciar los nombres de campos.\n     *\n     * @param value Nuevo valor para la secuencia de caracteres de inicio de los nombres de campos.\n     */\n    setFieldQuoteOpen(value) {\n        if (!StringUtils.IsEmptyString(this.m_strFieldQuoteOpen = value)) {\n            this.m_nFlags |= XoneConnDataFlags.FIELDQUOTE_MODIFIED;\n        }\n    }\n    /**\n     * Separador para encerrar nombres de campos (cierre)\n     *\n     * @return Devuelve el caracter o secuencia de caracteres para finalizar los nombres de campos de esta conexión.\n     */\n    getFieldQuoteClose() {\n        return this.m_strFieldQuoteClose;\n    }\n    /**\n     * Asigna valor al caracter o secuencia de caracteres para finalizar los nombres de campos.\n     *\n     * @param value Nuevo valor del caracter o secuencia de caracteres usados para terminar los nombres de campo.\n     */\n    setFieldQuoteClose(value) {\n        if (!StringUtils.IsEmptyString(this.m_strFieldQuoteClose = value)) {\n            this.m_nFlags |= XoneConnDataFlags.FIELDQUOTE_MODIFIED;\n        }\n    }\n    /**\n     * TRUE si esta conexión soporta subqueries\n     *\n     * @return Devuelve la bandera que indica si la conexión soporta subqueries.\n     */\n    getSubqueries() {\n        return this.m_bSubqueries;\n    }\n    /**\n     * Asigna valor a la bandera que indica si la conexión soporta subqueries o no.\n     *\n     * @param value TRUE si la conexión soporta subqueries.\n     */\n    setSubqueries(value) {\n        this.m_bSubqueries = value;\n        this.m_nFlags |= XoneConnDataFlags.SUBQUERIES_MODIFIED;\n    }\n    /**\n     * Prefijo con el guión necesario para sustituir en las macros\n     *\n     * @return Devuelve el prefijo de las tablas con el guion ya colocado.\n     */\n    getDevelopedPrefix() {\n        // Si no hay prefijo, devolvemos una cadena vacía utilizable\n        if (StringUtils.IsEmptyString(this.m_strPrefix)) {\n            return \"\";\n        }\n        // De lo contrario el prefijo con el guión\n        return this.m_strPrefix + \"_\";\n    }\n    /**\n     * Esta función obtiene una conexión física a la fuente de datos. Reintenta tantas veces como se indique. Llama a la abstracta GetNewConnection sin parámetros.\n     *\n     * @param RetryCount Cantidad de veces que se reintenta en caso de que no se pueda obtener ninguna conexión.\n     * @return Devuelve la conexión o NULL si no se ha podido crear ninguna.\n     * @throws Exception\n     */\n    GetRetryConnection(RetryCount, ReadOnly) {\n        for (let i = 0; i < RetryCount; i++) { // Reintentar varias veces\n            let connection;\n            if (null != (connection = this.GetNewConnection(ReadOnly))) {\n                return connection;\n            }\n            // Dormir un poco para esperar\n            //Thread.sleep(200);\n        } // Reintentar varias veces\n        // Na de na\n        return null;\n    }\n    /**\n     * Prepara una sentencia SQL sustituyendo las macros que contiene. Utiliza valores FALSE para los parámetros ChkGroup y Prefiltered.\n     *\n     * @param Sentence Sentencia SQL que se quiere desarrollar.\n     * @return Devuelve la sentencia SQL pasada como parámetro con las macros sustituidas (incluido prefijo y demás)\n     * @throws Exception\n     */\n    // public  PrepareSqlString(String Sentence) throws Exception {\n    //     return PrepareSqlString(Sentence, false, false);\n    // }\n    /**\n     * Prepara una sentencia SQL sustituyendo las macros que contiene.\n     * F13012403: Poner PrepareSqlString a nivel de clase base para que lo usen los hijos.\n     * Ahora esto no sería abstracto, sino virtual y tendría implementación propia y común para todos los que heredan\n     * de esta clase.\n     *\n     * @param Sentence    Sentencia SQL o cadena que se quiere desarrollar.\n     * @param ChkGroup    TRUE para efectuar verificación de GROUP BY para sustituir WHERE por HAVING.\n     * @param Prefiltered TRUE si la sentencia viene prefiltrada, en cuyo caso no se sustituye WHERE por HAVING.\n     * @return Devuelve la sentencia original con el operador sustituido.\n     * @throws Exception\n     */\n    PrepareSqlString(Sentence, ChkGroup, Prefiltered) {\n        let mn;\n        let ent;\n        let usr;\n        let str;\n        let strSQL = Sentence;\n        if (strSQL.contains(\"##\")) { // Algo habrá\n            // Buscar la empresa activa...\n            ent = this.m_owner.getCompany();\n            if (strSQL.contains(\"##ENTID##\")) // Tiene la macro de empresa\n             { // Empresa\n                if (ent != null) {\n                    strSQL = StringUtils.Replace(strSQL, \"##ENTID##\", ent.GetObjectIdString());\n                }\n                else {\n                    strSQL = StringUtils.Replace(strSQL, \"##ENTID##\", \"NULL\");\n                }\n            } // Empresa\n            if (strSQL.contains(\"##MID##\")) { // MID solo si está replicando\n                if (this.m_bIsReplicating) { // Está replicando\n                    str = \"'\" + this.m_nMid + \"'\";\n                    strSQL = StringUtils.Replace(strSQL, \"##MID##\", str);\n                } // Está replicando\n            } // MID solo si está replicando\n            if (strSQL.contains(\"##ENTIDCOLL##\")) { // Colección de empresas\n                str = this.m_owner.getEntIdColl();\n                //\n                // Como los valores pueden venir de fuera, solamente consideraría\n                // valor único si\n                // además de no tener comas no tiene espacios.\n                if (StringUtils.IsEmptyString(str)) {\n                    str = \"NULL\";\n                }\n                if (!str.contains(\",\") && !str.contains(\" \")) {\n                    strSQL = StringUtils.Replace(strSQL, \"=##ENTIDCOLL##\", \"=\"\n                        + str);\n                }\n                else {\n                    strSQL = StringUtils.Replace(strSQL, \"=##ENTIDCOLL##\", \" IN (\" + str + \")\");\n                }\n            } // Colección de empresas\n            if (strSQL.contains(\"##ENTIDLEVEL##\")) { // Colección de\n                // empresas\n                str = this.m_owner.getEntIdLevel();\n                if (StringUtils.IsEmptyString(str)) {\n                    str = \"NULL\";\n                }\n                //\n                // Con este continúa\n                // Como los valores pueden venir de fuera, solamente consideraría\n                // valor único si\n                // además de no tener comas no tiene espacios.\n                if (!str.contains(\",\") && !str.contains(\" \")) {\n                    strSQL = StringUtils.Replace(strSQL, \"=##ENTIDLEVEL##\", \"=\" + str);\n                }\n                else {\n                    strSQL = StringUtils.Replace(strSQL, \"=##ENTIDLEVEL##\", \" IN (\" + str + \")\");\n                }\n            } // Colección de empresas\n            if (strSQL.contains(\"##ENTIDOWNER##\")) { // ID de la empresa propietaria\n                str = this.m_owner.getEntIdOwner();\n                if (StringUtils.IsEmptyString(str)) {\n                    str = \"NULL\";\n                }\n                strSQL = StringUtils.Replace(strSQL, \"=##ENTIDOWNER##\", \"=\" + str);\n            } // ID de la empresa propietaria\n            if (strSQL.contains(\"##CURRID##\")) { // Moneda actual\n                if (null != (mn = this.m_owner.getCurrency())) {\n                    strSQL = StringUtils.Replace(strSQL, \"##CURRID##\", mn.GetObjectIdString());\n                }\n                else {\n                    strSQL = StringUtils.Replace(strSQL, \"##CURRID##\", \"NULL\");\n                }\n            } // Moneda actual\n            if (strSQL.contains(\"##USERID##\")) { // ID de usuario\n                if (null != (usr = this.m_owner.getUser())) {\n                    strSQL = StringUtils.Replace(strSQL, \"##USERID##\", usr.GetObjectIdString());\n                }\n                else {\n                    strSQL = StringUtils.Replace(strSQL, \"##USERID##\", \"NULL\");\n                }\n            } // ID de usuario\n            if (strSQL.contains(\"##USERIDCOLL##\")) { // Conjunto de usuarios\n                str = this.m_owner.getUserIdColl();\n                if (StringUtils.IsEmptyString(str)) {\n                    strSQL = StringUtils.Replace(strSQL, \"=##USERIDCOLL##\", \" IS NOT NULL\");\n                }\n                else { // Reemplazar por la cadenilla correcta\n                    if (str.contains(\",\")) {\n                        str = \"=\" + str;\n                    }\n                    else {\n                        str = \" IN (\" + str + \")\";\n                    }\n                    strSQL = StringUtils.Replace(strSQL, \"=##USERIDCOLL##\", str);\n                } // Reemplazar por la cadenilla correcta\n            } // Conjunto de usuarios\n        } // Algo habrá\n        // A12050301: Adicionar una macro en la conexión para generar un nuevo ROWID.\n        // Macro para ROWID.\n        if (strSQL.contains(\"##ROWID##\")) { // Tiene ROWID\n            strSQL = strSQL.replace(\"##ROWID##\", this.GenerateRowId(Utils.EMPTY_STRING));\n        } // Tiene ROWID\n        // Sustituir el prefijo\n        if (strSQL.contains(\"##PREF##\")) {\n            strSQL = StringUtils.Replace(strSQL, \"##PREF##\", this.getDevelopedPrefix());\n        }\n        // Sustituir las comillas\n        if (strSQL.contains(\"##QUOTES##\")) {\n            strSQL = StringUtils.Replace(strSQL, \"##QUOTES##\", \"\\\"\");\n        }\n        // Sustituir macros de fecha en el SQL si es que vienen\n        // El Now\n        if (strSQL.contains(\"##\")) { // Si quedan cosas\n            let dt = new Calendar();\n            // O11011201:\tOptimizar un poco PrepareSqlString.\n            // Optimizar un poco esto\n            if (strSQL.contains(\"##NOW_TIME##\")) { // NOW_TIME\n                str = this.DevelopObjectValue(dt);\n                strSQL = StringUtils.Replace(strSQL, \"##NOW_TIME##\", str);\n            } // NOW_TIME\n            if (strSQL.contains(\"##DAY##\")) { // DAY\n                str = String.format(\"%d\", dt.get(Calendar.DAY_OF_MONTH));\n                strSQL = StringUtils.Replace(strSQL, \"##DAY##\", str);\n            } // DAY\n            if (strSQL.contains(\"##MONTH##\")) { // MONTH\n                str = String.format(\"%d\", dt.get(Calendar.MONTH));\n                strSQL = StringUtils.Replace(strSQL, \"##MONTH##\", str);\n            } // MONTH\n            if (strSQL.contains(\"##YEAR##\")) { // YEAR\n                str = String.format(\"%d\", dt.get(Calendar.YEAR));\n                strSQL = StringUtils.Replace(strSQL, \"##YEAR##\", str);\n            } // YEAR\n            if (strSQL.contains(\"##NOW##\")) { // NOW\n                ObjUtils.ZeroCalendarTime(dt);\n                str = this.DevelopObjectValue(dt);\n                // O11011201:\tOptimizar un poco PrepareSqlString.\n                // Aquí hay replace, así que usarlo\n                str = str.replace(\"00:00:00\", \"\"); ////StringUtils.removeChars(str, \"00:00:00\");\n                ////str = StringUtils.removeChars(str, \" \");\n                strSQL = StringUtils.Replace(strSQL, \"##NOW##\", str);\n            } // NOW\n            if (strSQL.contains(\"##NBSP##\")) {\n                strSQL = StringUtils.Replace(strSQL, \"##NBSP##\", \" \");\n            }\n        } // Si quedan cosas\n        // Puede que tenga que chequear si usa GROUP BY y no hay subselects\n        // Agregar un chequeo si se trata de una cadenilla que viene prefiltrada\n        /*\n         * F12060703: Quitar sustituciones a nivel de cadena de filtrado en sqls.\n         * Esto no\n        if (!m_bSubqueries && ChkGroup && !Prefiltered)\n        {// Buscar dentro del SQL\n            str = strSQL.toLowerCase();\n            // K10052601:\tModificación para sustituir WHERE por HAVING en los sql.\n            if (str.indexOf(\"group by \") !=-1 && str.indexOf(\"where \") !=-1)\n            {// Cambiar el WHERE por HAVING\n                int wherePos =  str.indexOf(\"where \");\n                int groupPos =  str.indexOf(\"group by \");\n                if (wherePos > groupPos)\n                    strSQL = StringUtils.Replace(strSQL, \" WHERE \", \" HAVING \");\n                else\n                {\n                    String whereClause = strSQL.substring(wherePos, groupPos);\n                    String groupClause = strSQL.substring(groupPos);\n                    strSQL = strSQL.substring(0, wherePos);\n                    strSQL = strSQL + \" \" + groupClause +  \" \" + whereClause;\n                    strSQL = StringUtils.Replace(strSQL, \" WHERE \", \" HAVING \");\n                }\n            }// Cambiar el WHERE por HAVING\n        }// Buscar dentro del SQL\n        */\n        return strSQL;\n    }\n    /**\n     * Dado un nombre de tabla u otro tipo de objeto de base de datos, lo devuelve formateado con su prefijo si este está definido.\n     *\n     * @param ObjectName Nombre de tabla, query, vista, etc, cuyo nombre se quiere formatear sustituyendo el prefijo, introduciendo los caracteres de inicio y fin, etc.\n     * @param Prefix     Prefijo opcional para usar en la sustitución. NULL para usar el que tenga la conexión.\n     * @return Devuelve el nombre del objeto ya desarrollado.\n     */\n    FixObjectName(ObjectName, Prefix = null) {\n        let str = ObjectName, str1;\n        let strPrefix;\n        // Esto solo hay que hacerlo si tiene valor\n        if (StringUtils.IsEmptyString(str)) {\n            return str;\n        }\n        strPrefix = this.m_strPrefix;\n        // Si trae prefijo de fuera, sobrepasa al calculado dentro\n        if (!StringUtils.IsEmptyString(Prefix)) {\n            strPrefix = Prefix;\n        }\n        // Ahora sí se puede\n        if (!StringUtils.IsEmptyString(str)) { // Solo si tiene nombre\n            // Si tiene prefijo y no es la macro de anulación\n            if (!StringUtils.IsEmptyString(strPrefix) && !strPrefix.equals(\"##NONE##\")) { // Tiene prefijo\n                if (str.charAt(0) != '.') {\n                    str = strPrefix + \"_\" + str;\n                }\n            } // Tiene prefijo\n        } // Solo si tiene nombre\n        // Si lleva comillas ponérselas por qué no\n        if (!StringUtils.IsEmptyString(this.m_strTableQuoteOpen)) { // Montar los separadores\n            str1 = String.format(\"%s%s%s\", this.m_strTableQuoteOpen, str, this.m_strTableQuoteClose);\n            return str1;\n        } // Montar los separadores\n        // Devolver tal cual\n        return str;\n    }\n    /**\n     * ADD TAG Implemetar Develop Object en la clase base\n     * Desarrolla el valor de un objeto y lo devuelve como cadena lista para insertar en una sentencia SQL o un filtro.\n     * <p>\n     * K12102201: Modificación de DevelopObjectValue para pasar ForceNulls como parámetro.\n     * Lo que redefinimos es la función con parámetro porque el resto la verdad es que no nos interesa :-P\n     *\n     * @param Value Valor que se quiere desarrollar. Se utilizará la máscara de fecha de la conexión.\n     */\n    // public DevelopObjectValue(Value:any, ForceNulls:boolean=true):string {\n    //     return this.m_developer.DevelopObjectValue(Value, this.m_strDatemask, ForceNulls);\n    // }\n    DevelopObjectValue(Value, format, ForceNulls) {\n        if (format == null)\n            return this.m_developer.DevelopObjectValue(Value, this.m_strDatemask, true);\n        if (typeof format === 'boolean')\n            return this.m_developer.DevelopObjectValue(Value, this.m_strDatemask, format);\n        return this.m_developer.DevelopObjectValue(Value, format, ForceNulls);\n    }\n    /**\n     * A11092601: Modificaciones para mejorar el soporte de conexiones remotas y demás.\n     * Ejecuta una sentencia SQL parseada.\n     * <p>\n     * K11092601: ExecuteSqlString y similares deben devolver un objeto, que puede ser ResultSet.\n     * Cambiar el tipo de resultado.\n     *\n     * @param Sentence\n     * @return\n     * @throws Exception\n     */\n    ExecuteLocalParsedSql(Sentence) {\n        return this.ExecuteParsedSql(null, Sentence, false);\n    }\n    /**\n     * A14011501: Optimizaciones para obtener claves numéricas de conexiones sqlite y demás.\n     * Devuelve la cantidad de registros que afectó la última operación de modificación de datos\n     * si es que tenemos este valor, de lo contrario (por defecto) devuelve -1\n     *\n     * @param TableName\n     * @return\n     */\n    LastAffectedRecords(TableName) {\n        return -1;\n    }\n    /**\n     * A11092603: Permitir que la maquinaria utilice transacciones si la conexión lo permite.\n     * A nivel de esta estructura se soportan transacciones.. o no\n     *\n     * @return Devuelve un objeto indicando el resultado de la transacción... o NULL\n     * @throws Exception\n     */\n    commit() {\n        return null;\n    }\n    /**\n     * A11092603: Permitir que la maquinaria utilice transacciones si la conexión lo permite.\n     * Soportar transacciones a este nivel también.\n     *\n     * @throws Exception\n     */\n    beginTrans() {\n    }\n    /**\n     * A11092603: Permitir que la maquinaria utilice transacciones si la conexión lo permite.\n     * Soportar transacciones también a este nivel.\n     *\n     * @throws Exception\n     */\n    rollBack() {\n    }\n    /**\n     * A11111101: Soportar plataformas a nivel de nodos de conexión.\n     */\n    SetPlatform(Platform) {\n        this.m_strPlatform = Platform;\n    }\n    //A11111101: Soportar plataformas a nivel de nodos de conexión.\n    //Devuelve un valor de atributo del nodo teniendo en cuenta el platform.\n    GetNodeValue(Key) {\n        let strValue;\n        if (this.m_xmlNodeData == null) {\n            return null;\n        }\n        if (this.m_platform != null) { // Tiene plataforma\n            if (!StringUtils.IsEmptyString(strValue = this.m_platform.getAttrValue(Key))) {\n                return strValue;\n            }\n        } // Tiene plataforma\n        // De lo contrario lo sacamos del nodo directamente\n        return this.m_xmlNodeData.getAttrValue(Key);\n    }\n    /**\n     * TODO ADD TAG\n     * Cancela los procesos asincrónicos o no asincrónicos que haya corriendo en este momento. Quienes\n     * estén esperando por algo recibirán códigos de error o timeouts, pero la estructura volverá a estar\n     * disponible para efectuar llamadas.\n     * <p>\n     * La clase base no hace nada.\n     *\n     * @param flags Dependiendo de la implementación aquí vendrán cositas para parametrizar la cancelación.\n     * @return\n     */\n    cancelProcesses(flags) {\n        return 0;\n    }\n    /**\n     * Aqui vamos a abstraer el mecanismo de autenticar en las conexiones online\n     * para poder tener un token de session. por ahora lo hacemos por la via sencilla\n     * de mandar un metod Auth para arriba pero podemos complicarlo para Auth2 o algo asi\n     */\n    getTokenFromAuth(login, pass) {\n        return Utils.EMPTY_STRING;\n    }\n    //@ScriptAllowed\n    // TAG 20050206: Luis: para la depuracion el valoor por defecto\n    toString() {\n        return \"Connection: \" + this.m_strName;\n    }\n    // // TAG 20050205: Luis: exponer metodos script en esta clase\n    // private void addJavascriptFunctions() {\n    //     if (lstScriptAllowedMethods.size() <= 0) {\n    //         return;\n    //     }\n    //     for (final Method method : lstScriptAllowedMethods) {\n    //         ScriptableObject.putProperty(this, method.getName(), new BaseFunctionJavaMethodWrapper(this, method));\n    //     }\n    // }\n    /**\n     * Genera un ROWID para la conexión actual. Emplea los criterios de número de tabla, MID, DBID, etc.\n     *\n     * @param TableName Nombre de la tabla para la cual se quiere generar el ROWID.\n     * @return Devuelve un ROWID respetando los valores de réplica y el tamaño del campo ROWID.\n     */\n    GenerateRowId(TableName) { return Guid.create().toString(); }\n}\n// TAG 20050205: Luis: exponer metodos script en esta clase\n//private static final ArrayList<Method> lstScriptAllowedMethods = WrapReflection.SafeGetAnnotatedMethods(XoneConnectionData.class, ScriptAllowed.class);\n/**\n * Constante para exponer el nombre de la conexión principal\n */\nXoneConnectionData.MAIN_CONNECTION = \"##MAIN_CONNECTION##\";\n\n//# sourceMappingURL=XoneConnectionData.js.map\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Groups.vue?vue&type=style&index=0&id=6ef7afb2&scoped=true&lang=css\"","export default class SqlType {\n}\nSqlType.SQLTYPE_ERROR = -1; /// Error durante el parsing del SQL\nSqlType.SQLTYPE_UNKNOWN = 0; /// Aún no se ha parseado o se trata de una operación desconocida\nSqlType.SQLTYPE_INSERT = 1; /// Sentencia INSERT\nSqlType.SQLTYPE_DELETE = 2; /// Sentencia DELETE\nSqlType.SQLTYPE_UPDATE = 3; /// Sentencia UPDATE\nSqlType.SQLTYPE_SELECT = 4; /// Sentencia SELECT\n\n//# sourceMappingURL=SqlType.js.map\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./SnackBar.vue?vue&type=style&index=0&id=620f34b4&scoped=true&lang=css\"","import * as fs from \"fs\";\nexport default class FileLoaderNodeJS {\n  LoadFile(FileName, bIsCryptoFile) {\n    return fs.readFileSync(FileName).toString();\n  }\n  FileExist(FileName, bIsCryptoFile) {\n    return fs.existsSync(FileName);\n  }\n  getAbsolutePath(FileName) {\n    return FileName;\n  }\n  getIncludeFilePath(sPath, bIsCryptoFile) {\n    throw new Error(\"Method not implemented.\");\n  }\n}\n\n//# sourceMappingURL=FileLoaderNodeJS.js.map\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Web.vue?vue&type=style&index=0&id=5bcfca02&scoped=true&lang=css\"","import firebase from \"firebase/app\";\nimport \"firebase/messaging\";\nimport AppDataHandler from \"./AppDataHandler\";\nimport { generateUniqueId } from \"./helperFunctions/StringHelper\";\nimport { XoneDataCollection } from \"./appData/core/XoneDataCollection\";\n\nimport xoneUI from \"./XoneUI\";\n\n/** @type {string} */\nlet pushToken;\n\n/**\n * get firebase configuration\n * @returns {Promise<{firebaseConfig: string, vapidKey: string}>}\n */\nconst getFirebaseConfig = async () =>\n\tawait new Promise((resolve) => {\n\t\tconst /** @type {Worker} */ worker = Function(\"return new Worker('../tasks.js')\")();\n\t\tworker.addEventListener(\"message\", ({ data }) => resolve(data));\n\t\tworker.postMessage({ type: \"firebaseConfig\" });\n\t});\n\n/**\n * Init firebase\n */\nconst initFirebase = async () => {\n\ttry {\n\t\tconst { firebaseConfig, vapidKey } = await getFirebaseConfig();\n\n\t\tfirebase.initializeApp(firebaseConfig);\n\n\t\tconst messaging = firebase.messaging();\n\n\t\tconst firebaseToken = await messaging.getToken({ vapidKey });\n\n\t\tif (firebaseToken) {\n\t\t\tlocalStorage.setItem(\"_messagingToken\", firebaseToken);\n\t\t\tpushToken = firebaseToken;\n\t\t\tonPushRegisteredFunctions.forEach((onPushRegisteredFunction) => onPushRegisteredFunction({ pushToken }));\n\t\t} else {\n\t\t\tconst ex = \"No registration token available. Request permission to generate one.\";\n\t\t\tconsole.error(ex);\n\t\t\tthrow new Exception(ex);\n\t\t}\n\n\t\tmessaging.onMessage((payload) => {\n\t\t\tconst id = payload.data?.notification_id || generateUniqueId();\n\t\t\tconst title = payload.data?.title || payload.notification?.notification_title;\n\t\t\tconst body = payload.data?.body || payload.notification?.notification_message;\n\t\t\tconst onClickFunction = () =>\n\t\t\t\tAppDataHandler.getAppData()\n\t\t\t\t\t.getCollection(\"Empresas\")\n\t\t\t\t\t.then((/** @type {XoneDataCollection} */ coll) => coll.ExecuteCollAction(\"onpushnotificationclick\", null, payload).catch(console.error));\n\n\t\t\txoneUI.showNotification(id, title, body, null, onClickFunction);\n\n\t\t\tonPushReceivedFunctions.forEach((onPushReceivedFunction) => onPushReceivedFunction(payload));\n\t\t});\n\t} catch (ex) {\n\t\tconsole.error(\"An error occurred while retrieving token. \", ex);\n\t\tthrow new Exception(ex);\n\t}\n};\n\n/**\n * onPushRegisteredFunction\n * @type {Map<string,Function>}\n */\nconst onPushRegisteredFunctions = new Map();\n\n/**\n * onPushRegistrationFailureFunction\n * @type {Map<string,Function>}\n */\nconst onPushRegistrationFailureFunctions = new Map();\n\n/**\n * onPushReceivedFunction\n * @type {Map<string,Function>}\n */\nconst onPushReceivedFunctions = new Map();\n\n/**\n * register push\n * @param {Function} [callback]\n */\nexport const registerPush = (callback) =>\n\t!pushToken &&\n\tNotification.requestPermission().then(() =>\n\t\tinitFirebase()\n\t\t\t.then(() => pushToken && callback instanceof Function && callback({ pushToken }))\n\t\t\t.catch(() => onPushRegistrationFailureFunctions.forEach((onPushRegistrationFailureFunction) => onPushRegistrationFailureFunction()))\n\t);\n\n/**\n * OnPushRegistered binded event function\n * @param {Function} callback\n */\nexport const setOnPushRegisteredFunction = (callback) => {\n\tif (onPushRegisteredFunctions.has(callback.toString())) return;\n\tonPushRegisteredFunctions.set(callback.toString(), callback);\n\tif (pushToken) onPushRegisteredFunctions.forEach((onPushRegisteredFunction) => onPushRegisteredFunction({ pushToken }));\n};\n\n/**\n * onPushRegistrationFailure binded event function\n * @param {Function} callback\n */\nexport const setOnPushRegistrationFailureFunction = (callback) =>\n\t!onPushRegistrationFailureFunctions.has(callback.toString()) && onPushRegistrationFailureFunctions.set(callback.toString(), callback);\n\n/**\n * onPushReceived binded event function\n * @param {Function} callback\n */\nexport const setOnPushReceivedFunction = (callback) =>\n\t!onPushReceivedFunctions.has(callback.toString()) && onPushReceivedFunctions.set(callback.toString(), callback);\n","import { ref, Ref } from \"@vue/reactivity\";\nimport { watch } from \"@vue/runtime-core\";\n\nimport { XoneDataCollection } from \"./appData/core/XoneDataCollection\";\nimport { XoneDataObject } from \"./appData/core/XoneDataObject\";\nimport { XoneApplication } from \"../composables/appData/core/XoneApplication\";\n\nimport { generateUniqueId } from \"./helperFunctions/StringHelper\";\nimport xoneUI from \"./XoneUI\";\nimport XmlNode from \"./appData/Xml/JSONImpl/XmlNode\";\nimport { registerPush, setOnPushReceivedFunction, setOnPushRegisteredFunction, setOnPushRegistrationFailureFunction } from \"./Firebase\";\nimport { nextTick } from \"vue\";\nimport { xoneAttributesHandler } from \"./XoneAttributesHandler\";\nimport { RowInfo } from \"./ContentsLoaderHandler\";\n\n//\n// Add methods to XoneDataObject prototype\n\nXoneDataObject.prototype.changeModelValue = function(propName, newValue) {\n\tthis[propName] = newValue;\n};\n\nXoneDataObject.prototype.clone = function() {\n\tif (this[\"_ObjCloned\"]) return this;\n\n\tconst newObj = new XoneDataObject(this.getOwnerCollection());\n\tObject.entries(this).forEach(([key, value]) => (newObj[key] = value));\n\tnewObj[\"_ObjCloned\"] = this;\n\tnewObj[\"_XoneHashId\"] = undefined;\n\tnewObj[\"_XoneReactive\"] = undefined;\n\tnewObj.getObjectIndex = () => this.getObjectIndex();\n\treturn newObj;\n};\n\nXoneDataObject.prototype.doModelReactive = function() {\n\tif (this[\"_XoneReactive\"]) return this;\n\n\tthis.model = ref(this.model).value;\n\tthis[\"_XoneReactive\"] = true;\n\n\t// Si el objeto está clonado, propagamos el cambio\n\tif (!this[\"_ObjCloned\"] || !this[\"_ObjCloned\"][\"_XoneReactive\"]) return this;\n\tObject.keys(this.model).forEach((key) =>\n\t\twatch(\n\t\t\t() => this.model[key],\n\t\t\t(newValue) => this[\"_ObjCloned\"].changeModelValue(key, newValue)\n\t\t)\n\t);\n\n\treturn this;\n};\n\nXoneDataObject.prototype.isReactive = function() {\n\treturn this[\"_XoneReactive\"];\n};\n\nXoneDataObject.prototype.setCloneOnPush = function(value) {\n\tthis[\"_CloneOnPush\"] = value;\n};\n\nXoneDataObject.prototype.getCloneOnPush = function() {\n\treturn this[\"_CloneOnPush\"];\n};\n\nXoneDataObject.prototype.getHashId = function(createIfNull = true) {\n\tif (!this[\"_XoneHashId\"] && createIfNull) this[\"_XoneHashId\"] = Array(3).join(generateUniqueId());\n\treturn this[\"_XoneHashId\"];\n};\n\nXoneDataObject.prototype.getParent = function() {\n\treturn this.m_owner.getOwnerObject();\n};\n\nXoneDataObject.prototype.executeMethod = async function(method) {\n\tawait xoneAttributesHandler.executeMethod(`executenode(${method})`, this);\n};\n\n//\n// Add methods to XoneApplication prototipes\n\nXoneApplication.prototype.exit = () => xoneUI.exitApp();\n\nXoneApplication.prototype.exitApp = () => {\n\twindow.close();\n\txoneUI.exitApp();\n};\n\nXoneApplication.prototype.logout = () => xoneUI.exitApp();\n\nXoneApplication.prototype.pushValueAndExit = (arg) => xoneUI.openEditViewAndExit(arg);\n\nXoneApplication.prototype.registerPush = (callback) => registerPush(callback);\n\nXoneApplication.prototype.bind = (event, callback) => {\n\tif (event && event.toString().toLowerCase() === \"onpushregistered\") setOnPushRegisteredFunction(callback);\n\tif (event && event.toString().toLowerCase() === \"onpushregistrationfailure\") setOnPushRegistrationFailureFunction(callback);\n\tif (event && event.toString().toLowerCase() === \"onpushreceived\") setOnPushReceivedFunction(callback);\n};\n\n/**\n * @typedef {Object} Breadcrumb\n * @property {string} id\n * @property {string} xoneHashId\n * @property {string} type\n * @property {string} name\n * @property {string} title\n * @property {boolean} isWebLayout\n * @property {boolean} isMsgbox\n * @property {boolean} isContentsRow\n *\n * Nos da informacion del objeto\n * @typedef {Object} Objectinfo\n * @property {boolean} isContents\n * @property {boolean} isExpandedView\n * @property {number} recordIndex\n * @property {boolean} editInRow\n * @property {boolean} autosave\n * @property {function(number): void} onMsgBoxOptionSelected\n * @property {RowInfo} rowInfo\n */\n\n/** Class to handle appData, dataObjectsMap and breadcrumb stack */\nclass AppDataHandler {\n\t/**\n\t * _instance\n\t * @type {AppDataHandler}\n\t */\n\tstatic _instance;\n\n\t/**\n\t * appData\n\t * @type {XoneApplication}\n\t */\n\t_appData;\n\n\t// Separamos los breadcrumb de los dataObjects dado que no se puede hacer un stringify de objetos con estructura circular, así que no lo podemos expandir a los componentes hijo\n\t// queda con los dataobjects en la propiedad _dataObjectsMap y el indice de breadcrumbs en _breadcrumbs\n\n\t/**\n\t * dataObjectsMap\n\t * @type {Map<string, XoneDataObject>}\n\t */\n\t_dataObjectsMap = new Map();\n\n\t/**\n\t * breadcrumbs\n\t * @type {Ref<Breadcrumb[]>}\n\t */\n\t_breadcrumbs = ref([]);\n\n\tconstructor() {\n\t\tif (AppDataHandler._instance) return AppDataHandler._instance;\n\t\tAppDataHandler._instance = this;\n\t}\n\n\t/**\n\t * Set AppData\n\t * @param {XoneApplication} appData\n\t */\n\tsetAppData(appData) {\n\t\tthis._appData = appData;\n\t}\n\n\t/**\n\t * Get AppData\n\t * @returns {XoneApplication}\n\t */\n\tgetAppData() {\n\t\treturn this._appData;\n\t}\n\n\t/**\n\t * Get breadcrumb\n\t * @returns {Breadcrumb[]}\n\t */\n\tgetBreadcrumbs() {\n\t\treturn this._breadcrumbs.value;\n\t}\n\n\t/**\n\t * Set DataObject\n\t * @param {string} id\n\t * @param {XoneDataObject} value\n\t */\n\taddDataObject(id, value) {\n\t\tthis._dataObjectsMap.set(id, value);\n\t}\n\n\t/**\n\t * Get XOneDataObject from breadcrumb id\n\t * @param {string} id\n\t * @returns {XoneDataObject}\n\t */\n\tgetDataObject(id) {\n\t\treturn this._dataObjectsMap.get(id);\n\t}\n\n\t/**\n\t * get XOneDataObjects\n\t * @returns {XoneDataObject[]}\n\t */\n\tgetDataObjects() {\n\t\treturn Array.from(this._dataObjectsMap.values());\n\t}\n\n\t/**\n\t * Clear dataObjectsMap\n\t */\n\tcleardataObjectsMap() {\n\t\tthis._dataObjectsMap.clear();\n\t}\n\n\t/**\n\t * Clear breadcrumb\n\t * @param {boolean} [keepLayout ]\n\t */\n\tclearBreadcrumbs(keepLayout = false) {\n\t\t// Remove breadcrumb\n\t\tthis._breadcrumbs.value = keepLayout ? this._breadcrumbs.value.filter((e) => e.isWebLayout) : [];\n\t\t// Remove dataobjects\n\t\tthis.cleardataObjectsMap();\n\t}\n\n\t/**\n\t * Remove breadcrumb from breadcrumb id\n\t * @param {string} id\n\t */\n\tremoveBreadcrumb(id) {\n\t\tconst breadcrumb = this._breadcrumbs.value.find((e) => e.id === id);\n\t\tif (!breadcrumb) return;\n\n\t\tconst index = this._breadcrumbs.value.indexOf(breadcrumb);\n\t\t// Remove breadcrumb\n\t\tthis._breadcrumbs.value.splice(index, 1);\n\t\t// Remove dataobject\n\t\tthis._dataObjectsMap.delete(id);\n\t}\n\n\t/**\n\t * delete last breadcrumb\n\t */\n\tdeletelastBreadcrumb() {\n\t\tif (this._breadcrumbs.value.length === 0) return;\n\t\tconst lastBreadcrumb = [...this._breadcrumbs.value].reverse()[0];\n\t\tthis.removeBreadcrumb(lastBreadcrumb.id);\n\t}\n\n\t/**\n\t * Clear breadcrumb from key\n\t * @param {string} id\n\t */\n\tclearBreadcrumbsFrom(id) {\n\t\tconst breadcrumb = this._breadcrumbs.value.find((e) => e.id === id);\n\t\tif (!breadcrumb) return;\n\t\tconst index = this._breadcrumbs.value.indexOf(breadcrumb) + 1;\n\t\tthis._breadcrumbs.value.splice(index);\n\t}\n\n\t/**\n\t * clearBreadcrumbsFromXoneHashId\n\t * @param {string} xoneHashId\n\t */\n\tclearBreadcrumbsFromXoneHashId(xoneHashId) {\n\t\tthis._breadcrumbs.value = this._breadcrumbs.value.filter((e) => e.xoneHashId !== xoneHashId);\n\t}\n\n\t/**\n\t * Create new XoneDataObject and push it into dataObjectsMap Map\n\t * @param {string} collName\n\t * @param {string} [objectType]\n\t * @param {boolean} [isWebLayout]\n\t * @param {boolean} [addObject]\n\t * @returns {Promise<string>}\n\t */\n\tasync addNewXoneDataObject(collName, objectType = \"Coll\", isWebLayout = false, addObject = false) {\n\t\t/**\n\t\t * Create XoneDataObject\n\t\t * @type {XoneDataCollection}\n\t\t */\n\t\tconst xoneDataCollection = await this._appData.getCollection(collName);\n\n\t\tif (!xoneDataCollection) return;\n\n\t\t/**\n\t\t * xoneDataObject\n\t\t * @type {XoneDataObject}\n\t\t */\n\t\tconst xoneDataObject = await xoneDataCollection.CreateObject(true);\n\n\t\t// Para LoginColl, EntryPoint y WebLayout, si son special, se agrega el objeto\n\t\tif (addObject && xoneDataCollection.getProperties().getAttrValue(\"special\") === \"true\") {\n\t\t\txoneDataCollection.clear();\n\t\t\txoneDataCollection.addItem(xoneDataObject);\n\t\t}\n\n\t\treturn this.pushXoneDataObject(xoneDataObject, objectType, isWebLayout);\n\t}\n\n\t/**\n\t * Push new XoneDataObject into dataObjectsMap Map\n\t * @param {XoneDataObject} xoneDataObject\n\t * @param {string} [objectType]\n\t * @param {boolean} [isWebLayout]\n\t * @returns {string}\n\t */\n\tasync pushXoneDataObject(xoneDataObject, objectType = \"Coll\", isWebLayout = false, isMsgbox = false, isContentsRow = false) {\n\t\tif (!isContentsRow && !isMsgbox) {\n\t\t\txoneUI.showLoader();\n\t\t\tawait new Promise((resolve) => setTimeout(() => nextTick().then(() => resolve()), 1));\n\t\t\tsetTimeout(() => xoneUI.hideLoader(), 10000);\n\t\t}\n\n\t\tconst id = generateUniqueId();\n\n\t\tif (xoneDataObject.getCloneOnPush())\n\t\t\t// Si el objeto viene de un contents, tenemos que clonarlo para mantener la reactividad\n\t\t\txoneDataObject = xoneDataObject.clone();\n\n\t\t/** @type {{m_xmlNode:XmlNode}} */\n\t\tconst { m_xmlNode } = xoneDataObject.m_owner;\n\n\t\t// Set XOneDataObject\n\t\tthis.addDataObject(id, xoneDataObject);\n\t\t// Push breadcrumb\n\t\tthis._breadcrumbs.value.push({\n\t\t\tid,\n\t\t\txoneHashId: xoneDataObject.getHashId(),\n\t\t\ttype: objectType,\n\t\t\tname: xoneDataObject.m_owner.m_strName,\n\t\t\ttitle: m_xmlNode.getAttrValue(\"title\", xoneDataObject.m_owner.m_strName),\n\t\t\tisWebLayout,\n\t\t\tisMsgbox,\n\t\t\tisContentsRow,\n\t\t});\n\t\treturn id;\n\t}\n\n\t/**\n\t * setCookie\n\t * @param {string} name cookie name\n\t * @param {*} value cookie value\n\t * @param {number} expiration expiration days\n\t */\n\tsetCookie(name, value, expiration) {\n\t\tconst d = new Date();\n\t\td.setTime(d.getTime() + expiration * 24 * 60 * 60 * 1000);\n\t\tconst expires = \"expires=\" + d.toUTCString();\n\t\tdocument.cookie = name + \"=\" + value + \";\" + expires + \";path=/\";\n\t}\n\n\t/**\n\t * getCookie\n\t * @param {string} name cookie name\n\t */\n\tgetCookie(name) {\n\t\tconst cookies = document.cookie.split(\";\").map((e) => {\n\t\t\tconst [name, value] = e.split(\"=\");\n\t\t\treturn { name: name.trim(), value: value.trim() };\n\t\t});\n\t\treturn cookies.find((e) => e.name === name)?.value || \"\";\n\t}\n\n\t/**\n\t * removeCookie\n\t * @param {string} name\n\t */\n\tremoveCookie(name) {\n\t\tdocument.cookie = `${name}= ; expires = ${new Date().toUTCString()};`;\n\t}\n\n\t/**\n\t * getCircularReplacer\n\t */\n\tgetCircularReplacer() {\n\t\tconst seen = new WeakSet();\n\t\treturn (key, value) => {\n\t\t\tif (typeof value === \"object\" && value !== null) {\n\t\t\t\tif (seen.has(value)) {\n\t\t\t\t\tconsole.warn(\"Cache duplicado\", key, value);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tseen.add(value);\n\t\t\t}\n\t\t\treturn value;\n\t\t};\n\t}\n}\n\nexport default new AppDataHandler();\n","import Hashtable from \"../../Collections/HashMap/Hashtable\";\nexport default class XmlAttributes {\n    /**\n     *\n     */\n    constructor(attrs = null) {\n        this._attributes = new Hashtable();\n        if (attrs) {\n            attrs.forEach(element => this._attributes.put(element[0], element[1]));\n        }\n    }\n    toJSON() {\n        return this._attributes.toJSON();\n    }\n    clone() {\n        // let temp = new Hashtable<string, string>();\n        // this._attributes.entries.forEach(element => {\n        //     temp.put(element[0], element[1]);\n        // });\n        return new XmlAttributes(this._attributes.entrySet());\n    }\n    get length() {\n        return this._attributes.length;\n    }\n    keys() {\n        return this._attributes.keys();\n    }\n    getIndex(AttrName) {\n        return this._attributes.keys().indexOf(AttrName);\n    }\n    getValue(sAttrName) {\n        return this._attributes.get(sAttrName);\n    }\n    setValue(attrName, value) {\n        this._attributes.put(attrName, value);\n        this[attrName] = value;\n    }\n    deleteAttribute(attrName) {\n        this._attributes.delete(attrName);\n    }\n    clearAll() {\n        this._attributes.clear();\n    }\n}\n\n//# sourceMappingURL=XmlAttributes.js.map\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=d40ce0a8&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Contents.vue?vue&type=style&index=0&id=24a533b4&scoped=true&lang=css\"","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ChartPie.vue?vue&type=style&index=0&id=46c631e0&scoped=true&lang=css\"","import TextUtils from \"./TextUtils\";\nimport { Utils } from \"./Utils\";\nexport default class XmlUtils {\n    static GetNodeAttr(node, AttrName, sDefault = \"\") {\n        return this.getNodeAttr(node, AttrName, sDefault);\n    }\n    static getNodeAttr(node, AttrName, sDefault = \"\") {\n        if (node == null) {\n            return sDefault;\n        }\n        const s = node.getAttrValue(AttrName);\n        if (TextUtils.isEmpty(s)) {\n            return sDefault;\n        }\n        else {\n            return s;\n        }\n    }\n    static getValuesByConditions(map, parent, defaultValue = \"\") {\n        if (parent == null) {\n            map.put(Utils.MACRO_DEFAULT, defaultValue);\n            return;\n        }\n        parent.getChildNodes().forEach(node => {\n            this.getNodeAttr(node, \"conditions\", Utils.MACRO_DEFAULT).split(\";\").forEach(s => map.put(s, node.getAttrValue(Utils.PROP_ATTR_NAME)));\n        });\n        ;\n        // for (let node in list) {\n        //    const conditions = this.getNodeAttr(node, \"conditions\", Utils.MACRO_DEFAULT).split(\";\");\n        //     for (l s : conditions) {\n        //         map.put(s, GetNodeAttr(node, \"name\"));\n        //     }\n        // }\n        if (!map.containsKey(Utils.MACRO_DEFAULT)) {\n            map.put(Utils.MACRO_DEFAULT, defaultValue);\n        }\n    }\n}\n\n//# sourceMappingURL=XmlUtils.js.map\n","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Map.vue?vue&type=style&index=0&id=0212dfac&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Url.vue?vue&type=style&index=0&id=054892a6&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./OverControl.vue?vue&type=style&index=0&id=725183bb&scoped=true&lang=css\"","import { Exception } from \"./Exception\";\nexport default class XoneGenericException extends Exception {\n    /**\n     *\n     */\n    constructor(code, message, extra) {\n        super(message);\n        this.m_code = code;\n        this.m_extra = extra;\n    }\n}\n\n//# sourceMappingURL=XoneGenericException.js.map\n","import { Exception } from \"./Exception\";\nexport default class IllegalStateException extends Exception {\n}\n\n//# sourceMappingURL=IllegalStateException.js.map\n","import { Exception } from \"../../Exceptions/Exception\";\nimport NumberUtils from \"../../Utils/NumberUtils\";\nimport ObjUtils from \"../../Utils/ObjUtils\";\nimport StringUtils from \"../../Utils/StringUtils\";\nexport default class XoneJSONResulset {\n    /**\n     *\n     */\n    constructor(connection, Sentence, options) {\n        this.m_maxRows = 100;\n        this.m_keys = [];\n        this.isResultset = true;\n        this.m_connection = connection;\n        this.m_nIterate = -1;\n        this.m_sentence = Sentence;\n        this.m_options = options;\n        this.m_data = [];\n        this.m_maxRows = this.m_data.length;\n        this.m_keys = [];\n        // this.m_parsed=new SqlParser(\"ROWID\");\n        // this.m_parsed.ParseSqlString(strCmd)\n    }\n    async populate(options) {\n        var result = await this.m_connection.fetchDataAsync(this.m_sentence, options || this.m_options);\n        if (result.hasError == true) {\n            throw new Exception(result.err);\n        }\n        this.m_data = Array.isArray(result.data) ? result.data : [];\n        this.m_maxRows = this.m_data.length;\n        this.m_keys = this.m_maxRows == 0 ? [] : Object.keys(this.m_data[0]);\n        return this;\n    }\n    getBytes(fld) {\n        return null;\n    }\n    getColumnCount() {\n        return this.m_maxRows == 0 ? 0 : this.m_keys.length;\n    }\n    getColumnTypes() {\n        return [1, 2, 3, 4, 5, 6, 7, 8];\n    }\n    getColumnName(ordinal) {\n        return this.m_maxRows == 0 ? 0 : this.m_keys[ordinal];\n    }\n    getData() {\n        return this.m_data;\n    }\n    close() {\n        this.m_nIterate = -1;\n        this.m_data = null;\n        this.m_maxRows = 0;\n    }\n    resolverField(fld) {\n        if (typeof fld == \"number\")\n            return this.m_keys[fld];\n        return fld;\n    }\n    getValue(fld, nType) {\n        switch (nType) {\n            case 0: // Numero\n                return NumberUtils.SafeToInt(this.m_data[this.m_nIterate][this.resolverField(fld)]);\n            case 2:\n                return NumberUtils.SafeToDouble(this.m_data[this.m_nIterate][this.resolverField(fld)]);\n            case 3:\n                return ObjUtils.SafeToDate(this.m_data[this.m_nIterate][this.resolverField(fld)]);\n            default:\n                return StringUtils.SafeToString(this.m_data[this.m_nIterate][this.resolverField(fld)]);\n        }\n    }\n    getString(fld) {\n        return this.getValue(fld, 1);\n    }\n    getInt(fld) {\n        return this.getValue(fld, 0);\n    }\n    getDate(fld) {\n        return this.getValue(fld, 3);\n    }\n    get PageLen() {\n        var _a, _b;\n        return ((_b = (_a = this.m_options) === null || _a === void 0 ? void 0 : _a.page) === null || _b === void 0 ? void 0 : _b.length) || -1;\n    }\n    get PageCache() {\n        var _a, _b;\n        return ((_b = (_a = this.m_options) === null || _a === void 0 ? void 0 : _a.page) === null || _b === void 0 ? void 0 : _b.cache) || -1;\n    }\n    async next() {\n        // if (this.PageLen > 0) {\n        //     if (this.PageCache > 0) {\n        //     } else {\n        //         await this.populate();\n        //     }\n        // }\n        return ++this.m_nIterate < this.m_maxRows;\n    }\n    async EOF() {\n        return this.m_nIterate >= this.m_maxRows;\n    }\n    async moveTo(position) {\n        return position == this.m_maxRows || (this.m_nIterate = position) == this.m_maxRows;\n    }\n}\n\n//# sourceMappingURL=XoneJSONResulset.js.map\n","import { Exception } from \"../../Exceptions/Exception\";\nimport { SqlParser } from \"../../Parsers/SQL/SqlParser\";\nimport ConnectionStringUtils from \"../../Utils/ConnectionStringUtils\";\nimport NumberUtils from \"../../Utils/NumberUtils\";\nimport SqlType from \"../../Utils/SqlType\";\nimport StringBuilder from \"../../Utils/StringBuilder\";\nimport StringUtils from \"../../Utils/StringUtils\";\nimport TextUtils from \"../../Utils/TextUtils\";\nimport { Utils } from \"../../Utils/Utils\";\nimport XoneJSONResulset from \"./XoneJSONResulset\";\nexport default class XoneJSONConnection {\n\t/**\n\t *\n\t */\n\tconstructor(sConnectionString, sAppName, sExecutionPath, cryptoData) {\n\t\t// Cliente para conectar con LogonTest\n\t\t// private m_clientId = \"XIdsAPIdUQMB9bzf5\";\n\t\t// private m_clientSecret = \"q5d007Ma19GM1jN0IMhl6uqjKt7PoO\";\n\t\t// Cliente para conectar con AllByxone\n\t\tthis.m_clientId = \"XIdsAPIXmITgixqqj\";\n\t\tthis.m_clientSecret = \"5M3c9Oae5A7ewzTDU2Z3xh1B9P0Z79\";\n\t\t// Prod\n\t\tthis.m_url = \"https://web.xonedev.cloud/api/itf/DoAction\";\n\t\t// local\n\t\t//private m_url = \"http://localhost:1854/api/itf/DoAction\";\n\t\tthis.m_idsUrl = \"https://ids.xonedev.cloud/connect/token\";\n\t\tthis.nFlags = 1;\n\t\tthis.nTimeout = 60;\n\t\tthis.nSecurityLevel = 0;\n\t\tthis.sAppName = sAppName;\n\t\tthis.sExecutionPath = sExecutionPath;\n\t\tthis.bIsLoginCall = false;\n\t\tthis.cryptoData = cryptoData;\n\t\tthis.m_token = null;\n\t\tthis.parseConnectionString(sConnectionString);\n\t}\n\texecuteUpdateAsync(Sentence) {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tasync executeNonQuery(data) {\n\t\tvar token = await this.readBearerTokenAsync();\n\t\tif (TextUtils.isEmpty(token)) throw new Exception(\"No Auth\");\n\t\t// var parser=new SqlParser(\"ROWID\");\n\t\t// parser.ParseSqlString(Sentence as string);\n\t\t// var data= {\n\t\t//     coll: args[0],\n\t\t//     action: \"select\",\n\t\t//     where: parser.GetWhereSentence()\n\t\t// };\n\t\tconst response = await fetch(this.m_url, {\n\t\t\tmethod: \"POST\",\n\t\t\t//mode: 'no-cors', // no-cors, *cors, same-origin\n\t\t\t// cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n\t\t\t//credentials: 'omit', // include, *same-origin, omit\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\tAuthorization: \"Bearer \" + token,\n\t\t\t},\n\t\t\t//redirect: 'follow', // manual, *follow, error\n\t\t\t// referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n\t\t\tbody: JSON.stringify(data),\n\t\t});\n\t\tconst result = await response.json();\n\t\treturn 1;\n\t}\n\tgetDataFromParser(parser) {\n\t\treturn parser.GetFields().toJSON();\n\t\t// const data = [];\n\t\t// data.push(parser.GetFields().toJSON());\n\t\t// return data;\n\t}\n\tformatOnlineData(parser, collName, keys) {\n\t\tif (parser.GetSqlType() == SqlType.SQLTYPE_SELECT) {\n\t\t\treturn {\n\t\t\t\tcoll: collName,\n\t\t\t\taction: \"select\",\n\t\t\t\twhere: parser.GetWhereSentence(),\n\t\t\t};\n\t\t}\n\t\tif (parser.GetSqlType() == SqlType.SQLTYPE_UPDATE || parser.GetSqlType() == SqlType.SQLTYPE_INSERT) {\n\t\t\treturn {\n\t\t\t\tcoll: collName,\n\t\t\t\taction: \"write\",\n\t\t\t\tdata: this.getDataFromParser(parser),\n\t\t\t\tkeys: parser.getKeys(),\n\t\t\t\twhere: parser.GetWhereSentence(),\n\t\t\t};\n\t\t}\n\t\tif (parser.GetSqlType() == SqlType.SQLTYPE_DELETE) {\n\t\t\treturn {\n\t\t\t\tcoll: collName,\n\t\t\t\taction: \"drop\",\n\t\t\t\tdata: this.getDataFromParser(parser),\n\t\t\t\tkeys: parser.getKeys(),\n\t\t\t\twhere: null,\n\t\t\t};\n\t\t}\n\t\treturn {};\n\t\t// if (parser.GetSqlType() == SqlType.SQLTYPE_INSERT) {\n\t\t//     return {\n\t\t//         coll: collName,\n\t\t//         action: \"write\",\n\t\t//         data: this.getDataFromParser(parser),\n\t\t//         keys: parser.getKeys(),\n\t\t//         data: this.getDataFromParser(parser)\n\t\t//     };\n\t\t// }\n\t}\n\tasync executeAsync(Sentence, MaxRows, ...args) {\n\t\tif (typeof Sentence == \"string\") {\n\t\t\tlet tmp = new SqlParser(\"ROWID\");\n\t\t\ttmp.ParseSqlString(Sentence);\n\t\t\tSentence = tmp;\n\t\t}\n\t\treturn await this.executeNonQuery(this.formatOnlineData(Sentence, args[0], args[1]));\n\t}\n\tgetAuthData() {\n\t\tlet bld = new StringBuilder(\"client_id=\");\n\t\tbld.append(this.m_clientId);\n\t\tbld.append(\"&client_secret=\");\n\t\tbld.append(this.m_clientSecret);\n\t\tbld.append(\"&grant_type=client_credentials\");\n\t\treturn bld.toString();\n\t}\n\tasync readBearerTokenAsync() {\n\t\tif (this.m_token != null) {\n\t\t\tif (this.m_token.expires_in > new Date()) return this.m_token.access_token;\n\t\t}\n\t\tconst response = await fetch(this.m_idsUrl, {\n\t\t\tmethod: \"POST\",\n\t\t\t//mode: \"no-cors\",\n\t\t\t// cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n\t\t\t// credentials: 'same-origin', // include, *same-origin, omit\n\t\t\theaders: {\n\t\t\t\t//'Content-Type': 'application/json',\n\t\t\t\t\"Content-Type\": \"application/x-www-form-urlencoded\",\n\t\t\t},\n\t\t\t//redirect: 'follow', // manual, *follow, error\n\t\t\t//referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n\t\t\tbody: this.getAuthData(),\n\t\t});\n\t\tlet token = await response.json();\n\t\tif (token.error) {\n\t\t\tconsole.error(token.error);\n\t\t\treturn (this.m_token = null);\n\t\t}\n\t\tvar expire = new Date();\n\t\texpire.setSeconds(expire.getSeconds() + token.expires_in);\n\t\tthis.m_token = token;\n\t\tthis.m_token.expires_in = expire;\n\t\treturn token.access_token;\n\t\t//   return response.then((value)=> {\n\t\t//     return value.json().then((token)=> {\n\t\t//         if (token.error) {\n\t\t//             console.error(token.error);\n\t\t//             return this.m_token=null;\n\t\t//         }\n\t\t//         var expire=new Date();\n\t\t//         expire.setSeconds(expire.getSeconds()+token.expires_in);\n\t\t//         this.m_token=token;\n\t\t//         this.m_token.expires_in=expire;\n\t\t//         return token.access_token;\n\t\t//     })\n\t\t//     .catch((reason)=>{\n\t\t//         console.error(reason);\n\t\t//         return null;\n\t\t//     }); // parses JSON response into native JavaScript objects\n\t\t//   })\n\t\t//   .catch((reason)=> {\n\t\t//       console.error(reason);\n\t\t//       throw new Exception(reason);\n\t\t//   })\n\t}\n\texecuteQuery(Sentence) {\n\t\treturn new XoneJSONResulset();\n\t}\n\tasync fetchDataAsync(Sentence, data) {\n\t\t// var token = await this.readBearerTokenAsync();\n\t\t// if (TextUtils.isEmpty(token))\n\t\t//     throw new Exception(\"No Auth\");\n\t\t// var parser = new SqlParser(\"ROWID\");\n\t\t// parser.ParseSqlString(Sentence as string);\n\t\t// var data = {\n\t\t//     //count:args.length>0?args[0]:false,\n\t\t//     //coll: args.length>1?args[1]:\"\",\n\t\t//     action: \"select\",\n\t\t//     where: parser.GetWhereSentence(),\n\t\t//     sort: parser.getOrderBySentence()\n\t\t//     //page: args.length>2?args[2]:{}\n\t\t// };\n\t\t// data = { ...data, ...options };\n\t\tconst response = await fetch(this.sUrlAddress, {\n\t\t\tmethod: this.sMethod,\n\t\t\t//mode: 'no-cors', // no-cors, *cors, same-origin\n\t\t\t// cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n\t\t\t//credentials: 'omit', // include, *same-origin, omit\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\t//redirect: 'follow', // manual, *follow, error\n\t\t\t// referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n\t\t\tbody: JSON.stringify(data),\n\t\t});\n\t\treturn await response.json();\n\t}\n\tasync executeQueryAsync(Sentence, ...args) {\n\t\t// if (((this.getFlags() & XoneJSONConnection.FLAG_XONEJSONODATA) > 0) || this.isSqlQueryDisabled() || \"GET\".equals(this.getMethod())) {\n\t\t//     let parser = new SqlParser(\"ROWID\");\n\t\t//     parser.ParseSqlString(Sentence);\n\t\t//     return executeQuery(parser, nMaxRecords);\n\t\t// } else {\n\t\t//     getJsonObject(this.getUrlAddress(), Sentence);\n\t\t//     return new JSONResultSet(this, jsonObject, connection.getFlags());\n\t\t// }\n\t\tvar parser = new SqlParser(\"ROWID\");\n\t\tparser.ParseSqlString(Sentence);\n\t\tvar data = {\n\t\t\taction: \"select\",\n\t\t\twhere: parser.GetWhereSentence(),\n\t\t\tsort: parser.getOrderBySentence(),\n\t\t};\n\t\tdata = Object.assign(Object.assign({}, data), args[0]);\n\t\tvar rs = new XoneJSONResulset(this, Sentence, data);\n\t\treturn await rs.populate();\n\t}\n\tprepareNormalData(body) {}\n\t// async executeQueryAsyncOld(Sentence: any, ...args): Promise<IResultSet> {\n\t//     var token = await this.readBearerTokenAsync();\n\t//     if (TextUtils.isEmpty(token))\n\t//         throw new Exception(\"No Auth\");\n\t//     var parser = new SqlParser(\"ROWID\");\n\t//     parser.ParseSqlString(Sentence as string);\n\t//     var data = {\n\t//         //count:args.length>0?args[0]:false,\n\t//         //coll: args.length>1?args[1]:\"\",\n\t//         action: \"select\",\n\t//         where: parser.GetWhereSentence(),\n\t//         sort: parser.getOrderBySentence()\n\t//         //page: args.length>2?args[2]:{}\n\t//     };\n\t//     this.m_data = { ...data, ...args[0] };\n\t//     const response = await fetch(this.m_url, {\n\t//         method: 'POST', // *GET, POST, PUT, DELETE, etc.\n\t//         //mode: 'no-cors', // no-cors, *cors, same-origin\n\t//         // cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n\t//         //credentials: 'omit', // include, *same-origin, omit\n\t//         headers: {\n\t//             'Content-Type': 'application/json',\n\t//             \"Authorization\": \"Bearer \" + token\n\t//             // 'Content-Type': 'application/x-www-form-urlencoded',\n\t//         },\n\t//         //redirect: 'follow', // manual, *follow, error\n\t//         // referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n\t//         body: JSON.stringify(this.m_data) // body data type must match \"Content-Type\" header\n\t//     });\n\t//     const result = await response.json();\n\t//     return this.m_resulset = new XoneJSONResulset(result.data);\n\t//     // return this.readBearerTokenAsync().then((token) => {\n\t//     //     if (TextUtils.isEmpty(token))\n\t//     //         throw new Exception(\"No Auth\");\n\t//     //     var parser=new SqlParser(\"ROWID\");\n\t//     //     parser.ParseSqlString(Sentence as string);\n\t//     //     var data= {\n\t//     //         coll: args[0],\n\t//     //         action: \"select\",\n\t//     //         where: parser.GetWhereSentence()\n\t//     //     };\n\t//     //     const response = fetch(this.m_url, {\n\t//     //         method: 'POST', // *GET, POST, PUT, DELETE, etc.\n\t//     //         mode: 'no-cors', // no-cors, *cors, same-origin\n\t//     //         // cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n\t//     //         //credentials: 'omit', // include, *same-origin, omit\n\t//     //         headers: {\n\t//     //         'Content-Type': 'application/json',\n\t//     //         \"Authorization\": \"Bearer \"+token\n\t//     //         // 'Content-Type': 'application/x-www-form-urlencoded',\n\t//     //         },\n\t//     //         //redirect: 'follow', // manual, *follow, error\n\t//     //         // referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n\t//     //         body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\t//     //     });\n\t//     //     return response.then((value)=>\n\t//     //             value.json().then((result)=>\n\t//     //                 new XoneJSONResulset(result.data)))\n\t//     //             .catch((reason)=> {\n\t//     //                 console.error(reason);\n\t//     //                 return null;\n\t//     //             });\n\t//     // });\n\t// }\n\tasync countAsync(Sentence, ...args) {\n\t\t// var token = await this.readBearerTokenAsync();\n\t\t// if (TextUtils.isEmpty(token))\n\t\t//     throw new Exception(\"No Auth\");\n\t\tvar parser = new SqlParser(\"ROWID\");\n\t\tparser.ParseSqlString(Sentence);\n\t\tvar data = {\n\t\t\taction: \"count\",\n\t\t\twhere: parser.GetWhereSentence(),\n\t\t\tsort: parser.getOrderBySentence(),\n\t\t};\n\t\tdata = Object.assign(Object.assign({}, data), args[0]);\n\t\tvar rs = new XoneJSONResulset(this, Sentence, data);\n\t\treturn await rs.populate();\n\t\t// const response = await fetch(this.m_url, {\n\t\t//     method: 'POST', // *GET, POST, PUT, DELETE, etc.\n\t\t//     //mode: 'no-cors', // no-cors, *cors, same-origin\n\t\t//     // cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n\t\t//     //credentials: 'omit', // include, *same-origin, omit\n\t\t//     headers: {\n\t\t//         'Content-Type': 'application/json',\n\t\t//         \"Authorization\": \"Bearer \" + token\n\t\t//         // 'Content-Type': 'application/x-www-form-urlencoded',\n\t\t//     },\n\t\t//     //redirect: 'follow', // manual, *follow, error\n\t\t//     // referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n\t\t//     body: JSON.stringify(this.m_data) // body data type must match \"Content-Type\" header\n\t\t// });\n\t\t// const result = await response.json();\n\t\t// return this.m_resulset = new XoneJSONResulset(result.data);\n\t}\n\tparseConnectionString(sConnection) {\n\t\tlet parameters = ConnectionStringUtils.parseConnectionString(sConnection);\n\t\tthis.bIsLoginCall = StringUtils.ParseBoolValue(parameters.get(\"logincall\"));\n\t\t// TAG 20050201: Luis: Permitir una primera aproximacion a authorization por JWT\n\t\t// En el connstring debe ponerse jwtcall=true y el token que se tenga\n\t\tthis.bIsJWTCall = StringUtils.ParseBoolValue(parameters.get(\"jwtcall\"));\n\t\tthis.sToken = StringUtils.SafeToString(parameters.get(\"token\"), Utils.EMPTY_STRING);\n\t\tthis.nFlags =\n\t\t\tthis.nFlags |\n\t\t\t(StringUtils.ParseBoolValue(parameters.get(\"odataformat\")) ? XoneJSONConnection.FLAG_XONEJSONODATA : XoneJSONConnection.FLAG_XONEJSONSQL);\n\t\tthis.nFlags =\n\t\t\tthis.nFlags |\n\t\t\t(StringUtils.ParseBoolValue(parameters.get(\"customformat\")) ? XoneJSONConnection.FLAG_XONEJSONCUSTOM : XoneJSONConnection.FLAG_XONEJSONSQL);\n\t\tthis.nTimeout = NumberUtils.SafeToInt(parameters.get(\"timeout\"), 60);\n\t\tthis.nSecurityLevel = NumberUtils.SafeToInt(parameters.get(\"security level\"), 0);\n\t\tthis.sUrlAddress = parameters.get(\"data source\");\n\t\tif (this.sUrlAddress != null) {\n\t\t\tthis.sUrlAddress = this.sUrlAddress.trim();\n\t\t\tif (this.sUrlAddress.endsWith(\"?\")) {\n\t\t\t\tthis.sUrlAddress = this.sUrlAddress.substring(0, this.sUrlAddress.length - 1);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.sUrlAddress = Utils.EMPTY_STRING;\n\t\t}\n\t\tthis.sMethod = parameters.get(\"method\");\n\t\tif (this.sMethod == null) {\n\t\t\tthis.sMethod = \"POST\";\n\t\t}\n\t\tthis.sUsername = parameters.get(\"xoneuser\");\n\t\tif (this.sUsername == null) {\n\t\t\tthis.sUsername = Utils.EMPTY_STRING;\n\t\t}\n\t\tthis.sPassword = parameters.get(\"xonepass\");\n\t\tif (this.sPassword == null) {\n\t\t\tthis.sPassword = Utils.EMPTY_STRING;\n\t\t}\n\t\tthis.sEndpoint = parameters.get(\"endpoint\");\n\t\tif (this.sEndpoint == null) {\n\t\t\tthis.sEndpoint = Utils.EMPTY_STRING;\n\t\t}\n\t\t// TAG 20050208: Luis: Permitir customizar mas las colecciones online\n\t\t// en el connstring se puede poner Action=nombreaccion y AuthAction=nombreaccionauth\n\t\tthis.sAction = StringUtils.SafeToString(parameters.get(\"action\"), XoneJSONConnection.DEFAULT_ACTION_NAME);\n\t\tthis.sAuthAction = StringUtils.SafeToString(parameters.get(\"authaction\"), XoneJSONConnection.DEFAULT_AUTHACTION_NAME);\n\t\tthis.sContentType = StringUtils.SafeToString(parameters.get(\"content-type\"), XoneJSONConnection.DEFAULT_CONTENT_TYPE);\n\t\tthis.bIsSqlQuery = StringUtils.ParseBoolValue(parameters.get(\"sqlquery\"), true);\n\t\t// TAG: 0604201601 nuevo parametro en el connstring para poder codeficar el cupero del post en formato key=valeu&key=vale\n\t\tthis.bPostUrlEncode = StringUtils.ParseBoolValue(parameters.get(\"postencode\"), false);\n\t\tthis.bIsCertificatePinningEnabled = StringUtils.ParseBoolValue(parameters.get(\"enablecertificatepinning\"));\n\t\tthis.sLocalCertPath = StringUtils.SafeToString(parameters.get(\"localcertificatepath\"));\n\t\t// Para la autenticacion remota, puede ser por conexion o por llamada del script del metodo\n\t\tthis.bAuthenticate = StringUtils.ParseBoolValue(parameters.get(\"auth\"), false);\n\t\tif (this.bAuthenticate) {\n\t\t\tthis.sAuthenticationUsername = parameters.get(\"user id\");\n\t\t\tthis.sAuthenticationPassword = parameters.get(\"password\");\n\t\t}\n\t\tthis.bUseRemoteBroker = StringUtils.ParseBoolValue(parameters.get(\"remote broker\"), false);\n\t\tthis.sRemoteMapped = StringUtils.SafeToString(parameters.get(\"remote mapped\"));\n\t\tthis.sRemoteDest = StringUtils.SafeToString(parameters.get(\"remote destination\"));\n\t\tthis.bAllowUnsafeCertificates = StringUtils.ParseBoolValue(parameters.get(\"allowunsafecertificates\"), false);\n\t}\n\tcreateStatement() {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tisClosed() {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tcommit() {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tbeginTrans() {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\trollback() {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\texecute(parameter, MaxRows) {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\texecuteUpdate(Sentence) {\n\t\treturn 0;\n\t}\n\texecuteOperation(OperType, tableName, values, whereClause) {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tgetDBMS() {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\touterJoinsSupported() {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tacceptsParsedSentences() {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tacceptsEmptyQueries() {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tLastRowsAffected() {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tLastInsertedRowId() {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tcancelProcesses(flags) {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tsetCryptoData(cryptoData) {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tgetCryptoData() {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tcryptoSupported() {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tgetTokenFromAuth(login, pass) {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tgetFlags() {\n\t\treturn this.nFlags;\n\t}\n\tisSqlQueryDisabled() {\n\t\treturn !this.bIsSqlQuery;\n\t}\n\tgetMethod() {\n\t\treturn this.sMethod;\n\t}\n\t/**\n\t * name\n\t */\n\tname() {}\n\tgetUrlAddress() {\n\t\treturn this.sUrlAddress;\n\t}\n}\nXoneJSONConnection.DEFAULT_CONTENT_TYPE = \"application/x-www-form-urlencoded\";\n// TAG 20050208: Luis: Permitir customizar mas las colecciones online\nXoneJSONConnection.DEFAULT_ACTION_NAME = \"Action\";\nXoneJSONConnection.DEFAULT_AUTHACTION_NAME = \"Auth\";\nXoneJSONConnection.FLAG_XONEJSONSQL = 1;\nXoneJSONConnection.FLAG_XONEJSONODATA = 2;\nXoneJSONConnection.FLAG_XONEJSONCUSTOM = 4;\n\n//# sourceMappingURL=XoneJSONConnection.js.map\n","import { Ref, nextTick, watch } from \"vue\";\nimport { XoneDataObject } from \"./appData/core/XoneDataObject\";\nimport { getView } from \"./XoneViewsHandler\";\n\n/** @type {boolean} */\nlet _isScaleFontsize = false;\n\n/** @type {string} */\nlet _webFontFactor = \"6\";\n\n/**\n * setIsScaleFontsize\n * @param {boolean} value\n */\nexport const setIsScaleFontsize = (value) => (_isScaleFontsize = value);\n\n/**\n * setWebFontFactor\n * @param {number} value\n */\nexport const setWebFontFactor = (value) => (_webFontFactor = value);\n\n/**\n * Types Definitions\n *\n * @typedef {Object} Margins\n * @property {string} top\n * @property {string} right\n * @property {string} bottom\n * @property {string} left\n *\n * @typedef {Object} Paddings\n * @property {string} top\n * @property {string} right\n * @property {string} bottom\n * @property {string} left\n *\n * @typedef {Object} Borders\n * @property {boolean} top\n * @property {boolean} right\n * @property {boolean} bottom\n * @property {boolean} left\n *\n * @typedef {Object} ContainerAlign\n * @property {string} row\n * @property {string} column\n *\n * @typedef {Object} Floating\n * @property {boolean} floating\n * @property {string} [top]\n * @property {string} [left]\n *\n * @typedef {Object} ContainerAttributes\n * @property {Object} align\n * @property {string} animationIn\n * @property {string} animationOut\n * @property {string} bgColor\n * @property {string} bMargin\n * @property {string} borderColor\n * @property {string} borderCornerRadius\n * @property {Borders} borders\n * @property {number} borderWidth\n * @property {string} cellEvenColor\n * @property {string} cellOddColor\n * @property {string} cellSelectedBgColor\n * @property {string} disableVisible\n * @property {string} drawerOrientation\n * @property {number} elevation\n * @property {string} fixed\n * @property {Floating} floating\n * @property {string} foreColor\n * @property {boolean} framebox\n * @property {boolean} groupSwipe\n * @property {string} height\n * @property {string} href\n * @property {string} id\n * @property {string} image\n * @property {boolean} keepAspectRatio\n * @property {string} lMargin\n * @property {boolean} loadAll\n * @property {Margins} margins\n * @property {string} minHeight\n * @property {string} minWidth\n * @property {string} name\n * @property {boolean} newLine\n * @property {string} node\n * @property {boolean} noTab\n * @property {string} onClick\n * @property {string} onFocus\n * @property {string} onScroll\n * @property {string} orientation\n * @property {Paddings} paddings\n * @property {string} rMargin\n * @property {boolean} scroll\n * @property {string} scrollOrientation\n * @property {string} tabBgColor\n * @property {string} tabFontSize\n * @property {string} tabForecolor\n * @property {Paddings} tabPaddings\n * @property {string} tabSelectedForecolor\n * @property {string} tMargin\n * @property {string} viewMode\n * @property {string} width\n * @property {boolean} wrap\n *\n * @typedef {Object} PropAttributes\n * @property {ContainerAlign|string} align\n * @property {string} allowedExtensions\n * @property {boolean} autosave\n * @property {Number} autoslideDelay\n * @property {string} bgColor\n * @property {string} bMargin\n * @property {string} borderColor\n * @property {string} borderCornerRadius\n * @property {Borders} borders\n * @property {number} borderWidth\n * @property {number} breadcrumbFontSize\n * @property {number} breadcrumbForeColor\n * @property {number} breadcrumbSelectedFontSize\n * @property {number} breadcrumbSelectedForeColor\n * @property {string} buttonOption\n * @property {string} calendarViewMode\n * @property {string} cellBgColor\n * @property {string} cellBorderColor\n * @property {string} cellEvenColor\n * @property {string} cellForeColor\n * @property {string} cellOddColor\n * @property {string} cellOtherMonthBgColor\n * @property {string} cellSelectedBgColor\n * @property {string} cellSelectedBorderColor\n * @property {string} cellSelectedForeColor\n * @property {Object} contents\n * @property {string} disableEdit\n * @property {string} disableVisible\n * @property {boolean} editInRow\n * @property {number} elevation\n * @property {string} fieldSize\n * @property {boolean} fixedText\n * @property {Floating} floating\n * @property {boolean} floatingTooltip\n * @property {boolean} fluidLoad\n * @property {boolean} fontBold\n * @property {string} fontSize\n * @property {string} foreColor\n * @property {number} galleryColumns\n * @property {string} height\n * @property {string} href\n * @property {string} image\n * @property {string} imgChecked\n * @property {string} imgCheckedDisabled\n * @property {string} imgHeight\n * @property {string} imgUnchecked\n * @property {string} imgUncheckedDisabled\n * @property {string} imgWidth\n * @property {boolean} isRadio\n * @property {boolean|Number} isVisible\n * @property {boolean} keepAspectRatio\n * @property {string} labelAlign\n * @property {boolean} labelBox\n * @property {string} labelWidth\n * @property {string} lines\n * @property {string} linkedField\n * @property {string} linkedTo\n * @property {string} lMargin\n * @property {boolean} locked\n * @property {Object} margins\n * @property {Object} method\n * @property {string} minHeight\n * @property {string} minWidth\n * @property {boolean} multiLine\n * @property {string} name\n * @property {string} node\n * @property {Object} onClick\n * @property {string} onEditorAction\n * @property {Object} onFocusChanged\n * @property {string} onScroll\n * @property {Object} onTextChanged\n * @property {Paddings} paddings\n * @property {number} paginationSize\n * @property {string} postOnchange\n * @property {string} radioGroup\n * @property {boolean} readOnly\n * @property {string} rMargin\n * @property {number} rowsPerPage\n * @property {boolean} showInline\n * @property {boolean} showInlineKeyboard\n * @property {number} size\n * @property {string} textAlign\n * @property {string} textBgColor\n * @property {string} textBgColorDisabled\n * @property {Object} textBorder\n * @property {boolean} textBorderBottom\n * @property {boolean} textBorderLeft\n * @property {boolean} textBorderRight\n * @property {boolean} textBorderTop\n * @property {string} textOverflow\n * @property {string} textFontSize\n * @property {string} textForeColor\n * @property {string} textForeColorDisabled\n * @property {string} title\n * @property {string} tMargin\n * @property {string} tooltip\n * @property {string} tooltipColor\n * @property {string} tooltipForeColor\n * @property {string} type\n * @property {string} viewMode\n * @property {boolean} weekdaysLongname\n * @property {string} width\n * @property {boolean} wrap\n *\n * @typedef {ContainerAttributes|PropAttributes} XoneAttributes\n */\n\n/**\n * Class to handle mappings attributes\n */\nclass XoneAttributesHandler {\n\t/**\n\t * _instance\n\t * @type {XoneAttributesHandler}\n\t */\n\tstatic _instance;\n\n\t/**\n\t * mapFormulaFunctions\n\t * @type {Map<string,Function>}\n\t */\n\t_mapFormulaFunctions = new Map();\n\n\tconstructor() {\n\t\tif (XoneAttributesHandler._instance) return XoneAttributesHandler._instance;\n\n\t\tXoneAttributesHandler._instance = this;\n\t}\n\n\t/**\n\t * Convert xone units to html units\n\t * @param {any} value\n\t * @param {boolean} [isLine]\n\t * @returns {string}\n\t */\n\tconvertUnits(value, isLine = false) {\n\t\tif (!value) return;\n\n\t\tif (value.toString().includes(\"px\") || value.toString().includes(\"%\")) return value;\n\n\t\tif (value.toString().includes(\"p\")) return value.toString().replace(\"p\", \"px\");\n\n\t\tif (isNaN(Number(value))) return value;\n\n\t\tconst num = Number(value);\n\t\tif (num < 0) return num === -1 ? \"grow\" : \"auto\";\n\n\t\tif (isLine) return num + 0.5 + \"em\";\n\n\t\treturn num === 0 ? \"0\" : `${num}em`;\n\t}\n\n\t/**\n\t * Get Paddings\n\t * @param {Object} attributes\n\t * @returns {Paddings}\n\t */\n\tgetPaddings(attributes) {\n\t\treturn {\n\t\t\ttop: this.convertUnits(attributes.tPadding ?? 0),\n\t\t\tright: this.convertUnits(attributes.rPadding ?? 0),\n\t\t\tbottom: this.convertUnits(attributes.bPadding ?? 0),\n\t\t\tleft: this.convertUnits(attributes.lPadding ?? 0),\n\t\t};\n\t}\n\t/**\n\t * Get Paddings\n\t * @param {Object} attributes\n\t * @returns {Paddings}\n\t */\n\tgetTabPaddings(attributes) {\n\t\treturn {\n\t\t\ttop: this.convertUnits(attributes.tabTPadding ?? 0),\n\t\t\tright: this.convertUnits(attributes.tabRPadding ?? 0),\n\t\t\tbottom: this.convertUnits(attributes.tabBPadding ?? 0),\n\t\t\tleft: this.convertUnits(attributes.tabLPadding ?? 0),\n\t\t};\n\t}\n\n\t/**\n\t * Resolve margins\n\t * @param {Object} attributes\n\t * @returns {Margins}\n\t */\n\tgetMargins(attributes) {\n\t\t/**\n\t\t * Margins\n\t\t * @type {Array<string>}\n\t\t */\n\t\tlet [top, right, bottom, left] = [attributes.tMargin ?? \"0\", attributes.rMargin ?? \"0\", attributes.bMargin ?? \"0\", attributes.lMargin ?? \"0\"].map(\n\t\t\t(e) => this.convertUnits(e)\n\t\t);\n\t\tif (attributes.node === \"prop\" && attributes.floatingTooltip && top === \"0\") top = \"1rem\";\n\t\treturn { top, right, bottom, left };\n\t}\n\n\t/**\n\t * Resolve borders\n\t * @param {Object} attributes\n\t * @returns {Borders}\n\t */\n\tgetBorders(attributes) {\n\t\tconst [top, right, bottom, left] = [\n\t\t\t(attributes.textBorder ?? \"true\") === \"true\" && (attributes.textBorderTop ?? \"true\") === \"true\",\n\t\t\t(attributes.textBorder ?? \"true\") === \"true\" && (attributes.textBorderRight ?? \"true\") === \"true\",\n\t\t\t(attributes.textBorder ?? \"true\") === \"true\" && (attributes.textBorderBottom ?? \"true\") === \"true\",\n\t\t\t(attributes.textBorder ?? \"true\") === \"true\" && (attributes.textBorderLeft ?? \"true\") === \"true\",\n\t\t];\n\n\t\treturn { top, right, bottom, left };\n\t}\n\n\t/**\n\t * Get label align\n\t * @param {*} align\n\t * @returns {\"flex-start\"|\"flex-end\"|\"center\"|undefined}\n\t */\n\tgetLabelAlign(align) {\n\t\tif (!align) return;\n\t\tif (align?.toString().includes(\"left\")) return \"flex-start\";\n\t\tif (align?.toString().includes(\"right\")) return \"flex-end\";\n\t\tif (align?.toString().includes(\"center\")) return \"center\";\n\t}\n\n\t/**\n\t * Get prop align\n\t * @param {string} align\n\t * @param {string} [type]\n\t * @returns {\"center\"|\"end\"|\"start\"|undefined}\n\t */\n\tgetPropAlign(align, type = \"T\") {\n\t\tif (!align) {\n\t\t\tif (type.startsWith(\"N\")) return \"end\";\n\t\t}\n\t\tif (align?.toString().includes(\"left\")) return \"start\";\n\t\tif (align?.toString().includes(\"right\")) return \"end\";\n\t\tif (align?.toString().includes(\"center\")) return \"center\";\n\t}\n\n\t/**\n\t * Resolve container align\n\t * @param {Object} attributes\n\t * @returns {ContainerAlign}\n\t */\n\tgetContainerAlign(attributes) {\n\t\tlet align = (attributes.align ?? \"\").toString(),\n\t\t\trow = \"\",\n\t\t\tcolumn = \"\";\n\t\tif (align.includes(\"left\")) row = \"flex-start\";\n\t\tif (align.includes(\"right\")) row = \"flex-end\";\n\t\tif (align.includes(\"top\")) column = \"flex-start\";\n\t\tif (align.includes(\"bottom\")) column = \"flex-end\";\n\t\tif (align.includes(\"center\")) {\n\t\t\tif (align === \"center\") {\n\t\t\t\trow = \"center\";\n\t\t\t\tcolumn = \"center\";\n\t\t\t} else if (row === \"\") row = \"center\";\n\t\t\telse column = \"center\";\n\t\t\tif (column === \"\" && align.replace(\"center\", \"\").includes(\"center\")) column = \"center\";\n\t\t}\n\n\t\treturn { row, column };\n\t}\n\n\t/**\n\t * Node visibility depending on the visibility bit\n\t * @param {Object} attributes\n\t * @param {Number} [visibilityBit]\n\t */\n\tisNodeVisible() {\n\t\t//(attributes, visibilityBit = 1) {\n\t\treturn true;\n\t\t// Comentado porque ya viene en el getLayout de appData\n\t\t// return (attributes.visible ?? 1) & Number(visibilityBit << 0 !== 0);\n\t}\n\n\t/**\n\t * Calculate control size depending on container size and attribute width/height\n\t * @param {string|Number|undefined} attributeSize\n\t * @param {Number} containerSize\n\t * @param {Number} scaleFactor\n\t */\n\tgetScaledSize(attributeSize, containerSize, scaleFactor) {\n\t\tlet size;\n\n\t\tif (!attributeSize) return;\n\n\t\tif (attributeSize.toString().includes(\"px\")) size = scaleFactor * Number(attributeSize.toString().replace(\"px\", \"\"));\n\t\telse if (attributeSize.toString().includes(\"%\")) size = (containerSize * Number(attributeSize.toString().replace(\"%\", \"\"))) / 100;\n\n\t\treturn size;\n\t}\n\n\t/**\n\t * Calculate control position on container depending on size and scale\n\t * @param {string} position\n\t * @param {number} scaleFactor\n\t * @returns {string}\n\t */\n\tgetScaledPosition(position, scaleFactor) {\n\t\t/**  @type {string|number} */\n\t\tlet value = position;\n\n\t\tif (!value) return;\n\n\t\tif (value.toString().includes(\"px\")) {\n\t\t\tvalue = value.replace(\"px\", \"\");\n\t\t\tif (isNaN(Number(value))) return;\n\t\t\treturn `${Number(value) * scaleFactor}px`;\n\t\t}\n\t\treturn value;\n\t}\n\n\t/**\n\t * Calculate and adjust height to parent container when height attribute is null or auto and height > containerHeight\n\t * @param {PropAttributes} attributes\n\t * @param {Ref<HTMLElement>} htmlElement\n\t * @param {boolean} [isResized]\n\t */\n\tfitHeightToContainer = async (attributes, htmlElement, isResized = false) => {\n\t\t// Si tenemos márgenes negativos, no hacemos el fit por problemas de renderizado del html\n\t\tif (attributes.margins?.top?.toString().startsWith(\"-\") || attributes.margins?.bottom?.toString().startsWith(\"-\")) return;\n\n\t\ttry {\n\t\t\tif (attributes.height !== \"auto\" && attributes.width == \"auto\") return;\n\t\t\tawait nextTick();\n\n\t\t\t/**\n\t\t\t * frame / group parent element\n\t\t\t * @type {HTMLElement}\n\t\t\t */\n\t\t\tconst containerElement = htmlElement.value?.parentElement?.parentElement?.parentElement;\n\t\t\tif (!containerElement) return;\n\n\t\t\tif (isResized || (containerElement.parentElement && containerElement.parentElement.classList.contains(\"xone-contents-row\"))) {\n\t\t\t\t// If parent is contents row and  maxHeight is setted, reset and fit again\n\t\t\t\tif (htmlElement.value.style.maxHeight) {\n\t\t\t\t\thtmlElement.value.style.maxHeight = null; // button element\n\t\t\t\t\thtmlElement.value.parentElement.style.maxHeight = null; // prop element\n\t\t\t\t\thtmlElement.value.parentElement.parentElement.style.maxHeight = null; // row element\n\t\t\t\t\treturn setTimeout(() => this.fitHeightToContainer(attributes, htmlElement), 100);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!containerElement || containerElement.offsetHeight === 0) return;\n\n\t\t\tlet maxHeight = `calc(${containerElement.offsetHeight}px + var(--margin-top) + var(--margin-bottom))`; // container width\n\n\t\t\thtmlElement.value.style.maxHeight = maxHeight; // button element\n\t\t\t// htmlElement.value.style.objectFit = \"contain\";\n\t\t\thtmlElement.value.parentElement.style.maxHeight = maxHeight; // prop element\n\t\t\thtmlElement.value.parentElement.parentElement.style.maxHeight = maxHeight; // row element\n\t\t} catch {}\n\t};\n\n\t/**\n\t * Calculate and adjust width to parent container when width attribute is null or auto and width > containerWidth\n\t * @param {PropAttributes} attributes\n\t * @param {Ref<HTMLElement>} htmlElement\n\t * @param {boolean} [isResized]\n\t */\n\tfitWidthToContainer = async (attributes, htmlElement, isResized = false) => {\n\t\t// Si tenemos márgenes negativos, no hacemos el fit por problemas de renderizado del html\n\t\tif (attributes.margins?.left?.toString().startsWith(\"-\") || attributes.margins?.right?.toString().startsWith(\"-\")) return;\n\n\t\ttry {\n\t\t\tif (attributes.height === \"auto\" && attributes.width !== \"auto\") return;\n\n\t\t\tawait nextTick();\n\n\t\t\t/**\n\t\t\t * frame / group parent element\n\t\t\t * @type {HTMLElement}\n\t\t\t */\n\t\t\tconst containerElement = htmlElement.value?.parentElement?.parentElement?.parentElement;\n\n\t\t\tif (!containerElement) return;\n\n\t\t\t// If parent is contents row and  maxWidth is setted, reset and fit again\n\t\t\tif (isResized || (containerElement.parentElement && containerElement.parentElement.classList.contains(\"xone-contents-row\"))) {\n\t\t\t\tif (htmlElement.value.style.maxWidth) {\n\t\t\t\t\thtmlElement.value.style.maxWidth = null; // button element\n\t\t\t\t\thtmlElement.value.parentElement.style.maxWidth = null; // prop element\n\t\t\t\t\thtmlElement.value.parentElement.parentElement.style.maxWidth = null; // row element\n\t\t\t\t\treturn setTimeout(() => this.fitWidthToContainer(attributes, htmlElement), 100);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!containerElement || containerElement.offsetWidth === 0) return;\n\n\t\t\tlet maxWidth = `calc(${containerElement.offsetWidth}px + var(--margin-right) + var(--margin-left))`; // container width\n\n\t\t\thtmlElement.value.style.maxWidth = maxWidth; // button element\n\t\t\t// htmlElement.value.style.objectFit = \"contain\";\n\t\t\thtmlElement.value.parentElement.style.maxWidth = maxWidth; // prop element\n\t\t\thtmlElement.value.parentElement.parentElement.style.maxWidth = maxWidth; // row element\n\t\t} catch {}\n\t};\n\n\t/**\n\t * Calculate font size\n\t * @param {string} fontSize\n\t */\n\tgetFontSize(fontSize) {\n\t\tif (fontSize && !isNaN(fontSize) && _isScaleFontsize) fontSize = Number(fontSize) + _webFontFactor;\n\t\tconst u = window.innerWidth > window.innerHeight ? \"vh\" : \"vw\";\n\t\tif (!fontSize) fontSize = \"8\";\n\t\tif (isNaN(Number(fontSize))) return fontSize;\n\t\treturn `calc(${Number(fontSize) + 3}px + .5${u})`;\n\t}\n\n\t/**\n\t * Get prop type\n\t * @param {Object} attributes\n\t */\n\tgetPropType(attributes) {\n\t\tlet type = attributes.type ?? \"T\";\n\t\tif (type === \"T\") {\n\t\t\tif ((attributes.mask ?? \"\") == \"Hh#:#Mm\") type = \"TT\";\n\t\t}\n\t\treturn type;\n\t}\n\n\t/**\n\t * Resolve image attribute\n\t * @param {string} img\n\t */\n\tgetImage(img) {\n\t\tif (!img) return null;\n\t\tif (img) img = img.replace(\"./icons/\", \"\").replace(\"##APP##\", \"\").replace(\"##APPPATH##\", \"\").replace(\"\\\\icons\\\\\", \"\");\n\n\t\treturn img;\n\t}\n\n\t/**\n\t * Resolve floating / top / left attributes\n\t * @param {*} attributes\n\t * @returns {Floating}\n\t */\n\tgetFloating(attributes) {\n\t\tif (!attributes.floating || !attributes.top || !attributes.left || attributes.floating !== \"true\") return { floating: false };\n\t\tconst top = this.convertUnits(attributes.top);\n\t\tconst left = this.convertUnits(attributes.left);\n\t\treturn { floating: true, top, left };\n\t}\n\n\t/**\n\t * getAnimationIn\n\t * @param {string} animation\n\t */\n\tgetAnimationIn(animation) {\n\t\tswitch (animation) {\n\t\t\tcase \"##RIGHT_IN##\":\n\t\t\t\treturn \"\";\n\t\t\tcase \"##LEFT_IN##\":\n\t\t\t\treturn \"slideRight .3s\";\n\t\t\tcase \"##PUSH_DOWN_IN##\":\n\t\t\t\treturn \"slideDown .3s\";\n\t\t\tcase \"##PUSH_IN##\":\n\t\t\t\treturn \"slideUp .3s\";\n\t\t\tcase \"##ALPHA_IN##\":\n\t\t\t\treturn \"fadeIn .3s\";\n\t\t\tcase \"##ZOOM_IN##\":\n\t\t\t\treturn \"zoomIn .3s\";\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Attributes for prop\n\t * @param {Object} attributes\n\t * @param {Number} visibilityBit\n\t * @returns {PropAttributes}\n\t */\n\tgetPropAttributes(attributes, visibilityBit = 1) {\n\t\treturn {\n\t\t\talign: attributes.type === \"B\" ? this.getContainerAlign(attributes) : this.getPropAlign(attributes.align, attributes.type),\n\t\t\tallowedExtensions: attributes.allowedExtensions,\n\t\t\tautosave: attributes.autosave === \"true\",\n\t\t\tautoslideDelay: !isNaN(Number(attributes.autoslideDelay)) && Number(attributes.autoslideDelay),\n\t\t\tbgColor: attributes.bgColor,\n\t\t\tbMargin: attributes.bMargin,\n\t\t\tborderColor: attributes.borderColor || attributes.textForeColor || attributes.foreColor || \"black\",\n\t\t\tborderCornerRadius: `${attributes.borderCornerRadius ?? 2}px`,\n\t\t\tborders: this.getBorders(attributes),\n\t\t\tborderWidth: `${attributes.borderWidth ?? 1}px`,\n\t\t\tbreadcrumbFontSize: this.getFontSize(attributes.breadcrumbFontSize),\n\t\t\tbreadcrumbForeColor: attributes.breadcrumbForeColor,\n\t\t\tbreadcrumbSelectedFontSize: this.getFontSize(attributes.breadcrumbSelectedFontSize),\n\t\t\tbreadcrumbSelectedForeColor: attributes.breadcrumbSelectedForeColor,\n\t\t\tbuttonOption: attributes.buttonOption,\n\t\t\tcalendarViewMode: attributes.calendarViewMode,\n\t\t\tcellBgColor: attributes.cellBgColor,\n\t\t\tcellBorderColor: attributes.cellBorderColor,\n\t\t\tcellEvenColor: attributes.cellEvenColor ?? \"transparent\",\n\t\t\tcellForeColor: attributes.cellForeColor,\n\t\t\tcellOddColor: attributes.cellOddColor ?? \"transparent\",\n\t\t\tcellOtherMonthBgColor: attributes.cellOtherMonthBgColor,\n\t\t\tcellSelectedBgColor: attributes.cellSelectedBgColor,\n\t\t\tcellSelectedBorderColor: attributes.cellSelectedBorderColor,\n\t\t\tcellSelectedForeColor: attributes.cellSelectedForeColor,\n\t\t\tcontents: attributes.contents,\n\t\t\tdisableEdit: attributes.disableEdit,\n\t\t\tdisableVisible: attributes.disableVisible,\n\t\t\teditInRow: attributes.editInRow === \"true\",\n\t\t\televation: attributes.elevation ?? 0,\n\t\t\tfieldSize: this.convertUnits(attributes.fieldSize ?? 12),\n\t\t\tfixedText: attributes.fixedText === \"true\",\n\t\t\tfloating: this.getFloating(attributes),\n\t\t\tfloatingTooltip: attributes.floatingTooltip ?? false,\n\t\t\tfluidLoad: attributes.fluidLoad === \"true\",\n\t\t\tfontBold: attributes.fontBold === \"true\",\n\t\t\tfontSize: this.getFontSize(attributes.fontSize),\n\t\t\tforeColor: attributes.foreColor,\n\t\t\tgalleryColumns: Number(attributes.galleryColumns ?? 1),\n\t\t\theight: this.convertUnits(attributes.height),\n\t\t\thref: attributes.href,\n\t\t\timage: this.getImage(attributes.image),\n\t\t\timgChecked: this.getImage(attributes.imgChecked),\n\t\t\timgCheckedDisabled: this.getImage(attributes.imgCheckedDisabled),\n\t\t\timgHeight: this.convertUnits(attributes.imgHeight),\n\t\t\timgUnchecked: this.getImage(attributes.imgUnchecked),\n\t\t\timgUncheckedDisabled: this.getImage(attributes.imgUncheckedDisabled),\n\t\t\timgWidth: this.convertUnits(attributes.imgWidth),\n\t\t\tisRadio: attributes.checkType === \"radio\" || attributes.viewMode === \"radio\",\n\t\t\tisVisible: this.isNodeVisible(attributes, visibilityBit),\n\t\t\tkeepAspectRatio: attributes.keepAspectRatio === \"true\",\n\t\t\tlabelAlign: this.getLabelAlign(attributes.align),\n\t\t\tlabelBox: attributes.labelBox === \"true\",\n\t\t\tlabelWidth: attributes.type === \"TL\" && attributes.width ? \"100%\" : this.convertUnits(attributes.labelwidth ?? 8),\n\t\t\tlines: this.convertUnits(attributes.lines ?? \"auto\", true),\n\t\t\tlinkedField: attributes.linkedField,\n\t\t\tlinkedTo: attributes.linkedTo,\n\t\t\tlMargin: attributes.lMargin,\n\t\t\tlocked: attributes.locked === \"true\",\n\t\t\tmargins: this.getMargins(attributes),\n\t\t\tmethod: attributes.method,\n\t\t\tminHeight: this.convertUnits(attributes.minHeight),\n\t\t\tminWidth: this.convertUnits(attributes.minWidth),\n\t\t\tmultiLine: Number(attributes.lines ?? 1) !== 1 || attributes.height === \"-1\" || attributes.height === \"-2\",\n\t\t\tname: attributes.name,\n\t\t\tnode: attributes.node,\n\t\t\tonClick: attributes.onClick,\n\t\t\tonEditorAction: attributes.onEditorAction,\n\t\t\tonFocusChanged: attributes.onFocusChanged,\n\t\t\tonScroll: attributes.onScroll,\n\t\t\tonTextChanged: attributes.onTextChanged,\n\t\t\tpaddings: this.getPaddings(attributes),\n\t\t\tpaginationSize: !isNaN(attributes.paginationSize) ? Number(attributes.paginationSize) : undefined,\n\t\t\tpostOnchange: attributes.postOnchange,\n\t\t\tradioGroup: attributes.radioGroup,\n\t\t\treadOnly: (attributes.readOnly ?? \"true\") === \"true\",\n\t\t\trMargin: attributes.rMargin,\n\t\t\trowsPerPage: attributes.rowsPerPage,\n\t\t\tshowInline: attributes.showInline === \"true\",\n\t\t\tshowInlineKeyboard: attributes.showInlineKeyboard === \"true\",\n\t\t\tsize: attributes.size,\n\t\t\ttextAlign: this.getPropAlign(attributes.textAlign, attributes.type),\n\t\t\ttextBgColor: attributes.textBgColor,\n\t\t\ttextBgColorDisabled: attributes.textBgColorDisabled,\n\t\t\ttextBorder: attributes.textBorder,\n\t\t\ttextBorderBottom: attributes.textBorderBottom,\n\t\t\ttextBorderLeft: attributes.textBorderLeft,\n\t\t\ttextBorderRight: attributes.textBorderRight,\n\t\t\ttextBorderTop: attributes.textBorderTop,\n\t\t\ttextOverflow: attributes.textOverflow,\n\t\t\ttextFontSize: this.getFontSize(attributes.textFontSize),\n\t\t\ttextForeColor: attributes.textForeColor || attributes.foreColor,\n\t\t\ttextForeColorDisabled: attributes.textForeColorDisabled,\n\t\t\ttitle: attributes.title,\n\t\t\ttMargin: attributes.tMargin,\n\t\t\ttooltip: attributes.tooltip,\n\t\t\ttooltipColor: attributes.tooltipColor,\n\t\t\ttooltipForeColor: attributes.tooltipForeColor,\n\t\t\ttype: this.getPropType(attributes),\n\t\t\tviewMode: attributes.viewMode,\n\t\t\tweekdaysLongname: attributes.weekdaysLongname === \"true\",\n\t\t\twidth: this.convertUnits(attributes.width),\n\t\t\twrap: attributes.wrap === \"true\",\n\t\t};\n\t}\n\n\t/**\n\t * Attributes for containers\n\t * @param {Object} attributes\n\t * @returns {ContainerAttributes}\n\t */\n\tgetContainerAttributes(attributes) {\n\t\treturn {\n\t\t\talign: this.getContainerAlign(attributes),\n\t\t\tanimationIn: this.getAnimationIn(attributes.animationIn),\n\t\t\tanimationOut: null, //this.getAnimation(attributes.animationOut),\n\t\t\tbgColor: attributes.bgColor,\n\t\t\tbMargin: attributes.bMargin,\n\t\t\tborderColor: attributes.borderColor ?? \"black\",\n\t\t\tborderCornerRadius: `${attributes.borderCornerRadius ?? 0}px`,\n\t\t\tborders: this.getBorders(attributes),\n\t\t\tborderWidth: `${attributes.borderWidth ?? 1}px`,\n\t\t\tcellEvenColor: attributes.cellEvenColor ?? \"transparent\",\n\t\t\tcellOddColor: attributes.cellOddColor ?? \"transparent\",\n\t\t\tcellSelectedBgColor: attributes.cellSelectedBgColor,\n\t\t\tdisableVisible: attributes.disableVisible,\n\t\t\tdrawerOrientation: attributes.drawerOrientation,\n\t\t\televation: attributes.elevation ?? 0,\n\t\t\tfixed: attributes.fixed ?? \"\",\n\t\t\tfloating: this.getFloating(attributes),\n\t\t\tforeColor: attributes.foreColor,\n\t\t\tframebox: attributes.framebox === \"true\",\n\t\t\tgroupSwipe: attributes.groupSwipe === \"true\",\n\t\t\theight: this.convertUnits(attributes.height),\n\t\t\thref: attributes.href,\n\t\t\tid: attributes.id,\n\t\t\timage: this.getImage(attributes.image),\n\t\t\tkeepAspectRatio: attributes.keepAspectRatio === \"true\",\n\t\t\tlMargin: attributes.lMargin,\n\t\t\tloadAll: attributes.loadAll === \"true\",\n\t\t\tmargins: this.getMargins(attributes),\n\t\t\tminHeight: this.convertUnits(attributes.minHeight),\n\t\t\tminWidth: this.convertUnits(attributes.minWidth),\n\t\t\tname: attributes.name,\n\t\t\tnewLine: (attributes.newLine ?? \"true\") === \"true\",\n\t\t\tnode: attributes.node,\n\t\t\tnoTab: attributes.noTab === \"true\",\n\t\t\tonClick: attributes.onClick,\n\t\t\tonFocus: attributes.onFocus,\n\t\t\tonScroll: attributes.onScroll,\n\t\t\torientation: attributes.orientation ?? \"\",\n\t\t\tpaddings: this.getPaddings(attributes),\n\t\t\trMargin: attributes.rMargin,\n\t\t\tscroll: attributes.scroll === \"true\",\n\t\t\tscrollOrientation: attributes.scrollOrientation ?? \"vertical\",\n\t\t\ttabBgColor: attributes.tabBgColor ?? \"white\",\n\t\t\ttabFontSize: this.getFontSize(attributes.tabFontSize),\n\t\t\ttabForecolor: attributes.tabForecolor ?? \"black\",\n\t\t\ttabPaddings: this.getTabPaddings(attributes),\n\t\t\ttabSelectedForecolor: attributes.tabSelectedForecolor ?? \"#3273dc\",\n\t\t\ttMargin: attributes.tMargin,\n\t\t\tviewMode: attributes.viewMode,\n\t\t\twidth: this.convertUnits(attributes.width),\n\t\t\twrap: attributes.wrap === \"true\",\n\t\t};\n\t}\n\n\t/**\n\t * Execute method node (method, onfocus ...)\n\t * @param {string} method\n\t * @param {XoneDataObject} xoneDataObject\n\t * @param {string} [propName]\n\t * @returns {Promise<boolean>}\n\t */\n\tasync executeMethod(method, xoneDataObject, propName) {\n\t\ttry {\n\t\t\tconst lowerCaseMethod = method?.trim().toLowerCase();\n\n\t\t\t// Remove 'javascript:' if  exists\n\t\t\tif (lowerCaseMethod.startsWith(\"javascript:\")) method = method.trim().substring(11);\n\n\t\t\t//\n\t\t\t// Is not executeNode\n\t\t\tif (!lowerCaseMethod.includes(\"executenode\")) {\n\t\t\t\t// Refresh\n\t\t\t\tif (lowerCaseMethod.startsWith(\"refresh\")) {\n\t\t\t\t\tif (!propName) return;\n\t\t\t\t\treturn xoneDataObject.DoRunScriptAsync(`ui.refresh('${propName}')`);\n\t\t\t\t}\n\t\t\t\t// RunScript\n\t\t\t\treturn xoneDataObject.DoRunScriptAsync(method);\n\t\t\t}\n\n\t\t\t//\n\t\t\t// Is executeNode\n\n\t\t\t// Parse method\n\t\t\tlet params;\n\t\t\tmethod = method.substring(method.indexOf(\"(\")).replace(\"(\", \"\").replace(\")\", \"\");\n\n\t\t\t// with params\n\t\t\tif (method.includes(\"(\") && method.includes(\")\")) {\n\t\t\t\tparams = method.substring(method.indexOf(\"(\"));\n\t\t\t\tmethod = method.replace(params, \"\");\n\t\t\t\tparams = params.replace(\"(\", \"\").replace(\")\", \"\").split(\",\");\n\t\t\t\tparams = params.map((param) =>\n\t\t\t\t\t!param.toString().startsWith(\"'\") &&\n\t\t\t\t\t!param.toString().startsWith('\"') &&\n\t\t\t\t\t!param.toString().startsWith(\"'\") &&\n\t\t\t\t\t!param.toString().startsWith('\"')\n\t\t\t\t\t\t? `'${param}'`\n\t\t\t\t\t\t: param\n\t\t\t\t);\n\t\t\t\tawait xoneDataObject.ExecuteNode(method, ...params);\n\t\t\t}\n\t\t\t// without params\n\t\t\telse {\n\t\t\t\tawait xoneDataObject.ExecuteNode(method);\n\t\t\t}\n\t\t} catch (ex) {\n\t\t\tconsole.error(ex);\n\t\t}\n\t}\n\n\t/**\n\t * Evaluate disableedit / disablevisible\n\t * @param {string} formula\n\t * @param {Object} dataModel\n\t */\n\tevalFormula(formula, dataModel) {\n\t\ttry {\n\t\t\t/**\n\t\t\t * Eval Function\n\t\t\t * @type {Function}\n\t\t\t */\n\t\t\tlet fFunction = this._mapFormulaFunctions.get(formula);\n\n\t\t\t// Function exist -> execute and return result\n\t\t\tif (fFunction) return fFunction(dataModel);\n\n\t\t\t// Function does not exist -> parse formula (from XOne to javascript) and create function\n\t\t\tconst operators = [\n\t\t\t\t// xone conditions\n\t\t\t\t{ from: \"+\", to: \" + \" },\n\t\t\t\t{ from: \"-\", to: \" - \" },\n\t\t\t\t{ from: \"/\", to: \" / \" },\n\t\t\t\t{ from: \"*\", to: \" * \" },\n\t\t\t\t{ from: \"&\", to: \" + \" },\n\t\t\t\t{ from: \" and \", to: \" && \" },\n\t\t\t\t{ from: \" or \", to: \" || \" },\n\t\t\t\t{ from: \"<>\", to: \" != \" },\n\t\t\t\t{ from: \">\", to: \" > \" },\n\t\t\t\t{ from: \"<\", to: \" < \" },\n\t\t\t\t{ from: \"=\", to: \" == \" },\n\t\t\t];\n\t\t\tlet st = formula;\n\t\t\t// Eliminamos espacios entre operadores\n\t\t\tdo {\n\t\t\t\toperators.forEach(({ from }) => (st = st.replace(\" \" + from, from)));\n\t\t\t\toperators.forEach(({ from }) => (st = st.replace(from + \" \", from)));\n\t\t\t} while (operators.some(({ from }) => st.includes(\" \" + from) || st.includes(from + \" \")));\n\n\t\t\tconst replacedOperators = [];\n\n\t\t\t// returns if formula includes an oper\n\t\t\tconst replaceOperator = (operator) => {\n\t\t\t\tlet index;\n\t\t\t\twhile ((index = st.toLowerCase().indexOf(operator.from)) !== -1) {\n\t\t\t\t\treplacedOperators.push({\n\t\t\t\t\t\tindex,\n\t\t\t\t\t\toper: operator.to,\n\t\t\t\t\t});\n\t\t\t\t\tst = st.replace(\n\t\t\t\t\t\tst.substr(index, operator.from.length),\n\t\t\t\t\t\tArray(operator.from.length + 1).join(\"~\") // Replace operator's chars with ~\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Parse opers\n\t\t\toperators.forEach(replaceOperator);\n\n\t\t\t// Clear extra chars\n\t\t\twhile (st.includes(\"~~\")) st = st.replace(\"~~\", \"~\");\n\n\t\t\t// Sort replaced operators by index\n\t\t\tconst order = replacedOperators.map((e) => e.index).sort((a, b) => a - b);\n\n\t\t\t// Generate the final formula to be evaluated\n\t\t\tlet stFinal = \"\";\n\t\t\tlet i = 0;\n\t\t\tst.split(\"~\").forEach((e) => {\n\t\t\t\tif (stFinal !== \"\" && i < order.length) {\n\t\t\t\t\t// Add Operator\n\t\t\t\t\tstFinal += replacedOperators.find((e) => e.index === order[i]).oper;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tlet prop = e.trim().split(\"(\").join(\"\").split(\")\").join(\"\");\n\t\t\t\tif (Object.keys(dataModel).find((e) => e === prop)) {\n\t\t\t\t\t// Replace prop\n\t\t\t\t\treturn (stFinal += e.replace(prop, `self['${prop.trim()}']`));\n\t\t\t\t}\n\t\t\t\tstFinal += e;\n\t\t\t});\n\n\t\t\t// Replace macros ##FLD_ ##\n\t\t\tif (stFinal.includes(\"##FLD_\")) stFinal = stFinal.replace(/##FLD_/g, \"self['\").replace(/##/g, \"']\");\n\n\t\t\t// create function\n\t\t\tthis._mapFormulaFunctions.set(\n\t\t\t\tformula,\n\t\t\t\t(fFunction = Function(\n\t\t\t\t\t\"self\",\n\t\t\t\t\t`try{return ${stFinal}}catch(ex){console.error(\"Error evaluating formula:\", \"'${stFinal}'\");console.warn(ex);throw \"Error evaluating formula\";}`\n\t\t\t\t))\n\t\t\t);\n\t\t\t// eval formula\n\t\t\treturn fFunction(dataModel);\n\t\t} catch (ex) {\n\t\t\tconsole.error(\"Error evaluating formula\", formula, ex);\n\t\t}\n\t}\n\n\t/**\n\t * Observe changes in attributes model and data model with ##FLD_ fields and fetch them to attributes\n\t * @param {Ref<XoneAttributes>} attributes\n\t * @param {Ref<Object>} attributesModel\n\t * @param {Ref<XoneAttributes>} dataModel\n\t */\n\twatchAttributes(attributes, attributesModel, dataModel) {\n\t\t/**\n\t\t * resolve Attribute\n\t\t * @param {string} e Attribute\n\t\t */\n\t\tconst resolveAttr = (e) => {\n\t\t\tif (e === \"disableVisible\" || e === \"disableEdit\") return (attributes.value[e] = attributesModel.value[e]);\n\n\t\t\tlet st = attributesModel.value[e];\n\t\t\twhile (st?.toString().includes(\"##FLD\")) {\n\t\t\t\t// Foreign key\n\t\t\t\tconst foreignKey = st.substring(st.indexOf(\"##FLD_\") + 6, st.indexOf(\"##\", st.indexOf(\"##\") + 6));\n\t\t\t\t// Resolve ##FLD_\n\t\t\t\tif (foreignKey && Object.keys(dataModel).includes(foreignKey)) st = st.replace(`##FLD_${foreignKey}##`, dataModel[foreignKey]);\n\t\t\t\telse\n\t\t\t\t\treturn console.warn(\n\t\t\t\t\t\t`Could not resolve ##FLD_ in ${attributes.value.node} | ${attributes.value.name} -> ${e}=\"${attributesModel.value[e]}\"`\n\t\t\t\t\t);\n\t\t\t}\n\t\t\t// Resolve attribute\n\t\t\tconst newAttrs =\n\t\t\t\tattributesModel.value.node === \"prop\"\n\t\t\t\t\t? this.getPropAttributes({ ...attributes.value, [e]: st })\n\t\t\t\t\t: this.getContainerAttributes({ ...attributes.value, [e]: st });\n\t\t\t// Si el valor del atributo lo convierto a un objeto (margins, paddings y borders), lo asigno\n\t\t\tif (e.toLowerCase().contains(\"padding\")) {\n\t\t\t\tattributes.value.paddings = newAttrs.paddings;\n\t\t\t\tif (attributesModel.value.node === \"coll\") attributes.value.tabPaddings = newAttrs.tabPaddings;\n\t\t\t} else if (e.toLowerCase().contains(\"margin\")) attributes.value.margins = newAttrs.margins;\n\t\t\telse if (e.toLowerCase().contains(\"border\")) attributes.value.borders = newAttrs.borders;\n\t\t\t// Asignamos el valor del atributo modificado\n\t\t\tattributes.value[e] = newAttrs[e];\n\t\t};\n\t\t// Watch Attributes Model\n\t\tObject.keys(attributesModel.value).forEach((e) => {\n\t\t\twatch(\n\t\t\t\t() => attributesModel.value[e],\n\t\t\t\t(newValue, oldValue) => {\n\t\t\t\t\t// Si es un objeto, comparamos que realmente haya cambiado algún valor...\n\t\t\t\t\tif (typeof newValue === \"object\") {\n\t\t\t\t\t\tif (JSON.stringify(newValue) !== JSON.stringify(oldValue)) resolveAttr(e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolveAttr(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t\t// Watch Data Model\n\t\tObject.keys(dataModel).forEach((dMKey) => {\n\t\t\tconst resolveMapModels = () =>\n\t\t\t\tObject.entries(attributesModel.value).forEach(([attrKey, attrValue]) => {\n\t\t\t\t\tif (typeof attrValue === \"string\" && attrValue.includes(`##FLD_${dMKey}##`)) {\n\t\t\t\t\t\tresolveAttr(attrKey);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\twatch(\n\t\t\t\t() => dataModel[dMKey],\n\t\t\t\t() => resolveMapModels()\n\t\t\t);\n\t\t\tresolveMapModels();\n\t\t});\n\t}\n\n\t/**\n\t * executeBindedEvent\n\t * @param {XoneDataObject} xoneDataObject\n\t * @param {Object} attributes\n\t * @param {string} type\n\t * @param {Object} options\n\t */\n\tasync executeBindedEvent(xoneDataObject, attributes, type, options) {\n\t\ttry {\n\t\t\tconst objView = getView(xoneDataObject);\n\t\t\tif (!objView) return;\n\t\t\tconst event = objView.bindedEvents?.find((e) => e.fieldName === attributes.name && e.eventName === type);\n\n\t\t\tif (event && event.action) {\n\t\t\t\tif (typeof event.action === \"function\") {\n\t\t\t\t\t// Add params\n\t\t\t\t\tconst params = {\n\t\t\t\t\t\ttarget: attributes.name,\n\t\t\t\t\t\tobjItem: attributes.name,\n\t\t\t\t\t\tdata: event.params,\n\t\t\t\t\t};\n\n\t\t\t\t\tObject.keys(options).forEach((key) => (params[key] = options[key]));\n\t\t\t\t\t// Execute function\n\t\t\t\t\tawait event.action(params);\n\t\t\t\t}\n\t\t\t\t// TODO: revisar, creo que se ejecuta un nodo pero realmente no tengo ni idea de lo que debe de hacer eso...\n\t\t\t\telse xoneDataObject.DoRunScriptAsync(event.action).catch(console.error);\n\t\t\t}\n\t\t} catch (ex) {\n\t\t\tconsole.error(ex);\n\t\t}\n\t}\n\n\t/**\n\t * onScrollEvent\n\t * @param {HTMLDivElement} element\n\t * @param {XoneAttributes} attributes\n\t * @param {XoneDataObject} xoneDataObject\n\t */\n\tasync onScrollEvent(element, attributes, xoneDataObject) {\n\t\tif (!element) return;\n\t\tconst { scrollTop, scrollLeft } = element;\n\t\tif (attributes.onScroll) {\n\t\t\tawait xoneDataObject.DoRunScriptAsync(\n\t\t\t\t`let e = { target: '${attributes.name}',objItem: '${attributes.name}',dy: ${scrollTop},dx: ${scrollLeft} };\n        ${attributes.onScroll}`\n\t\t\t);\n\t\t}\n\t\t// Execute binded event in script\n\t\tawait this.executeBindedEvent(xoneDataObject, attributes.name, \"onscroll\", {\n\t\t\tdy: scrollTop,\n\t\t\tdx: scrollLeft,\n\t\t});\n\t}\n\n\t/**\n\t * onClick\n\t * @param {XoneAttributes} attributes\n\t * @param {XoneDataObject} xoneDataObject\n\t * @param {import(\"./AppDataHandler\").Objectinfo} objectInfo\n\t */\n\tasync onClick(attributes, xoneDataObject, objectInfo) {\n\t\t//\n\t\t// Execute method\n\t\tconst method = attributes.method;\n\t\tif (method) await xoneAttributesHandler.executeMethod(method, xoneDataObject);\n\n\t\t//\n\t\t// Execute onclick\n\t\tconst onClick = attributes?.onClick;\n\t\ttry {\n\t\t\tif (onClick)\n\t\t\t\tawait xoneDataObject.DoRunScriptAsync(\n\t\t\t\t\t`let e = { target: '${attributes.name}',objItem: '${attributes.name}' };\n              ${onClick}`\n\t\t\t\t);\n\t\t} catch (ex) {\n\t\t\tconsole.error(ex);\n\t\t}\n\n\t\t//\n\t\t// Execute binded event in script\n\t\tawait xoneAttributesHandler.executeBindedEvent(xoneDataObject, attributes, \"onclick\", {});\n\n\t\t//\n\t\t// Is Custom Msgbox\n\t\tif (objectInfo.isMsgBox && attributes.buttonOption)\n\t\t\tobjectInfo.onMsgBoxOptionSelected && objectInfo.onMsgBoxOptionSelected(attributes.buttonOption);\n\t}\n}\n\nexport const xoneAttributesHandler = new XoneAttributesHandler();\n","// import { type } from \"os\";\n// import {format as ft} from \"util\";\nimport { sprintf as pr } from \"sprintf-js\";\nString.prototype.equals = function (text) {\n    return this.localeCompare(text) === 0;\n};\nString.prototype.equalsIgnoreCase = function (text) {\n    return this.compareToIgnoreCase(text) === 0;\n};\nString.prototype.contains = function (text) {\n    return this.indexOf(text) >= 0;\n};\nString.prototype.compareToIgnoreCase = function (text) {\n    return this.toLowerCase().localeCompare(text.toLocaleLowerCase());\n};\nString.prototype.compareTo = function (text) {\n    return this.localeCompare(text);\n};\nString.format = function (text, ...args) {\n    return pr(text, ...args);\n    //return ft(text,...args);\n};\n// function add<T>(this: T[],index:number, item: T) {\n//   this.splice(index, 0, item);\n// }\n// function remove<T>(this: T[], index:number)  {\n//      this.splice(index, 1);\n// };\n// function contains<T>(this: T[], item: T):boolean {\n//     return this.indexOf(item)>=0;\n// }\nArray.prototype.add = function (index, item) {\n    this.splice(index, 0, item);\n};\nArray.prototype.contains = function (item) {\n    return this.indexOf(item) >= 0;\n};\nArray.prototype.remove = function (index) {\n    if (typeof index == 'number')\n        this.splice(index, 1);\n    else\n        this.splice(this.indexOf(index), 1);\n};\n// Object.defineProperty(Array.prototype,\"contains\",{\n//     value: function<T>(this: T[],index:number,item:T) {\n//         return this.splice(index, 0, item);\n//       }\n// });\n\n//# sourceMappingURL=Extensions.js.map\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Input.vue?vue&type=style&index=0&id=2ea048d5&scoped=true&lang=css\"","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Calendar.vue?vue&type=style&index=0&id=9e1f59f0&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Column.vue?vue&type=style&index=0&id=3c3c9289&scoped=true&lang=css\"","import StringUtils from \"../../Utils/StringUtils\";\nexport default class XmlNodeList extends Array {\n    //private m_nodes: Array<XmlNode>\n    /**\n     *\n     */\n    constructor(...nodes) {\n        super(...nodes);\n        // if (nodes!=null)\n        //     super(nodes);\n        // else\n        //     super();\n        Object.setPrototypeOf(this, new.target.prototype);\n        // if (nodes==null || nodes.length==0)\n        //     this.m_nodes=new Array<XmlNode>();\n        // else\n        //     this.m_nodes=Array.from(nodes);\n    }\n    count() {\n        return this.length;\n    }\n    get(Index) {\n        return this[Index];\n    }\n    addNode(node) {\n        this.push(node);\n    }\n    exist(nodeName, attrName, attrValue) {\n        let bFound = false;\n        this.forEach(node => {\n            if (StringUtils.areEquals(node.getName(), nodeName) && node.attrExists(attrName) && StringUtils.areEquals(node.getAttrValue(attrName), attrValue))\n                bFound = true;\n        });\n        return bFound;\n    }\n    clear() {\n        while (this.length > 0)\n            this.pop();\n    }\n}\n\n//# sourceMappingURL=XmlNodeList.js.map\n","import Hashtable from \"../../Collections/HashMap/Hashtable\";\nimport { Exception } from \"../../Exceptions/Exception\";\nimport StringUtils from \"../../Utils/StringUtils\";\nimport TextUtils from \"../../Utils/TextUtils\";\nimport { Utils } from \"../../Utils/Utils\";\nimport XmlAttributes from \"./XmlAttributes\";\nimport XmlNodeList from \"./XmlNodeList\";\nexport default class XmlNode {\n    //protected m_doc:IXmlDocument;\n    constructor(parentNode, nodeName, attrs, defaultAttr, defaultAttrValue, events) {\n        this.serialVersionUID = 5009966220209540301;\n        //this.m_doc = doc;\n        this.m_children = new Array();\n        this.m_childrenNodes = new Hashtable();\n        this.m_strName = nodeName;\n        this.m_parent = parentNode;\n        this.m_attrs = attrs || new XmlAttributes();\n        if (parentNode != null) {\n            parentNode.addChild(this, nodeName, defaultAttr, defaultAttrValue);\n        }\n        this.lstEvents = events;\n    }\n    /**\n     * A13081301: Funcionalidad para manejar XML a nivel de script y modificar estructuras en runtime.\n     * Construye un nodo XML a partir de otro similar. Copia los hijos, los atributos y el texto.\n     *\n     * @param Source\n     * @param ParentNode\n     */\n    // public XmlNode(IXmlDocument doc, XmlNode Source, parent: XmlNodeNode) {\n    //     m_doc = doc;\n    //     m_parent = ParentNode;\n    //     m_strName = Source.getName();\n    //     m_childrenNodes = new Hashtable<string,XmlNode>();\n    //     ArrayList<XmlNode> children = Source.getChildren();\n    //     if (children != null) {\n    //         // Copiar los hijos\n    //         m_children = new ArrayList<>();\n    //         for (int i = 0; i < children.size(); i++) {\n    //             XmlNode n = children.get(i);\n    //             XmlNode nc = new XmlNode(doc, n, this);\n    //             String name = n.getName();\n    //             if (n.attrExists(Utils.PROP_ATTR_NAME) && (Utils.COLL_COLL.equals(name) || Utils.PROP_ATTR_GROUP.equals(name) || Utils.PROP_NAME.equals(name) || Utils.PROP_ATTR_FRAME.equals(name) || Utils.PROP_ATTR_CONTENTNAME.equals(name))) {\n    //                 addChild(nc, name, Utils.PROP_ATTR_NAME, n.getAttrValue(Utils.PROP_ATTR_NAME));\n    //             } else {\n    //                 addChild(nc, name, null, null);\n    //             }\n    //         }\n    //     }\n    //     m_attrs = new XoneAttributesImpl((XoneAttributesImpl) Source.getAttrs());\n    //     m_strText = Source.getText();\n    // }\n    // public XmlNode(IXmlDocument doc, parent: XmlNodeNode, String name) {\n    //     m_doc = doc;\n    //     //m_node =SourceNode;\n    //     m_children = new ArrayList<>();\n    //     //m_attributes =new Hashtable<String,String> ();\n    //     m_childrenNodes = new Hashtable<string,XmlNode>();\n    //     if (ParentNode != null) {\n    //         ParentNode.addChild(this, name, null, null);\n    //     }\n    //     m_strName = name;\n    //     m_parent = ParentNode;\n    // }\n    AddPropToRoot(parent, node, nodeName, defaultAttr, defaultAttrValue) {\n        if (parent == null) {\n            return;\n        }\n        if (StringUtils.areEquals(parent.getName(), Utils.COLL_COLL)) {\n            parent.addFastChild(node, nodeName, defaultAttr, defaultAttrValue);\n        }\n        else {\n            const tmp = parent.getParentNode();\n            if (tmp != null) {\n                this.AddPropToRoot(tmp, node, nodeName, defaultAttr, defaultAttrValue);\n            }\n        }\n    }\n    get attrs() {\n        return this.m_attrs;\n    }\n    addChild(node, nodeName, defaultAttr, defaultAttrValue) {\n        if (!TextUtils.isEmpty(defaultAttr) && !TextUtils.isEmpty(defaultAttrValue)) {\n            this.m_childrenNodes.put(Utils.formatKey(nodeName, defaultAttr, defaultAttrValue), node);\n            if (nodeName.equals(Utils.PROP_NAME) || nodeName.equals(Utils.PROP_ATTR_FRAME) || nodeName.equals(Utils.PROP_ATTR_CONTENTNAME)) {\n                this.AddPropToRoot(this, node, nodeName, defaultAttr, defaultAttrValue);\n            }\n        }\n        else {\n            const name = this.getName();\n            if (Utils.COLL_COLL.equals(name) || (Utils.PROP_ATTR_GROUP.equals(name) && !(nodeName.equals(Utils.PROP_NAME) || nodeName.equals(Utils.PROP_ATTR_FRAME) || nodeName.equals(Utils.PROP_ATTR_CONTENTNAME)))) {\n                this.AddPropToRoot(this, node, nodeName, defaultAttr, defaultAttrValue);\n            }\n        }\n        this.m_children.push(node);\n    }\n    addFastChild(node, nodeName, defaultAttr, defaultAttrValue) {\n        switch (nodeName) {\n            case Utils.PROP_NAME:\n                if (this.m_cachePropNodes == null) {\n                    this.m_cachePropNodes = new Hashtable();\n                }\n                this.m_cachePropNodes.put(Utils.formatKey(nodeName, defaultAttr, defaultAttrValue), node);\n                break;\n            case Utils.PROP_ATTR_FRAME:\n            case Utils.PROP_ATTR_CONTENTNAME:\n                if (this.m_cacheContainersNodes == null) {\n                    this.m_cacheContainersNodes = new Hashtable();\n                }\n                this.m_cacheContainersNodes.put(Utils.formatKey(nodeName, defaultAttr, defaultAttrValue), node);\n                break;\n            default:\n                if (this.m_cacheOtherNodes == null) {\n                    this.m_cacheOtherNodes = new Hashtable();\n                }\n                this.m_cacheOtherNodes.put(nodeName, node);\n                break;\n        }\n    }\n    appendChild(node) {\n        let nodeName = node.getName();\n        let defaultAttr = \"name\";\n        let defaultAttrValue = \"\";\n        if (!TextUtils.isEmpty(defaultAttr) && !TextUtils.isEmpty(defaultAttrValue)) {\n            this.m_childrenNodes.put(Utils.formatKey(nodeName, defaultAttr, defaultAttrValue), node);\n            if (nodeName.equals(Utils.PROP_NAME) || nodeName.equals(Utils.PROP_ATTR_FRAME) || nodeName.equals(Utils.PROP_ATTR_CONTENTNAME)) {\n                this.AddPropToRoot(this, node, nodeName, defaultAttr, defaultAttrValue);\n            }\n        }\n        else {\n            const name = this.getName();\n            if (Utils.COLL_COLL.equals(name) || (Utils.PROP_ATTR_GROUP.equals(name) && !(nodeName.equals(Utils.PROP_NAME) || nodeName.equals(Utils.PROP_ATTR_FRAME) || nodeName.equals(Utils.PROP_ATTR_CONTENTNAME)))) {\n                this.AddPropToRoot(this, node, nodeName, defaultAttr, defaultAttrValue);\n            }\n        }\n        this.m_children.push(node);\n    }\n    getName() {\n        return this.nodeName;\n    }\n    get nodeName() {\n        return this.m_strName;\n    }\n    setName(value) {\n        this.m_strName = value;\n    }\n    getText() {\n        return this.m_strText;\n    }\n    getBooleanText(bDefault) {\n        return StringUtils.ParseBoolValue(this.m_strText, bDefault);\n    }\n    setText(value) {\n        this.m_strText = value;\n    }\n    get attributes() {\n        return this.m_attrs;\n    }\n    getAttributes() {\n        return this.m_attrs;\n    }\n    // Tag: L0610201502 Si tiene eventos en los atributos se devuelve la lista\n    getEvents() {\n        return this.lstEvents;\n    }\n    getChildren() {\n        return this.m_children;\n    }\n    merge(parentNode) {\n        return this.mergeObj(parentNode.clone(), this, [{ nodename: 'coll', attrname: '*' }, { nodename: 'group', attrname: 'id' }, { nodename: 'frame', attrname: 'name' }, { nodename: 'prop', attrname: 'name' }]);\n        //return this;\n    }\n    addMergeChild(obj, child) {\n        obj.appendChild(child);\n    }\n    findNodeAttr(obj, attrName) {\n        return { value: obj.getAttrValue(attrName, null) };\n        // var attrs = obj.attributes;\n        // for (var i = 0; i < attrs.length; ++i) {\n        //     if (attrs[i].nodeName == attrName) {\n        //         return attrs[i];\n        //     }\n        // }\n        // return null;\n    }\n    isEquNode(obj1, obj2, config) {\n        if (obj1.nodeName == obj2.nodeName) {\n            var max = config.length;\n            for (var i = 0; i < max; ++i) {\n                if (config[i].nodename == obj1.nodeName) {\n                    if (config[i].attrname == '*') {\n                        return true;\n                    }\n                    var attr1 = this.findNodeAttr(obj1, config[i].attrname);\n                    if (attr1 == null) {\n                        return false;\n                    }\n                    var attr2 = this.findNodeAttr(obj2, config[i].attrname);\n                    if (attr2 == null) {\n                        return false;\n                    }\n                    if (attr1.value == attr2.value) {\n                        return true;\n                    }\n                    return false;\n                }\n            }\n        }\n        return false;\n    }\n    findSameChild(obj, child, config) {\n        var nums = obj.getChildren().length;\n        var childs = obj.getChildren();\n        for (var i = 0; i < nums; ++i) {\n            var curobj = childs[i];\n            if (this.isEquNode(curobj, child, config)) {\n                return curobj;\n            }\n        }\n        return null;\n    }\n    mergeAttrs(obj1, obj2) {\n        obj2.attributes.keys().forEach(element => {\n            obj1.attributes.setValue(element, obj2.attributes.getValue(element));\n        });\n    }\n    mergeObj(obj1, obj2, config) {\n        var isequ = this.isEquNode(obj1, obj2, config);\n        if (isequ) {\n            this.mergeAttrs(obj1, obj2);\n        }\n        else {\n            obj1.appendChild(obj2);\n            return obj1;\n        }\n        if (!obj2.hasChildNodes()) {\n            return obj1;\n        }\n        var nums2 = obj2.getChildren().length;\n        var childs2 = obj2.getChildren();\n        for (var i = 0; i < nums2; ++i) {\n            var curobj = childs2[i];\n            if (curobj.getName() == '#text') {\n                continue;\n            }\n            //this.mergeObj(obj1child, curobj, config);\n            //logger.normal.log('info', 'obj2 ', curobj.nodeName);\n            var obj1child = this.findSameChild(obj1, curobj, config);\n            if (obj1child != null) {\n                //logger.normal.log('info', 'merge ', curobj.nodeName);\n                this.mergeObj(obj1child, curobj, config);\n            }\n            else {\n                obj1.appendChild(curobj);\n                //this.mergeObj(obj1, curobj, config);\n            }\n        }\n        return obj1;\n    }\n    getDocument() {\n        throw new Exception(\"Not implement\");\n    }\n    getAttrValue(sAttrName, sDefault = \"\") {\n        const sValue = this.m_attrs.getValue(sAttrName);\n        if (sValue == null) {\n            return sDefault;\n        }\n        return sValue;\n    }\n    setAttrValue(AttrName, value) {\n        this.m_attrs.setValue(AttrName, value);\n    }\n    deleteAttribute(AttrName) {\n        this.m_attrs.deleteAttribute(AttrName);\n    }\n    // Luis: Funcion comun para detectar condiciones rapidas para encontrar la cache\n    CheckCacheConditions(map, NodeName, ...cacheNames) {\n        if (map == null) {\n            return false;\n        }\n        if (map.isEmpty()) {\n            return false;\n        }\n        if (cacheNames.length == 1) {\n            return NodeName.equals(cacheNames[0]);\n        }\n        else if (cacheNames.length > 1) {\n            return cacheNames.indexOf(NodeName) >= 0;\n        }\n        return false;\n    }\n    // Luis: Funcion comun para detectar condiciones rapidas para encontrar la cache\n    CheckIfCacheExists(map, sKey) {\n        if (map == null) {\n            return false;\n        }\n        if (map.isEmpty()) {\n            return false;\n        }\n        return map.containsKey(sKey);\n    }\n    getParentNode() {\n        return this.m_parent;\n    }\n    setParentNode(parentNode) {\n        this.m_parent = parentNode;\n    }\n    getChildNodes() {\n        if (this.m_allChildren != null) {\n            return this.m_allChildren;\n        }\n        // Si no, la creamos ahora\n        this.m_allChildren = new XmlNodeList();\n        for (let i = 0; i < this.m_children.length; i++) { // Comprobar cada nombre\n            let node = this.m_children[i];\n            this.m_allChildren.addNode(node);\n        } // Comprobar cada nombre\n        return this.m_allChildren;\n    }\n    hasChildNodes() {\n        try {\n            if (this.m_allChildren != null && this.m_allChildren.count() > 0) {\n                return true;\n            }\n            if (this.m_children != null && this.m_children.length > 0) {\n                return true;\n            }\n            return false;\n        }\n        catch (ex) {\n            ex.printStackTrace();\n            return false;\n        }\n    }\n    /**\n     * Devuelve TRUE si el atributo cuyo nombre se pasa como par�metro existe en la lista de atributos del nodo.\n     *\n     * @param AttrName Nobmre del atributo cuya existencia se quiere comprobar\n     * @return Devuelve TRUE si existe el atributo.\n     */\n    attrExists(AttrName) {\n        return this.m_attrs.getIndex(AttrName) >= 0;\n    }\n    /**\n     * @param m_attrs the m_attrs to set\n     */\n    setAttrs(m_attrs) {\n        this.m_attrs = m_attrs;\n    }\n    /**\n     * @return the m_attrs\n     */\n    getAttrs() {\n        return this.m_attrs;\n    }\n    /**\n     * A13081301: Funcionalidad para manejar XML a nivel de script y modificar estructuras en runtime.\n     *\n     * @return\n     */\n    getXml() {\n        return null;\n    }\n    /**\n     * A13081301: Funcionalidad para manejar XML a nivel de script y modificar estructuras en runtime.\n     * Inserta un nodo antes del que se diga como par�metro...\n     *\n     * @param NewChild Nodo a insertar\n     * @param Before   Nodo delante del que se inserta. NULL para agregar al final.\n     */\n    InsertBefore(NewChild, Before) {\n        this.addToCache(NewChild);\n        const idx = this.m_children.indexOf(Before);\n        if (idx == -1) {\n            this.m_children.push(NewChild);\n        }\n        else {\n            this.m_children.add(idx, NewChild);\n        }\n    }\n    /**\n     * A0206201401: Luis. Funcionalidad para manejar XML a nivel de script y modificar estructuras\n     * en runtime. Inserta un nodo antes del que se diga como parámetro...\n     *\n     * @param NewChild Nodo a insertar\n     * @param After    Nodo detras del que se inserta. NULL para agregar al final.\n     */\n    InsertAfter(NewChild, After) {\n        this.addToCache(NewChild);\n        let idx = this.m_children.indexOf(After);\n        if (idx == -1) {\n            this.m_children.push(NewChild);\n        }\n        else {\n            this.m_children.add(idx + 1, NewChild);\n        }\n    }\n    addToCache(child) {\n        const nodeName = child.getName();\n        if (child.attrExists(Utils.PROP_ATTR_NAME)) {\n            const defaultAttr = Utils.PROP_ATTR_NAME;\n            const defaultAttrValue = child.getAttrValue(Utils.PROP_ATTR_NAME);\n            if ((Utils.COLL_COLL.equals(nodeName) || Utils.PROP_ATTR_GROUP.equals(nodeName) || Utils.PROP_NAME.equals(nodeName) || Utils.PROP_ATTR_FRAME.equals(nodeName) || Utils.PROP_ATTR_CONTENTNAME.equals(nodeName))) {\n                if (!TextUtils.isEmpty(defaultAttr) && !TextUtils.isEmpty(defaultAttrValue)) {\n                    this.m_childrenNodes.put(Utils.formatKey(nodeName, defaultAttr, defaultAttrValue), child);\n                    if (nodeName.equals(Utils.PROP_NAME) || nodeName.equals(Utils.PROP_ATTR_FRAME) || nodeName.equals(Utils.PROP_ATTR_CONTENTNAME)) {\n                        this.AddPropToRoot(this, child, nodeName, defaultAttr, defaultAttrValue);\n                    }\n                }\n                else {\n                    const name = this.getName();\n                    if (Utils.COLL_COLL.equals(name) || (Utils.PROP_ATTR_GROUP.equals(name) && !(nodeName.equals(Utils.PROP_NAME) || nodeName.equals(Utils.PROP_ATTR_FRAME) || nodeName.equals(Utils.PROP_ATTR_CONTENTNAME)))) {\n                        this.AddPropToRoot(this, child, nodeName, defaultAttr, defaultAttrValue);\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * A0206201402: Luis. Funcionalidad para manejar XML a nivel de script y modificar estructuras\n     * en runtime. Borra un nodo de las listas\n     *\n     * @param child Nodo a borrar\n     */\n    Remove(child) {\n        try {\n            const idx = this.m_children.indexOf(child);\n            if (idx > -1) {\n                this.m_children.remove(idx);\n                this.m_childrenNodes.entrySet().forEach(entry => {\n                    if (entry[1] == child) {\n                        this.m_childrenNodes.delete(entry[0]);\n                    }\n                });\n                return true;\n            }\n            return false;\n        }\n        catch (e) {\n            e.printStackTrace();\n            return false;\n        }\n    }\n    /**\n     * A11121601: Implementación del picaíto en los XML de las maquinarias modernas. Reemplaza un\n     * hijo en la lista de este nodo por el que se pase.\n     *\n     * @param Original Nodo que se quiere reemplazar.\n     * @param NewNode  Nuevo nodo para poner en el lugar del original.\n     */\n    replaceChild(Original, NewNode) {\n        if (this.m_children != null) { // Reemplazar\n            const nIndex = this.m_children.indexOf(Original);\n            if (nIndex >= 0) { // Est�\n                this.m_children.add(nIndex, NewNode);\n                this.Remove(Original);\n            } // Est�\n        } // Reemplazar\n        if (this.m_childrenNodes != null) { // Buscar y sustituir\n            this.m_childrenNodes.clear();\n            //\n            // TODO PROGRAMAR ESTO\n            // Si est� en la lista organizada esta tenemos que quitarlo...\n            //\n        } // Buscar y sustituir\n    }\n    clone() {\n        let objResult = new XmlNode(null, this.nodeName, this.attributes.clone(), null, null, this.lstEvents);\n        this.m_children.forEach(node => {\n            objResult.appendChild(node.clone());\n        });\n        return objResult;\n    }\n    describeContents() {\n        return 0;\n    }\n    selectNodes(NodeName, AttrName, AttrValue, Exist) {\n        return this.SelectNodes(NodeName, AttrName, AttrValue, Exist);\n    }\n    SelectNodes(NodeName, AttrName, AttrValue, Exist) {\n        // Si tiene valor, es el de toda la vida\n        if (!TextUtils.isEmpty(AttrValue)) {\n            return this.SelectNodesInt3(NodeName, AttrName, AttrValue);\n        }\n        if (this.CheckCacheConditions(this.m_cachePropNodes, NodeName, Utils.PROP_NAME)) {\n            return this.SelectNodesHashExist(this.m_cachePropNodes, NodeName, AttrName, Exist);\n        }\n        if (this.CheckCacheConditions(this.m_cacheContainersNodes, NodeName, Utils.PROP_ATTR_CONTENTNAME, Utils.PROP_ATTR_FRAME)) {\n            return this.SelectNodesHashExist(this.m_cacheContainersNodes, NodeName, AttrName, Exist);\n        }\n        //\n        // Crear la lista\n        const list = new XmlNodeList();\n        for (let i = 0; i < this.m_children.length; i++) { // Comprobar cada nombre\n            const node = this.m_children[i];\n            if (node.getName().equals(NodeName)) { // Al menos el nombre lo tiene\n                const strAttr = node.getAttrValue(AttrName);\n                if (TextUtils.isEmpty(strAttr)) { // No existe\n                    if (Exist) {\n                        continue;\n                    }\n                } // No existe\n                else { // Existe\n                    if (!Exist) {\n                        continue;\n                    }\n                } // Existe\n                // A la lista\n                list.addNode(node);\n            } // Al menos el nombre lo tiene\n        } // Comprobar cada nombre\n        // Devolver la lista en cuesti�n\n        return list;\n    }\n    SelectNodesInt1(NodeName) {\n        // Como hemos hecho una cache de props y frames pues lo mejor es buscar ahi\n        if (this.CheckCacheConditions(this.m_cachePropNodes, NodeName, Utils.PROP_NAME)) {\n            return new XmlNodeList(this.m_cachePropNodes.values());\n        }\n        if (this.CheckCacheConditions(this.m_cacheContainersNodes, NodeName, Utils.PROP_ATTR_CONTENTNAME, Utils.PROP_ATTR_FRAME)) {\n            return this.SelectNodesHash2(this.m_cacheContainersNodes, NodeName);\n        }\n        const list = new XmlNodeList();\n        // Ahora buscar en los hijos\n        for (let i = 0; i < this.m_children.length; i++) { // Comprobar cada nombre\n            const node = this.m_children[i];\n            const localName = node.getName();\n            if (TextUtils.equals(localName, NodeName)) {\n                list.addNode(node);\n            }\n        } // Comprobar cada nombre\n        return list;\n    }\n    SelectNodesHash2(nodeList, NodeName) {\n        const list = new XmlNodeList();\n        nodeList.values().forEach(node => {\n            const localName = node.getName();\n            if (TextUtils.equals(localName, NodeName)) {\n                list.addNode(node);\n            }\n        });\n        return list;\n    }\n    SelectNodesHash4(nodeList, NodeName, AttrName, AttrValue) {\n        const list = new XmlNodeList();\n        nodeList.values().forEach(node => {\n            if (node.getName().equals(NodeName)) { // Al menos el nombre lo tiene\n                const strAttr = node.getAttrValue(AttrName);\n                if (TextUtils.equals(strAttr, AttrValue)) {\n                    list.addNode(node);\n                }\n            } // Al menos el nombre lo tiene\n        }); // Comprobar cada nombre\n        // No aparece\n        return list;\n    }\n    SelectNodesInt3(NodeName, AttrName, AttrValue) {\n        if (this.CheckCacheConditions(this.m_cachePropNodes, NodeName, Utils.PROP_NAME)) {\n            return this.SelectNodesHash4(this.m_cachePropNodes, NodeName, AttrName, AttrValue);\n        }\n        if (this.CheckCacheConditions(this.m_cacheContainersNodes, NodeName, Utils.PROP_ATTR_CONTENTNAME, Utils.PROP_ATTR_FRAME)) {\n            return this.SelectNodesHash4(this.m_cacheContainersNodes, NodeName, AttrName, AttrValue);\n        }\n        const list = new XmlNodeList();\n        for (let i = 0; i < this.m_children.length; i++) { // Comprobar cada nombre\n            const node = this.m_children[i];\n            if (node.getName().equals(NodeName)) { // Al menos el nombre lo tiene\n                const strAttr = node.getAttrValue(AttrName);\n                if (TextUtils.equals(strAttr, AttrValue)) {\n                    list.addNode(node);\n                }\n            } // Al menos el nombre lo tiene\n        } // Comprobar cada nombre\n        // No aparece\n        return list;\n    }\n    /**\n     * Sobrecarga que permite buscar nodos con X atributo independientemente del valor de este.\n     *\n     * @param NodeName\n     * @param AttrName\n     * @return\n     */\n    SelectNodesStr2(NodeName, AttrName) {\n        return this.SelectNodes(NodeName, AttrName, null, true);\n    }\n    /**\n     * Equivalente de SelecNodes con la opci�n de poder filtrar por la existencia o no existencia de un atributo determinado\n     * pasando NULL como valor del atributo\n     *\n     * @param NodeName  Nombre de los nodos que van a la lista.\n     * @param AttrName  Atributo por el que se quiere comparar o cuya existencia se quiere verificar.\n     * @param AttrValue Valor del atributo para comparaci�n. NULL si lo que se quiere es verificar existencia.\n     * @param Exist     Si AttrValue es NULL, TRUE para retornar nodos con el atributo, FALSE para retornar nodos sin el atributo.\n     * @return Devuelve la lista con los nodos que cumplen la condici�n.\n     */\n    SelectNodesHashExist(nodeList, NodeName, AttrName, Exist) {\n        //\n        // Crear la lista\n        const list = new XmlNodeList();\n        nodeList.values().forEach(node => {\n            if (node.getName().equals(NodeName)) { // Al menos el nombre lo tiene\n                const strAttr = node.getAttrValue(AttrName);\n                if (TextUtils.isEmpty(strAttr)) { // No existe\n                    if (Exist) {\n                        return;\n                    }\n                } // No existe\n                else { // Existe\n                    if (!Exist) {\n                        return;\n                    }\n                } // Existe\n                // A la lista\n                list.addNode(node);\n            } // Al menos el nombre lo tiene\n        }); // Comprobar cada nombre\n        // Devolver la lista en cuesti�n\n        return list;\n    }\n    selectSingleNode(NodeName, AttrName, AttrValue) {\n        return this.SelectSingleNode(NodeName, AttrName, AttrValue);\n    }\n    SelectSingleNode(NodeName, AttrName, AttrValue) {\n        if (AttrName == null)\n            return this.SelectSingleNodeInt1(NodeName);\n        if (AttrValue == null)\n            return this.SelectSingleNodeIntExist(NodeName, AttrName, true);\n        if (typeof AttrValue === 'boolean')\n            return this.SelectSingleNodeIntExist(NodeName, AttrName, AttrValue);\n        return this.SelectSingleNodeInt3(NodeName, AttrName, AttrValue);\n    }\n    SelectSingleNodeInt1(NodeName) {\n        // Como hemos hecho una cache de props y frames pues lo mejor es buscar ahi\n        if (this.CheckCacheConditions(this.m_cachePropNodes, NodeName, Utils.PROP_NAME)) {\n            return this.m_cachePropNodes.values()[0];\n        }\n        if (this.CheckCacheConditions(this.m_cacheContainersNodes, NodeName, Utils.PROP_ATTR_CONTENTNAME, Utils.PROP_ATTR_FRAME)) {\n            return this.m_cacheContainersNodes.values()[0];\n        }\n        if (this.m_cacheOtherNodes != null) {\n            if (!this.m_cacheOtherNodes.isEmpty() && this.m_cacheOtherNodes.containsKey(NodeName)) {\n                return this.m_cacheOtherNodes.get(NodeName);\n            }\n        }\n        // Ahora buscar en los hijos\n        for (let i = 0; i < this.m_children.length; i++) { // Comprobar cada nombre\n            let node = this.m_children[i];\n            if (TextUtils.equals(node.getName(), NodeName)) {\n                return node;\n            }\n            if (Utils.PROP_ATTR_GROUP.equals(node.getName())) { // Vamos a buscar al menos en el primer nivel del group porque antes se permitia\n                node = node.SelectSingleNode(NodeName);\n                if (node != null) {\n                    return node;\n                }\n            }\n        } // Comprobar cada nombre\n        return null;\n    }\n    SelectSingleNodeHash4(nodeList, NodeName, AttrName, AttrValue) {\n        nodeList.values().forEach(node => {\n            const localName = node.getName();\n            if (TextUtils.equals(localName, NodeName)) {\n                if (TextUtils.equals(node.getAttrValue(AttrName), AttrValue)) {\n                    return node;\n                }\n            }\n        });\n        return null;\n    }\n    SelectSingleNodeInt3(NodeName, AttrName, AttrValue) {\n        let node = null;\n        if (TextUtils.equals(Utils.PROP_ATTR_NAME, AttrName)) {\n            // Como hemos hecho una cache de props y frames pues lo mejor es buscar ahi\n            const sKey = Utils.formatKey(NodeName, AttrName, AttrValue);\n            if (this.CheckCacheConditions(this.m_cachePropNodes, NodeName, Utils.PROP_NAME) && this.CheckIfCacheExists(this.m_cachePropNodes, sKey)) {\n                return this.m_cachePropNodes.get(sKey);\n            }\n            if (this.CheckCacheConditions(this.m_cacheContainersNodes, NodeName, Utils.PROP_ATTR_CONTENTNAME, Utils.PROP_ATTR_FRAME) && this.CheckIfCacheExists(this.m_cacheContainersNodes, sKey)) {\n                return this.m_cacheContainersNodes.get(sKey);\n            }\n            node = this.m_childrenNodes.get(sKey);\n        }\n        else if (this.CheckCacheConditions(this.m_cachePropNodes, NodeName, Utils.PROP_NAME)) { // Agregado soporte para buscar un nodo por un atributo\n            node = this.SelectSingleNodeHash4(this.m_cachePropNodes, NodeName, AttrName, AttrValue);\n        }\n        else if (this.CheckCacheConditions(this.m_cacheContainersNodes, NodeName, Utils.PROP_ATTR_CONTENTNAME, Utils.PROP_ATTR_FRAME)) {\n            node = this.SelectSingleNodeHash4(this.m_cacheContainersNodes, NodeName, AttrName, AttrValue);\n        }\n        if (node != null) {\n            return node;\n        }\n        this.m_children.forEach(node => {\n            const localName = node.getName();\n            if (localName.equals(NodeName)) { // Al menos el nombre lo tiene\n                const strAttr = node.getAttrValue(AttrName);\n                if (TextUtils.equals(strAttr, AttrValue)) {\n                    return node;\n                }\n            } // Al menos el nombre lo tiene\n        }); // Comprobar cada nombre\n        // No aparece\n        return null;\n    }\n    SelectSingleNodeHashExist(nodeList, NodeName, AttrName, Exists) {\n        nodeList.values().forEach(node => {\n            const localName = node.getName();\n            if (localName.equals(NodeName)) { // Al menos el nombre lo tiene\n                const strAttr = node.getAttrValue(AttrName);\n                if (Exists && !TextUtils.isEmpty(strAttr)) {\n                    return node;\n                }\n                else if (!Exists && TextUtils.isEmpty(strAttr)) {\n                    return node;\n                }\n            } // Al menos el nombre lo tiene\n        }); // Comprobar cada nombre\n        // No aparece\n        return null;\n    }\n    // A10100703:\tFunci�n para pedir un nodo del fichero XML de la aplicaci�n.\n    // Esto hace falta para poner el GetNode a nivel de XoneApplication\n    SelectSingleNodeIntExist(NodeName, AttrName, Exists) {\n        if (this.CheckCacheConditions(this.m_cachePropNodes, NodeName, Utils.PROP_NAME)) {\n            return this.SelectSingleNodeHashExist(this.m_cachePropNodes, NodeName, AttrName, Exists);\n        }\n        if (this.CheckCacheConditions(this.m_cacheContainersNodes, NodeName, Utils.PROP_ATTR_CONTENTNAME, Utils.PROP_ATTR_FRAME)) {\n            return this.SelectSingleNodeHashExist(this.m_cacheContainersNodes, NodeName, AttrName, Exists);\n        }\n        this.m_children.forEach(node => {\n            const localName = node.getName();\n            if (localName.equals(NodeName)) { // Al menos el nombre lo tiene\n                const strAttr = node.getAttrValue(AttrName);\n                if (Exists && !TextUtils.isEmpty(strAttr)) {\n                    return node;\n                }\n                else if (!Exists && TextUtils.isEmpty(strAttr)) {\n                    return node;\n                }\n            } // Al menos el nombre lo tiene\n        }); // Comprobar cada nombre\n        // No aparece\n        return null;\n    }\n    toJSON() {\n        const nodesName = \"childs\";\n        let result = {};\n        result[this.getName()] = {};\n        result[this.getName()][\"attributes\"] = this.m_attrs.toJSON();\n        if (this.m_children.length > 0) {\n            result[this.getName()][nodesName] = [];\n            this.m_children.forEach(item => result[this.getName()][nodesName].push(item.toJSON()));\n        }\n        return result;\n    }\n}\n\n//# sourceMappingURL=XmlNode.js.map\n","export const isMobile = () => (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent));","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Coll.vue?vue&type=style&index=0&id=89d676b6&scoped=true&lang=css\"","import { Exception } from \"./Exception\";\nexport class XoneValidationException extends Exception {\n    /**\n     *\n     */\n    constructor(code, message) {\n        super(message);\n        this.code = code;\n    }\n}\n\n//# sourceMappingURL=XoneValidationException.js.map\n","import Hashtable from \"../Collections/HashMap/Hashtable\";\nimport Vector from \"../Collections/Vector\";\nimport { Exception } from \"../Exceptions/Exception\";\nimport XoneGenericException from \"../Exceptions/XoneGenericException\";\nimport { XoneMessageKeys } from \"../Exceptions/XoneMessageKeys\";\nimport { XoneValidationException } from \"../Exceptions/XoneValidationException\";\nimport { SqlParser } from \"../Parsers/SQL/SqlParser\";\nimport UITransform from \"../Transform/UITransform\";\nimport Calendar from \"../Utils/Calendar\";\nimport CXoneNameValuePair from \"../Utils/CXoneNameValuePair\";\nimport NumberUtils from \"../Utils/NumberUtils\";\nimport ObjUtils from \"../Utils/ObjUtils\";\nimport SqlType from \"../Utils/SqlType\";\nimport StringBuilder from \"../Utils/StringBuilder\";\nimport StringUtils from \"../Utils/StringUtils\";\nimport TextUtils from \"../Utils/TextUtils\";\nimport { Utils } from \"../Utils/Utils\";\nimport XmlUtils from \"../Utils/XmlUtils\";\nexport class XoneDataObject {\n    /**\n     * Construye un objeto de datos\n     * @param OwnerCollection\t\tColección propietaria de este objeto.\n     */\n    constructor(OwnerCollection) {\n        /**\n         * A12122701: Sistema para gestionar la estructura lógica de vistas en la maquinaria.\n         * Indica en qué nivel de profundidad de actualización de valores estamos. Cero indica nivel raíz\n         * y por tanto se pueden reevaluar las fórmulas de visiblidad y tal.\n         */\n        this.m_nSetValDepth = 0;\n        this.m_model = {};\n        //super();\n        // Cada objeto Xone le vamos a dar un valor unico consecutivo a partir de 0x10000000\n        this.UNIQUE_ID = Symbol(\"XoneDataObject\");\n        // F11070701: Modificaciones para solucionar los enlaces y grabación con claves no numéricas.\n        // Vale, si es nuevo es nuevo...\n        this.m_bIsLoading = true;\n        try {\n            this.m_bNewObject = true;\n            // Constriye las cosas que se van a usar en el objeto\n            // K13061901: Modificaciones para mejorar el soporte de concurrencia en la maquinaria.\n            // Hacer esta lista concurrente.\n            this.m_lstNormalProperties = new Hashtable();\n            this.m_lstOldValues = new Hashtable();\n            this.m_lstDirtyProperties = new Vector();\n            this.m_lstXlatProperties = new Vector();\n            this.m_lstDevelopedXlatProperties = new Vector();\n            this.m_owner = OwnerCollection;\n            this.m_bPropagateDirty = true; // Por defecto propagamos las modificaciones\n            this.m_lstLinkItems = new Vector();\n            this.m_lstVariables = new Hashtable();\n            // F09042302:\tLa lista de contents se asume creada en muchos lugares del objeto.\n            this.m_lstContents = new Hashtable();\n            this.m_lstDevelopingFields = new Vector();\n            // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n            // Almacenar la referencia al gestor de mensajes\n            this.m_messages = this.getOwnerApp().getMessageHolder();\n            // M12102401: Gestión de los atributos a nivel de objetos cacheando los valores.\n            // Lista de atributos de propiedades cacheados si se usa, claro\n            this.m_lstCachedAttributes = new Hashtable();\n            this.m_lstOverridenFieldPropertyValueAttributes = new Hashtable();\n            // ADD TAG TODO Inciaicilizar la varibal MAP_SYS_ORDER con -1 para saber que todavia no esta en la coleccion\n            this.mMapSysOrder = -1;\n            this.m_reactLayout = new Hashtable();\n            // A12122701: Sistema para gestionar la estructura lógica de vistas en la maquinaria.\n            // Si la colección tiene fórmulas, nosotros también\n            // F13022104: El acceso a las fórmulas de visibilidad de campos debe ser concurrente.\n            // La verificación tenemos que hacerla de otra forma... HasFormulas es el restraint para\n            // que se nivelen los threads.\n            // K13081201: Cambios en el tratamiento de fórmulas para mejorar la concurrencia.\n            this.m_formulaLocker = new Object();\n            this.addObjectProperties();\n        }\n        finally {\n            this.m_bIsLoading = false;\n        }\n        // if (this.m_owner.HasFormulas())\n        // {// Copiar\n        //     // Una vez aquí dentro ya se han adicionado todas las fórmulas\n        //     ////////foreach (KeyValuePair<string, CFormulaParser> kvp in m_owner.Formulas)\n        //     // K13081201: Cambios en el tratamiento de fórmulas para mejorar la concurrencia.\n        //     // Sacar el lock pafuérida... usar el bloqueador bueno bueno\n        //     synchronized (this.m_formulaLocker)\n        //     {\n        //         // Nos creamos la lista en plan serializado...\n        //         this.m_formulas = new Hashtable<string, XoneEvalData>();\n        //         synchronized (this.m_formulas)\n        //         {\n        //         \tHashtable<string, IFormulaParser> ofm =this.m_owner.getFormulas();\n        //         \tEnumeration<string> enm =ofm.keys();\n        //             while (enm.hasMoreElements())\n        //             {// Copiar las fórmulas y crear grupos de evaluación\n        //             \tstring key =enm.nextElement();\n        //             \tIFormulaParser ifp =ofm.get(key);\n        //             \tFormulaParser formula =(FormulaParser)ifp;\n        //                 XoneEvalData ed = new XoneEvalData(formula, this);\n        //                 // F13022104: El acceso a las fórmulas de visibilidad de campos debe ser concurrente.\n        //                 // No tiene sentido evaluar las fórmulas porque todavía el objeto no tiene valores\n        //                 // F13022201: Arreglos en la gestión de fórmulas.\n        //                 // Trim a la fórmula que será clave...\n        //                 ////////lock (m_formulas)\n        //                 this.m_formulas.put(formula.getSourceText().trim(), ed);\n        //             }// Copiar las fórmulas y crear grupos de evaluación\n        //         }\n        //     }\n        // }// Copiar\n    }\n    // Solo para identificar que una instancia es un objeto\n    get isDataObject() {\n        return true;\n    }\n    get model() {\n        return this.m_model;\n    }\n    set model(v) {\n        this.m_model = v;\n    }\n    addSingleProperty(name) {\n        let _this = this;\n        let value = _this.getValue(name);\n        _this.m_lstNormalProperties.put(name, value);\n        _this.m_model[name] = value;\n        if (_this.hasOwnProperty(name))\n            return;\n        Object.defineProperty(_this, name, {\n            get: function () {\n                return _this.getNormalValue(name);\n            },\n            set: function (v) {\n                //console.log(\"LLego\");\n                // _this.m_model[name]=v;\n                // _this.m_lstNormalProperties.put(name,v);\n                _this.put(name, v);\n            },\n        });\n    }\n    addObjectProperties() {\n        let _this = this;\n        // Debemos agregar el idFieldname tambien a la reactividad\n        if (!this.m_owner.getMultipleKey() && !TextUtils.isEmpty(this.getIdFieldName()))\n            this.addSingleProperty(this.getIdFieldName());\n        // Resto de propiedades\n        this.m_owner.getNodeList(\"prop\").forEach((node) => this.addSingleProperty(node.getAttrValue(\"name\")));\n        //  {\n        //     let name = node.getAttrValue(\"name\");\n        //     let value = _this.getValue(name);\n        //     _this.m_lstNormalProperties.put(name, value);\n        //     _this.m_model[name] = value;\n        //     Object.defineProperty(_this, name, {\n        //         get: function (): any {\n        //             return _this.getNormalValue(name);\n        //         },\n        //         set: function (v: any) {\n        //             //console.log(\"LLego\");\n        //             // _this.m_model[name]=v;\n        //             // _this.m_lstNormalProperties.put(name,v);\n        //             _this.setNormalValue(name, v);\n        //         }\n        //     });\n        // });\n        // let a = 9;\n    }\n    getNormalValue(name) {\n        return this.m_lstNormalProperties.get(name);\n    }\n    setNormalValue(name, v) {\n        this.m_model[name] = v;\n        this.m_lstNormalProperties.put(name, v);\n        if (!this.m_lstDirtyProperties.contains(name))\n            this.m_lstDirtyProperties.push(name);\n        this.m_bDirty = true;\n    }\n    PrepareSpecialCollection(arg0) {\n        return true;\n    }\n    EvaluateRule(rule) {\n        if (rule != null) {\n        }\n        return true;\n    }\n    async OnCreate(CreateNew) {\n        let nodeList;\n        let bAlways;\n        let coll;\n        // Indicar que estamos creando el objeto\n        this.m_bIsCreating = true;\n        try {\n            if (this.m_owner.getSpecial())\n                this.m_bPropagateDirty = false;\n            // Obtener el valor del tag de la colección\n            this.m_bPropagateDirty = StringUtils.ParseBoolValue(this.m_owner.CollPropertyValue(\"propagate-dirty\"), this.m_bPropagateDirty);\n            if (this.FieldExists(\"OBJTIMESTAMP\"))\n                this.m_bUseTimestamp = true;\n            this.m_bForceCurrChanges = StringUtils.ParseBoolValue(this.m_owner.CollPropertyValue(\"forcechanges\"), false);\n            this.m_bXlatExist = StringUtils.ParseBoolValue(this.m_owner.CollPropertyValue(\"xlat-exist\"), true);\n            // Obtener las acciones de creación y ejecutarlas...\n            coll = this.m_owner;\n            let nCount = 0;\n            do {\n                nodeList = null;\n                let createNode = coll.getNode(\"create\");\n                if (createNode != null) {\n                    // Existe el nodo padre\n                    nodeList = createNode.SelectNodes(\"action\");\n                    nCount = nodeList.count();\n                } // Existe el nodo padre\n                if (null == (coll = coll.getParentCollection()))\n                    break;\n            } while (nCount == 0);\n            // Ejecutar las acciones de creación\n            if (nodeList != null) {\n                // Solo si hay lista de acciones\n                for (let i = 0; i < nodeList.count(); i++) {\n                    // Ejecutar las acciones\n                    let node = nodeList.get(i);\n                    // Comprueba si las reglas se cumplen\n                    bAlways = StringUtils.ParseBoolValue(XmlUtils.getNodeAttr(node, \"always\"), false);\n                    //XmlUtils.GetNodeAttr(node, \"name\");\n                    // Solo si es nuevo\n                    if (CreateNew || bAlways) {\n                        // Es de nueva creación\n                        // Ante todo revisar las reglas\n                        if (!this.EvaluateNodeRules(node))\n                            continue;\n                        // A12081701: Mecanismo para pasar parámetros a un nodo de acción.\n                        // Esto no lleva argumentos... de momento\n                        if (!(await this.ExecuteNodeAction(null, node, null)))\n                            return false;\n                    } // Es de nueva creación\n                } // Ejecutar las acciones\n            } // Solo si hay lista de acciones\n            // Algunas propiedades que deben conocerse\n            this.m_bDependent = StringUtils.ParseBoolValue(this.m_owner.CollPropertyValue(\"dependent\"), true);\n            // F13030602: Correcciones en la evaluación de fórmulas de visibilidad y habilitaciones.\n            // Tenemos que evaluar las fórmulas también aquí si el objeto es nuevo...\n            // Evaluar las fórmulas si las hubiere...\n            // K13081201: Cambios en el tratamiento de fórmulas para mejorar la concurrencia.\n            // synchronized (this.m_formulaLocker)\n            // {\n            //     if (this.m_formulas != null && CreateNew)\n            //     {// Tiene fórmulas\n            //     \tEnumeration<String> enm =this.m_formulas.keys();\n            //         while (enm.hasMoreElements())\n            //         {// Evaluar\n            //         \tString key =enm.nextElement();\n            //         \tXoneEvalData val =this.m_formulas.get(key);\n            //             if (val.getDirty())\n            //                 val.Evaluate();\n            //         }// Evaluar\n            //     }// Tiene fórmulas\n            // }\n            // Completo\n            this.m_bIsCreating = false;\n            return true;\n        }\n        catch (ex) {\n            // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n            let sb = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_GENERALFAIL, \"{0} failed. \");\n            sb = sb.replace(\"{0}\", \"CXoneDataObject::OnCreate\");\n            let sExtraMessage = ex.message;\n            if (!TextUtils.isEmpty(sExtraMessage)) {\n                sb = sb.concat(sExtraMessage);\n            }\n            throw new XoneGenericException(-10181, ex, sb);\n        }\n    }\n    // /**\n    //  * A12042505: Permitir que se pueda hacer ExecuteNode de un nodo en vez de un nombre.\n    //  * Ejecuta todas las acciones de un nodo siempre que se cumplan las reglas que contenga.\n    //  *\n    //  * A12081701: Mecanismo para pasar parámetros a un nodo de acción.\n    //  * Pasar los argumentos de llamada.\n    //  *\n    //  * @param node\t\t\t\tNodo cuyas acciones se quieren ejecutar.\n    //  * @return\t\t\t\t\tDevuelve TRUE si las acciones del nodo se ejecutan correctamente.\n    //  * @throws Exception\n    //  */\n    // public ExecuteNode(node: XmlNode | string, ...Arguments): boolean {\n    //     if (node == null)\n    //         return false;\n    //     if (typeof node == 'string') {\n    //         node = this.getOwnerCollection().getNode(node);\n    //     }\n    //     if (ObjUtils.IsNothing(node)) {\n    //         console.error(\"No se pudo ejecutar el nodo\");\n    //         throw new Exception(\"Error ejecutando nodo\");\n    //     }\n    //     // Existe el nodo. Ejecutar las acciones\n    //     return this.ExecuteNodeActions(node, \"action\", null, ...Arguments);\n    // }\n    // /**\n    //  * Ejecuta todas las acciones de un nodo.\n    //  * A12081701: Mecanismo para pasar parámetros a un nodo de acción.\n    //  * Un parámetro con la lista de argumentos que tiene que traer el nodo en caso de necesitarlos.\n    //  *\n    //  * @param Node\t\t\tNodo XML cuyas acciones se quieren ejecutar.\n    //  * @param Prefix\t\tPrefijo de las acciones a ejecutar. NULL para usar 'action'.\n    //  * @param Scopes\t\tLista de ámbitos para resolver los objetos sobre los que operan las acciones del nodo.\n    //  * @return\t\t\t\tDevuelve TRUE si todas las acciones se ejecutan correctamente.\n    //  * @throws Exception\n    //  */\n    // protected ExecuteNodeActions(Node: XmlNode, Prefix: string, Scopes: Array<any>, ...Arguments): boolean {\n    //     let nodeList: XmlNodeList;\n    //     if (StringUtils.IsEmptyString(Prefix))\n    //         Prefix = \"action\";\n    //     nodeList = Node.SelectNodes(Prefix);\n    //     // Ejecuta cada una de las acciones\n    //     for (let i = 0; i < nodeList.count(); i++) {// Ejecutar las acciones\n    //         let node = nodeList.get(i);\n    //         // Pasar la lista de scopes a la evaluación, que para eso se ha pasado aquí\n    //         try {\n    //             if (!this.EvaluateNodeRules(node, Scopes))\n    //                 continue;   // Puede ser que se quiere lanzar el error\n    //         }\n    //         catch (e) {\n    //             continue;   // Ignorar la excepción de validación y seguir\n    //         }\n    //         // A12081701: Mecanismo para pasar parámetros a un nodo de acción.\n    //         // Pasar los argumentos...\n    //         if (!this.ExecuteNodeAction(null, node, 0, ...Arguments))\n    //             return false;\n    //     }// Ejecutar las acciones\n    //     return true;\n    // }\n    // ExecuteNodeAction(FieldName: string, Action: XmlNode, ActionType: number = 0, ...Parameters) {\n    //     // TODO:    Aquí hay que poner las acciones y cosas que faltan para que se llame desde todas partes.\n    //     let str = XmlUtils.getNodeAttr(Action, \"name\");\n    //     // F11083001: ExecuteNodeAction debería protegerse de acciones sin nombre.\n    //     // Nombres vacíos no por favor...\n    //     if (StringUtils.IsEmptyString(str)) {\n    //         return false;\n    //     }\n    //     switch (str) {\n    //         // case \"link\":\n    //         //     return DoLink(FieldName, Action);\n    //         // case \"executesql\":\n    //         //     return DoExecuteSql(Action);\n    //         // case \"executecompsql\":\n    //         //     return DoExecuteCompSql(Action);\n    //         // case \"executenode\":\n    //         //     return ExecuteNode(XmlUtils.getNodeAttr(Action, \"nodename\"));\n    //         // case \"addval\":\n    //         //     return DoAddVal(Action, null);\n    //         // case \"mapval\":\n    //         //     if (ActionType == ActionNodeType.NODETYPE_DELETE) {\n    //         //         return DoDelMapVal(Action);\n    //         //     } else {\n    //         //         return DoMapVal(Action);\n    //         //     }\n    //         // case \"setfldval\":\n    //         //     return DoSetFldVal(Action);\n    //         // case \"updateobj\":\n    //         //     return DoUpdateObj(Action);\n    //         // case \"updateacc\":\n    //         //     return DoUpdateAcc(Action);\n    //         case \"setval\":\n    //             return this.DoSetVal(Action);\n    //         // case \"updatecnt\":\n    //         //     return DoUpdateCnt(FieldName, Action);\n    //         // case \"generatecnt\":\n    //         //     return DoGenerateCnt(FieldName, Action);\n    //         // case \"generatemember\":\n    //         //     return DoGenerateMember(FieldName, Action);\n    //         // case \"updatemember\":\n    //         //     return DoUpdateMember(FieldName, Action);\n    //         // case \"updatedepth\":\n    //         //     return DoUpdateDepth(FieldName, Action);\n    //         // case \"generate\":\n    //         //     return DoGenerate(Action);\n    //         // case \"executemethod\":\n    //         //     return InvokeMethod(Action);\n    //         // case \"for-each-contents\":\n    //         //     return DoForEachContents(FieldName, Action);  // Tiene el contents definido\n    //         // case \"add-content\":\n    //         //     return DoAddContent(Action);\n    //         // case \"remove-content\":\n    //         //     return DoRemoveContent(Action);\n    //         // A12081701: Mecanismo para pasar parámetros a un nodo de acción.\n    //         // Pasamos los parámetros en cuestión...\n    //         case \"runscript\":\n    //             try {\n    //                 this.DoRunScript(Action, ...Parameters);\n    //                 return true;\n    //             } catch (ex) {\n    //                 console.error(ex);\n    //                 return false;\n    //             }\n    //         // case \"msgbox\":\n    //         //     return DoMessageBox(Action);\n    //         default:\n    //             // Método desconocido\n    //             // Si tiene funcionalidad propia, llamar a quien lo ejecuta\n    //             return true; // ExecuteExternalAction(FieldName, Action);\n    //     }\n    // }\n    /**\n     * A12042505: Permitir que se pueda hacer ExecuteNode de un nodo en vez de un nombre.\n     * Ejecuta todas las acciones de un nodo siempre que se cumplan las reglas que contenga.\n     *\n     * A12081701: Mecanismo para pasar parámetros a un nodo de acción.\n     * Pasar los argumentos de llamada.\n     *\n     * @param node\t\t\t\tNodo cuyas acciones se quieren ejecutar.\n     * @return\t\t\t\t\tDevuelve TRUE si las acciones del nodo se ejecutan correctamente.\n     * @throws Exception\n     */\n    async executeNode(node, ...Arguments) {\n        return await this.ExecuteNode(node, ...Arguments);\n    }\n    async ExecuteNode(node, ...Arguments) {\n        // Alejandro 02/07/2021: Parche para poder evaluar el executenode como lo evalua la gente que trabajar con el framework, enviando los parámetros concatenados como un único string\n        if (typeof node === \"string\" && node.includes(\"(\") && node.includes(\")\") && this[\"executeMethod\"])\n            return await this[\"executeMethod\"](node);\n        if (node == null)\n            return false;\n        if (typeof node == \"string\") {\n            node = this.getOwnerCollection().getNode(node);\n        }\n        if (ObjUtils.IsNothing(node)) {\n            return false;\n            // console.error(\"No se pudo ejecutar el nodo\");\n            // throw new Exception(\"Error ejecutando nodo\");\n        }\n        // Existe el nodo. Ejecutar las acciones\n        return await this.ExecuteNodeActions(node, \"action\", null, ...Arguments);\n    }\n    /**\n     * Ejecuta todas las acciones de un nodo.\n     * A12081701: Mecanismo para pasar parámetros a un nodo de acción.\n     * Un parámetro con la lista de argumentos que tiene que traer el nodo en caso de necesitarlos.\n     *\n     * @param Node\t\t\tNodo XML cuyas acciones se quieren ejecutar.\n     * @param Prefix\t\tPrefijo de las acciones a ejecutar. NULL para usar 'action'.\n     * @param Scopes\t\tLista de ámbitos para resolver los objetos sobre los que operan las acciones del nodo.\n     * @return\t\t\t\tDevuelve TRUE si todas las acciones se ejecutan correctamente.\n     * @throws Exception\n     */\n    async ExecuteNodeActions(Node, Prefix, Scopes, ...Arguments) {\n        let nodeList;\n        if (StringUtils.IsEmptyString(Prefix))\n            Prefix = \"action\";\n        nodeList = Node.SelectNodes(Prefix);\n        // Ejecuta cada una de las acciones\n        for (let i = 0; i < nodeList.count(); i++) {\n            // Ejecutar las acciones\n            let node = nodeList.get(i);\n            // Pasar la lista de scopes a la evaluación, que para eso se ha pasado aquí\n            try {\n                if (!this.EvaluateNodeRules(node, Scopes))\n                    continue; // Puede ser que se quiere lanzar el error\n            }\n            catch (e) {\n                continue; // Ignorar la excepción de validación y seguir\n            }\n            // A12081701: Mecanismo para pasar parámetros a un nodo de acción.\n            // Pasar los argumentos...\n            if (!(await this.ExecuteNodeAction(null, node, 0, ...Arguments)))\n                return false;\n        } // Ejecutar las acciones\n        return true;\n    }\n    async ExecuteNodeAction(FieldName, Action, ActionType = 0, ...Parameters) {\n        // TODO:    Aquí hay que poner las acciones y cosas que faltan para que se llame desde todas partes.\n        let str = XmlUtils.getNodeAttr(Action, \"name\");\n        // F11083001: ExecuteNodeAction debería protegerse de acciones sin nombre.\n        // Nombres vacíos no por favor...\n        if (StringUtils.IsEmptyString(str)) {\n            return false;\n        }\n        switch (str) {\n            // case \"link\":\n            //     return DoLink(FieldName, Action);\n            // case \"executesql\":\n            //     return DoExecuteSql(Action);\n            // case \"executecompsql\":\n            //     return DoExecuteCompSql(Action);\n            // case \"executenode\":\n            //     return ExecuteNode(XmlUtils.getNodeAttr(Action, \"nodename\"));\n            // case \"addval\":\n            //     return DoAddVal(Action, null);\n            // case \"mapval\":\n            //     if (ActionType == ActionNodeType.NODETYPE_DELETE) {\n            //         return DoDelMapVal(Action);\n            //     } else {\n            //         return DoMapVal(Action);\n            //     }\n            // case \"setfldval\":\n            //     return DoSetFldVal(Action);\n            // case \"updateobj\":\n            //     return DoUpdateObj(Action);\n            // case \"updateacc\":\n            //     return DoUpdateAcc(Action);\n            case \"setval\":\n                return await this.DoSetVal(Action);\n            // case \"updatecnt\":\n            //     return DoUpdateCnt(FieldName, Action);\n            // case \"generatecnt\":\n            //     return DoGenerateCnt(FieldName, Action);\n            // case \"generatemember\":\n            //     return DoGenerateMember(FieldName, Action);\n            // case \"updatemember\":\n            //     return DoUpdateMember(FieldName, Action);\n            // case \"updatedepth\":\n            //     return DoUpdateDepth(FieldName, Action);\n            // case \"generate\":\n            //     return DoGenerate(Action);\n            // case \"executemethod\":\n            //     return InvokeMethod(Action);\n            // case \"for-each-contents\":\n            //     return DoForEachContents(FieldName, Action);  // Tiene el contents definido\n            // case \"add-content\":\n            //     return DoAddContent(Action);\n            // case \"remove-content\":\n            //     return DoRemoveContent(Action);\n            // A12081701: Mecanismo para pasar parámetros a un nodo de acción.\n            // Pasamos los parámetros en cuestión...\n            case \"runscript\":\n                try {\n                    return await this.DoRunScriptAsync(Action, ...Parameters);\n                }\n                catch (ex) {\n                    console.error(ex);\n                    return false;\n                }\n            // case \"msgbox\":\n            //     return DoMessageBox(Action);\n            default:\n                // Método desconocido\n                // Si tiene funcionalidad propia, llamar a quien lo ejecuta\n                return true; // ExecuteExternalAction(FieldName, Action);\n        }\n    }\n    EvaluateNodeRules(node, scopesList) {\n        // IXmlNodeList rules;\n        // Object vl = null;\n        // String strField, str;\n        // boolean bRaiseError;\n        // XoneDataObject exec;\n        // XoneDataObject target;\n        // if (Node == null)\n        //     return true;\n        // // Comprobar si este nodo tiene un atributo \"field\"\n        // // para usar ese valor\n        // if (!StringUtils.IsEmptyString(strField = XmlUtils.GetNodeAttr(Node, \"field\"))) // Obtener el valor que tenga ahora\n        //     vl = GetPropertyValue(strField);\n        // // Obtener las reglas\n        // rules = Node.SelectNodes(\"rule\");\n        // for (int i =0;i <rules.count();i++)\n        // {// Evalúa cada regla\n        // \tIXmlNode rule =rules.get(i);\n        //     if (null != (exec = FindScopeObject(rule, ScopeList)))\n        //     {// Solo si no se ha evaluado antes\n        //         // Buscar si la regla tiene target-scope para los campos y valores de la derecha\n        //         if (!StringUtils.IsEmptyString(str = XmlUtils.GetNodeAttr(rule, \"target-scope\")))\n        //             target = FindScopeObject(str, ScopeList, true);\n        //         else\n        //             target = null;\n        //         // Pasarlo como parámetro\n        //         try\n        //         {\n        //         \tXoneRuleResult result;\n        //         \tresult =exec.EvaluateRule(strField, vl, rule, target);\n        //             if (!result.getRuleResult())\n        //                 return false;\t\t// Error\n        //         }\n        //         catch (Exception e)\n        //         {\n        //             if (e instanceof XoneValidationException)\n        //             {// Hay que dejarla seguir\n        //                 str = XmlUtils.GetNodeAttr(rule, \"raise\");\n        //                 bRaiseError = StringUtils.ParseBoolValue(str, false);\n        //                 if (bRaiseError)\n        //                     throw e;\n        //                 else\n        //                     return false;   // No lanzar error, directamente devolver que ha fallado la regla\n        //             }// Hay que dejarla seguir\n        //             // Otra excepción, dejarla seguir\n        //             throw e;\n        //         }\n        //     }// Solo si no se ha evaluado antes\n        // }// Evalúa cada regla\n        // Todas las reglas han triunfado.\n        return true;\n    }\n    /**\n     * Ejecuta un nodo runscript pasando el script y el contexto a la aplicación base.\n     * @param ActionNode\t\tNodo script a ejecutar.\n     * @return\t\t\t\t\tDevuelve TRUE si se ejecutan correctamente todos los scripts.\n     * @throws Exception\n     */\n    async doRunScript(ActionNode, ...Arguments) {\n        return await this.DoRunScriptAsync(ActionNode, ...Arguments);\n    }\n    // protected DoRunScript(ActionNode: XmlNode | string, ...Arguments): any {\n    //     let data = this.prepareContext(ActionNode, ...Arguments);\n    //     let n = data.scripts.length;\n    //     for (let i = 0; i < n; i++) {\n    //         this.getOwnerApp().RunScript(data.funcNames[i], data.slang, data.scripts[i], data.ctx, data.Arguments);\n    //     }\n    //     // OK\n    //     return true;\n    // }\n    async DoRunScriptAsync(ActionNode, ...Arguments) {\n        let data = this.m_owner.prepareContext(this, ActionNode, ...Arguments);\n        let n = data.scripts.length;\n        let promises = new Array();\n        for (let i = 0; i < n; i++) {\n            await this.getOwnerApp().RunScriptAsync(data.funcNames[i], data.slang, data.scripts[i], data.ctx, data.Arguments, data.argsName, data.argsValue);\n        }\n        // OK\n        return true;\n    }\n    /**\n     * Asigna valor a un campo de este objeto a partir del valor sacado del nodo XML.\n     * @param ActionNode\t\tNodo XML con los datos del campo y valor que se le va a asignar.\n     * @return\t\t\t\t\tDevuelve TRUE si la asignación es correcta.\n     * @throws Exception\n     */\n    async DoSetVal(ActionNode) {\n        let strField = \"\", strValue = \"\", strType = \"\";\n        let vl = null;\n        strField = XmlUtils.GetNodeAttr(ActionNode, \"field\");\n        strValue = XmlUtils.GetNodeAttr(ActionNode, \"value\");\n        // Habría que analizar si es filosóficamente correcto dejar el value\n        // vacío e interpretarlo como EMPTY o disparar un error.. por ahora\n        // no busquemos más problemas.\n        if (StringUtils.IsEmptyString(strValue))\n            return true;\n        // 06/10/2016 Juan Carlos, check extra\n        if (TextUtils.isEmpty(strField)) {\n            let sb = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_OBJ_SETVALFAIL, \"CXoneDataObject::DoSetVal failed. Field attribute is missing.\");\n            throw new XoneValidationException(-1991, sb);\n        }\n        // El campo tiene que existir\n        if (!this.FieldExists(strField)) {\n            // Error\n            // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n            let sb = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_OBJ_SETVALFAIL, \"{0} failed. Field '{1}' is not declared in collection '{2}.\");\n            sb = sb.replace(\"{0}\", \"CXoneDataObject::DoSetVal\");\n            sb = sb.replace(\"{1}\", strField);\n            sb = sb.replace(\"{2}\", this.m_owner.getName());\n            throw new XoneValidationException(-1991, sb);\n        } // Error\n        strType = this.FieldPropertyValue(strField, \"type\");\n        if (StringUtils.IsEmptyString(strType))\n            strType = XmlUtils.GetNodeAttr(ActionNode, \"type\");\n        vl = await this.GetValueFromString(strValue, strType);\n        // Asignar el valor\n        this.put(strField, vl);\n        return true;\n    }\n    FieldExists(FieldName) {\n        return this.m_owner.FieldExists(FieldName);\n    }\n    /**\n     * F11092606: Cuando se carga un objeto con Load, limpiar los contents.\n     * Esta función limpia los contents del objeto.\n     */\n    ClearContents() {\n        if (this.m_lstContents == null) {\n            return;\n        }\n        this.m_lstContents.values().forEach((content) => {\n            if (!ObjUtils.IsNothing(content)) {\n                content.unlock();\n                content.clear();\n            }\n        });\n        // let sAllKeys = this.m_lstContents.keys();\n        // while (sAllKeys.hasMoreElements()) {\n        //     XoneDataCollection content = this.m_lstContents.get(sAllKeys.nextElement());\n        //     if (content == null) {\n        //         continue;\n        //     }\n        //     content.Unlock();\n        //     content.Clear();\n        // }\n    }\n    resolveFieldName(name) {\n        /*\n         * Comprobamos que comienza como una macro de lo contrario\n         * como siempre\n         */\n        if (!TextUtils.isEmpty(name) && !name.startsWith(Utils.MACRO_TAG))\n            return name;\n        if (TextUtils.isEmpty(name))\n            return name;\n        let properties = this.m_owner.getProperties();\n        if (properties == null)\n            return name;\n        let n = name.indexOf(Utils.MACRO_TAG, 2);\n        if (n < 0)\n            n = name.length;\n        let index = name.substring(2, n);\n        let nd = properties.SelectSingleNode(Utils.PROP_NAME, Utils.PROP_ATTR_INDEX, index);\n        if (nd == null)\n            return name;\n        return nd.getAttrValue(Utils.PROP_ATTR_NAME);\n    }\n    reverseResolveFieldName(name) {\n        /*\n         * Comprobamos que comienza como una macro de lo contrario\n         * como siempre\n         */\n        if (!this.m_owner.isIndexed())\n            return name;\n        if (TextUtils.isEmpty(name))\n            return name;\n        let properties = this.m_owner.getProperties();\n        if (properties == null)\n            return name;\n        let index = \"\";\n        try {\n            index = this.m_owner.FieldPropertyValue(name, Utils.PROP_ATTR_INDEX);\n        }\n        catch (e) {\n            return name;\n        }\n        if (TextUtils.isEmpty(index))\n            return name;\n        else {\n            let bld = new StringBuilder(Utils.MACRO_TAG);\n            bld.append(index);\n            return bld.toString();\n        }\n    }\n    async Load(Source) {\n        try {\n            // M11092601: Modificaciones para mejorar el soporte de objetos volátiles.\n            // Limpiar la lista de valores por si el objeto era volátil y tenía valores...\n            this.m_lstNormalProperties.clear();\n            // F11092606: Cuando se carga un objeto con Load, limpiar los contents.\n            this.ClearContents();\n            let n = Source.getColumnCount();\n            // Primero leer los valores\n            for (let i = 0; i < n; i++) {\n                // Recorrer los campos y leer los valores\n                let strFieldName = this.resolveFieldName(Source.getColumnName(i));\n                // K11010501:\tModificaciones para la versión 1.5 de Android.\n                let objVal = Source.getValue(i, this.m_owner.getTypeFromXml(this.m_owner.PropType(strFieldName)));\n                // Almacenar las propiedades normales, siempre que el valor no sea nulo, claro\n                if (objVal != null) {\n                    // Tiene valor\n                    // A11092602: Permitir el uso de resultsets jerárquicos en forma de árbol para cargas múltiples.\n                    // El dato podría de ser otro resultset...\n                    if (ObjUtils.prototype.hasOwnProperty.call(objVal, \"isResultset\") &&\n                        !strFieldName.startsWith(Utils.MACRO_TAG) &&\n                        !strFieldName.equals(\"ID\")) {\n                        // Aquí tenemos que llenar contents\n                        let rs = objVal;\n                        if (!this.LoadObjectContents(strFieldName, rs)) {\n                            // Error\n                            return false;\n                        } // Error\n                    } // Aquí tenemos que llenar contents\n                    // Otra cosa\n                    else\n                        this[strFieldName] = objVal;\n                    //this.m_lstNormalProperties.put(strFieldName, objVal);\n                } // Tiene valor // F10052505:\tCuando se asigna valor a propiedades nulas en Load, limpiar la lista.\n                else\n                    this.m_lstNormalProperties.delete(strFieldName);\n                // Ver si se trata de la clave\n                if (!this.m_owner.getMultipleKey()) {\n                    // Una sola clave\n                    if (strFieldName.equals(this.getIdFieldName())) {\n                        // Es el campo clave\n                        if (!this.m_owner.getStringKey()) {\n                            // Numérico\n                            if (0 == (this.m_lObjectId = NumberUtils.SafeToInt(objVal)))\n                                this.m_bReadOnly = true;\n                            else\n                                this.m_strObjectId = String.format(\"%d\", this.m_lObjectId);\n                        } // Numérico\n                        else {\n                            // Cadena\n                            if (objVal != null)\n                                this.m_strObjectId = objVal.toString();\n                            this.m_lObjectId = -1;\n                        } // Cadena\n                    } // Es el campo clave\n                } // Una sola clave\n            } // Recorrer los campos y leer los valores\n            // Ahora limpiar la lista de propiedades sucias\n            this.m_lstDirtyProperties = new Vector();\n            // Si son múltiples claves buscar la lista\n            if (this.m_owner.getMultipleKey()) {\n                // Clave múltiple\n                this.m_strObjectId = this.GetMultipleKeyString(); // Varias claves\n                this.m_lObjectId = -1; // Marcar que se ha cargado COÑO!!!\n            } // Clave múltiple\n            this.setDirty(false);\n            // F11070701: Modificaciones para solucionar los enlaces y grabación con claves no numéricas.\n            // Indicar que el objeto no es nuevo\n            this.m_bNewObject = false;\n            // Ejecutar los eventos de carga\n            return await this.OnLoad();\n        }\n        catch (e) {\n            throw e;\n        }\n    }\n    /**\n     * A11092602: Permitir el uso de resultsets jerárquicos en forma de árbol para cargas múltiples.\n     * Rellena un contents del objeto basado en un resultset que contiene los objetos.\n     *\n     * @param ContentsName\n     * @param Source\n     * @return\n     * @throws Exception\n     */\n    async LoadObjectContents(ContentsName, Source) {\n        // Lo primero es ver si tenemos contents\n        let cnt = await this.getContents(ContentsName);\n        if (cnt == null) {\n            // Ver si es una propiedad y buscar contents\n            //K11092602: Modificaciones para trabajar con conexiones online puras.\n            let ContentsFromProp = this.m_owner.FieldPropertyValue(ContentsName, Utils.PROP_ATTR_CONTENTNAME);\n            if (TextUtils.isEmpty(ContentsFromProp)) {\n                this.getOwnerApp().RegisterError(-1, \"Cannot find contents with name '\" + ContentsName + \"'\");\n                return false;\n            }\n            cnt = await this.getContents(ContentsFromProp);\n            if (cnt == null) {\n                // Error\n                this.getOwnerApp().RegisterError(-1, \"Cannot find contents with name '\" + ContentsName + \"'\");\n                return false;\n            }\n        } // Error\n        // A11092602: Permitir el uso de resultsets jerárquicos en forma de árbol para cargas múltiples.\n        // Limpiar el contents\n        cnt.unlock();\n        cnt.clear();\n        // Ahora cargar...\n        while (await Source.next()) {\n            // Cargar\n            let nobj = await cnt.CreateObject(false);\n            if (nobj == null) {\n                // Error\n                if (this.getOwnerApp().getError().getNumber() != 0)\n                    this.getOwnerApp().RegisterError(-1, \"Cannot create new object for contents '\" + ContentsName + \"'\");\n                return false;\n            } // Error\n            if (!(await nobj.Load(Source))) {\n                // Error\n                if (this.getOwnerApp().getError().getNumber() != 0)\n                    this.getOwnerApp().RegisterError(-1, \"Error loading object data for contents '\" + ContentsName + \"'\");\n                return false;\n            } // Error\n            // Adicionarlo a la colección\n            if (!cnt.addItem(nobj)) {\n                // Error\n                if (this.getOwnerApp().getError().getNumber() != 0)\n                    this.getOwnerApp().RegisterError(-1, \"Cannot add new object to contents '\" + ContentsName + \"'\");\n                return false;\n            } // Error\n        } // Cargar\n        // A11092602: Permitir el uso de resultsets jerárquicos en forma de árbol para cargas múltiples.\n        cnt.setFull(true);\n        //cnt.Lock();\n        // Completio...\n        return true;\n    }\n    /**\n     * Esta función se llama cuando se termina de cargar el objeto. La pueden redefinir los objetos derivados para modificar el comportamiento del objeto al cargarse.\n     * @return\t\t\tDevuelve TRUE si las acciones de carga se ejecutan todas sin problemas.\n     * @throws XoneGenericException\n     */\n    async OnLoad() {\n        let coll;\n        let actions;\n        try {\n            // F13022104: El acceso a las fórmulas de visibilidad de campos debe ser concurrente.\n            // Evaluar las fórmulas si las hubiere...\n            // K13081201: Cambios en el tratamiento de fórmulas para mejorar la concurrencia.\n            // locking.... usando el objeto adecuado...\n            // TODO: Luis esto lo resolveremos en el UI\n            // (this.m_formulaLocker)\n            // {\n            //     if (this.m_formulas != null)\n            //     {// Tiene fórmulas\n            //     \tEnumeration<String> enm =this.m_formulas.keys();\n            //         while(enm.hasMoreElements())\n            //         {// Evaluar\n            //         \tString key =enm.nextElement();\n            //         \tXoneEvalData val =this.m_formulas.get(key);\n            //             // F13030602: Correcciones en la evaluación de fórmulas de visibilidad y habilitaciones.\n            //             // Solo si está sucio...\n            //             if (val.getDirty())\n            //                 val.Evaluate();\n            //         }// Evaluar\n            //     }// Tiene fórmulas\n            // }\n            coll = this.getOwnerCollection();\n            do {\n                actions = coll.getNodeList(\"prop\", \"onload\", \"true\");\n                // Ahora bar cada acción y ejecutar los cambios de valor para cada una de estas\n                // propiedades\n                for (let i = 0; i < actions.count(); i++) {\n                    // Acciones\n                    let action = actions.get(i);\n                    await this.OnChange(XmlUtils.getNodeAttr(action, \"name\"));\n                } // Acciones\n                coll = coll.getParentCollection();\n            } while (coll != null);\n            // Primero obtener los datos de la empresa\n            coll = this.getOwnerCollection();\n            do {\n                // Primero obtener el nodo load\n                actions = null;\n                let loadNode = coll.getNode(\"load\");\n                if (loadNode != null) {\n                    // Solo si tiene el nodo padre, claro\n                    actions = loadNode.SelectNodes(\"action\");\n                    if (actions.count() > 0)\n                        break;\n                } // Solo si tiene el nodo padre, claro\n                coll = coll.getParentCollection();\n            } while (coll != null);\n            if (actions != null) {\n                // Tiene lista de acciones\n                for (let i = 0; i < actions.count(); i++) {\n                    // Ejecutar las acciones\n                    let action = actions.get(i);\n                    //XmlUtils.GetNodeAttr(action, \"name\");\n                    // Ante todo revisar las reglas\n                    if (!this.EvaluateNodeRules(action))\n                        continue;\n                    // Ejecutar las acciones\n                    // A12081701: Mecanismo para pasar parámetros a un nodo de acción.\n                    // Esto no lleva argumentos... por ahora.\n                    if (!(await this.ExecuteNodeAction(null, action))) {\n                        return false;\n                    }\n                } // Ejecutar las acciones\n            } // Tiene lista de acciones\n            return true;\n        }\n        catch (ex) {\n            let sDetails = ex.message;\n            // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n            let sb = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_GENERALFAIL, \"{0} failed. \");\n            sb = sb.replace(\"{0}\", \"CXoneDataObject::AfterLoad\");\n            if (!StringUtils.IsEmptyString(sDetails)) {\n                sb = sb.concat(sDetails);\n            }\n            throw new XoneGenericException(-10181, ex, sb);\n        }\n    }\n    /**\n     * Este método se ejecuta cuando cambia el valor de un campo. Tiene en cuenta posibles reentradas recursivas.\n     * @param FieldName\t\tNombre del campo que ha cambiado.\n     * @throws Exception\n     */\n    async OnChange(FieldName) {\n        let cnode;\n        let strOldChgField;\n        // Obtener el nodo que contiene las acciones a realizar\n        // al ocurrir un cambio\n        let onchangeNode = this.getNode(\"onchange\");\n        if (onchangeNode == null)\n            return;\n        // Ahora tendremos que buscar si hay nodos onchange para este campo\n        strOldChgField = this.m_strChangeField;\n        this.m_strChangeField = FieldName;\n        let b = true;\n        // A12081701: Mecanismo para pasar parámetros a un nodo de acción.\n        // De momento aquí no llevamos argumentos... por ahora.\n        let args = [];\n        args.push(new CXoneNameValuePair(\"ChgField\", this.m_strChangeField));\n        if (null != (cnode = onchangeNode.SelectSingleNode(\"field\", \"name\", FieldName)))\n            b = await this.ExecuteNodeActions(cnode, Utils.EMPTY_STRING, null, ...args);\n        if (b) {\n            // Si la vez anterior no ha fallado\n            if (null != (cnode = onchangeNode.SelectSingleNode(\"field\", \"name\", \"##ANY##\")))\n                await this.ExecuteNodeActions(cnode, Utils.EMPTY_STRING, null, ...args);\n        } // Si la vez anterior no ha fallado\n        this.m_strChangeField = strOldChgField;\n    }\n    async ObjectItem(FieldName, SearchCollName = null) {\n        // Buscar el nombre de la colección si no nos la dan\n        let strCollName = SearchCollName;\n        if (StringUtils.IsEmptyString(strCollName)) {\n            // Buscarla en la propiedad\n            if (StringUtils.IsEmptyString((strCollName = this.FieldPropertyValue(FieldName, \"mapcol\"))))\n                return null;\n        } // Buscarla en la propiedad\n        // Ahora tenemos que buscar la propiedad\n        let objId = this.get(FieldName);\n        if (objId == null)\n            return null; // Na de na...\n        let coll = await this.getOwnerApp().getCollection(strCollName);\n        if (coll == null)\n            return null;\n        // Buscar en la colección el objeto cuyo campo clave sea el objeto que tiene nuestro campo ID\n        // F12102208: La clave de ObjectItem podría venir vacía y hay que comprobarlo.\n        let strId = objId.toString();\n        if (StringUtils.IsEmptyString(strId))\n            return null;\n        return coll.get(strId);\n    }\n    /**\n     * Devuelve una colección contenida dentro de este objeto.\n     * @param ContentsName\t\tIndice de la colección dentro del objeto.\n     * @return\t\t\tDevuelve el contents cuyo número de orden se solicita o NULL si el número es mayor que la cantidad de contents.\n     * @throws XoneGenericException\n     */\n    async getContents(ContentsName) {\n        // Si no ha cargado los contents, los carga ahora\n        if (!this.m_bContentsLoaded)\n            if (!(await this.LoadContents()))\n                return null;\n        // Si el índice se pasa, na de na...\n        if (typeof ContentsName == \"number\") {\n            if (ContentsName >= this.m_lstContents.length)\n                return null;\n            ContentsName = this.m_lstContents.keys[ContentsName];\n        }\n        if (this.m_lstContents == null) {\n            this.m_lstContents = new Hashtable();\n        }\n        if (TextUtils.isEmpty(ContentsName)) {\n            return null;\n        }\n        // Si no está en lista, no hay nada que hacer...\n        if (!this.m_lstContents.containsKey(ContentsName))\n            return null;\n        return this.m_lstContents.get(ContentsName);\n        //return coll;\n        // Enumeration<String> e =this.m_lstContents.keys();\n        // for (let i =0; i <this.m_lstContents.size();i++)\n        // {// Recorrer la lista, contar y devolver\n        // \tString strKey =e.nextElement();\n        //     if (i == Index)\n        //         return this.m_lstContents.get(strKey);\t// La ha encontrado\n        // }// Recorrer la lista, contar y devolver\n        // // Completo\n        // return null;\n    }\n    /**\n     * Crea las colecciones contents del objeto y las introduce en la lista de contents del objeto.\n     * @return\t\tDevuelve TRUE si el contents se carga correctamente.\n     * @throws XoneGenericException\n     */\n    async LoadContents() {\n        let nodeList = null;\n        let str = \"\";\n        let newColl, appColl;\n        let FunctionName = \"CXoneDataObject::LoadContents\";\n        try {\n            // Por si las moscas, aunque no debería ocurrir esto...\n            // Crear la lista de contents si no existe\n            if (this.m_lstContents == null)\n                this.m_lstContents = new Hashtable();\n            // En cualquier caso, limpiarla...\n            this.m_lstContents.clear();\n            let coll = this.m_owner;\n            nodeList = coll.getNodeList(\"contents\");\n            !ObjUtils.IsNothing((coll = coll.getParentCollection())) &&\n                coll.getNodeList(\"contents\").forEach((Node) => {\n                    if (!nodeList.exist(Node.getName(), Utils.PROP_ATTR_NAME, Node.getAttrValue(Utils.PROP_ATTR_NAME))) {\n                        nodeList.addNode(Node);\n                    }\n                });\n            // do\n            // {\n            //     if (coll == null)\n            //         break;\n            //     if ((coll = coll.getParentCollection ())!=null) {// Supuestamente tiene padre\n            //         try {\n            //             let tmpList = coll.getNodeList(\"contents\");\n            //             for (IXmlNode Node : tmpList) {\n            //                 if (!nodeList.exist(Node.getName(),Utils.PROP_ATTR_NAME,Node.getAttrValue(Utils.PROP_ATTR_NAME))) {\n            //                     nodeList.addNode(Node);\n            //                 }\n            //             }\n            //         } catch (e) {\n            //             console.log(e.message);\n            //         }\n            //     }// Supuestamente tiene padre\n            // } while (nodeList.count() == 0);\n            // Si al final no hay tal lista, nos vamos\n            if (nodeList == null)\n                return false;\n            // Crear los contents de este objeto\n            for (let i = 0; i < nodeList.count(); i++) {\n                // Recorre cada nodo de la lista\n                let contNode = nodeList.get(i);\n                // Buscar la colección y sacarle una copia\n                if (null == (appColl = await this.getOwnerApp().getCollection((str = XmlUtils.getNodeAttr(contNode, \"src\"))))) {\n                    // Error\n                    // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n                    let sb = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_OBJ_LOADCONTENTFAIL_01, \"{0} failed. Cannot find collection '{1}' to create contents '{2}'\");\n                    sb = sb.replace(\"{0}\", FunctionName);\n                    sb = sb.replace(\"{1}\", str);\n                    sb = sb.replace(\"{2}\", contNode.getAttrValue(\"name\"));\n                    throw new XoneGenericException(-9191, sb);\n                } // Error\n                if (null == (newColl = appColl.CreateClone())) {\n                    // Error\n                    // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n                    let sb = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_OBJ_LOADCONTENTFAIL_02, \"{0} failed. Cannot clone collection '{1}'\");\n                    sb = sb.replace(\"{0}\", FunctionName);\n                    sb = sb.replace(\"{1}\", str);\n                    throw new XoneGenericException(-9192, sb);\n                } // Error\n                // Cambiar los parámetros de la nueva colección de acuerdo\n                // a los valores que vienen en el nodo\n                str = XmlUtils.getNodeAttr(contNode, \"filter\");\n                newColl.setLinkFilter(str);\n                // Ahora debe insertar esta colección en la lista\n                str = XmlUtils.getNodeAttr(contNode, \"name\");\n                this.AddContentsColl(str, newColl);\n                // Incluir el atributo necesario para comprobar si se busca en BD o no\n                //newColl.setXlatExist (StringUtils.ParseBoolValue(XmlUtils.getNodeAttr(contNode, \"xlat-exist\"), true));\n                if (!StringUtils.IsEmptyString((str = XmlUtils.getNodeAttr(contNode, \"sort\"))))\n                    newColl.setSort(str);\n            } // Recorre cada nodo de la lista\n            return (this.m_bContentsLoaded = true);\n        }\n        catch (ex) {\n            // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n            let sMessage = ex.message;\n            let sb = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_GENERALFAIL, \"{0} failed. \");\n            sb = sb.replace(\"{0}\", FunctionName);\n            if (!TextUtils.isEmpty(sMessage)) {\n                sb = sb.concat(sMessage);\n            }\n            throw new XoneGenericException(-10131, ex, sb);\n        }\n    }\n    /**\n     * Adiciona una colección contents a este objeto\n     * @param ContentsName\t\t\tNombre del contents dentro de este objeto.\n     * @param Collection\t\t\tColección que se usará como contents.\n     */\n    AddContentsColl(ContentsName, Collection) {\n        // Almacenar en la colección\n        this.m_lstContents.put(ContentsName, Collection);\n        // Asignarle el objeto propietario (este)\n        Collection.setOwnerObject(this);\n    }\n    getId() {\n        return this.m_lObjectId;\n    }\n    getIdFieldName() {\n        return this.m_owner.getIdFieldName();\n    }\n    getObjectName() {\n        return this.m_owner.getObjectName();\n    }\n    PrepareSqlString(Sentence, bRemoveQuotes = false) {\n        // Primeramente intentar sustituir las macros de toda la vida.\n        // Si es cadena vacía o no contiene macros, devolverla tal cual\n        if (StringUtils.IsEmptyString(Sentence))\n            return Sentence;\n        if (!Sentence.contains(\"##\"))\n            return Sentence;\n        // ADD TAG Como esto es mas comun, hacerlo de primero.\n        // Sustituir los valores de macros FLD_ que son de este mismo objeto\n        if (Sentence.contains(\"##FLD_\")) {\n            // Sustituir macros de campo\n            //TODO ADD TAG 13/05/2014 Juan Carlos. Añado sobrecarga a PrepareSqlString, hace falta para PropertyTitle. Buscar esta fecha para el resto de cambios.\n            Sentence = this.ReplaceFieldValueMacros(Sentence, \"##FLD_\", bRemoveQuotes);\n            if (!Sentence.contains(\"##\"))\n                return Sentence;\n        } // Sustituir macros de campo\n        // Ahora mandarla a sustituir en la colección\n        // F12042601: PrepareSqlString no delega en la aplicación cuando se llama a la colección.\n        let str = this.m_owner.PrepareSqlString(Sentence, false, false);\n        // Si una vez tratada ya no contiene macros, no hacer nada más\n        if (!str.contains(\"##\"))\n            return str;\n        // De lo contrario procesar aquí...\n        let strTmp = str.trim();\n        if (StringUtils.IsEmptyString(strTmp))\n            return str;\n        let strOut = str;\n        strOut = StringUtils.Replace(strOut, '\"', \"##QUOTES##\");\n        strOut = StringUtils.Replace(strOut, \"##ID##\", this.GetObjectIdString(true));\n        if (!strOut.contains(\"##\"))\n            return strOut;\n        // Lista de clientes (si la tiene)\n        let str1;\n        // Macro de clientes... muy poco usada, pero mantenemos compatibilidad\n        if (strOut.contains(\"##CLIENTIDCOLL##\")) {\n            // Evaluar dicha macro\n            str1 = this.GetClientIdColl();\n            if (StringUtils.IsEmptyString(str1))\n                strOut = StringUtils.Replace(strOut, \"=##CLIENTIDCOLL##\", \" IS NOT NULL \");\n            else {\n                // Reemplazar la macro\n                if (!str1.contains(\",\"))\n                    strTmp = \"=\" + str1;\n                else\n                    strTmp = \" IN (\" + str1 + \")\";\n                strOut = StringUtils.Replace(strOut, \"=##CLIENTIDCOLL##\", strTmp);\n            } // Reemplazar la macro\n            if (!strOut.contains(\"##\"))\n                return strOut;\n        } // Evaluar dicha macro\n        // Cadena de claves múltiples en caso de que el objeto las lleve...\n        if (strOut.contains(\"##MULTIKEY##\"))\n            strOut = StringUtils.Replace(strOut, \"##MULTIKEY##\", this.GetMultipleKeyString(true));\n        if (!strOut.contains(\"##\"))\n            return strOut;\n        if (strOut.contains(\"##OWN_\")) {\n            // Sustituir las macros de campo del objeto propietario\n            let owner = this.m_owner.getOwnerObject();\n            if (owner != null) {\n                // Sustituir\n                strOut = owner.ReplaceFieldValueMacros(strOut, \"##OWN_\", false);\n                if (!strOut.contains(\"##\"))\n                    return strOut;\n            } // Sustituir\n        } // Sustituir las macros de campo del objeto propietario\n        // Sustituir las comillas\n        strOut = strOut.replace('\"', \"'\");\n        // Restablecer las comillas\n        strOut = StringUtils.Replace(strOut, \"##QUOTES##\", '\"');\n        if (!strOut.contains(\"##\"))\n            return strOut;\n        // Operaciones de sustitución con condiciones\n        let k = 0, x = 0;\n        for (; -1 != (x = strOut.indexOf(\"##ISNULL(\"));) {\n            // Existe\n            if (-1 == (k = strOut.indexOf(\")##\", x + 8)))\n                break;\n            // Ahora buscar el nombre del campo\n            // F09042201:\tSubstring no funciona igual en java que en .NET Arreglar Blackberry\n            str = strOut.substring(x + 9, k);\n            let vl = this.get(str);\n            if (typeof vl == \"string\") {\n                // Cadena\n                strTmp = vl.toString();\n                if (StringUtils.IsEmptyString(strTmp))\n                    strTmp = \"(\" + str + \"='' OR {0} IS NULL)\";\n                else\n                    strTmp = str + \"=\" + strTmp;\n            } // Cadena\n            else {\n                // Ver si es entero\n                if (ObjUtils.IsInt(vl)) {\n                    // Entero o long\n                    let d = NumberUtils.SafeToDouble(vl);\n                    if (Math.abs(d) < 0.000001)\n                        strTmp = \"(\" + str + \"=0 OR {0} IS NULL)\";\n                    else {\n                        // No es cero\n                        vl = this.get(str);\n                        strTmp = str + \"=\" + this.DevelopObjectValue(vl);\n                    } // No es cero\n                    break;\n                } // Entero o long\n                else\n                    strTmp = str + \"=\" + this.DevelopObjectValue(vl);\n            } // Ver si es entero\n            // Ahora sustituir la cadenilla\n            // F09042201:\tSubstring no funciona igual en java que en .NET Arreglar Blackberry\n            str = strOut.substring(0, x) + strTmp + strOut.substring(k, strOut.length - 3);\n            strOut = str;\n        } // Existe\n        // Devolver lo que quede\n        return strOut;\n    }\n    GetRawPropertyValue(arg0) {\n        throw new Error(\"Method not implemented.\");\n    }\n    ReplaceFieldValueMacros(Sentence, Prefix, SuppressQuotes = false) {\n        let k = 0;\n        let FunctionName = \"CXoneDataObject::ReplaceFieldValueMacros\";\n        for (k = Sentence.indexOf(Prefix); k != -1; k = Sentence.indexOf(Prefix)) {\n            // Mientras haya campos por sustituir\n            //\n            // Puede darse el caso de que se trate de un error de sintaxis en la declaración\n            // del filtro. En ese caso hay que señalar el error.\n            let x;\n            if (-1 == (x = Sentence.indexOf(\"##\", k + 1))) {\n                // Error\n                // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n                let sb = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_OBJ_REPLFLDVALUEMACROFAIL, \"{0} failed. Syntax error in expression '{1}'\");\n                sb = sb.replace(\"{0}\", FunctionName);\n                sb = sb.replace(\"{1}\", Sentence);\n                throw new XoneGenericException(-13667, sb);\n            } // Error\n            // F09042201: Substring no funciona igual en java que en .NET Arreglar Blackberry\n            // F13022205: Arreglos varios en ReplaceFildValueMacros.\n            // El tamaño del prefijo, no un 6 fijo...\n            let strTmp = Sentence.substring(k + Prefix.length, x);\n            if (strTmp.length > 1)\n                if (strTmp.charAt(0) == \"$\" && strTmp.charAt(1) == \"$\") {\n                    // Descartar el primer $\n                    strTmp = strTmp.substring(1, strTmp.length - 1);\n                } // Descartar el primer $\n            let vl = this.get(strTmp);\n            strTmp = this.DevelopObjectValue(vl);\n            // F09042201:\tSubstring no funciona igual en java que en .NET Arreglar Blackberry\n            // F13022205: Arreglos varios en ReplaceFildValueMacros.\n            // Si hay que suprimir las comillas las suprimimos\n            if (SuppressQuotes && !StringUtils.IsEmptyString(strTmp)) {\n                // Pos eso\n                if (strTmp.startsWith(\"'\") && strTmp.endsWith(\"'\")) {\n                    //TODO ADD TAG 13/05/2014 Juan Carlos strTemp.length() - 2? Eso se come una letra de más...\n                    //strTmp = strTmp.substring(1, strTmp.length() - 2);\n                    strTmp = strTmp.substring(1, strTmp.length - 1);\n                }\n            } // Pos eso\n            let strRpl = Sentence.substring(k, x + 2);\n            Sentence = StringUtils.Replace(Sentence, strRpl, strTmp);\n        } // Mientras haya campos por sustituir\n        // Completo\n        return Sentence;\n    }\n    /**\n     * Devuelve el valor de un atributo de un campo de datos de la colección a la cual pertenece este objeto.\n     *\n     * M11060901: Permitir que FieldPropertyValue evalúe o no para los frameworks.\n     * Un parámetro más para indicar si se evalúa o no.\n     *\n     * @param FieldName\t\t\tNombre de la propiedad (campo) en el cual se quiere buscar un valor de atributo.\n     * @param AttrName\t\t\tNombre del atributo cuyo valor se quiere obtener para el campo dado.\n     * @return\t\t\t\t\tDevuelve el valor del atributo o NULL si el atributo no está definido.\n     * @throws Exception\n     */\n    FieldPropertyValue(FieldName, AttrName, bEvaluate = true) {\n        // Si no tiene propietario, no hacer nada\n        if (this.m_owner == null)\n            return null;\n        // K11051801: Desarrollar macros en el FieldPropertyValue de los objetos.\n        // M12102401: Gestión de los atributos a nivel de objetos cacheando los valores.\n        // Primero buscar el valor cacheado si lo hubiere...\n        let sVal = \"\";\n        let sKey = FieldName + \":\" + AttrName;\n        if (this.m_lstOverridenFieldPropertyValueAttributes.containsKey(sKey)) {\n            sVal = this.m_lstOverridenFieldPropertyValueAttributes.get(sKey);\n        }\n        else if (this.m_lstCachedAttributes.containsKey(sKey)) {\n            sVal = this.m_lstCachedAttributes.get(sKey);\n        }\n        else {\n            sVal = this.m_owner.FieldPropertyValue(FieldName, AttrName);\n        }\n        // Ahora podemos seguir evaluando y tal y tal.\n        if (bEvaluate) {\n            if (!StringUtils.IsEmptyString(sVal))\n                if (sVal.contains(\"##\")) {\n                    // Es una macro o la contiene\n                    // M11060902: Mejoras en el sistema de evaluación de macros en el framework.\n                    if (sVal.equals(Utils.EMPTY_STRING))\n                        return null;\n                    sVal = this.PrepareSqlString(sVal, false);\n                    // M11060902: Mejoras en el sistema de evaluación de macros en el framework.\n                    if (sVal.equals(\"NULL\"))\n                        return null;\n                    if (!StringUtils.IsEmptyString(sVal)) {\n                        // Si viene entrecomillado limpiar un poco\n                        // F11111104: Los filtros de línea pueden devolver un valor incorrecto.\n                        // Esto hay que retocarlo un poquito...\n                        // F13061905: Problemas de separadores y delimitadores en GetValueFromString.\n                        // Tiene que empezar y terminar con apóstrofes...\n                        // TODO ADD TAG 280514 Luis es un and no un or en el inicio y fin de '\n                        if (sVal.startsWith(\"'\") && sVal.endsWith(\"'\") && sVal.length >= 2) {\n                            // Quitar las comillas\n                            // F11111104: Los filtros de línea pueden devolver un valor incorrecto.\n                            // Solamente si no es un filtro...\n                            // F13061906: Al evaluar FieldPropertyValue hay que excluir filter y linkfilter.\n                            // linkfilter también es un filtro, así que también lo excluimos...\n                            if (!AttrName.equals(\"filter\") && !AttrName.equals(\"linkfilter\"))\n                                sVal = sVal.substring(1, sVal.length - 1);\n                        } // Quitar las comillas\n                    } // Si viene entrecomillado limpiar un poco\n                } // Es una macro o la contiene\n        }\n        return sVal;\n    }\n    GetObjectIdString(Develop = false) {\n        let str = \"\";\n        if (!StringUtils.IsEmptyString(this.m_strObjectId) && !Develop)\n            return this.m_strObjectId;\n        // De lo contrario, la desarrollamos aquí\n        if (this.m_lObjectId > 0) {\n            // Clave única y numérica\n            // O11100301: Si ya el IDString de un objeto tiene valor no hay por qué volver a generarlo.\n            if (StringUtils.IsEmptyString(this.m_strObjectId))\n                this.m_strObjectId = String.format(\"%d\", this.m_lObjectId);\n            return this.m_strObjectId;\n        } // Clave única y numérica\n        else {\n            // Múltiple o cadena\n            if (!this.m_owner.getStringKey()) {\n                // Numérica\n                if (Develop)\n                    return \"NULL\";\n                // De lo contrario, cadena vacía\n                return \"\";\n            } // Numérica\n            // Ver si es múltiple\n            if (this.m_owner.getMultipleKey()) {\n                // Múltiple\n                this.m_strObjectId = this.GetMultipleKeyString(false);\n                return this.GetMultipleKeyString(Develop);\n            } // Múltiple\n            else {\n                // Cadena\n                if (Develop)\n                    str = this.DevelopObjectValue(this.get(this.getIdFieldName()));\n                else\n                    str = this.m_strObjectId = this.get(this.getIdFieldName()).toString();\n                return str;\n            } // Cadena\n        } // Múltiple o cadena\n    }\n    GetRawStringField(fieldName) {\n        return \"\";\n    }\n    /**\n     * Desarrolla el valor de un objeto y lo devuelve como cadena lista para insertar en un SQL o un filtro.\n     *\n     * K12102201: Modificación de DevelopObjectValue para pasar ForceNulls como parámetro.\n     * Un parámetro para indicar el valor de ForceNulls, por si alguien lo necesita.\n     *\n     * @param Value\t\t\tValor que se quiere desarrollar.\n     * @return\t\t\t\tDevuelve el valor en forma de cadena con sus comillas, formatos de fecha y etc. etc.\n     */\n    DevelopObjectValue(Value, ForceNulls = true) {\n        return this.m_owner.DevelopObjectValue(Value, ForceNulls);\n    }\n    /**\n     * Esta función se llama cuando se termina de cargar el objeto como consecuencia de una búsqueda.\n     */\n    OnNormalSearh() {\n        // En principio esta función de la clase base no hace nada... redefinirla en clases hijas.\n    }\n    getOwnerApp() {\n        return this.m_owner.getOwnerApp();\n    }\n    /**\n     * @return\t\tDevuelve TRUE si se trata del elemento actual de un recorrido SB/EB para usar los datos sacados directamente del recordset.\n     */\n    getIsCurrentItem() {\n        return this.m_bIsCurrentItem;\n    }\n    /**\n     * Asigna valor a la bandera que indica que este objeto es el CurrentItem de una colección con carga diferida.\n     * @param value\t\tTRUE para indicar que es el objeto actual del recorrido. FALSE para un comportamiento normal.\n     */\n    async setIsCurrentItem(value) {\n        let bOldVal = this.m_bIsCurrentItem;\n        let vl = null;\n        if ((this.m_bIsCurrentItem = value)) {\n            // Es el actual\n            vl = this.GetRawPropertyValue(this.getIdFieldName());\n            // F11092601: Protegerse a la hora de armar las cadenas de IDs.\n            this.m_strObjectId = StringUtils.SafeToString(vl);\n            if (this.m_owner.getStringKey()) {\n                // Cadenilla\n                ////m_strObjectId = vl.toString();\n                this.m_lObjectId = -1;\n            } // Cadenilla\n            else {\n                // Numérico\n                this.m_lObjectId = NumberUtils.SafeToLong(vl);\n                // F11092601: Protegerse a la hora de armar las cadenas de IDs.\n                ////m_strObjectId = StringUtils.SafeToString(vl);\n            } // Numérico\n            // Limpiar los contents por si alguien usa LoadAll\n            this.ClearContents();\n            // Enumeration<String> e =this.m_lstContents.keys();\n            // while (e.hasMoreElements())\n            // {// Cada colección\n            // \tXoneDataCollection cnt =this.m_lstContents.get(e.nextElement());\n            //     cnt.Clear();\n            //     cnt.setFilter (null);\n            // }// Cada colección\n            // F10072611: Al asignar un objeto como CurrentItem deben limpiarse sus datos.\n            // Limpiar posibles valores y demás coisas\n            this.m_lstNormalProperties.clear();\n            this.m_lstOldValues.clear();\n            this.ClearAllVariables();\n            this.setDirty(false); // Si somos currentitem ahora, entonces estamos limpios :-P\n            // F12042506: Cuando se asigna valor TRUE a IsCurrentItem hay que ejecutar el OnLoad.\n            try {\n                await this.OnLoad();\n            }\n            catch (e1) {\n                console.error(e1);\n            }\n        } // Es el actual\n        else {\n            // Ver si se ha reseteado\n            if (bOldVal) {\n                // Era un Deferred\n                this.m_lObjectId = 0;\n                this.m_strObjectId = null;\n            } // Era un Deferred\n        } // Ver si se ha reseteado\n    }\n    /**\n     * Limpia todas las variables de este objeto (limpia la lista)\n     */\n    ClearAllVariables() {\n        this.m_lstVariables.clear();\n    }\n    /**\n     * @param Develop\tTRUE si se quiere que las parejas campo=valor están separadas por AND en vez de por comas, para facilitar su uso en base de datos.\n     * @return\t\t\tDevuelve una cadena con las parejas campo=valor de la clave múltiple del objeto usado para identificarlo de manera única.\n     * @throws Exception\n     */\n    GetMultipleKeyString(Develop = false) {\n        let strKey = \"\";\n        if (this.m_owner.getMultipleKey()) {\n            // Múltiples\n            // Leer los valores de los campos claves y obtener una cadena que represente dicha clave\n            for (let i = 0; i < this.m_owner.getKeyFields().length; i++) {\n                // Obtener cada valor de campo\n                let s = this.m_owner.getKeyFields()[i];\n                let value = this[s];\n                if (value != null) {\n                    // Tiene valor\n                    let strTmp = s + \"=\" + this.DevelopObjectValue(value);\n                    if (strKey.length > 0)\n                        strKey += Develop ? \" AND \" : \",\";\n                    strKey += strTmp;\n                } // Tiene valor\n            } // Obtener cada valor de campo\n        } // Múltiples\n        else\n            strKey = this.getIdFieldName() + \"=\" + this.GetObjectIdString(Develop);\n        // Completo\n        return strKey;\n    }\n    /**\n     * @return\t\tDevuelve la lista de IDs que forman la macro ENTIDCOLL.\n     */\n    GetClientIdColl() {\n        // En la clase base, lo que se devuelve es el ID del objeto\n        return String.format(\"%d\", this.m_lObjectId);\n    }\n    /**\n     * Asigna un valor numérico a un campo del objeto\n     * @param FieldName\t\tNombre del campo cuyo valor se quiere asignar.\n     * @param value\t\t\tValor numérico que se quiere asignar al campo.\n     * @throws Exception\n     */\n    put(FieldName, value) {\n        this.PutItem(FieldName, value);\n    }\n    /**\n     * Asigna valor a una propiedad del objeto.\n     * @param FieldName\t\tNombre del campo al que se quiere asignar valor.\n     * @param Value\t\t\tValor que se quiere asignar al campo.\n     * @throws XoneGenericException\n     **/\n    PutItem(FieldName, Value) {\n        let str = \"\", strType = \"\", strKey = \"\", str1 = \"\", strProtect = \"\";\n        let bMask = true, bAllow, bUpdate = true, bForce = false, bUpdated = false;\n        let oldVal;\n        let FunctionName = \"CXoneDataObject::PutItem\";\n        // Asignar valor a una propiedad\n        this.m_bChangesMade = false;\n        try {\n            // A12122701: Sistema para gestionar la estructura lógica de vistas en la maquinaria.\n            // Cada vez que se entre tenemos un nivel mais...\n            this.m_nSetValDepth++;\n            // Macros y detalles no plis...\n            str = FieldName;\n            if (StringUtils.IsEmptyString(str))\n                return;\n            if (str.startsWith(\"#\") || str.startsWith(\"@\"))\n                return;\n            // Igualmente bitmapped\n            if (str.startsWith(\"%\")) {\n                // Bitmapped\n                this.PutBitmappedProperty(FieldName, Value);\n                return;\n            } // Bitmapped\n            // Puede que sea un bitmapped\n            strType = this.FieldPropertyValue(str, \"bit\");\n            if (!StringUtils.IsEmptyString(strType)) {\n                // Bitmapped\n                this.PutBitmappedProperty(FieldName, Value);\n                return;\n            } // Bitmapped\n            // Puede que sea una propiedad calculada sin #\n            strType = this.FieldPropertyValue(str, \"method\");\n            if (!StringUtils.IsEmptyString(strType))\n                return;\n            strType = this.FieldPropertyValue(str, \"volatile\");\n            if (StringUtils.ParseBoolValue(strType, false))\n                bForce = true;\n            if (str.startsWith(\"MAP_\"))\n                bMask = false;\n            // Propiedad normal...\n            if (this.m_lstNormalProperties.containsKey(str))\n                oldVal = this.m_lstNormalProperties.get(str);\n            else {\n                // No existe la propiedad, así que ponerla\n                oldVal = null;\n                // Buscar los atributos de esta propiedad que deben marcarse\n                if (!StringUtils.IsEmptyString((strProtect = this.FieldPropertyValue(str, \"xlat\"))))\n                    this.m_lstXlatProperties.push(str);\n            } // No existe la propiedad, así que ponerla\n            // Buscar la propiedad de antiguo valor y si no está crearla\n            strKey = str;\n            // F10072612: Al asignarse un valor a una propiedad, hay que quitar el valor viejo de los OldValues.\n            // Buscar la propiedad de antiguo valor y si no está crearla\n            this.m_lstOldValues.delete(strKey);\n            if (oldVal != null)\n                this.m_lstOldValues.put(strKey, oldVal);\n            if (typeof Value === \"string\") {\n                // Cadena\n                str = Value.toString();\n                // let bVal = StringUtils.ParseBoolValue(this.FieldPropertyValue(FieldName, \"validate\"), false);\n                // // Cuando se está clonando no se valida\n                // bVal &= (!this.m_bIsCloning);\n                // if (bVal)\n                // {// Validar\n                //     let testVal = str;\n                //     bAllow = false;\n                //     let vd =new XoneValidateData (testVal);\n                //     if (!ValidateFieldValue(FieldName, vd))\n                //     {// Fallar, pero si hay que actualizar, hacerlo\n                //         if (!vd.getAllow ())\n                //             return;\n                //         else\n                //         {// No actualiza, pero no falla\n                //             bUpdate = false;\n                //         }// No actualiza, pero no falla\n                //     }// Fallar, pero si hay que actualizar, hacerlo\n                //     str = vd.getValue().toString();\n                // }// Validar\n                strType = this.FieldPropertyValue(FieldName, \"type\");\n                // Si no tiene tipo asumimos el más flexible :-P\n                if (StringUtils.IsEmptyString(strType))\n                    strType = \"T\";\n                if (strType.equals(\"X\")) {\n                    // Password\n                    // F11010301:\tNo codificar a Base64 los passwords vacíos.\n                    // Si tenemos valor, lo convertimos\n                    if (!StringUtils.IsEmptyString(str)) {\n                        // Solo si tiene valor\n                        let sHashType = this.FieldPropertyValue(FieldName, \"hash-type\");\n                        let sEncode = this.FieldPropertyValue(FieldName, \"encode\");\n                        // byte[] buf = new byte[str.length()];\n                        // StringUtils.CopyAsBytes(str, buf, 0);\n                        // // A11042901: Modificaciones para adicionar nuevos algoritmos de comprobación de claves.\n                        // // Si tenemos hash, tendremos que usarlo\n                        // if (!StringUtils.IsEmptyString(sHashType))\n                        // \tstr = CalculatePasswordHash(str, MessageDigestAlgorithm.getValue(sHashType), sEncode);\n                        // else\n                        //     str = Base64.encodeBytes(buf);\n                        // str = HashUtils.createHash(sHashType, sEncode, str);\n                        // F10091609:\tLas modificaciones en valores de cadena no actualizan el valor seteado.\n                        Value = str; // TODO: Alejandro 19/05/2021, esto lo comento porque explota, creo que con un btoa, seria codificacion en base64\n                    } // Solo si tiene valor\n                } // Password\n                else if (strType.equals(\"TD\")) {\n                    // Fecha cadenilla\n                    //  Las fechas al 'A.S.Roiz Style' se preprocesan aquí\n                    //  También se arreglan otros casos de datos de tipo cadena.\n                    //  Aquí se ha optimizado un poco el proceso de comparación\n                    //  porque se hacían todas las comparaciones aunque ya se hubiera\n                    //  eocntrado un caso. No es que mejore mucho, pero los tiempos\n                    //  sumados de la cantidad de datos de tipo cadena que hay\n                    //  puede darle alguna mejorilla a esto...\n                    str = this.AdjustDate(str); // Fecha\n                    // F10091609:\tLas modificaciones en valores de cadena no actualizan el valor seteado.\n                    Value = str;\n                } // Fecha cadenilla\n                else if (strType.equals(\"TM\")) {\n                    // Mes/Año\n                    str = this.AdjustMonthYear(str);\n                    // F10091609:\tLas modificaciones en valores de cadena no actualizan el valor seteado.\n                    Value = str;\n                } // Mes/Año\n                else if (strType.equals(\"TB\")) {\n                    // Contabilidad\n                    str = this.FormatAcc(str); // Contabilidad\n                    // F10091609:\tLas modificaciones en valores de cadena no actualizan el valor seteado.\n                    Value = str;\n                } // Contabilidad\n                else if (strType.equals(\"TN\")) {\n                    // Por si las moscas\n                    str = str.toUpperCase(); // Por si las moscas\n                    // F10091609:\tLas modificaciones en valores de cadena no actualizan el valor seteado.\n                    Value = str;\n                } // Por si las moscas\n                else if (strType.equals(\"TC\")) {\n                    // Cuenta bancaria\n                    str = this.FormatCCC(str);\n                    str = this.AdjustAccNumber(str); // Cuenta bancaria\n                    // F10091609:\tLas modificaciones en valores de cadena no actualizan el valor seteado.\n                    Value = str;\n                } // Cuenta bancaria\n                else if (strType.equals(\"D\")) {\n                    // Fecha\n                    // F11011203:\tAl asignarse cadena vacía a un campo de fecha, ponerle fecha nula.\n                    if (StringUtils.IsEmptyString(str))\n                        Value = null;\n                    else {\n                        // Lo de siempre\n                        Value = StringUtils.ParseDateString(this.getOwnerApp().currentContext(), str);\n                    } // Lo de siempre\n                } // Fecha\n                else {\n                    // Todo lo demás\n                    if (strType.startsWith(\"N\")) {\n                        // Convertir a lo que sea\n                        if (strType.length == 1) {\n                            // Entero\n                            //let l = NumberUtils.SafeToInt(str);\n                            Value = NumberUtils.SafeToInt(str);\n                        } // Entero\n                        else {\n                            // Decimal\n                            //let d = NumberUtils.SafeToDouble(str);\n                            Value = NumberUtils.SafeToDouble(str);\n                        } // Decimal\n                    } // Convertir a lo que sea\n                } // Todo lo demás\n                // Si sigue siendo una cadena entonces hacemos esto, de lo contrario nio nio nio\n                if (typeof Value === \"string\") {\n                    // Es una cadena\n                    // Aplicar la protección si la tiene...\n                    strProtect = this.FieldPropertyValue(FieldName, \"protect\");\n                    if (StringUtils.ParseBoolValue(strProtect, false)) {\n                        // Encriptar la cadena\n                        str1 = this.FieldPropertyValue(FieldName, \"size\");\n                        if (!StringUtils.IsEmptyString(str1))\n                            // Tiene tamaño declarado... imprescindible\n                            str = this.ProtectString(str, NumberUtils.SafeToInt(str1));\n                    } // Encriptar la cadena\n                    // Si se han hecho cambios habrá que indicarlos\n                    if (bUpdate) {\n                        // Solo actualiza si no hay error\n                        //  Si este valor está en los índices, matar el valor actual, porque después\n                        //  la búsqueda se puede poner muy mala\n                        this.m_lstOldValues.put(FieldName, oldVal);\n                        // Solo puede marcar el campo como modificado si no está\n                        // cargando de disco, o si está clonando el objeto...\n                        // F11011204:\tAgregar el campo a la lista de modificados solo si ha cambiado.\n                        // En el dirtyproperties solo si ha cambiado\n                        if (!FieldName.startsWith(\"MAP_\") && (!this.m_bIsLoading || this.m_bIsCloning)) {\n                            // Indicar que está modificada\n                            // if (!this.m_lstDirtyProperties.contains(FieldName))\n                            //    this.m_lstDirtyProperties.addElement(FieldName);\n                        } // Indicar que está modificada\n                        else\n                            bMask = false;\n                        // F12112109: Hay una comparación redundante cuando se asigna un valor de cadena.\n                        // Si estamos en instanceof String Value no puede ser NULL nunca.\n                        //////if (Value ==null)\n                        //////\tm_lstNormalProperties.remove(FieldName);\n                        //////else\n                        this.setNormalValue(FieldName, Value);\n                        //this[FieldName] = Value;\n                        //this.m_lstNormalProperties.put(FieldName, Value);\n                        bUpdated = true;\n                    } // Solo actualiza si no hay error\n                } // Es una cadena\n            } // Cadena\n            // Si no es una cadena o ha cambiado de jeta\n            if (!(typeof Value === \"string\") && !bUpdated) {\n                /*\n                 * TODO 17/03/2017 Juan Carlos\n                 * Hay campos ID que declara el propio desarrollador de mappings y no tienen nada\n                 * que ver. Esto lo cambio y lo pongo igual que iOS (startsWith pasa a ser un\n                 * equals).\n                 */\n                // Comprobar si es un campo ID...\n                if (FieldName.equals(\"ID\") && ObjUtils.IsNumeric(Value)) {\n                    // Es un ID algo\n                    let l = NumberUtils.SafeToInt(Value);\n                    if (l == 0)\n                        Value = null; // Nulo\n                } // Es un ID algo\n                // Comprobar si es válido\n                strProtect = this.FieldPropertyValue(FieldName, \"validate\");\n                if (StringUtils.ParseBoolValue(strProtect, false) && !this.m_bIsCloning) {\n                    // Comprobar\n                    bAllow = false;\n                    let testVal = Value;\n                    // Estructura para validar\n                    // XoneValidateData vd =new XoneValidateData (testVal);\n                    // if (!ValidateFieldValue(FieldName, vd))\n                    // {// Falla, pero puede que se permita cambiar valor\n                    //     if (!bAllow)\n                    //         return;\n                    //     else\n                    //     {// No actualiza y no falla\n                    //         bUpdate = false;\n                    //     }// No actualiza y no falla\n                    // }// Falla, pero puede que se permita cambiar valor\n                    // Value = vd.getValue();\n                } // Comprobar\n                if (bUpdate || bForce) {\n                    // Solo si no hubo error\n                    // Antes de almacenar el valor, guardar el anterior\n                    if (oldVal != null)\n                        this.m_lstOldValues.put(FieldName, oldVal);\n                    else\n                        this.m_lstOldValues.delete(FieldName);\n                    // Ahora asignar el nuevo valor\n                    if (Value == null) {\n                        this.setNormalValue(FieldName, null);\n                        //this[FieldName] = null;\n                        this.m_lstNormalProperties.delete(FieldName);\n                    }\n                    else {\n                        this.setNormalValue(FieldName, Value);\n                        //this[FieldName] = Value;\n                        //this.m_lstNormalProperties.put(FieldName, Value);\n                    }\n                    // Si es una propiedad modificable...\n                    // F11011204:\tAgregar el campo a la lista de modificados solo si ha cambiado.\n                    // En el dirtyproperties solo si ha cambiado\n                    ////if (bMask)\n                    ////    m_lstDirtyProperties.addElement(FieldName);\n                } // Solo si no hubo error\n            } // Comprobar si es un campo ID...\n            let bCheck = false;\n            // F12112105: No se están haciendo los chequeos correctos al clonar objetos.\n            // Verificar más cosas aquí.\n            bCheck = (!ObjUtils.EqualObj(oldVal, Value) || bForce) && (!this.m_bIsLoading || this.m_bIsCloning) && bUpdate;\n            if (bCheck) {\n                // Actualiza la banderilla\n                // F11011204:\tAgregar el campo a la lista de modificados solo si ha cambiado.\n                // En el dirtyproperties solo si ha cambiado\n                if (bMask) {\n                    // Indicar el dirty\n                    this.setDirty(true);\n                    // Si no está en lista, la agregamos\n                    if (!this.m_lstDirtyProperties.contains(FieldName))\n                        this.m_lstDirtyProperties.push(FieldName);\n                } // Indicar el dirty\n                this.m_bChangesMade = true; // Ha habido cambios\n                // Marcar el timestamp de actualización, solo si se usa\n                if (this.m_bUseTimestamp) {\n                    // Timestamp de la operación\n                    let d = new Date();\n                    if (this.m_dtTimeStamp == null)\n                        this.m_dtTimeStamp = Calendar.getInstance();\n                    else\n                        this.m_dtTimeStamp.setTime(d);\n                    d = null;\n                } // Timestamp de la operación\n                // // A12122701: Sistema para gestionar la estructura lógica de vistas en la maquinaria.\n                // // Si el campo es trigger, ensuciar las fórmulas :-P\n                // // K13081201: Cambios en el tratamiento de fórmulas para mejorar la concurrencia.\n                // // Podemos tener problemas con esto...\n                // synchronized (this.m_formulaLocker)\n                // {\n                //     if (this.m_formulas != null)\n                //     {// Habemus\n                //     \tEnumeration<String> enm =this.m_formulas.keys();\n                //         while (enm.hasMoreElements())\n                //         {\n                //         \tString key =enm.nextElement();\n                //         \tXoneEvalData val =this.m_formulas.get(key);\n                //             if (val.getFormula().IsTrigger(FieldName))\n                //                 val.Invalidate();\n                //         }\n                //     }// Habemus\n                // }\n            } // Actualiza la banderilla\n            //\n            // Si el objeto ha quedado sucio, marcar su propietario\n            // Comprobar si hay que propagar el estado de modificación\n            if (this.m_bDirty && this.m_bPropagateDirty) {\n                // Verificar si tiene objeto propietario\n                if (null != this.m_owner.getOwnerObject())\n                    // Tiene propietario\n                    this.m_owner.getOwnerObject().setDirty(this.m_bDirty);\n            } // Verificar si tiene objeto propietario\n            // Ahora la idea es buscar si esta propiedad mapea\n            // hacia alguna otra y modificarla también\n            if (this.m_bChangesMade) {\n                // Como se han hecho cambios hay que mapear\n                if (FieldName.equals(this.getIdFieldName())) {\n                    // Es el ID\n                    if (!this.m_owner.getStringKey()) {\n                        // Obtener el valor y ponerlo en el campo\n                        this.m_lObjectId = NumberUtils.SafeToInt(Value);\n                    } // Obtener el valor y ponerlo en el campo\n                } // Es el ID\n                if (!StringUtils.IsEmptyString((strKey = this.FieldPropertyValue(FieldName, \"updates\")))) {\n                    // Tiene campo para cambiar\n                    let o = this.PreprocessValue(FieldName, strKey, Value);\n                    this.SetPropertyValue(strKey, o);\n                } // Tiene campo para cambiar\n                // Ahora debe verificar si hay que recargar algún mapeo\n                // por si las moscas\n                if (!this.m_bIsLoading && this.m_owner != null) {\n                    // No está cargando\n                    this.RestoreMappedFields(FieldName)\n                        .then((value) => {\n                        if (!value) {\n                            // Error\n                            // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n                            let sb = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_OBJ_PUTITEMFAIL, \"{0} failed. Cannot update mapped fields.\");\n                            sb = sb.replace(\"{0}\", FunctionName);\n                            throw new XoneGenericException(-23231, sb);\n                        } // Error\n                        const onChange = async () => {\n                            await this.OnChange(FieldName);\n                        };\n                        onChange();\n                    })\n                        .catch((reason) => {\n                        // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n                        let sb = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_OBJ_PUTITEMFAIL, \"{0} failed. Cannot update mapped fields. Reason: {1}\");\n                        sb = sb.replace(\"{0}\", FunctionName);\n                        sb = sb.replace(\"{1}\", reason);\n                        throw new XoneGenericException(-23231, sb);\n                    });\n                    // Algo pudo haber fallado por allí adentro\n                } // No está cargando\n                // Ver si se actualizan campos con esta cadena\n                // Si se está usando el timestamp del objeto, marcar la fecha y hora\n                // del cambio que se está realizando\n                // F11100304: La comparación del campo OBJTIMESTAMP no se hace con el valor correcto.\n                if (this.m_bUseTimestamp && !FieldName.equals(\"OBJTIMESTAMP\")) {\n                    // Marcar esta fecha y hora\n                    if (!FieldName.startsWith(\"MAP_\") && (!this.m_bIsLoading || this.m_bIsCloning)) {\n                        // Solo aquellas que realmente proviquen cambios\n                        this.PutItem(\"OBJTIMESTAMP\", this.m_dtTimeStamp);\n                    } // Solo aquellas que realmente proviquen cambios\n                } // Marcar esta fecha y hora\n                // Si estaba a TRUE para entrar a esta condición, lo estará para salir\n                // de manera que si lo ha llamado una clase hija, que mantenga el valor\n                this.m_bChangesMade = true;\n            } // Como se han hecho cambios hay que mapear\n            this.postNewValue(FieldName, Value);\n        }\n        catch (ex) {\n            // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n            let sMessage = ex.message;\n            let sb = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_GENERALFAIL, \"{0} failed. \");\n            sb = sb.replace(\"{0}\", FunctionName);\n            if (!TextUtils.isEmpty(sMessage)) {\n                sb = sb.concat(sMessage);\n            }\n            console.error(ex);\n            throw new XoneGenericException(-10101, ex, sb);\n        }\n        // finally\n        // {\n        //     // A12122701: Sistema para gestionar la estructura lógica de vistas en la maquinaria.\n        //     // Estamos a nivel cero de evaluación, momento de verificar si evaluamos las fórmulas de\n        //     // visibilidad, habilitación y tal y tal...\n        //     --this.m_nSetValDepth;\n        //     if (this.m_nSetValDepth <= 0)\n        //     {// Actualizar las fórmulas\n        //         // K13081201: Cambios en el tratamiento de fórmulas para mejorar la concurrencia.\n        //         synchronized (this.m_formulaLocker)\n        //         {\n        //         \tthis.m_nSetValDepth =0;\t\t\t// Por si las moscas...\n        //             if (this.m_formulas != null)\n        //             {// Anda\n        //             \tEnumeration<String> enm =this.m_formulas.keys();\n        //                 while (enm.hasMoreElements())\n        //                 {// Evaluar cada una\n        //                 \tString key =enm.nextElement ();\n        //                 \tXoneEvalData val =this.m_formulas.get(key);\n        //                     if (val.getDirty())\n        // \t\t\t\t\t\ttry {\n        // \t\t\t\t\t\t\tval.Evaluate();\n        // \t\t\t\t\t\t} catch (Exception ex) {\n        // \t\t\t\t\t\t\t// M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n        //                             String sMessage = ex.getMessage();\n        //                             String sb = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_GENERALFAIL, \"{0} failed. \");\n        //                             sb = sb.replace(\"{0}\", FunctionName);\n        //                             if (!TextUtils.isEmpty(sMessage)) {\n        //                                 sb = sb.concat(sMessage);\n        //                             }\n        //                             throw new XoneGenericException(-10108, ex, sb);\n        //                         }\n        //                 }// Evaluar cada una\n        //             }// Anda\n        //         }\n        //     }// Actualizar las fórmulas\n        //}\n    }\n    /**\n     * Esta función se llama desde get(x) para devolver el valor de una propiedad (campo) del objeto.\n     * @param FieldName\t\t\tNombre del campo cuyo valor se quiere obtener.\n     * @return\t\t\t\t\tDevuelve el valor de la propiedad. Si es NULL se ajustará al nulo de su tipo de datos.\n     * @throws Exception\n     */\n    GetItem(FieldName) {\n        let FunctionName = \"GetItem\";\n        // Si es una cadena vacía, nos famos...\n        if (StringUtils.IsEmptyString(FieldName))\n            return null;\n        // Primero efectuar algún análisis para ver si tenemos propiedad con nombre especial\n        switch (FieldName.charAt(0)) {\n            // K11041401: Declarar obsoletas las propiedades tipo method en el mappings.\n            //////case '#':\n            //////    return GetPropertyMacro(FieldName);\n            case \"%\":\n                return this.GetBitmappedProperty(FieldName);\n            case \"$\":\n                return this.GetFormulaProperty(FieldName);\n        }\n        // Puede que sea una propiedad de las anteriores con nombre común\n        // O12050702: Optimización al gestionas los campos que son de fórmula o bit.\n        // Saber si el campo es de fórmula ahora es un pelín diferente...\n        //////String str = FieldPropertyValue(FieldName, \"formula\");\n        //////if (!StringUtils.IsEmptyString(str))\n        if (this.m_owner.IsFormulaProperty(FieldName)) {\n            // Meter el pie\n            // Ver si no se trata de un campo para generar con \"generates\"\n            //////str = FieldPropertyValue(str, \"generated\");\n            //////if (!StringUtils.ParseBoolValue(str, false))\n            // O12050702: Optimización al gestionas los campos que son de fórmula o bit.\n            // Esto era deprecated.... ahora es obsolete....\n            return this.GetFormulaProperty(FieldName); // Es una fórmula normal\n        } // Meter el pie\n        // K11041401: Declarar obsoletas las propiedades tipo method en el mappings.\n        /*\n        if (!StringUtils.IsEmptyString(str = FieldPropertyValue(FieldName, \"method\")))\n            return GetPropertyMacro(FieldName);  // Método sin caracter de inicio\n        */\n        // O12050702: Optimización al gestionas los campos que son de fórmula o bit.\n        // Esto ahora es un poco diferente\n        //////if (!StringUtils.IsEmptyString(str = FieldPropertyValue(FieldName, \"bit\")))\n        if (this.m_owner.IsBitProperty(FieldName))\n            return this.GetBitmappedProperty(FieldName); // Igual que en la anterior\n        // A09100501:   Permitir que las propiedades tengan un tipo button.\n        // Si es un botón, coger el valor normal y si es nulo, devolver el property-title\n        let str = this.FieldPropertyValue(FieldName, \"type\");\n        if (!StringUtils.IsEmptyString(str)) {\n            // Tiene valor\n            if (str.equals(\"B\")) {\n                // Botoncillo\n                let v1, v2;\n                v1 = this.PropertyTitle(FieldName);\n                v2 = this.GetNormalProperty(FieldName);\n                let str2 = StringUtils.SafeToString(v2);\n                if (!StringUtils.IsEmptyString(str2))\n                    v1 = str2;\n                return v1;\n            } // Botoncillo\n        } // Tiene valor\n        // Si es un current item con carga diferida, buscar el valor en la colección directamente\n        let vl = null;\n        if (this.m_owner.getDeferredLoad() && this.m_bIsCurrentItem) {\n            // Buscar en el recordset\n            // F13012402: Si un valor de un CurrentItem ha variado, devolverlo cuando se lea.\n            // Para los valores modificados en un C.I.\n            // Si lo que devuelve es NULL, entonces ajustarlo y devolverlo\n            if (this.m_lstNormalProperties.containsKey(FieldName))\n                vl = this.m_lstNormalProperties.get(FieldName);\n            if (vl == null) {\n                if (null == (vl = this.m_owner.GetCurrentItemValue(FieldName))) {\n                    // Si lo que hay en el recordset es nulo, podría ser un linkedto\n                    // Si el campo no existe, tendremos que ver si se trata de un campo xlat o un campo mapeado\n                    let strLinkedTo = this.FieldPropertyValue(FieldName, \"linkedto\");\n                    if (!StringUtils.IsEmptyString(strLinkedTo) && !this.m_owner.getConnection().IsOuterJoinSupported()) {\n                        // Tiene linkedto\n                        if (!StringUtils.IsEmptyString(this.FieldPropertyValue(FieldName, \"linkedfield\"))) {\n                            // Leer valores y devolver lo que sea\n                            this.RestoreMappedFields(strLinkedTo)\n                                .then((value) => {\n                                if (!value) {\n                                    // Error\n                                    // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n                                    let sb = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_OBJ_PUTITEMFAIL, \"{0} failed. Cannot update mapped fields.\");\n                                    sb = sb.replace(\"{0}\", FunctionName);\n                                    throw new XoneGenericException(-23231, sb);\n                                } // Error\n                            })\n                                .catch((reason) => {\n                                // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n                                let sb = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_OBJ_PUTITEMFAIL, \"{0} failed. Cannot update mapped fields. Reason: {1}\");\n                                sb = sb.replace(\"{0}\", FunctionName);\n                                sb = sb.replace(\"{1}\", reason);\n                                throw new XoneGenericException(-23231, sb);\n                            });\n                            if (this.m_lstNormalProperties.containsKey(FieldName))\n                                return (vl = this.m_lstNormalProperties.get(FieldName));\n                        } // Leer valores y devolver lo que sea\n                    } // Tiene linkedto\n                    return this.AdjustNullValue(FieldName);\n                } // Si lo que hay en el recordset es nulo, podría ser un linkedto\n                // De lo contrario devolverlo tal cual\n                if (vl != null) {\n                    this[FieldName] = vl;\n                    //this.m_lstNormalProperties.put(FieldName, vl);\n                }\n            }\n            // F11041504:\tAl devolver un valor que se saca del recordset, procesarlo como siempre.\n            // Procesar\n            return this.ProcessValue(FieldName, vl);\n        } // Buscar en el recordset\n        // Finalmente será posiblemente una propiedad normal...\n        return this.GetNormalProperty(FieldName);\n    }\n    GetFormulaProperty(FieldName) {\n        throw new Error(\"Method not implemented.\");\n    }\n    GetBitmappedProperty(FieldName) {\n        // Amiyares: 30/06/2021\n        const linked = this.getFieldPropertyValue(FieldName, \"linkedto\");\n        const bit = Number(this.getFieldPropertyValue(FieldName, \"bit\")) - 1;\n        return (this[linked] >> bit) % 2 != 0;\n    }\n    PropertyTitle(FieldName) {\n        // F11081105: Protegerse en el objeto cuando se trata de un objeto huérfano.\n        // F13022109: No devolver nulos cuando los atributos no existen o tienen cadenas vacías.\n        // No es lo mismo cadena vacía que NULL\n        // TAG: 0512201601 : Luis He permitido cachear el title para si se cambia por script que se pueda devolver el correcto.\n        // Antes solo se buscaba en la colección y cada objeto no podia teenr su porpio titulo personalizado\n        let sKey = FieldName + \":\" + Utils.PROP_ATTR_TITLE;\n        if (this.m_lstOverridenFieldPropertyValueAttributes.containsKey(sKey)) {\n            return this.m_lstOverridenFieldPropertyValueAttributes.get(sKey);\n        }\n        else if (this.m_lstCachedAttributes.containsKey(sKey)) {\n            return this.m_lstCachedAttributes.get(sKey);\n        }\n        else if (this.m_owner == null) {\n            return this.FieldPropertyValue(FieldName, Utils.PROP_ATTR_TITLE);\n        }\n        let sVal = this.m_owner.PropertyTitle(FieldName);\n        if (!StringUtils.IsEmptyString(sVal)) {\n            if (sVal.contains(\"##\")) {\n                // Es una macro o la contiene\n                // M11060902: Mejoras en el sistema de evaluación de macros en el framework.\n                // F13022109: No devolver nulos cuando los atributos no existen o tienen cadenas vacías.\n                // No es lo mismo cadena vacía que NULL\n                if (sVal.equals(StringUtils.XONE_EMPTY_STRING))\n                    return Utils.EMPTY_STRING;\n                //TODO ADD TAG 13/05/2014 Juan Carlos. Añado sobrecarga a PrepareSqlString, hace falta para PropertyTitle. Buscar esta fecha para el resto de cambios.\n                sVal = this.PrepareSqlString(sVal, true);\n                if (!StringUtils.IsEmptyString(sVal)) {\n                    // Si viene entrecomillado limpiar un poco\n                    // M11060902: Mejoras en el sistema de evaluación de macros en el framework.\n                    // F13022109: No devolver nulos cuando los atributos no existen o tienen cadenas vacías.\n                    // No es lo mismo cadena vacía que NULL\n                    if (sVal.equals(\"NULL\"))\n                        return Utils.EMPTY_STRING;\n                    if (sVal.startsWith(\"'\") || (sVal.endsWith(\"'\") && sVal.length >= 2))\n                        sVal = sVal.substring(1, sVal.length - 1);\n                    ////return sVal.replace(\"'\", \"\");\n                } // Si viene entrecomillado limpiar un poco\n            } // Es una macro o la contiene\n        }\n        //SetFieldPropertyValue(FieldName,Utils.PROP_ATTR_TITLE,sVal,false);\n        return sVal;\n    }\n    /**\n     * Devuelve el valor de una propiedad de datos \"normal\"\n     * @param FieldName\t\tNombre del campo cuyo valor se quiere leer.\n     * @return\t\t\t\tDevuelve el valor de una propiedad de datos \"normal\"\n     * @throws Exception\n     */\n    GetNormalProperty(FieldName) {\n        let vl = null;\n        const FunctionName = \"GetNormalProperty\";\n        if (!this.m_lstNormalProperties.containsKey(FieldName)) {\n            // No tiene valor, ver si es xlat\n            // TODO: Luis, por ahora el xlat nos lo quitamos\n            // if (!StringUtils.IsEmptyString(this.FieldPropertyValue(FieldName, \"xlat\")))\n            // {// Existe la propiedad\n            //     if (!this.DevelopXlatProperties(FieldName, true))\n            //     {// Error\n            //         // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n            //         let sb = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_OBJ_GETNORMALPROPFAIL, \"CXoneDataObject::GetNormalProperty failed. Cannot develop slat property '{0}'\");\n            //         sb =sb.replace(\"{0}\", FieldName);\n            //         throw new XoneGenericException(-19199, sb);\n            //     }// Error\n            //     // Obtener la de la lista\n            //     if (this.m_lstNormalProperties.containsKey(FieldName))\n            //         vl = this.m_lstNormalProperties.get(FieldName);\n            // }// Existe la propiedad\n            // else\n            {\n                // Ver si es una propiedad mapeada y resolverla ahora\n                let strLinkedTo;\n                if (!this.m_owner.getConnection().IsOuterJoinSupported() &&\n                    !StringUtils.IsEmptyString((strLinkedTo = this.FieldPropertyValue(FieldName, \"linkedto\")))) {\n                    // Si está enlazada, buscar dicho valor\n                    let strLinkedField = this.FieldPropertyValue(FieldName, \"linkedfield\");\n                    if (!StringUtils.IsEmptyString(strLinkedField) && !this.m_bIsLoading) {\n                        // Resolver y leer\n                        // Resolver los campos mapeados... esto se puede optimizar después\n                        // usando algún mecanismo de carga que no cachee los datos del objeto\n                        // sino que use carga diferida y lea directamente del recordset... ya se\n                        // verá\n                        this.RestoreMappedFields(strLinkedTo)\n                            .then((value) => {\n                            if (!value) {\n                                // Error\n                                // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n                                let sb = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_OBJ_PUTITEMFAIL, \"{0} failed. Cannot update mapped fields.\");\n                                sb = sb.replace(\"{0}\", FunctionName);\n                                throw new XoneGenericException(-23231, sb);\n                            } // Error\n                        })\n                            .catch((reason) => {\n                            // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n                            let sb = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_OBJ_PUTITEMFAIL, \"{0} failed. Cannot update mapped fields. Reason: {1}\");\n                            sb = sb.replace(\"{0}\", FunctionName);\n                            sb = sb.replace(\"{1}\", reason);\n                            throw new XoneGenericException(-23231, sb);\n                        });\n                        if (this.m_lstNormalProperties.containsKey(FieldName))\n                            vl = this.m_lstNormalProperties.get(FieldName);\n                    } // Resolver y leer\n                } // Si está enlazada, buscar dicho valor\n                else {\n                    // No está mapeado\n                    // O10052504:\tLas propiedades no mapeadas que se sacan de recordset puede cachearse.\n                    // F11092602: No ir al resultset si este objeto no es CurrentItem.\n                    // Solo busca en el recordset si yo soy current item...\n                    if (this.m_bIsCurrentItem) {\n                        // Pozi\n                        vl = this.m_owner.GetCurrentItemValue(FieldName);\n                        if (vl != null) {\n                            this[FieldName] = vl;\n                            //this.m_lstNormalProperties.put(FieldName, vl);\n                        }\n                    } // Pozi\n                } // No está mapeado\n            } // Ver si es una propiedad mapeada y resolverla ahora\n        } // No tiene valor, ver si es xlat\n        else\n            vl = this.m_lstNormalProperties.get(FieldName);\n        return this.ProcessValue(FieldName, vl);\n    }\n    /**\n     * Procesa un valor antes de devolverlo a quien lo está leyendo (aquí se decodifican los valores, se ajustan tipos, etc.)\n     * @param FieldName\t\t\tNombre del campo al que pertenece el valor devuelto.\n     * @param Value\t\t\t\tValor como tal.\n     * @return\t\t\t\t\tDevuelve el valor ya procesado en función de su tipo de datos.\n     * @throws Exception\n     */\n    ProcessValue(FieldName, Value) {\n        if (Value == null && this.m_lstXlatProperties.contains(FieldName) && !this.m_lstDevelopedXlatProperties.contains(FieldName)) {\n            // Desarrollar esta propiedad\n            // TODO ADD TAG\n            // Solo lectura... si no existe el objeto pos ná...\n            if (!this.DevelopXlatProperties(FieldName, true)) {\n                // Error\n                // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n                let sb = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_OBJ_PROCESSVALFAIL, \"CXoneDataObject::ProcessValue failed. Cannot develop xlat property '{0}'\");\n                sb = sb.replace(\"{0}\", FieldName);\n                throw new XoneGenericException(-19991, sb);\n            } // Error\n            this.m_lstDevelopedXlatProperties.push(FieldName);\n        } // Desarrollar esta propiedad\n        // O12052901: No llamar a FieldPropertyValue cuando no sea necesario (optimización)\n        let str, strType = null;\n        if (Value == null)\n            return this.AdjustNullValue(FieldName);\n        let vl = Value; // La salida de la función, por defecto lo mismo que viene...\n        if (typeof Value === \"string\") {\n            // Cadena\n            str = Value.toString();\n            strType = this.FieldPropertyValue(FieldName, \"type\");\n            // F11041804: ProcessValue no está analizando los tipos con uno por defecto.\n            if (StringUtils.IsEmptyString(strType))\n                strType = \"T\";\n            if (strType.equals(\"TW\")) {\n                // Weekday\n                let n = NumberUtils.SafeToInt(Value);\n                str = this.getOwnerApp().GetWeekDayName(n);\n            } // Weekday\n            else {\n                // Probar otros\n                if (strType.equals(\"X\")) {\n                    // Password viejo (sin codificar)\n                    if (!StringUtils.IsEmptyString(str)) {\n                        // Tiene valor\n                        // A11042901: Modificaciones para adicionar nuevos algoritmos de comprobación de claves.\n                        // Puede que traiga hash... en ese caso devolvemos lo que hay y punto.\n                        // byte[] buffer = Base64.decode(str);\n                        // String strTmp =this.FieldPropertyValue (FieldName, \"hash-type\");\n                        // if (StringUtils.IsEmptyString(strTmp))\n                        //     str = StringUtils.ReadFromBytes(buffer);\n                        let sHashType = this.FieldPropertyValue(FieldName, \"hash-type\");\n                        let sEncode = this.FieldPropertyValue(FieldName, \"encode\");\n                        // str = HashUtils.createHash(sHashType, sEncode, str);\n                        // TODO: Alejandro 19/05/2021, Los tipo X explotan, a hacer: poner un atob, decodifica de BASE64\n                    } // Tiene valor\n                } // Password viejo (sin codificar)\n                else {\n                    // Cualquier otra cosa\n                    //\n                    // Ver si puede estar encriptado\n                    let strProtect = this.FieldPropertyValue(FieldName, \"protect\");\n                    if (!StringUtils.IsEmptyString(strProtect) && !strProtect.equals(\"0\") && !strProtect.equals(\"false\"))\n                        str = this.UnprotectString(str, strProtect); // Desproteger la cadenilla\n                    //\n                    // Seguir con el proceso\n                    let nLen = str.length;\n                    switch (nLen) {\n                        case 8:\n                            if (strType.equals(\"TD\"))\n                                // F09042201:\tSubstring no funciona igual en java que en .NET Arreglar Blackberry\n                                str = String.format(\"%02d/%02d/%04d\", NumberUtils.SafeToInt(str.substring(6, 8)), NumberUtils.SafeToInt(str.substring(4, 6)), NumberUtils.SafeToInt(str.substring(0, 4))); // Transformar la cadenilla\n                            break;\n                        case 22:\n                            if (strType.equals(\"TC\")) {\n                                // Ver si la cuenta viene con el formato adecuao\n                                // F09042201:\tSubstring no funciona igual en java que en .NET Arreglar Blackberry\n                                if (str.substring(8, 9).equals(\"#\") && str.substring(11, 12).equals(\"#\")) {\n                                    // Tiene el formato\n                                    // F09042201:\tSubstring no funciona igual en java que en .NET Arreglar Blackberry\n                                    strType = str.substring(0, 4) + \"-\" + str.substring(4, 8) + \"-\" + str.substring(9, 11) + \"-\" + str.substring(12, 22);\n                                    str = strType;\n                                } // Tiene el formato\n                            } // Ver si la cuenta viene con el formato adecuao\n                            break;\n                    }\n                } // Cualquier otra cosa\n            }\n            vl = str;\n        } // Cadena\n        // F10052506:\tEl procesamiento de valores NC que vienen double es incorrecto.\n        if (ObjUtils.IsFloat(Value)) {\n            // Double\n            let dbl = NumberUtils.SafeToDouble(Value);\n            // O12052901: No llamar a FieldPropertyValue cuando no sea necesario (optimización)\n            // Solo se llama FieldPropertyValue si hace falta...\n            if (StringUtils.IsEmptyString(strType))\n                strType = this.FieldPropertyValue(FieldName, \"type\");\n            if (\"N\".equals(strType) || \"NC\".equals(strType))\n                return NumberUtils.SafeToInt(dbl);\n        } // Double\n        // Los campos especiales read-once\n        if (FieldName.equals(\"MAP_MULTIPLE\") || FieldName.equals(\"MAP_REFINE\"))\n            // Limpiar esto\n            this.m_lstNormalProperties.delete(FieldName);\n        // Devolver el valor ya ajustado\n        return vl;\n    }\n    get ownerCollection() {\n        return this.m_owner;\n    }\n    getOwnerCollection() {\n        return this.ownerCollection;\n    }\n    getValue(FieldName) {\n        return this.GetItem(FieldName);\n    }\n    DevelopXlatProperties(FieldName, arg1) {\n        throw new Error(\"Method not implemented.\");\n    }\n    AdjustNullValue(FieldName) {\n        let strType = this.FieldPropertyValue(FieldName, \"type\");\n        let Value = null;\n        //\n        // Comprobar los nulos\n        if (StringUtils.IsEmptyString(strType)) {\n            // Puede ser que sea una propiedad mapeada...\n            // Esto es supuestamente ineficiente, pero puede\n            // llegar a salvar el tipo cuando el usuario sea\n            // indisciplinadillo...\n            if (!StringUtils.IsEmptyString((strType = this.FieldPropertyValue(FieldName, \"linkedto\")))) {\n                // Está enlazada a algún campo. Buscar por ahí\n                // Buscar la posible colección a que está mapeada la propiedad\n                // linkedto de esta propiedad... enredao, pero yo me entiendo\n                if (!StringUtils.IsEmptyString((strType = this.FieldPropertyValue(strType, \"mapcol\")))) {\n                    // La propiedad tiene valor\n                    // Buscar esta colección\n                    // let coll: XoneDataCollection =  await this.m_owner.getOwnerApp().getCollection(strType);\n                    // if (null != coll) // Vaya, el huevo en el conejo....\n                    //     // Obtener el linkedfield de este campo para buscarlo en aquella colección\n                    //     strType = coll.FieldPropertyValue(this.FieldPropertyValue(FieldName, \"linkedfield\"), \"type\");\n                } // La propiedad tiene valor\n            } // Está enlazada a algún campo. Buscar por ahí\n        } // Puede ser que sea una propiedad mapeada...\n        if (StringUtils.IsEmptyString(strType)) {\n            // Todavía puede ser que no tenga tipo y sea el ID\n            if (FieldName.equals(this.getIdFieldName())) {\n                // Es la clave primaria\n                if (this.m_owner.getStringKey())\n                    Value = Utils.EMPTY_STRING;\n                else\n                    Value = 0;\n            } // Es la clave primaria\n            if (FieldName.equals(this.m_owner.getConnection().getRowIdFieldName()))\n                Value = \"\";\n        } // Todavía puede ser que no tenga tipo y sea el ID\n        else {\n            // Tiene tipo, puede operar :-P\n            switch (strType.charAt(0) // Posibles tipos\n            ) {\n                case \"T\":\n                case \"X\":\n                    Value = Utils.EMPTY_STRING;\n                    break;\n                case \"N\":\n                    //\n                    // Comprobar si el tipo es entero o decimal. Si es decimal, asignar un REAL\n                    if (strType.length == 1)\n                        Value = 0;\n                    else {\n                        // Ver si es NC o no\n                        // F10112402: AdjustNullValue no tiene en cuenta los campos NC para valores nulos.\n                        if (strType.equals(\"NC\"))\n                            Value = 0;\n                        else\n                            Value = 0.0;\n                    } // Ver si es NC o no\n                    break;\n                case \"I\":\n                    if (strType.equalsIgnoreCase(\"img\"))\n                        Value = Utils.EMPTY_STRING;\n                    break;\n            } // Posibles tipos\n        } // Tiene tipo, puede operar :-P\n        // Devolver lo que sea\n        return Value;\n    }\n    //#region Transformaciones para el UI PWA\n    getLayout(visibility = 1) {\n        return this.m_owner.getLayout(visibility);\n    }\n    async getLayoutAsync(visibility = 1) {\n        return this.m_owner.getLayoutAsync(visibility);\n    }\n    setLayout(value) {\n        this.m_reactLayout = value;\n        // const attrs=value?.attributes;\n        // if (attrs) {\n        //     for (const key in attrs) {\n        //         if (Object.prototype.hasOwnProperty.call(attrs, key)) {\n        //             this.m_reactLayout.put(attrs.node + \":\" + attrs.name+\":\"+ key,attrs[key]);\n        //         }\n        //     }\n        // }\n        // if (value?.controls && Array.isArray(value.controls)) {\n        //     value.controls.forEach(element => this.setLayout(element));\n        // }\n    }\n    getPropAttributes(Value, type = Utils.PROP_NAME) {\n        return UITransform.getPropAttributes(this, Value, type);\n        // let node: XmlNode;\n        // let PropName: string\n        // if (typeof Value == 'string') {\n        //     node=this.m_owner.getNode(type,Utils.PROP_ATTR_NAME,Value);\n        //     PropName=Value;\n        // } else {\n        //     node= Value as XmlNode;\n        //     PropName=node.getAttrValue(Utils.PROP_ATTR_NAME);\n        //     type=node.getName();\n        // }\n        // if (ObjUtils.IsNothing(node))\n        //     return {};\n        // let attrs=node.getAttrs();\n        // let result=<any>{ node: type};\n        // for (const key in UITransform.UI_ATTRIBUTES[type]) {\n        //     if (Object.prototype.hasOwnProperty.call(UITransform.UI_ATTRIBUTES[type], key)) {\n        //         const element = UITransform.UI_ATTRIBUTES[type][key];\n        //         const value=node.getName().equalsIgnoreCase(Utils.PROP_NAME)?this.FieldPropertyValue(PropName,element):this.m_owner.NodePropertyValue(type,PropName,element);\n        //         if (!TextUtils.isEmpty(value))\n        //         {\n        //             result[key]=UITransform.developValue(this,PropName,key,element);\n        //         }\n        //     }\n        // }\n        // return result;\n    }\n    //#endregion\n    NodePropertyValue(NodeName, ItemName, AttrName) {\n        return this.getOwnerCollection().NodePropertyValue(NodeName, ItemName, AttrName);\n    }\n    QualifyField(FieldName, Sentence) {\n        return this.m_owner.QualifyField(FieldName, Sentence);\n    }\n    getNodeList(NodeName, AttrName, AttrValue, Exist) {\n        return this.getOwnerCollection().getNodeList(NodeName, AttrName, AttrValue);\n    }\n    /**\n     * @param NodeName\t\tNombre del nodo que se quiere buscar.\n     * @param AttrName\t\tNombre del atributo que se quiere comparar.\n     * @param AttrValue\t\tValor que tiene que tener el atributo para reconocer un nodo como válido.\n     * @return\t\t\t\tDevuelve un nodo XML dentro del nodo de esta colección con un atributo cuyo valor se solicita.\n     */\n    getNode(NodeName, AttrName, AttrValue) {\n        return this.getOwnerCollection().getNode(NodeName, AttrName, AttrValue);\n    }\n    UnprotectString(str, strProtect) {\n        throw new Error(\"Method not implemented.\");\n    }\n    AdjustDate(str) {\n        throw new Error(\"Method not implemented.\");\n    }\n    AdjustMonthYear(str) {\n        throw new Error(\"Method not implemented.\");\n    }\n    FormatAcc(str) {\n        throw new Error(\"Method not implemented.\");\n    }\n    FormatCCC(str) {\n        throw new Error(\"Method not implemented.\");\n    }\n    AdjustAccNumber(str) {\n        throw new Error(\"Method not implemented.\");\n    }\n    ProtectString(str, arg1) {\n        throw new Error(\"Method not implemented.\");\n    }\n    PreprocessValue(FieldName, strKey, Value) {\n        // TODO: Luis throw new Error(\"Method not implemented.\");\n    }\n    SetPropertyValue(FieldName, FieldValue) {\n        // O10052503:\tLa actualización de MAP_SYS_ORDER se puede puentear.\n        if (\"MAP_SYS_ORDER\".equals(FieldName)) {\n            // Puentear la asignación\n            // ADD TAG TODO MAP_SYSY_ORDER no se trata como una prop normal, tendra un put y get propio\n            this.mMapSysOrder = NumberUtils.SafeToLong(FieldValue);\n            //m_lstNormalProperties.put(FieldName, FieldValue);\n            return;\n        } // Puentear la asignación\n        // De lo contrario comportamiento normal.\n        let strField = this.m_owner.MapField(FieldName);\n        this.put(strField, FieldValue);\n    }\n    GetPropertyValue(FieldName) {\n        let strField = this.MapField(FieldName);\n        return this.get(strField);\n    }\n    /**\n     * Mapea el nombre de un campo al valor real en la colección o base de datos\n     * @param FieldName\t\t\tNombre del campo que se quiere mapear.\n     * @return\t\t\t\t\tDevuelve el campo mapeado por la colección propietaria.\n     */\n    MapField(FieldName, DatabaseField = false) {\n        return this.m_owner.MapField(FieldName, DatabaseField);\n    }\n    /**\n     * Efectúa el mapeo de valores enlazados una vez que se ha actualizado un campo ID mapeado a otra colección.\n     * @param Collection\t\tColección a la cual está enlazado el campo que ha provocado el mapeo.\n     * @param FieldName\t\t\tNombre del campo ID que ha provocado el mapeo.\n     * @param Source\t\t\tObjeto del cual se sacarán los valores que se van a copiar hacia este.\n     * @return\t\t\t\t\tDevuelve TRUE si todas las actualizaciones de campos son correctas.\n     * @throws Exception\n     */\n    async DoRestoreMapValues(Collection, FieldName, Source) {\n        let strFieldFrom = \"\", strFieldTo = \"\";\n        let nodeList;\n        let vl;\n        let bUpdate = true;\n        // Alejandro 02/07=2021: Corrección de error al restaurar campos mapeados\n        const fieldValue = this[FieldName];\n        const mapfld = this.getFieldPropertyValue(FieldName, \"mapfld\");\n        nodeList = this.m_owner.getNodeList(\"prop\", \"linkedto\", FieldName);\n        for (let i = 0; i < nodeList.count(); i++) {\n            // Para cada nodo\n            let node = nodeList.get(i);\n            if (!StringUtils.IsEmptyString(XmlUtils.getNodeAttr(node, \"bit\")))\n                continue;\n            strFieldTo = XmlUtils.getNodeAttr(node, \"name\");\n            strFieldFrom = XmlUtils.getNodeAttr(node, \"linkedfield\");\n            if (Source && Source instanceof XoneDataObject) {\n                // Comprobar si el campo existe en el objeto\n                if (!Source.FieldExists(strFieldFrom)) {\n                    // Error\n                    // Crear nuestro propio error\n                    // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n                    // TODO ADD TAG Juan Carlos. Añado el nombre del objeto con su colección para que sea\n                    // más fácil reparar este error.\n                    let sb = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_OBJ_RESTOREMAPFLDFAIL_03, \"{0} failed. Cannot find linked field '{1}' to restore field '{2}' in object {3}\");\n                    sb = sb.replace(\"{0}\", \"CXoneDataObject::DoRestoreMapValues\");\n                    sb = sb.replace(\"{1}\", strFieldFrom);\n                    sb = sb.replace(\"{2}\", strFieldTo);\n                    sb = sb.replace(\"{3}\", Source.getName());\n                    throw new XoneGenericException(-2444, sb);\n                } // Error\n                vl = Source.get(strFieldFrom);\n            } // Comprobar si el campo existe en el objeto\n            else if (Source && Source.isResultset) {\n                // Comprobar si el campo existe en el objeto\n                //int index =-1;\n                try {\n                    // M10052401:\tModificaciones en la forma de acceso a bases de datos SQLite.\n                    // K11010501:\tModificaciones para la versión 1.5 de Android.\n                    // Alejandro 02/07=2021: Parche para corregir el error al restaurar campos mapeados, siempre devolvía el primer registro. Comentar con Luis la solución final.\n                    try {\n                        vl = Source.getData().find((e) => e[mapfld] === fieldValue)[strFieldFrom];\n                    }\n                    catch (_a) {\n                        vl = Source.getValue(strFieldFrom, this.m_owner.getTypeFromXml(this.m_owner.PropType(strFieldFrom)));\n                    }\n                }\n                catch (ex) {\n                    console.error(ex);\n                    /*\n                     * En principio la colección no permitirá usar un resultset como origen de\n                     * restauración de campos mapeados\n                     */\n                    Collection.setUseObjectsInRestore(true);\n                    Source.close();\n                    return await this.RestoreMappedFields(FieldName);\n                }\n            } // Comprobar si el campo existe en el objeto\n            else\n                vl = null;\n            if (bUpdate)\n                this.put(strFieldTo, vl);\n        } // Para cada nodo\n        return true;\n    }\n    RestoreMapColValues(FieldName, mapcolValues) {\n        let strFieldFrom = \"\", strFieldTo = \"\";\n        let nodeList;\n        let pos = NumberUtils.SafeToInt(this.GetPropertyValue(FieldName), -1);\n        if (pos < 0)\n            return false;\n        let values = mapcolValues.split(\",\");\n        let vl = pos >= values.length ? \"\" : StringUtils.SafeToString(values[pos]).trim();\n        nodeList = this.m_owner.getNodeList(\"prop\", \"linkedto\", FieldName);\n        for (let i = 0; i < nodeList.count(); i++) {\n            // Para cada nodo\n            let node = nodeList.get(i);\n            if (!StringUtils.IsEmptyString(XmlUtils.getNodeAttr(node, \"bit\")))\n                continue;\n            strFieldTo = XmlUtils.getNodeAttr(node, \"name\");\n            this.put(strFieldTo, vl);\n        } // Para cada nodo\n        return true;\n    }\n    async RestoreMappedFields(FieldName) {\n        let strSrch = \"\", strFieldFrom = \"\", strFieldTo = \"\", strType = \"\";\n        let n = 0;\n        let bSearchDB = false;\n        let bXlatExist = false;\n        // TAG: 2021022301: Luis Vamos a implementar los map-\n        let str = this.FieldPropertyValue(FieldName, \"mapcol-values\");\n        if (!TextUtils.isEmpty(str))\n            return this.RestoreMapColValues(FieldName, str);\n        str = this.FieldPropertyValue(FieldName, \"mapcol\");\n        if (TextUtils.isEmpty(str))\n            return true;\n        let coll = null;\n        let vl = null, vl2 = null;\n        let obj;\n        let nullObj = null; // F11080903: Limpiar los campos enlazados cuando se pone NULL o cero en el campo ID.\n        let FunctionName = \"CXoneDataObject::RestoreMappedFields\";\n        // M09072904: Optimizar el mecanismo de restauración de campos mapeados.\n        // Si la lista de campos enlazados a este no tiene ningún elemento, entonces\n        // no tenemos nada que hacer\n        let nodeList = this.m_owner.getNodeList(\"prop\", \"linkedto\", FieldName);\n        // M11092605: Mecanismo para limpiar colecciones en la resolución de objetos enlazados.\n        // Retain o no retain\n        let bRetain = StringUtils.ParseBoolValue(this.FieldPropertyValue(FieldName, \"retain\"), true);\n        let bClearColl = false;\n        if (nodeList.count() > 0) {\n            //Es un linkedto\n            // De lo contrario se hace el mismo trabajo de siempre.\n            //str = FieldPropertyValue(FieldName, \"mapcol\");\n            //if (!StringUtils.IsEmptyString(str))\n            //{// Tiene colección mapeada\n            if (str.equals(\"##OWNERCOLL##\")) {\n                // Ownercollection\n                if (this.m_owner.getOwnerObject() != null)\n                    coll = this.m_owner.getOwnerObject().getOwnerCollection();\n                else {\n                    // Si no está en un contents, buscar el default-mapcol\n                    str = this.FieldPropertyValue(FieldName, \"default-mapcol\");\n                    if (!StringUtils.IsEmptyString(str))\n                        coll = await this.getOwnerApp().getCollection(str);\n                } // Si no está en un contents, buscar el default-mapcol\n            } // Ownercollection\n            else {\n                try {\n                    coll = await this.getOwnerApp().getCollection(str);\n                }\n                catch (exx) {\n                    console.error(exx);\n                    coll = null;\n                }\n            }\n            if (null != coll) {\n                // La colección existe\n                vl2 = this.GetPropertyValue(FieldName);\n                // M09072904:\tOptimizar el mecanismo de restauración de campos mapeados.\n                // Una pequeña optimización para casos en los que el valor es nulo y por tanto\n                // no hay nada que buscar\n                if (vl2 == null) {\n                    // Resetear los campos a NULL y salir\n                    // F11080903: Limpiar los campos enlazados cuando se pone NULL o cero en el campo ID.\n                    // Optimizar, sí pero no tanto...\n                    return await this.DoRestoreMapValues(coll, FieldName, nullObj);\n                } // Resetear los campos a NULL y salir\n                str = this.FieldPropertyValue(FieldName, \"mapfld\");\n                strType = coll.FieldPropertyValue(str, \"type\");\n                if (StringUtils.IsEmptyString(strType)) {\n                    // Tratar de inferir el tipo\n                    // La clave de la colección\n                    if (str.equals(coll.getIdFieldName()))\n                        strType = coll.getStringKey() ? \"T\" : \"N\";\n                } // Tratar de inferir el tipo\n                if (strType.startsWith(\"N\")) {\n                    // Convertir\n                    n = NumberUtils.SafeToInt(vl2);\n                    // M09072904:\tOptimizar el mecanismo de restauración de campos mapeados.\n                    // Una pequeña optimización para casos en los que el valor es nulo y por tanto\n                    // no hay nada que buscar\n                    if (n <= 0) {\n                        // No hay objeto enlazado\n                        // F11080903: Limpiar los campos enlazados cuando se pone NULL o cero en el campo ID.\n                        // Restaurar con objeto nulo para vaciar los campos\n                        return await this.DoRestoreMapValues(coll, FieldName, nullObj);\n                    } // No hay objeto enlazado\n                } // Convertir\n                else {\n                    // Cadenilla\n                    n = -1;\n                    // M09072904:\tOptimizar el mecanismo de restauración de campos mapeados.\n                    // Una pequeña optimización para casos en los que el valor es nulo y por tanto\n                    // no hay nada que buscar\n                    // F10052504:\tUsar una variable temporal para la conversión en RestoreMappedFields.\n                    let strtmp = StringUtils.SafeToString(vl2);\n                    if (StringUtils.IsEmptyString(strtmp)) {\n                        // No hay objeto\n                        // F11080903: Limpiar los campos enlazados cuando se pone NULL o cero en el campo ID.\n                        // Asegurarse que se resetean los campos.\n                        return await this.DoRestoreMapValues(coll, FieldName, nullObj);\n                    } // No hay objeto\n                } // Cadenilla\n                // Hay un caso particular en esta cosa y es que se está buscando\n                // exactamente el objeto propietario...\n                obj = null;\n                let ownercoll;\n                if (null != (obj = this.m_owner.getOwnerObject())) {\n                    // Tiene propietario\n                    if (null != (ownercoll = obj.getOwnerCollection())) {\n                        // Tiene colección propietaria\n                        if (coll.getName().equals(ownercoll.getName())) {\n                            // Puede ser que busquemos el puro, no?\n                            vl = obj.GetPropertyValue(str);\n                            if (n != -1) {\n                                // Numérico\n                                let l = NumberUtils.SafeToLong(vl);\n                                if (l != n)\n                                    obj = null;\n                            } // Numérico\n                            else {\n                                // Estarán en el mismo tipo que si no...\n                                if (!vl.equals(vl2))\n                                    obj = null;\n                            } // Estarán en el mismo tipo que si no...\n                        } // Puede ser que busquemos el puro, no?\n                        else\n                            obj = null;\n                    } // Tiene colección propietaria\n                    else\n                        obj = null;\n                } // Tiene propietario\n                // M09072903:\tProgramar un mecanismo de restauración de campos para SQLs sin unión.\n                // Buscar en la colección, solamente si el objeto está en memoria.\n                // Si el objeto no está cargado habrá que restaurar con un rowset de toda la vida\n                // con lo cual evitamos que la colección enlazada se llene innecesariamente.\n                if (obj == null) {\n                    // Buscar el objeto para resolver\n                    let b = false;\n                    if (coll.getUseObjectsInRestore())\n                        b = true;\n                    // Buscamos el objeto en la colección, en memoria o donde haga falta\n                    obj = await coll.getObject(str, vl2, b, b);\n                    // M11092605: Mecanismo para limpiar colecciones en la resolución de objetos enlazados.\n                    // Ver si hay que limpiar la colección o no\n                    bClearColl = !bRetain;\n                } // Buscar el objeto para resolver\n                // Obtiene una lista con los nodos que son de esta propiedad\n                if (obj != null) {\n                    // Algo tiene\n                    if (!(await this.DoRestoreMapValues(coll, FieldName, obj)))\n                        return false;\n                } // Algo tiene\n                else {\n                    // Habrá que resolver con un rowset\n                    if (!coll.getUseObjectsInRestore() && !coll.getSpecial()) {\n                        // Si se puede buscar como rowset hacerlo\n                        let rs = await coll.GetResultSet(str, vl2);\n                        if (rs == null)\n                            return false;\n                        if (!(await this.DoRestoreMapValues(coll, FieldName, rs)))\n                            return false;\n                    } // Si se puede buscar como rowset hacerlo\n                } // Habrá que resolver con un rowset\n                // Idem para los objetos heredados\n                // Add Tag: Luis esto ya no es necesario, porque el nodelist ya lo da\n                /*\n                XoneDataCollection parent = m_owner.getParentCollection ();\n                while (parent != null)\n                {// Para cada posible nodo heredado\n                    if (!DoRestoreMapValues(parent, FieldName, obj))\n                        return false;\n                    // Al nivel anterior\n                    parent = parent.getParentCollection ();\n                }// Para cada posible nodo heredado*/\n            } // La colección existe\n            else {\n                // Error, la colección no existe\n                // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n                let sb = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_OBJ_RESTOREMAPFLDFAIL_01, \"{0} failed. Cannot get collection '{1}' to restore linked fields for field '{2}'.\");\n                sb = sb.replace(\"{0}\", FunctionName);\n                sb = sb.replace(\"{1}\", str);\n                sb = sb.replace(\"{2}\", FieldName);\n                throw new XoneGenericException(-3200, sb);\n            } // Error, la colección no existe\n            //}// Tiene colección mapeada\n            // M09072904: Optimizar el mecanismo de restauración de campos mapeados.\n            // Nodo del propietario\n            // Buscar si hay objeto propietario\n            if (null == (obj = this.m_owner.getOwnerObject())) {\n                // No hay objeto propietario\n                // M11092605: Mecanismo para limpiar colecciones en la resolución de objetos enlazados.\n                if (bClearColl)\n                    coll.clear(); // Limpiar...\n                //return true;\n            } // No hay objeto propietario\n            else {\n                //Hay objeto propietario\n                if (!this.m_bIsCreating)\n                    obj.RestoreTranslatedValues(this, (str = this.m_owner.getName()), (strFieldTo = FieldName));\n                // M11092605: Mecanismo para limpiar colecciones en la resolución de objetos enlazados.\n                if (bClearColl)\n                    coll.clear(); // Limpiamos....\n            } //Hay objeto propietario\n        } //Es un linkedto\n        //\n        // Comprobar si es un campo traducido a columna\n        if (!StringUtils.IsEmptyString((str = this.FieldPropertyValue(FieldName, \"xlat\")))) {\n            // Está traducido\n            // Buscar la colección\n            coll = await this.getContents(str);\n            if (null != coll) {\n                // Tiene colección\n                // Ver si hay que buscar en la BD para este contents\n                bXlatExist = false; // TODO: coll.getXlatExist();\n                strFieldFrom = this.FieldPropertyValue(FieldName, \"cmpfield\");\n                strSrch = this.FieldPropertyValue(FieldName, \"cmpvalue\");\n                if (!StringUtils.IsEmptyString(strFieldFrom) && !StringUtils.IsEmptyString(strSrch)) {\n                    // Los valores son correctos\n                    if (strFieldFrom.equals(\"self\") && strSrch.equals(\"self\")) {\n                        // Es una comparación\n                        if (!coll.getFull() && this.m_lObjectId > 0)\n                            coll.loadAll(); // Cargar la colección\n                        obj = await coll.get(0);\n                    } // Es una comparación\n                    else {\n                        // Solo habrá uno\n                        strType = coll.FieldPropertyValue(strFieldFrom, \"type\");\n                        // Ahora buscar el objeto basado en esa macro\n                        vl = await this.GetValueFromString(strSrch, strType);\n                        // Si el resultado de la evaluación lleva comillas, quitárselas\n                        if (typeof vl === \"string\") {\n                            // Comprobar la cadenilla obtenida\n                            strSrch = vl.toString();\n                            if (strType.equals(\"T\") && strSrch.startsWith(\"'\") && strSrch.endsWith(\"'\"))\n                                // F09042201:\tSubstring no funciona igual en java que en .NET Arreglar Blackberry\n                                strSrch = strSrch.substring(1, strSrch.length - 2);\n                            vl = strSrch;\n                        } // Comprobar la cadenilla obtenida\n                        if (bXlatExist)\n                            bSearchDB = !this.m_bXlatExist;\n                        else\n                            bSearchDB = true;\n                        bSearchDB = !this.m_bXlatExist;\n                        if (!bSearchDB) {\n                            // Si el objeto está grabado sí puede buscar\n                            if (this.m_lObjectId > 0)\n                                bSearchDB = true;\n                        } // Si el objeto está grabado sí puede buscar\n                        obj = await coll.getObject(strFieldFrom, vl, true, bSearchDB);\n                    } // Solo habrá uno\n                    if (obj == null) {\n                        // Todavía puede ser que nos permitan crearlo\n                        str = this.FieldPropertyValue(FieldName, \"create\");\n                        if (StringUtils.ParseBoolValue(str, false)) {\n                            // Crearlo\n                            obj = await coll.CreateObject();\n                            if (null != obj) {\n                                // Crear este objeto\n                                // Creado\n                                // Poner el valor de comparación\n                                this.m_bIsRestoring = true;\n                                if (!strFieldFrom.equals(\"self\"))\n                                    obj.SetPropertyValue(strFieldFrom, vl);\n                                this.m_bIsRestoring = false;\n                                // La búsqueda por índices se realiza basada en la propiedad anterior, así\n                                // que lo adicionamos después de asignarle valor a la etiqueta\n                                // Esta mierda habrá que revisarla más tarde\n                                coll.addItem(obj); // Insertarlo\n                            } // Creado\n                            else {\n                                // Puede que hubiera moña\n                                // Por la causa que sea no se ha creado el objeto, así que habrá\n                                // que informar al pueblo\n                                strFieldFrom = FieldName;\n                                vl = this.get(strFieldFrom); // El valor que acaban de poner\n                                strFieldTo = this.DevelopObjectValue(vl);\n                                // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n                                let sb = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_OBJ_RESTOREMAPFLDFAIL_02, \"{0} failed. Field '{1}' Value: {2}\");\n                                sb = sb.replace(\"{0}\", FunctionName);\n                                sb = sb.replace(\"{1}\", strFieldFrom);\n                                sb = sb.replace(\"{2}\", strFieldTo);\n                                throw new XoneGenericException(-9000, sb);\n                            } // Puede que hubiera moña\n                        } // Crearlo\n                    } // Todavía puede ser que nos permitan crearlo\n                    if (obj != null) {\n                        // Lo ha encontrado\n                        // Asignar\n                        str = FieldName;\n                        // Comprobar la validez de los campos\n                        if (StringUtils.IsEmptyString((strFieldTo = this.FieldPropertyValue(str, \"targetfield\")))) {\n                            // Campo incorrecto\n                            // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n                            let sb = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_OBJ_NOXLATTARGET, \"{0} failed. Field '{1}' has no 'targetfield' or it's misspelled.\");\n                            sb = sb.replace(\"{0}\", FunctionName);\n                            sb = sb.replace(\"{1}\", strFieldTo);\n                            throw new XoneGenericException(-8888, sb);\n                        } // Campo incorrecto\n                        // Ver si el campo destino existe en el objeto derivado\n                        if (!obj.FieldExists(strFieldTo)) {\n                            // Error\n                            // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n                            let sb = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_OBJ_XLATMISSINGFLD, \"{0} failed. Field '{1}' is missing in derived object.\");\n                            sb = sb.replace(\"{0}\", FunctionName);\n                            sb = sb.replace(\"{1}\", strFieldTo);\n                            throw new XoneGenericException(-8889, sb);\n                        } // Error\n                        vl = this.get(str);\n                        obj.put(strFieldTo, vl);\n                        //  Hay un caso particular de actualización de campos traducidos que es cuando el\n                        //  campo de búsqueda es el mismo campo que ha cambiado de valor. En este caso es\n                        //  necesario invocar la actualización de campos\n                        // TODO: Luis\n                        // if (strFieldTo.equals(this.FieldPropertyValue(str, \"cmpfield\")))\n                        //     RestoreTranslatedValues(obj, str = this.FieldPropertyValue(str, \"xlat\"), strFieldTo);\n                    } // Lo ha encontrado\n                } // Los valores son correctos\n            } // Tiene colección\n        } // Está traducido\n        return true;\n    }\n    /**\n     * Restaura los valores de los campos traducidos (xlat)\n     * @param Source\t\t\tObjeto del cual se traen los valores traducidos.\n     * @param Collection\t\tColección de la cual se han traído los valores.\n     * @param TargetField\t\tNombre del campo que se trae del objeto enlazado.\n     * @return\t\t\t\t\tDevuelve TRUE si la actualización de todos los campos es correcta.\n     * @throws Exception\n     */\n    async RestoreTranslatedValues(Source, Collection, TargetField) {\n        let propNode;\n        let nodeList, contList;\n        let str = \"\", strFieldTo = \"\", strFieldFrom = \"\", strCnt = \"\", strCmpType = \"\";\n        let vl, vl1;\n        let bUseThis = false;\n        // Las propiedades de la colección\n        if (Source == null || this.m_bIsRestoring)\n            return true;\n        // Buscar los contents que usen esta colección\n        let xlrNode = this.m_owner.getNode(\"xlatrefresh\");\n        if (xlrNode == null)\n            return true; // Al carajo, no hay xlatrefresh\n        contList = this.m_owner.getNodeList(\"contents\", \"src\", Collection);\n        // Puede haber más de un contents que use esta colección\n        for (let i = 0; i < contList.count(); i++) {\n            // Coger cada una de las colecciones\n            let node = contList.get(i);\n            // Buscar los nodos que cambian\n            strCnt = XmlUtils.getNodeAttr(node, \"name\");\n            // Este es el nombre del contents, que es el que sale aquí\n            //////str = string.Format(\"mp:xlatrefresh/mp:action[@coll='{0}' and @changefld='{1}']\", strCnt, TargetField);\n            nodeList = xlrNode.SelectNodes(\"action\", \"coll\", strCnt);\n            for (let j = 0; j < nodeList.count(); j++) {\n                // Para cada nodo\n                let xrnode = nodeList.get(j);\n                str = XmlUtils.getNodeAttr(xrnode, \"changefld\");\n                if (!str.equals(TargetField))\n                    continue; // Este nos lo saltamos\n                // Ver si el objeto fuente es el apropiado\n                //////str = string.Format(\"mp:prop[@name='{0}']\", strFieldTo = CXmlUtils.GetNodeAttr(xrnode, \"targetfld\"));\n                strFieldTo = XmlUtils.GetNodeAttr(xrnode, \"targetfld\");\n                propNode = this.m_owner.GetNode(\"prop\", \"name\", strFieldTo);\n                XmlUtils.GetNodeAttr(propNode, \"type\");\n                if (StringUtils.IsEmptyString((strFieldFrom = XmlUtils.GetNodeAttr(propNode, \"cmpfield\"))))\n                    continue; // Error\n                if (!strFieldFrom.equals(\"self\")) {\n                    // Hay que comparar\n                    str = XmlUtils.GetNodeAttr(propNode, \"cmpvalue\");\n                    strCmpType = Source.FieldPropertyValue(strFieldFrom, \"type\");\n                    vl = await this.GetValueFromString(str, strCmpType);\n                    //  Si el valor es una cadena, debe quitar las comillas porque va a usarlo para\n                    //  comparar. Se ve que esto no se había hecho nunca\n                    if (typeof vl === \"string\") {\n                        // Cadena\n                        str = vl.toString();\n                        if (str.charAt(0) == \"'\" && str.charAt(str.length - 1) == \"'\") {\n                            // Comprobar\n                            if (str.length > 2)\n                                str = str.substring(1, str.length - 2);\n                            else\n                                str = \"\";\n                        } // Comprobar\n                        vl = str;\n                    } // Cadena\n                    // Ver si es este objeto\n                    vl1 = Source.GetPropertyValue(strFieldFrom);\n                    str = vl1.getClass().getName().toLowerCase();\n                    if (str.equals(\"int\") || str.equals(\"byte\"))\n                        vl1 = NumberUtils.SafeToLong(vl1);\n                    else if (str.equals(\"single\") || str.equals(\"decimal\"))\n                        vl1 = NumberUtils.SafeToDouble(vl1);\n                    bUseThis = vl.equals(vl1);\n                } // Hay que comparar\n                else\n                    bUseThis = true;\n                // Si tiene que usar este...\n                if (bUseThis) {\n                    // Lo tiene que usar\n                    strFieldFrom = XmlUtils.GetNodeAttr(xrnode, \"sourcefld\");\n                    if (Source != null)\n                        vl = Source.get(strFieldFrom);\n                    else\n                        vl = null;\n                    this.put(strFieldTo, vl);\n                } // Lo tiene que usar\n            } // Para cada nodo\n        } // Coger cada una de las colecciones\n        return true;\n    }\n    /**\n     * Devuelve un valor a partir de una cadena y un identificador de tipo.\n     * @param StringValue\t\tValor representado en forma de cadena.\n     * @param Type\t\t\t\tIdentificador de tipo XONE usado para convertir el valor.\n     * @param UseDatemask\t\tMáscara de fecha a usar para formatear la cadena. NULL para usar el valor por defecto.\n     * @return\t\t\t\t\tDevuelve el valor ya convertido según el tipo de datos.\n     * @throws XoneGenericException\n     */\n    async GetValueFromString(StringValue, Type, UseDatemask) {\n        let dt = Calendar.getInstance();\n        let str = \"\", strSysDateMask = \"\";\n        let vl = null;\n        let strDay = \"\", strMonth = \"\", strYear = \"\";\n        let nFormat = 0;\n        try {\n            let strVal = StringValue;\n            // Cadena vacía, NULL y palca\n            if (StringUtils.IsEmptyString(strVal))\n                return strVal;\n            // Macros primeramente\n            if (strVal.equals(\"##NULL##\") || strVal.equals(\"##EMPTY##\"))\n                return null; // Simplemente a NULL o EMPTY\n            // En función del tipo\n            if (StringUtils.IsEmptyString(Type))\n                Type = \"T\";\n            else {\n                // Caso especial\n                if (Type.equals(\"type\"))\n                    Type = \"T\"; // Asumo texto\n            } // Caso especial\n            // F13061905: Problemas de separadores y delimitadores en GetValueFromString.\n            // Cambiar este chequeo porque podría estar mal...\n            if (strVal.startsWith(\"'\") && strVal.endsWith(\"'\") && strVal.length >= 2)\n                strVal = strVal.substring(1, strVal.length - 1);\n            // Valores especiales para fecha, hora y demás\n            if (strVal.equals(\"##NOW##\") || strVal.equals(\"##NOW_NOTIME##\") || strVal.equals(\"##NOW_TIME##\"))\n                if (Type.charAt(0) == \"D\") {\n                    // Fecha normal\n                    if (strVal.equals(\"##NOW##\") || strVal.equals(\"##NOW_NOTIME##\")) {\n                        // No lleva hora\n                        ObjUtils.ZeroCalendarTime(dt);\n                    } // No lleva hora\n                    vl = dt;\n                } // Fecha normal\n                else if (Type.equals(\"TD\")) {\n                    // Fecha AS\n                    vl = String.format(\"%04d%02d%02d\", dt.get(Calendar.YEAR), dt.get(Calendar.MONTH), dt.get(Calendar.DAY_OF_MONTH));\n                } // Fecha AS\n            //\n            // Macros para partes de fecha\n            if (strVal.equals(\"##DAY##\"))\n                vl = dt.get(Calendar.DAY_OF_MONTH);\n            if (strVal.equals(\"##MONTH##\"))\n                vl = dt.get(Calendar.MONTH);\n            if (strVal.equals(\"##YEAR##\"))\n                vl = dt.get(Calendar.YEAR);\n            // Si no hay valor, sustituimos las macros y tratamos de hacer algo con esto\n            if (vl == null) {\n                // No ha asignado nada todavía\n                // Sustituir macros\n                if (strVal.contains(\"##\"))\n                    strVal = this.PrepareSqlString(strVal);\n                // M11011001:\tIncluir macros globales y evaluación de dichas macros para IMEI y demás.\n                // Sustituir macros a nivel de colección\n                if (strVal.contains(\"##\"))\n                    strVal = await this.m_owner.EvaluateAllMacros(strVal);\n                //TODO 31/05/2016 Juan Carlos\n                //AT no funcionaba en los setval, es un texto normal, se debe tratar como T.\n                //06/06/2016 PH y WEB tambien.\n                //10/09/2020 Turno para el type IMG\n                if (Type.startsWith(\"T\") || Type.equals(\"AT\") || Type.equals(\"PH\") || Type.equals(\"WEB\") || Type.equals(\"IMG\")) {\n                    // Texto\n                    if (strVal.equals(\"''\"))\n                        strVal = \"\";\n                    else {\n                        // Quitar las comillas\n                        if (strVal.startsWith(\"'\") && strVal.endsWith(\"'\") && strVal.length > 1) {\n                            //TODO ADD TAG Juan Carlos Bugfix, antes no quitaba la comilla inicial.\n                            strVal = strVal.substring(1, strVal.length - 1);\n                        }\n                    } // Quitar las comillas\n                    vl = strVal;\n                } // Texto\n                if (Type.charAt(0) == \"N\") {\n                    // Numérico\n                    // Valor\n                    if (strVal.equals(\"NULL\"))\n                        vl = null;\n                    else {\n                        // No Nulo\n                        // El NC es un caso especial\n                        if (Type.equals(\"NC\")) {\n                            // Comprobar posibles casos de cadenas de valores\n                            if (strVal.equals(\"on\") || strVal.equals(\"1\") || strVal.equals(\"yes\") || strVal.equals(\"true\"))\n                                vl = 1;\n                            else\n                                vl = 0;\n                        } // Comprobar posibles casos de cadenas de valores\n                        else {\n                            // Numérico normal\n                            if (Type.length == 1) {\n                                // Los errores de conversión nos los tragamos\n                                try {\n                                    vl = NumberUtils.SafeToLong(strVal); // Entero\n                                }\n                                catch (ex) {\n                                    vl = 0;\n                                }\n                            } // Los errores de conversión nos los tragamos\n                            else {\n                                // Los errores de conversión nos los tragamos\n                                try {\n                                    vl = NumberUtils.SafeToDouble(strVal); // Decimal\n                                }\n                                catch (ex) {\n                                    vl = 0.0;\n                                }\n                            } // Los errores de conversión nos los tragamos\n                        } // Numérico normal\n                    } // No Nulo\n                } // Numérico\n                if (Type.startsWith(\"D\")) {\n                    // Fecha\n                    str = strVal.trim();\n                    if (!StringUtils.IsEmptyString(str)) {\n                        // Tiene valor\n                        vl = strVal;\n                        if (strVal.equals(\"NULL\")) {\n                            // NULL\n                            vl = null;\n                        } // NULL\n                        else {\n                            // Si es una fecha, ver si el datemask es diferente\n                            //\n                            // Comprobar si son diferentes\n                            // Si el datemask que se pasa como parámetro es nulo, usamos el de la conexión\n                            let strDatemask = UseDatemask;\n                            if (StringUtils.IsEmptyString(strDatemask))\n                                strDatemask = this.m_owner.getConnection().getDatemask();\n                            // Ver si está normalizado...\n                            if (strDatemask.startsWith(\"#\"))\n                                strDatemask = strDatemask.substring(2, strDatemask.length - 2);\n                            nFormat = strDatemask.equals(\"mdy\") ? 0 : strDatemask.equals(\"dmy\") ? 1 : 2;\n                            let strComponents = strVal.split(\"/\");\n                            switch (nFormat // Primer elemento\n                            ) {\n                                case 0:\n                                    strMonth = strComponents[0];\n                                    strDay = strComponents[1];\n                                    strYear = strComponents[2];\n                                    break;\n                                case 1:\n                                    strDay = strComponents[0];\n                                    strMonth = strComponents[1];\n                                    strYear = strComponents[2];\n                                    break;\n                                default:\n                                case 2:\n                                    strYear = strComponents[0];\n                                    strMonth = strComponents[1];\n                                    strDay = strComponents[2];\n                                    break;\n                            } // Primer elemento\n                            // Armar la fecha según lo que espera la máquina\n                            strSysDateMask = this.getOwnerApp().getSysDatemask();\n                            nFormat = strSysDateMask.equals(\"mdy\") ? 0 : strSysDateMask.equals(\"dmy\") ? 1 : 2;\n                            switch (nFormat // Según el formato del sistema\n                            ) {\n                                case 0:\n                                    str = strMonth + \"/\" + strDay + \"/\" + strYear;\n                                    if (strComponents.length > 3)\n                                        str += \" \" + strComponents[3];\n                                    break;\n                                case 1:\n                                    str = strDay + \"/\" + strMonth + \"/\" + strYear;\n                                    break;\n                                case 2:\n                                    str = strYear + \"/\" + strMonth + \"/\" + strDay;\n                                    if (strComponents.length > 3)\n                                        str += \" \" + strComponents[3];\n                                    break;\n                            } // Según el formato del sistema\n                            vl = StringUtils.ParseDateString(this.getOwnerApp().currentContext(), str);\n                        } // Si es una fecha, ver si el datemask es diferente\n                    } // Tiene valor\n                } // Fecha\n            } // No ha asignado nada todavía\n            return vl;\n        }\n        catch (ex) {\n            throw new XoneGenericException(-7000, ex);\n        }\n    }\n    postNewValue(FieldName, Value) {\n        // TODO: Luis\n    }\n    postNewFieldProperty(node, name, AttrName, AttrValue, addToEvaluated = false) {\n        UITransform.setLayoutFieldPropertyValue(this.m_reactLayout, node, name, AttrName, AttrValue);\n    }\n    PutBitmappedProperty(FieldName, Value) {\n        // Amiyares: 30/06/2021\n        const linked = this.getFieldPropertyValue(FieldName, \"linkedto\");\n        if (this[FieldName] === (Value === 1))\n            return;\n        const bit = Number(this.getFieldPropertyValue(FieldName, \"bit\")) - 1;\n        this[linked] &= ~(1 << bit);\n        if (Value === 1)\n            this[linked] |= 1 << bit;\n        this.setNormalValue(FieldName, Value);\n    }\n    getParent() {\n        return this.m_owner;\n    }\n    clone() { }\n    getContentsCount() {\n        return this.m_lstContents.length;\n    }\n    getFieldPropertyValue(propiedad, atributo) {\n        return this.FieldPropertyValue(propiedad, atributo);\n    }\n    getOldItem(propiedad) { }\n    setFieldPropertyValue(FieldName, AttrName, Value, addToEvaluated = false) {\n        let strKey = FieldName + \":\" + AttrName;\n        if (Value != null) {\n            if (!Value.startsWith(\"##FLD_\")) {\n                this.m_lstCachedAttributes.put(strKey, Value);\n            }\n        }\n        else {\n            // Lo quitamos si existe\n            if (this.m_lstCachedAttributes.containsKey(strKey))\n                this.m_lstCachedAttributes.delete(strKey);\n        } // Lo quitamos si existe\n        if (addToEvaluated)\n            this.m_owner.getOwnerApp().addEvaluatedAttributesList(this.m_owner.getName(), strKey);\n        this.postNewFieldProperty(Utils.PROP_NAME, FieldName, AttrName, Value, addToEvaluated);\n    }\n    setNodePropertyValue(node, name, AttrName, AttrValue) {\n        UITransform.setLayoutFieldPropertyValue(this.m_reactLayout, node, name, AttrName, AttrValue);\n        // if (m_owner == null) {\n        //     return;\n        // }\n        // m_owner.SetNodePropertyValue(NodeName, ItemName, AttrName, sValue);\n    }\n    getName() {\n        let str = \"\";\n        try {\n            // Aquí usamos un StringBuilder para optimizar un poco esto.\n            let bld = new StringBuilder(this.getOwnerCollection().getName());\n            bld.append(\".\");\n            let sID = this.GetObjectIdString();\n            if (TextUtils.isEmpty(sID))\n                bld.append(this.getOwnerCollection().getObjectIndex(this));\n            else\n                bld.append(sID);\n            str = bld.toString();\n        }\n        catch (e) {\n            str = \"DataObject.0\";\n        }\n        return str;\n    }\n    setOldItem(propiedad, valor) { }\n    setOwnerColl() { }\n    setValue(value) { }\n    get(FieldName) {\n        return this.GetItem(FieldName);\n    }\n    getDirty() {\n        return this.m_bDirty;\n    }\n    setDirty(arg0) {\n        this.m_bDirty = arg0;\n    }\n    getObjectIndex() {\n        return this.getOwnerCollection().getObjectIndex(this);\n    }\n    /**\n     * @param sVariableName Nombre de la variable cuyo valor se quiere leer.\n     * @return Devuelve la variable cuyo nombre se pasa como parámetro. Si la variable no existe devuelve NULL.\n     */\n    SafeGetVariableList() {\n        if (this.m_lstVariables != null)\n            return this.m_lstVariables;\n        return (this.m_lstVariables = new Hashtable());\n    }\n    getVariables(sVariableName) {\n        return this.getVariable(sVariableName);\n    }\n    /**\n     * Devuelve la variable cuyo nombre se pasa como parámetro.\n     *\n     * @param sVariableName Nombre de la variable cuyo valor se quiere conocer.\n     * @return Devuelve el valor de la variable o NULL si esta no está definida.\n     */\n    getVariable(sVariableName) {\n        // A04032903: <onchange> pudiera ser común para todos los campos\n        if (sVariableName.equals(\"##CHGFIELD##\")) {\n            return this.m_strChangeField;\n        }\n        // Buscar en lista...\n        if (!this.SafeGetVariableList().containsKey(sVariableName)) {\n            return null;\n        }\n        // K11011201:\tModificaciones en el tratamiento de las variables.\n        return this.SafeGetVariableList().get(sVariableName);\n    }\n    /**\n     * Asigna valor a la variable cuyo nombre se pasa como parámetro.\n     * @param VarName\t\tNombre de la variable a la que se quiere asignar valor.\n     * @param value\t\t\tValor que se quiere asignar a la variable.\n     */\n    putVariables(sVariableName, value) {\n        this.setVariable(sVariableName, value);\n    }\n    /**\n     * Asigna valor a la variable cuyo nombre se pasa como parámetro.\n     * K11011201:\tModificaciones en el tratamiento de las variables.\n     * Poner esto público\n     *\n     * @param sVariableName Nombre de la variable que se quiere asignar.\n     * @param value         Valor que se quiere asignar a la variable.\n     */\n    setVariables(sVariableName, value) {\n        this.setVariable(sVariableName, value);\n    }\n    /**\n     * Asigna valor a la variable cuyo nombre se pasa como parámetro.\n     * K11011201:\tModificaciones en el tratamiento de las variables.\n     * Poner esto público\n     *\n     * @param sVariableName Nombre de la variable que se quiere asignar.\n     * @param value         Valor que se quiere asignar a la variable.\n     */\n    setVariable(sVariableName, value) {\n        // F12042505: Si se pasa NULL a SetVariables hay moña con las listas de valores.\n        if (value == null) {\n            if (this.SafeGetVariableList().containsKey(sVariableName)) {\n                this.SafeGetVariableList().delete(sVariableName);\n            }\n        }\n        else {\n            this.SafeGetVariableList().put(sVariableName, value);\n        }\n    }\n    /**\n     * F11070701: Modificaciones para solucionar los enlaces y grabación con claves no numéricas.\n     *\n     * @return\tDevuelve TRUE si el objeto es nuevo (recién creado y no se ha cargado ni grabado)\n     */\n    IsNew() {\n        // M11080901: El mecanismo para nuevos objetos se puede flexibilizar un poco.\n        // Esto podría ser diferente en función de si es autonumérico o no.\n        let bNew = this.m_bNewObject;\n        // Vale, si el objeto no es nuevo, entonces no hay nada más que mirar\n        if (!bNew)\n            return bNew;\n        // Si el objeto lleva clave de cadena el funcionamiento también es el de siempre.\n        if (this.m_owner.getStringKey())\n            return bNew;\n        // Ahora estamos en onda numérica, puede ser manual o no.\n        try {\n            let vl = this.GetPropertyValue(this.m_owner.getIdFieldName());\n            let l = NumberUtils.SafeToLong(vl);\n            if (l <= 0)\n                return bNew;\n            // Si el objeto tiene valor en el campo ID en principio tenemos una moña\n            // pero si el sistema es autonumérico entonces podemos considerar que el objeto no\n            // es nuevo.\n            let b = StringUtils.ParseBoolValue(this.m_owner.CollPropertyValue(\"identity-key\"), true);\n            // Si nos dicen que el campo de ID no es autonumérico entonces cambiarlo no cambia la condición del objeto\n            if (!b)\n                return bNew;\n            // Si el campo ID tiene valor y es autonumérico entonces el objeto no es nuevo.\n            return false;\n        }\n        catch (e) {\n            return bNew;\n        }\n    }\n    isNew() {\n        return this.IsNew();\n    }\n    async loadFromJson(jsonObject) {\n        const FunctionName = \"loadFromJson\";\n        // Utils.CheckNullParameters(FunctionName, FunctionParams);\n        // Utils.CheckIncorrectParamCount(FunctionName, FunctionParams, 1);\n        // let jsonObject = FunctionParams[0];\n        if (typeof jsonObject === \"string\") {\n            jsonObject = JSON.parse(jsonObject);\n        }\n        // if (FunctionParams[0] instanceof Object) {\n        //     String sJson = RhinoUtils.toJson(FunctionParams[0], false);\n        //     jsonObject = new JSONObject(sJson);\n        // } else if (FunctionParams[0] instanceof JSONObject) {\n        //     jsonObject = (JSONObject) FunctionParams[0];\n        // } else {\n        //     String sJsonObject = StringUtils.SafeToString(FunctionParams[0]);\n        //     jsonObject = new JSONObject(sJsonObject);\n        // }\n        await this.loadFromJsonObject(this, jsonObject);\n        return this;\n    }\n    async loadFromJsonObject(dataObject, jsonObject) {\n        for (let sPropertyName in jsonObject) {\n            let propertyValue = jsonObject[sPropertyName];\n            if (Array.isArray(propertyValue)) {\n                let contentCollection = await dataObject.getContents(sPropertyName);\n                if (contentCollection == null) {\n                    throw new Exception(\"loadFromJson(): Content collection \" + sPropertyName + \" not found\");\n                }\n                await this.loadFromJsonArray(contentCollection, propertyValue);\n                continue;\n            }\n            dataObject[sPropertyName] = propertyValue;\n        }\n        // Iterator < String > iterator = jsonObject.keys();\n        // while (iterator.hasNext()) {\n        //     String sPropertyName = iterator.next();\n        //     Object propertyValue = jsonObject.get(sPropertyName);\n        //     if (propertyValue instanceof JSONArray) {\n        //         XoneDataCollection contentCollection = dataObject.Contents(sPropertyName);\n        //         if (contentCollection == null) {\n        //             throw new Exception(\"loadFromJson(): Content collection \" + sPropertyName + \" not found\");\n        //         }\n        //         loadFromJsonArray(contentCollection, (JSONArray) propertyValue);\n        //         continue;\n        //     }\n        //     dataObject.put(sPropertyName, propertyValue);\n        // }\n    }\n    async loadFromJsonArray(collection, jsonArray) {\n        for (let i = 0; i < jsonArray.length(); i++) {\n            let itemDataObject = new XoneDataObject(collection);\n            await this.loadFromJsonObject(itemDataObject, jsonArray[i]);\n            // let item = jsonArray[i];\n            // Iterator < String > iterator = item.keys();\n            // while (iterator.hasNext()) {\n            //     String sPropertyName = iterator.next();\n            //     Object propertyValue = item.get(sPropertyName);\n            //     if (propertyValue instanceof JSONArray) {\n            //         XoneDataCollection contentCollection = itemDataObject.Contents(sPropertyName);\n            //         if (contentCollection == null) {\n            //             throw new Exception(\"loadFromJson(): Content collection \" + sPropertyName + \" not found\");\n            //         }\n            //         loadFromJsonArray(contentCollection, (JSONArray) propertyValue);\n            //         continue;\n            //     }\n            //     itemDataObject.put(sPropertyName, propertyValue);\n            // }\n            collection.addItem(itemDataObject, i);\n        }\n    }\n    bind(Prop, Evento, Funcion) { }\n    getObjectItem(indice) { }\n    getPropertyGroup(propiedad) { }\n    getPropertyTitle(propiedad) { }\n    /**\n     * @return\t\tDevuelve el nombre del objeto de datos en el cual se ejecutan las acciones de escritura en la fuente de datos.\n     */\n    getFixedUpdateObjectName() {\n        return this.m_owner.getFixedUpdateObjectName();\n    }\n    /**\n     * @return\t\tDevuelve una cadena con el nombre del objeto de datos ya preparado para usarse en una sentencia SQL.\n     */\n    getFixedObjectName() {\n        return this.m_owner.getFixedObjectName();\n    }\n    //#region Grabar el objeto\n    /**\n     * Graba el objeto en la fuente de datos de la colección siemrpe que esta permita escritura\n     * @return\t\tDevuelve TRUE si el objeto se graba correctamente, así como todos sus contents.\n     * @throws Exception\n     */\n    async save() {\n        let strCmd = \"\", strFields = \"\", str = \"\", strTmp = \"\", strChkID = \"\", strPK = \"\";\n        let strRowID = \"\", strIDString = this.GetObjectIdString(true);\n        let rs = null;\n        let bUpdate = true, bRegister = false;\n        let lPossibleKey = 0;\n        let bNeedRowID = true;\n        let bNewObj = false;\n        if (StringUtils.ParseBoolValue((str = this.m_owner.CollPropertyValue(\"readonly\")), false)) {\n            // Pa otro momento\n            this.m_bReadOnly = true;\n            return true; // Read Only no se graba\n        } // Pa otro momento\n        // A11092603: Permitir que la maquinaria utilice transacciones si la conexión lo permite.\n        // Comprobar si transaccionamos o no...\n        let bTransacted = StringUtils.ParseBoolValue(this.m_owner.CollPropertyValue(\"transactions\"), false);\n        // Tenemos que traer esto pacá porque lo necesitamos a nivel de transacciones\n        let conn = this.m_owner.getConnection();\n        let FunctionName = \"CXoneDataObject::Save\";\n        // Averiguar si este objeto se puede grabar\n        // Este chequeo se debe hacer antes de las operaciones que siguen. Es más\n        // eficiente y no se pierde tiempo haciendo operaciones por gusto si de entrada\n        // el objeto es read-only\n        if (this.m_bReadOnly || this.m_owner.getSpecial())\n            return true;\n        // Si es un objeto derivado, y el propietario no está\n        // grabado, no se graba\n        if (this.m_owner.getOwnerObject() != null && this.m_bDependent) {\n            // Ver si se ha grabado\n            // F11070701: Modificaciones para solucionar los enlaces y grabación con claves no numéricas.\n            // Si se trata de un objeto nuevo y el propietario también lo es... no grabamos nico...\n            if (this.m_owner.getOwnerObject().IsNew())\n                return true;\n            /*\n            strPK = m_owner.getOwnerObject().GetObjectIdString();\n            // F10082402:\tProtegerse de los runtimes que no cortocircuitan las expresiones.\n            if (StringUtils.IsEmptyString(strPK))\n                return true;\n            if (strPK.equals(\"NULL\"))\n                return true;\n            */\n        } // Ver si se ha grabado\n        strPK = this.getIdFieldName();\n        strChkID = strIDString;\n        if (strChkID.contains(\"'\"))\n            strChkID = StringUtils.removeChars(strChkID, \"'\");\n        if (strChkID.contains(\" \"))\n            strChkID = StringUtils.removeChars(strChkID, \" \");\n        if (strChkID.contains(\",\"))\n            strChkID = StringUtils.removeChars(strChkID, \",\"); // Solo para comprobar si está vacía...\n        if (this.m_bDirty) {\n            // Hay que grabar\n            // F11110812: No se puede grabar un CurrentItem que no tenga ID.\n            // A ver, si el objeto es un current item, tiene que tener ID\n            if (this.m_bIsCurrentItem) {\n                // Verificar los IDs\n                let bNoId = false;\n                if (!this.m_owner.getStringKey()) {\n                    // Numérica\n                    if (this.m_lObjectId <= 0)\n                        bNoId = true;\n                } // Numérica\n                else {\n                    // Cadena\n                    if (StringUtils.IsEmptyString(this.m_strObjectId))\n                        bNoId = true;\n                    else if (this.m_strObjectId.compareToIgnoreCase(\"null\") == 0)\n                        bNoId = true;\n                } // Cadena\n                if (bNoId) {\n                    // Error\n                    let sb = \"{0} failed. Object is current item and has no ID.\";\n                    sb = sb.replace(\"{0}\", FunctionName);\n                    throw new XoneGenericException(-1990, sb);\n                } // Error\n            } // Verificar los IDs\n            // Ejecutar primero las acciones antes de grabar...\n            // F11070701: Modificaciones para solucionar los enlaces y grabación con claves no numéricas.\n            // Ahora podemos usar nuestra banderilla....\n            if (this.IsNew())\n                bRegister = true;\n            // Verificar si la regla ha fallado pero no hay que devolver hResult\n            // TODO: Lui\n            // if (!BeforeSave())\n            //     return false;    // Fallo de regla\n        } // Hay que grabar\n        // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n        let sentence = new SqlParser(this.m_owner.getConnection().getRowIdFieldName(), this.m_messages);\n        sentence.SetTableName(this.getFixedUpdateObjectName());\n        try {\n            let bStringKey = this.m_owner.getStringKey();\n            let bMultipleKey = this.m_owner.getMultipleKey();\n            if (this.m_bDirty) {\n                // Hay que grabar\n                // F11010304:\tPara grabar hay que recorrer las propiedades modificadas, no las normales.\n                // Para grabar hay que recorrer las propiedades modificadas, no las normales, porque allí\n                // no están los valores que se han anulado...\n                // A11092604: Permitir que la grabación de un objeto pueda dejar de ser incremental.\n                let bIncremental = StringUtils.ParseBoolValue(this.m_owner.CollPropertyValue(\"incremental-save\"), true);\n                let keys = bIncremental ? this.m_lstDirtyProperties : this.m_lstNormalProperties.keys();\n                // Ahora recorremos las propiedades que sean, que a fin de cuentas nos va a dar lo mismo.\n                for (let i = 0; i < keys.length; i++) {\n                    // Cada propiedad\n                    let strKey = keys[i];\n                    // A09100501:   Permitir que las propiedades tengan un tipo button.\n                    // Si es un botón nos los saltamos directamente...\n                    strTmp = this.FieldPropertyValue(strKey, \"type\");\n                    if (!StringUtils.IsEmptyString(strTmp)) {\n                        // Tiene tipo\n                        if (strTmp.equals(\"B\"))\n                            continue;\n                    } // Tiene tipo\n                    // F11010304:\tPara grabar hay que recorrer las propiedades modificadas, no las normales.\n                    // Ahora buscamos el valor usando la clave de la lista de normales...\n                    // Como la sacamos de la lista de modificadas, bUpdate en principio es TRUE.\n                    bUpdate = true;\n                    if (!bStringKey)\n                        if (!bMultipleKey && strKey.equals(strPK))\n                            // Esta comprobación para autonuméricos\n                            bUpdate = false;\n                    if (bUpdate) {\n                        // Solo si es actualizable\n                        if (!StringUtils.IsEmptyString(this.getObjectName())) {\n                            // Tabla de actualización diferente\n                            if (strKey.startsWith(\"MAP_\"))\n                                bUpdate = false;\n                            if (strKey.charAt(0) == \"$\" || strKey.charAt(0) == \"#\")\n                                bUpdate = false;\n                            //\n                            // El ROWID tampoco lo ponemos...\n                            if (strKey.equals(this.m_owner.getConnection().getRowIdFieldName()) && !StringUtils.IsEmptyString(strChkID) && !strChkID.equals(\"NULL\"))\n                                bUpdate = false;\n                        } // Tabla de actualización diferente\n                    } // Solo si es actualizable\n                    // El campo puede ser excluible si está marcado como read-only\n                    if (bUpdate) {\n                        // Ver si es de solo lectura\n                        str = this.FieldPropertyValue(strKey, \"readonly\");\n                        if (StringUtils.ParseBoolValue(str, false))\n                            bUpdate = false;\n                    } // Ver si es de solo lectura\n                    // Si finalmente no es un campo excluible, se puede\n                    // actualizar la tabla completa\n                    if (bUpdate) {\n                        // No se puede insertar el ID\n                        // Comprobar si la tabla para actualizar es diferente\n                        // de la tabla de origen\n                        // Si es el campo ROWID, marcar que ya no se necesita\n                        if (strKey.equals(this.m_owner.getConnection().getRowIdFieldName()))\n                            bNeedRowID = false; // No necesita ROWID...\n                        // Si tiene alias, usarlo\n                        strTmp = strKey;\n                        if (!StringUtils.IsEmptyString((str = this.FieldPropertyValue(strTmp, \"alias\")))) {\n                            // Tiene alias\n                            strFields = str;\n                        } // Tiene alias\n                        else {\n                            // No tiene alias\n                            // Decir que está mapeando para B.D.\n                            strFields = this.MapField(strTmp, true);\n                        } // No tiene alias\n                        // Adicionar el valor en dependencia del tipo\n                        // F11010304:\tPara grabar hay que recorrer las propiedades modificadas, no las normales.\n                        // Sacamos el nombre de la lista de normal. Si no está es NULL.\n                        let vl = null;\n                        if (this.m_lstNormalProperties.containsKey(strKey))\n                            vl = this.m_lstNormalProperties.get(strKey);\n                        if (!StringUtils.IsEmptyString((str = this.FieldPropertyValue(strKey, \"mapcol\")))) {\n                            // Es un ID, no puede ser 0\n                            if (vl != null) {\n                                // No nulo\n                                //  Esta conversión puede explotarse porque en el campo pueden haber puesto\n                                //  cualquier guarrería, por lo que hay que cerciorarse que si pasa algo malo\n                                //  caigamos en una situación controlada, en la que asignemos un valor nulo al\n                                //  ID que estamos tratando de recolocar.\n                                //  Buscar el tipo de datos del campo para comprobar los valores vacíos correctos\n                                if (ObjUtils.IsNumeric(vl)) {\n                                    // Numéricos\n                                    let l = NumberUtils.SafeToLong(vl);\n                                    if (0 == l)\n                                        vl = null;\n                                    else\n                                        vl = l;\n                                } // Numéricos\n                                else {\n                                    // Cadena\n                                    str = vl.toString();\n                                    if (StringUtils.IsEmptyString(str))\n                                        vl = null;\n                                    else\n                                        vl = str;\n                                } // Cadena\n                            } // No nulo\n                        } // Es un ID, no puede ser 0\n                        str = this.DevelopObjectValue(vl);\n                        if (typeof vl === \"string\") {\n                            // Solo para valores de cadena\n                            if (!StringUtils.IsEmptyString(str) && str.length > 2 && this.m_owner.getConnection().HasEscapeChars()) {\n                                // Solo para las cadenas\n                                str = this.m_owner.getConnection().EscapeString(str.substring(1, str.length - 2));\n                                str = \"'\" + str + \"'\";\n                            } // Solo para las cadenas\n                        } // Solo para valores de cadena\n                        // Adicionar el valor al parser\n                        // K11092602: Modificaciones para trabajar con conexiones online puras.\n                        // Resolver el nombre real del campo, si la colección es indexada\n                        let resolve = this.reverseResolveFieldName(strFields);\n                        sentence.SetFieldValue(resolve, str);\n                        if (StringUtils.ParseBoolValue(this.FieldPropertyValue(strKey, Utils.PROP_ATTR_EMBED), false))\n                            sentence.SetFieldType(resolve, 1);\n                    } // No se puede insertar el ID\n                } // Cada propiedad\n                if (sentence.GetFields().length > 0) {\n                    // Hay modificaciones\n                    // F11070701: Modificaciones para solucionar los enlaces y grabación con claves no numéricas.\n                    // Utilizar nuestra marca para saber si es nuevo o no\n                    ////if (!StringUtils.IsEmptyString(strChkID) && !strChkID.equals(\"NULL\"))\n                    if (!this.IsNew()) {\n                        // El objeto tiene ID\n                        // Objeto existente\n                        bNewObj = false;\n                        if (!bMultipleKey)\n                            sentence.SetWhereSentence(\"WHERE \" + strPK + \"=\" + strIDString);\n                        else\n                            sentence.SetWhereSentence(this.GetMultipleKeyString(true));\n                        sentence.SetSqlType(SqlType.SQLTYPE_UPDATE);\n                        sentence.SetFieldValue(strPK, this.getId());\n                        sentence.addkey(strPK);\n                        strCmd = sentence.RegenerateSql();\n                        sentence.SetSqlType(SqlType.SQLTYPE_UPDATE);\n                        // K11092601: ExecuteSqlString y similares deben devolver un objeto, que puede ser ResultSet.\n                        // A12042503: Mecanismo para registrar un modo debug global en la aplicación.\n                        if (this.m_owner.getIsDebugging() || this.m_owner.getOwnerApp().isDebugMode())\n                            Utils.DebugLog(Utils.TAG_DATABASE_LOG, strCmd);\n                        if ((await this.m_owner.getConnection().ExecuteSqlStringAsync(null, sentence, false, this.m_owner.getName(), { [strPK]: strIDString })) ==\n                            null) {\n                            return false;\n                        }\n                        if (this.m_owner.getMultipleKey())\n                            str = \" WHERE \" + this.GetMultipleKeyString(true);\n                        else\n                            str = \" WHERE \" + this.getIdFieldName() + \"=\" + this.GetObjectIdString(true);\n                    } // El objeto tiene ID\n                    else {\n                        // Es un objeto nuevo\n                        // Objeto nuevo\n                        bNewObj = true;\n                        strRowID = this.getRowId();\n                        if (this.m_owner.getConnection().getIsReplicating() || (!bStringKey && !bMultipleKey)) {\n                            // El ROWID solo si hace falta\n                            // En principio, si se trata de datos remotos, la verificación se puede\n                            // hacer arriba\n                            // La existencia de campos de tipo unique-filter implica que se deben\n                            // chequear las reglas indicadas por las fórmulas de unicidad antes de\n                            // grabar el objeto. Si alguna de las reglas de unicidad falla, falla\n                            // la grabación incluso antes de generar el RowID.\n                            // TODO: Luis\n                            // if (!CheckUniqueFields())\n                            //     return false;\n                            // Incluir la banderilla en esta condición para inhabilitar la generación de varios ROWID\n                            // innecesariamente...\n                            if (bNeedRowID) {\n                                // Solo si hace falta generarlo\n                                while (true) {\n                                    // Comprobar unicidad\n                                    strRowID = this.m_owner.GenerateRowId();\n                                    if (this.m_owner.IsUniqueRowId(strRowID))\n                                        break;\n                                } // Comprobar unicidad\n                                str = this.DevelopObjectValue(strRowID);\n                                sentence.SetFieldValue(this.m_owner.getConnection().getRowIdFieldName(), str);\n                                sentence.addkey(this.m_owner.getConnection().getRowIdFieldName());\n                                // F13022203: Proeblemas a la hora de grabar objetos cuando ha fallado una grabación previa.\n                                // Malo\n                                str = strRowID;\n                            } // Solo si hace falta generarlo\n                            else {\n                                // Preparar las condiciones para usar el mismo ROWID\n                                // Como se puede haber borrado en la anterior, reutilizar el mismo ROWID\n                                let idval = this.GetRawPropertyValue(this.m_owner.getConnection().getRowIdFieldName());\n                                if (idval != null) {\n                                    // Solo si tiene valor\n                                    strRowID = idval.toString();\n                                    str = \"'\" + strRowID + \"'\";\n                                } // Solo si tiene valor\n                            } // Preparar las condiciones para usar el mismo ROWID\n                            sentence.SetSqlType(SqlType.SQLTYPE_INSERT);\n                        } // El ROWID solo si hace falta\n                        // Crear el INSERT y ejecutarlo\n                        strCmd = sentence.RegenerateSql();\n                        // A11092606: Si la colección depura, mostrar los SQL de grabación también.\n                        // A12042503: Mecanismo para registrar un modo debug global en la aplicación.\n                        if (this.m_owner.getIsDebugging() || this.m_owner.getOwnerApp().isDebugMode()) {\n                            // Traza\n                            Utils.DebugLog(Utils.TAG_DATABASE_LOG, strCmd);\n                            this.getOwnerApp().writeConsoleString(strCmd);\n                        } // Traza\n                        // La generación de objetos a nivel central implica que las claves no se comprueban\n                        // Pasar la conexión\n                        // A10090601:\tIncluir el mecanismo de réplica selectiva por colecciones a la maquinaria.\n                        // Programar aquí el soporte para la réplica selectiva por colecciones\n                        let bReplicate = false;\n                        // TODO: Luis por ahora esto no replica\n                        // if (conn.getIsReplicating ())\n                        // {// Si está replicando, podría ser selectiva\n                        //     bReplicate =true;\n                        //     if (this.m_owner.getOwnerApp().getSelectiveReplication())\n                        //     {// Ver si la colección replica\n                        //         if (!this.m_owner.getReplicate ())\n                        //             bReplicate =false;\n                        //     }// Ver si la colección replica\n                        // }// Si está replicando, podría ser selectiva\n                        // A11092603: Permitir que la maquinaria utilice transacciones si la conexión lo permite.\n                        // Buscar si la conexión soporta transacciones e iniciar una...\n                        if (bTransacted)\n                            bTransacted = conn.supportsTransactions();\n                        if (bTransacted)\n                            conn.beginTrans();\n                        let b = false;\n                        if (conn.acceptsParsedSentences())\n                            b = await conn.ExecuteParsedSqlAsync(null, sentence, bReplicate, this.m_owner.getName());\n                        else\n                            b = await conn.ExecuteSqlStringAsync(null, strCmd, bReplicate, this.m_owner.getName());\n                        // A11092603: Permitir que la maquinaria utilice transacciones si la conexión lo permite.\n                        // Comprobar el resultado y si hay transacciones echarlas patrás...\n                        if (typeof b === \"boolean\" && !b) {\n                            // Error\n                            if (bTransacted)\n                                conn.rollBack();\n                            return false;\n                        } // Error\n                        // K11092601: ExecuteSqlString y similares deben devolver un objeto, que puede ser ResultSet.\n                        // un popvalue del objeto que se load dependiendo del atributo save-result=\"NOMBRECOLECCION\"\n                        if (b.hasOwnProperty(\"isResultset\")) {\n                            // Si es un RS, ver si tenemos que crear un objeto\n                            let save_result = this.m_owner.CollPropertyValue(\"save-result\");\n                            if (!TextUtils.isEmpty(save_result)) {\n                                // Tenemos colección de resultados\n                                let coll = await this.m_owner.getOwnerApp().getCollection(save_result);\n                                if (coll != null) {\n                                    // Y además existe, di tú\n                                    let obj = await coll.CreateObject();\n                                    coll.addItem(obj);\n                                    await obj.Load(b);\n                                    this.m_owner.getOwnerApp().pushValue(obj);\n                                } // Y además existe, di tú\n                            } // Tenemos colección de resultados\n                        } // Si es un RS, ver si tenemos que crear un objeto\n                        if (!bStringKey && !bMultipleKey) {\n                            // Obtener el ID si es autonumérico solamente\n                            // A11092601: Modificaciones para mejorar el soporte de conexiones remotas y demás.\n                            // Si la conexión soporta la obtención del valor de ID autonumérico, que lo haga ella.\n                            if (conn.retrievesAutonumericKeys()) {\n                                // Se lo pide a la conexión\n                                try {\n                                    //TODO ADD TAG Juan Carlos. RetrieveNumericKey() espera la SQL ya con comillas.\n                                    let sRowIDQuoted = str;\n                                    if (!sRowIDQuoted.startsWith(\"'\")) {\n                                        sRowIDQuoted = \"'\" + sRowIDQuoted;\n                                    }\n                                    if (!sRowIDQuoted.endsWith(\"'\")) {\n                                        sRowIDQuoted = sRowIDQuoted + \"'\";\n                                    }\n                                    lPossibleKey = conn.RetrieveNumericKey(this.getFixedObjectName(), strPK, this.m_owner.getRowIdFieldName(), sRowIDQuoted);\n                                }\n                                catch (e2) {\n                                    lPossibleKey = -1;\n                                }\n                            } // Se lo pide a la conexión\n                            else {\n                                // Como siempre, por lo que sea\n                                strCmd = \"SELECT \" + strPK + \" FROM \" + this.getFixedObjectName() + \" WHERE \" + this.m_owner.getRowIdFieldName() + \"=\" + str;\n                                // A12042503: Mecanismo para registrar un modo debug global en la aplicación.\n                                if (this.m_owner.getIsDebugging() || this.m_owner.getOwnerApp().isDebugMode())\n                                    Utils.DebugLog(Utils.TAG_DATABASE_LOG, \"Save Find Record: \" + strCmd);\n                                if (null == (rs = this.m_owner.getConnection().CreateRecordset(strCmd))) {\n                                    // Error\n                                    // Eliminar este objeto de la base de datos... algo anduvo mal\n                                    strCmd = \"DELETE FROM \" + this.m_owner.getFixedObjectName() + \" WHERE \" + this.m_owner.getRowIdFieldName() + \"=\" + str;\n                                    // Este no importa que falle... estamos haciendo lo que se puede\n                                    this.m_owner.getConnection().ExecuteSqlString(strCmd);\n                                    // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n                                    let sb = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_OBJ_SAVEFAIL, \"{0} failed. Cannot get Object ID.\");\n                                    sb = sb.replace(\"{0}\", FunctionName);\n                                    // A11092603: Permitir que la maquinaria utilice transacciones si la conexión lo permite.\n                                    // Estoooo, si hay transacciones, chungo\n                                    if (bTransacted)\n                                        conn.rollBack();\n                                    throw new XoneGenericException(-1999, sb);\n                                } // Error\n                                if (await rs.next()) {\n                                    // Existe\n                                    if (!bStringKey) {\n                                        // Actualizar\n                                        let idval = null;\n                                        // M10052401:\tModificaciones en la forma de acceso a bases de datos SQLite.\n                                        // K11010501:\tModificaciones para la versión 1.5 de Android.\n                                        idval = rs.getValue(strPK, this.m_owner.getIdFieldType());\n                                        // Comprobar si viene vacío o no\n                                        lPossibleKey = NumberUtils.SafeToLong(idval);\n                                        if (lPossibleKey == 0) {\n                                            // Error\n                                            // A11092603: Permitir que la maquinaria utilice transacciones si la conexión lo permite.\n                                            // Si está transaccionado, simplemente rollback\n                                            if (bTransacted)\n                                                conn.rollBack();\n                                            else {\n                                                // Como toda la vida\n                                                // Primero lo primero... borremos este objeto en la base de datos...\n                                                strCmd =\n                                                    \"DELETE FROM \" + this.m_owner.getFixedObjectName() + \" WHERE \" + this.m_owner.getRowIdFieldName() + \"='\" + strRowID + \"'\";\n                                                if (this.m_owner.getConnection().ExecuteSqlString(strCmd) == null)\n                                                    return false;\n                                                // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n                                                let sb = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_OBJ_SAVEFAIL_02, \"{0} failed. Field '{1}' seems to be non-identity or it is not being updated.\");\n                                                sb = sb.replace(\"{0}\", FunctionName);\n                                                sb = sb.replace(\"{1}\", strPK);\n                                                throw new XoneGenericException(-19899, sb);\n                                            } // Como toda la vida\n                                        } // Error\n                                    } // Actualizar\n                                    else\n                                        lPossibleKey = -1; // Al menos indicar que se grabó\n                                } // Existe\n                                rs.close();\n                                rs = null;\n                            } // Como siempre, por lo que sea\n                        } // Obtener el ID si es autonumérico solamente\n                        // F11070701: Modificaciones para solucionar los enlaces y grabación con claves no numéricas.\n                        // Si hemos grabado, indicar que el objeto no es nuevo\n                        this.m_bNewObject = false;\n                    } // Es un objeto nuevo\n                } // Hay modificaciones\n            } // Hay que grabar\n            // Ahora debe asignar el valor al ID interno del objeto\n            // porque ha llegado aquí si y solo si se ha ejecutado\n            // correctamente...\n            if (lPossibleKey > 0) {\n                // Solo si ha grabado algo\n                if (StringUtils.IsEmptyString(strRowID))\n                    strRowID = this.getRowId();\n                if (!bStringKey) {\n                    // Entero\n                    this.put(strPK, lPossibleKey);\n                    this.m_strObjectId = String.format(\"%s\", lPossibleKey);\n                } // Entero\n                this.m_lObjectId = lPossibleKey;\n                // Almacenar el ROWID\n                // Esto solo hará falta si se ha generado un nuevo ROWID, de lo contrario no\n                if (bNeedRowID) {\n                    // Se ha generado uno nuevo\n                    this.put(this.m_owner.getRowIdFieldName(), sentence.GetRowId());\n                } // Se ha generado uno nuevo\n            } // Solo si ha grabado algo\n            let bResult = true;\n            // F10052701:\tEl mecanismo de recuperación al fallar Save() tiene problemas.\n            // Relocalizarse en la colección propietaria\n            ////m_owner.RelocateObject (this);\n            // Puede ser que las colecciones que contiene el objeto\n            // tengan datos que grabar, así que grabarlos\n            // TODO: Luis ver esto\n            // let bResult = false;\n            // try\n            // {\n            //     bResult = OnSave();\n            // }\n            // catch (e)\n            // {\n            //     UndoSave(bNewObj, bTransacted);\n            //     throw e;\n            // }\n            // if (!bResult)\n            // {// Error\n            //     UndoSave(bNewObj, bTransacted);\n            //     return false;\n            // }// Error\n            // Trata de resolver los enlaces pendientes si es que los hay\n            // Aquí se ha cambiado algo en el orden de ejecución de las cosas\n            // TODO: Luis ver esto\n            // bResult = true;\n            // if (this.m_lstLinkItems.length > 0)\n            // {// Enlazar\n            //     try\n            //     {\n            //         bResult = LinkItems();\n            //     }\n            //     catch ( e)\n            //     {\n            //         if (lPossibleKey > 0)\n            //             UndoSave(bNewObj, bTransacted);\n            //         throw e;\n            //     }\n            // }// Enlazar\n            // if (bResult)\n            // {\n            //     try\n            //     {\n            //         bResult = SaveContents();\n            //     }\n            //     catch (e)\n            //     {\n            //         if (lPossibleKey > 0)\n            //             UndoSave(bNewObj, bTransacted);\n            //         throw e;\n            //     }\n            // }\n            // // F10052701:\tEl mecanismo de recuperación al fallar Save() tiene problemas.\n            // // Intentar efectuar los enlaces nuevamente aquí y no donde se hacía antes...\n            // if (bResult)\n            // {// Si aún quedan enlaces, intentarlo de nuevo\n            //     if (this.m_lstLinkItems.size() > 0)\n            //     {// Enlazar\n            //         try\n            //         {\n            //             bResult = LinkItems();\n            //         }\n            //         catch (e)\n            //         {\n            //             if (lPossibleKey > 0)\n            //                 UndoSave(bNewObj, bTransacted);\n            //             throw e;\n            //         }\n            //     }// Enlazar\n            // }// Si aún quedan enlaces, intentarlo de nuevo\n            // // Grabar aquellos contenidos que se lo merezcan\n            // if (bResult)\n            // {// Solo ahora marca las propiedades como limpias\n            // \t// A11092603: Permitir que la maquinaria utilice transacciones si la conexión lo permite.\n            // \t// Si tenemos transacciones, hacer commit\n            // \tlet obj=conn.commit();\n            // \t// K11092601: ExecuteSqlString y similares deben devolver un objeto, que puede ser ResultSet.\n            // \tif (obj!=null)\n            // \t{// Tiene resultado\n            // \t\tif (obj instanceof ResultSet)\n            // \t\t{// Es un resultset\n            // \t\t\tlet rsResult=obj as IResultSet;\n            //         \tlet save_result=this.m_owner.CollPropertyValue(\"save-result\");\n            //         \tif (!TextUtils.isEmpty(save_result))\n            //         \t{// Tiene definida una colección\n            //         \t\tlet coll=this.m_owner.getOwnerApp().getCollection(save_result);\n            //         \t\tif (coll !=null)\n            //         \t\t{// Existe la colección\n            //         \t\t\tlet objData=coll.CreateObject();\n            //         \t\t\tcoll.addItem(objData);\n            //         \t\t\tif (rsResult.next())\n            //         \t\t\t\tobjData.Load(rsResult);\n            //         \t\t\tthis.m_owner.getOwnerApp().PushValue(objData);\n            //         \t\t}// Existe la colección\n            //         \t}// Tiene definida una colección\n            //         }// Es un resultset\n            // \t}// Tiene resultado\n            //     // Marcar todas las propiedades como listas, solamente si la grabación\n            //     // ha resultado exitosa. Esto permite que si falla la grabación, no se queden\n            //     // marcadas las propiedades como grabadas cuando en realidad no lo están\n            //     SetDirty(false);\n            //     // F10052701:\tEl mecanismo de recuperación al fallar Save() tiene problemas.\n            //     // Registrar el objeto aquí si todo ha ido bien...\n            //     // Las llamadas a RelocateObject y demás hay que hacerlas después de grabar del todo\n            //     // así que las quitamos de aquí...\n            //     if (bRegister)\n            //         this.m_owner.RegisterObjectKey(this);\n            // }// Solo ahora marca las propiedades como limpias\n            // else\n            // {// To patrás\n            //     if (lPossibleKey > 0)\n            //     {// Solo si ha grabado algo\n            //         // Borra el objeto de la base de datos con todo lo que se haya grabado de él\n            //         UndoSave(bNewObj, bTransacted);\n            //     }// Solo si ha grabado algo\n            //     else\n            //     {// Por si las moscas\n            //     \tif (bTransacted)\n            //     \t\tconn.rollBack();\n            //     }// Por si las moscas\n            // }// To patrás\n            return bResult;\n        }\n        catch (e) {\n            if (rs != null) {\n                // Tiene recordset\n                try {\n                    rs.close();\n                }\n                catch (se) {\n                    // Ignorar esta excepción\n                }\n                rs = null;\n            } // Tiene recordset\n            // A11092603: Permitir que la maquinaria utilice transacciones si la conexión lo permite.\n            if (bTransacted)\n                conn.rollBack();\n            throw e;\n        }\n    }\n    //#endregion\n    ClearCaches() {\n        this.m_lstCachedAttributes.clear();\n    }\n    //#region Borrar el objeto de la base de datos\n    /**\n     * Elimina este objeto de la base de datos\n     * @return\t\tDevuelve TRUE si el objeto se puede eliminar correctamente.\n     * @throws XoneGenericException\n     */\n    async deleteObject() {\n        let strCmd = \"\";\n        let bDelete = false;\n        let bDeleteActions = false;\n        let FunctionName = \"CXoneDataObject::DeleteObject\";\n        try {\n            // O12050301: Si la colección es especial no hay que borrar el objeto de base de datos.\n            // Si es un objeto de una colección especial, entonces tururú\n            if (this.m_owner.getSpecial())\n                return true;\n            // Un objeto solo se tiene que borrar de la base de datos\n            // si es que por alguna razón ha llegado a ella, claro está\n            if (!this.m_bFollowRules)\n                bDelete = true;\n            else\n                bDelete = this.CanDelete();\n            if (bDelete) {\n                // Si se puede borrar\n                if (!this.m_owner.getSpecial())\n                    bDeleteActions = true; // Puede tratarse de una colección especial\n            } // Si se puede borrar\n            // Primero ejecutar las acciones de borrado\n            // contenidas\n            if (bDeleteActions) {\n                // Ejecutar las acciones\n                if (!this.ExecuteDeleteActions()) {\n                    // Acciones de eliminación\n                    this.m_bFollowRules = true;\n                    // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n                    let sb = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_OBJ_DELETEOBJFAIL_01, \"{0} failed. Pre-delete actions have not been executed.\");\n                    sb = sb.replace(\"{0}\", FunctionName);\n                    throw new XoneGenericException(-6000, sb);\n                } // Acciones de eliminación\n            } // Ejecutar las acciones\n            // Ahora sí se verifica si el objeto está grabado o no, pues no tiene sentido lanzar\n            // un DELETE contra una base de datos si no están almacenados los datos en ella, digo yo...\n            if (!StringUtils.IsEmptyString(this.getObjectName()) && !this.GetObjectIdString().equals(\"NULL\")) {\n                // Este objeto debe tener datos\n                if (bDelete) {\n                    // Si se puede borrar\n                    // Ahora eliminar el objeto de la base de datos...\n                    strCmd = \"DELETE FROM \" + this.getFixedObjectName() + \" WHERE \" + this.getIdFieldName() + \"=\" + this.GetObjectIdString(true);\n                    // TODO: Luis\n                    if (this.m_owner.getIsDebugging() || this.m_owner.getOwnerApp().isDebugMode())\n                        Utils.DebugLog(Utils.TAG_DATABASE_LOG, strCmd);\n                    // F10090306:\tNo se registra el error cuando falla DeleteObject.\n                    // El resultado no importa porque lanza una excepción.\n                    let sRowidName = this.m_owner.getConnection().getRowIdFieldName();\n                    let sentence = new SqlParser(sRowidName);\n                    sentence.ParseSqlString(strCmd);\n                    sentence.SetFieldValue(this.getIdFieldName(), this.getId());\n                    sentence.addkey(this.getIdFieldName());\n                    await this.m_owner.getConnection().ExecuteSqlStringAsync(null, sentence, false, this.m_owner.getName());\n                } // Si se puede borrar\n                else {\n                    // No se puede borrar\n                    this.m_bFollowRules = true;\n                    return false; // No se puede...\n                } // No se puede borrar\n            } // Este objeto debe tener datos\n            // Este código también se ha sacado de la condición, ya que aunque el objeto no se borre\n            // de la base de datos, las acciones post-eliminación sí deberían analizarse, ya que pueden\n            // referirse a objetos que no necesariamente existan en el disco, sino en la memoria...\n            if (bDelete && bDeleteActions) {\n                // Ejecuta las acciones posteriores\n                if (!this.ExecuteDeleteActions(true)) {\n                    // Ver qué ha pasado\n                    this.m_bFollowRules = true;\n                    // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n                    let sb = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_OBJ_DELETEOBJFAIL_02, \"{0} failed. Could not execute post-delete actions.\");\n                    sb = sb.replace(\"{0}\", FunctionName);\n                    throw new XoneGenericException(-6001, sb);\n                } // Ver qué ha pasado\n            } // Ejecuta las acciones posteriores\n            this.m_bFollowRules = true;\n            return true;\n        }\n        catch (ex) {\n            // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n            let sMessage = ex.message;\n            let sb = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_GENERALFAIL, \"{0} failed. \");\n            sb = sb.replace(\"{0}\", FunctionName);\n            if (!TextUtils.isEmpty(sMessage)) {\n                sb = sb.concat(sMessage);\n            }\n            throw new XoneGenericException(-1001, ex, sb);\n        }\n    }\n    /**\n     * @return\t\tDevuelve TRUE si se cumplen todas las reglas de borrado.\n     * @throws Exception\n     */\n    CanDelete() {\n        let nodeList;\n        let strIDString = this.GetObjectIdString(true);\n        let coll;\n        //  En principio si este objeto no tiene ID todavía\n        //  es seguro borrarlo. De todas maneras esta función es\n        //  virtual, así que si no está usted de acuerdo redefínala\n        //  y al carajo...\n        try {\n            if (StringUtils.IsEmptyString(strIDString))\n                return true;\n            //  Para evaluar reglas del tipo rule se debe tener colección\n            //  propietaria.\n            coll = this.m_owner;\n            do {\n                nodeList = null;\n                let deleteNode = coll.GetNode(\"delete\");\n                if (deleteNode != null) {\n                    // Tiene delete\n                    nodeList = deleteNode.SelectNodes(\"rule\");\n                    if (nodeList.count() > 0)\n                        break;\n                } // Tiene delete\n                coll = coll.getParentCollection();\n            } while (coll != null);\n            // Si tenemos lista de reglas, usarla\n            if (nodeList != null) {\n                // Ahora analizar lo que haya encontrado...\n                for (let i = 0; i < nodeList.count(); i++) {\n                    // Evaluar cada una de las reglas\n                    let node = nodeList.get(i);\n                    if (!this.EvaluateRule(node))\n                        return false; // Adquirir el mensaje de error\n                } // Evaluar cada una de las reglas\n            } // Ahora analizar lo que haya encontrado...\n            // Antes de comprobar las reglas, ver si la colección propietaria es de solo lectura\n            if (StringUtils.ParseBoolValue(/*str = */ this.m_owner.CollPropertyValue(\"readonly\"), false)) {\n                // Read Only\n                // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n                let sb = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_OBJ_CANNOTDELETE, \"Cannot delete object. Collection '{0}' is read-only.\");\n                sb = sb.replace(\"{0}\", this.m_owner.getName());\n                throw new XoneGenericException(-8101, sb);\n            } // Read Only\n            return true;\n        }\n        catch (ex) {\n            // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n            let sMessage = ex.message;\n            let sb = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_GENERALFAIL, \"{0} failed. \");\n            sb = sb.replace(\"{0}\", \"CXoneDataObject::CanDelete\");\n            if (!TextUtils.isEmpty(sMessage)) {\n                sb = sb.concat(sMessage);\n            }\n            throw new XoneGenericException(-10151, ex, sb);\n        }\n    }\n    /**\n     * Ejecuta las acciones de eliminación del objeto. EN función del parámetro ejecuta las anteriores o las posteriores.\n     * @param AfterActions\t\tTRUE para ejecutar las acciones posteriores a la eliminación del objeto.\n     * @return\t\t\t\t\tDevuelve TRUE si todas las acciones se han ejecutado correctamente.\n     * @throws Exception\n     */\n    async ExecuteDeleteActions(AfterActions = false) {\n        let nodeList;\n        let strIDString = this.GetObjectIdString(true);\n        let coll;\n        //  En principio si este objeto no tiene ID todavía\n        //  es seguro borrarlo. De todas maneras esta función es\n        //  virtual, así que si no está usted de acuerdo redefínala\n        //  y al carajo...\n        try {\n            if (StringUtils.IsEmptyString(strIDString))\n                return true;\n            //  Para evaluar reglas del tipo rule se debe tener colección\n            //  propietaria. A partir de ahí se ejecutan todas las reglas\n            //  heredadas de los padres...\n            coll = this.m_owner;\n            do {\n                // Tiene colección propietaria\n                // Primero tenemos que buscar el nodo delete\n                let deleteNode = coll.GetNode(\"delete\");\n                if (deleteNode == null)\n                    return true; // No tiene nodo delete\n                // Ahora buscar dentro del nodo aquellas acciones que nos interesen.\n                // F11081106: El nodo del que se sacan las acciones de borrado no es el correcto.\n                nodeList = deleteNode.SelectNodes(AfterActions ? \"afteraction\" : \"action\");\n                for (let i = 0; i < nodeList.count(); i++) {\n                    // Ejecutar las acciones\n                    let node = nodeList.get(i);\n                    if (!this.EvaluateNodeRules(node))\n                        continue;\n                    // A12081701: Mecanismo para pasar parámetros a un nodo de acción.\n                    // Esto no lleva argumentos... por ahora.\n                    if (!(await this.ExecuteNodeAction(null, node, 2, null)))\n                        return false;\n                } // Ejecutar las acciones\n                coll = coll.getParentCollection();\n            } while (coll != null);\n            return true;\n        }\n        catch (ex) {\n            // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n            let sMessage = ex.message;\n            let sb = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_GENERALFAIL, \"{0} failed. \");\n            sb = sb.replace(\"{0}\", \"CXoneDataObject::ExecuteDeleteActions\");\n            if (!TextUtils.isEmpty(sMessage)) {\n                sb = sb.concat(sMessage);\n            }\n            throw new XoneGenericException(-10171, ex, sb);\n        }\n    }\n    //#endregion\n    //#region ROWID\n    /**\n     * Devuelve o asigna valor al ROWID del objeto. Respeta los nombres de campos y demás cosas.\n     * @return\t\tDevuelve el valor del ROWID de este objeto.\n     * @throws Exception\n     */\n    getRowId() {\n        return StringUtils.SafeToString(this.get(this.m_owner.getConnection().getRowIdFieldName()));\n    }\n    /**\n     * Asigna valor al ROWID del objeto, colocándolo en su campo correspondiente.\n     * @param value\t\tNuevo valor del ROWID (sin comillas)\n     * @throws Exception\n     */\n    setRowId(value) {\n        this.put(this.m_owner.getConnection().getRowIdFieldName(), value);\n    }\n    //#endregion\n    /**\n     * Asigna valor a la bandera que indica si el objeto debe cumplir las reglas de borrado o no cuando se llama\n     * a DeleteObject para eliminarlo de la base de datos.\n     * @param value\t\tTRUE para indicar que se sigan las reglas (valor por defecto) FALSE para que no se cumplan.\n     */\n    setFollowRules(value) {\n        this.m_bFollowRules = value;\n    }\n}\nXoneDataObject.PARSE_NODE_NAME = 0;\nXoneDataObject.PARSE_EXPECTING_OPEN_PAR = 1;\nXoneDataObject.PARSE_PARAM_VALUE = 2;\nXoneDataObject.PARSE_EXPECTING_COMMA = 3;\n\n//# sourceMappingURL=XoneDataObject.js.map\n","import { SqlParser } from \"../../Parsers/SQL/SqlParser\";\nimport TextUtils from \"../../Utils/TextUtils\";\nexport default class XoneTestResulset {\n    /**\n     *\n     */\n    constructor(strCmd) {\n        this.m_stringData = ['Valor prueba texto', 'Texto corto', '0002346', 'Otro texto', 'Un texto mas largo de prueba', 'Mas texto'];\n        this.m_maxRows = 100;\n        this.isResultset = true;\n        this.m_nIterate = 0;\n        this.m_parsed = new SqlParser(\"ROWID\");\n        this.m_parsed.ParseSqlString(strCmd);\n    }\n    getBytes(fld) {\n        return null;\n    }\n    getColumnCount() {\n        return this.m_parsed.getQueryFields().length;\n    }\n    getColumnTypes() {\n        return [1, 2, 3, 4, 5, 6, 7, 8];\n    }\n    getColumnName(ordinal) {\n        if (ordinal < this.m_parsed.getQueryFields().length) {\n            let name = this.m_parsed.getQueryFields()[ordinal].getResolvedName();\n            if (name.endsWith('*') || TextUtils.isEmpty(name))\n                name = \"Column\" + ordinal;\n            return name;\n        }\n        return \"Column\" + ordinal;\n    }\n    getData() {\n        return this.m_stringData;\n    }\n    close() {\n        this.m_nIterate = 0;\n    }\n    getValue(fld, nType) {\n        switch (nType) {\n            case 0: // Numero\n                return Math.floor(Math.random() * (1000 - 1)) + 1;\n            case 2:\n                return Math.random() * (1000 - 1) + 1;\n            case 3:\n                return new Date();\n            default:\n                return this.m_stringData[Math.floor(Math.random() * 6)];\n        }\n        return \"Test Value\";\n    }\n    getString(fld) {\n        return \"test string\";\n    }\n    getInt(fld) {\n        return Math.floor(Math.random() * (1000 - 1)) + 1;\n    }\n    getDate(fld) {\n        return new Date();\n    }\n    async next() {\n        return this.m_nIterate++ != this.m_maxRows;\n    }\n    async EOF() {\n        return this.m_nIterate == this.m_maxRows;\n    }\n    async moveTo(position) {\n        return position == this.m_maxRows || (this.m_nIterate = position) == this.m_maxRows;\n    }\n}\n\n//# sourceMappingURL=XoneTestResulset.js.map\n","window.isMobile = function() {\n  let check = false;\n  (function(a) {\n    if (\n      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n        a\n      ) ||\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n        a.substr(0, 4)\n      )\n    )\n      check = true;\n  })(navigator.userAgent || navigator.vendor || window.opera);\n  return check;\n};\n","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ChartBar.vue?vue&type=style&index=0&id=3cc8b416&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Container.vue?vue&type=style&index=0&id=97ac2f9c&scoped=true&lang=css\"","export class XoneError {\n    clear() {\n    }\n    getDescription() {\n        return this.m_description;\n    }\n    getFailedSql() {\n        return this.m_failedSql;\n    }\n    setFailedSql(failedSql) {\n        this.m_failedSql = failedSql;\n    }\n    getNumber() {\n        return this.m_code;\n    }\n    setNumber(code) {\n        this.m_code = code;\n    }\n    setDescription(description) {\n        this.m_description = description;\n    }\n}\n\n//# sourceMappingURL=XoneError.js.map\n","export const XoneMessageKeys = {\n    SYS_MSG_GENERALFAIL: \"SYS_MSG_GENERALFAIL\",\n    SYS_MSG_DATASRCFAIL: \"SYS_MSG_DATASRCFAIL\",\n    SYS_MSG_FILENOTFOUND: \"SYS_MSG_FILENOTFOUND\",\n    SYS_MSG_FILENOTFOUND_01: \"SYS_MSG_FILENOTFOUND_01\",\n    SYS_MSG_FORMULAERROR: \"SYS_MSG_FORMULAERROR\",\n    SYS_MSG_COLL_CIRCULARCOLLDEF: \"SYS_MSG_COLL_CIRCULARCOLLDEF\",\n    SYS_MSG_COLL_UNDEFINEDFIELD: \"SYS_MSG_COLL_UNDEFINEDFIELD\",\n    SYS_MSG_COLL_NONAME: \"SYS_MSG_COLL_NONAME\",\n    SYS_MSG_COLL_CANNOTCREATEOBJ: \"SYS_MSG_COLL_CANNOTCREATEOBJ\",\n    SYS_MSG_COLL_SQLPARSEERROR: \"SYS_MSG_COLL_SQLPARSEERROR\",\n    SYS_MSG_COLL_SQLPARSEERROR_01: \"SYS_MSG_COLL_SQLPARSEERROR_01\",\n    SYS_MSG_COLL_CANNOTQUALIFY: \"SYS_MSG_COLL_CANNOTQUALIFY\",\n    SYS_MSG_COLL_XPROPVALUEFAIL: \"SYS_MSG_COLL_XPROPVALUEFAIL\",\n    SYS_MSG_COLL_PREPARESQLFAIL: \"SYS_MSG_COLL_PREPARESQLFAIL\",\n    SYS_MSG_COLL_COLLCONNOPENERR: \"SYS_MSG_COLL_COLLCONNOPENERR\",\n    SYS_MSG_COLL_LOADALLFAIL_02: \"SYS_MSG_COLL_LOADALLFAIL_02\",\n    SYS_MSG_COLL_LOADALLFAIL_03: \"SYS_MSG_COLL_LOADALLFAIL_03\",\n    SYS_MSG_COLL_CREATECLONEFAIL: \"SYS_MSG_COLL_CREATECLONEFAIL\",\n    SYS_MSG_COLL_GETROWCOUNTFAIL: \"SYS_MSG_COLL_GETROWCOUNTFAIL\",\n    SYS_MSG_COLL_EXECUTENODEFAIL: \"SYS_MSG_COLL_EXECUTENODEFAIL\",\n    SYS_MSG_COLL_EMBEDFILTERFAIL: \"SYS_MSG_COLL_EMBEDFILTERFAIL\",\n    SYS_MSG_COLL_LOOKUPOBJFAIL_02: \"SYS_MSG_COLL_LOOKUPOBJFAIL_02\",\n    SYS_MSG_COLL_LOOKUPOBJFAIL_03: \"SYS_MSG_COLL_LOOKUPOBJFAIL_03\",\n    SYS_MSG_COLL_EVALMACROFAIL_01: \"SYS_MSG_COLL_EVALMACROFAIL_01\",\n    SYS_MSG_COLL_EVALMACROFAIL_02: \"SYS_MSG_COLL_EVALMACROFAIL_02\",\n    SYS_MSG_COLL_FIELDEXISTSFAIL: \"SYS_MSG_COLL_FIELDEXISTSFAIL\",\n    SYS_MSG_COLL_LOADCURRITEMFAIL_01: \"SYS_MSG_COLL_LOADCURRITEMFAIL_01\",\n    SYS_MSG_OBJ_GENERATEFLDFAIL: \"SYS_MSG_OBJ_GENERATEFLDFAIL\",\n    SYS_MSG_OBJ_SAVEFAIL: \"SYS_MSG_OBJ_SAVEFAIL\",\n    SYS_MSG_OBJ_SAVEFAIL_02: \"SYS_MSG_OBJ_SAVEFAIL_02\",\n    SYS_MSG_OBJ_DELETEOBJFAIL_01: \"SYS_MSG_OBJ_DELETEOBJFAIL_01\",\n    SYS_MSG_OBJ_DELETEOBJFAIL_02: \"SYS_MSG_OBJ_DELETEOBJFAIL_02\",\n    SYS_MSG_OBJ_CREATEFAIL_01: \"SYS_MSG_OBJ_CREATEFAIL_01\",\n    SYS_MSG_OBJ_CREATEFAIL_02: \"SYS_MSG_OBJ_CREATEFAIL_02\",\n    SYS_MSG_OBJ_CREATEFAIL_03: \"SYS_MSG_OBJ_CREATEFAIL_03\",\n    SYS_MSG_OBJ_COPYPROPFAIL: \"SYS_MSG_OBJ_COPYPROPFAIL\",\n    SYS_MSG_OBJ_LINKFAIL_01: \"SYS_MSG_OBJ_LINKFAIL_01\",\n    SYS_MSG_OBJ_LINKFAIL_02: \"SYS_MSG_OBJ_LINKFAIL_02\",\n    SYS_MSG_OBJ_CANNOTDELETE: \"SYS_MSG_OBJ_CANNOTDELETE\",\n    SYS_MSG_OBJ_GETNORMALPROPFAIL: \"SYS_MSG_OBJ_GETNORMALPROPFAIL\",\n    SYS_MSG_OBJ_PROCESSVALFAIL: \"SYS_MSG_OBJ_PROCESSVALFAIL\",\n    SYS_MSG_OBJ_NOXLATTARGET: \"SYS_MSG_OBJ_NOXLATTARGET\",\n    SYS_MSG_OBJ_XLATMISSINGFLD: \"SYS_MSG_OBJ_XLATMISSINGFLD\",\n    SYS_MSG_OBJ_EXECUTEMETHODFAIL_01: \"SYS_MSG_OBJ_EXECUTEMETHODFAIL_01\",\n    SYS_MSG_OBJ_EXECUTEMETHODFAIL_02: \"SYS_MSG_OBJ_EXECUTEMETHODFAIL_02\",\n    SYS_MSG_OBJ_RESTOREMAPFLDFAIL_01: \"SYS_MSG_OBJ_RESTOREMAPFLDFAIL_01\",\n    SYS_MSG_OBJ_RESTOREMAPFLDFAIL_02: \"SYS_MSG_OBJ_RESTOREMAPFLDFAIL_02\",\n    SYS_MSG_OBJ_RESTOREMAPFLDFAIL_03: \"SYS_MSG_OBJ_RESTOREMAPFLDFAIL_03\",\n    SYS_MSG_OBJ_LOADCONTENTFAIL_01: \"SYS_MSG_OBJ_LOADCONTENTFAIL_01\",\n    SYS_MSG_OBJ_LOADCONTENTFAIL_02: \"SYS_MSG_OBJ_LOADCONTENTFAIL_02\",\n    SYS_MSG_OBJ_REPLFLDVALUEMACROFAIL: \"SYS_MSG_OBJ_REPLFLDVALUEMACROFAIL\",\n    SYS_MSG_OBJ_PUTITEMFAIL: \"SYS_MSG_OBJ_PUTITEMFAIL\",\n    SYS_MSG_OBJ_GETFORMULAPROPFAIL_01: \"SYS_MSG_OBJ_GETFORMULAPROPFAIL_01\",\n    SYS_MSG_OBJ_GETFORMULAPROPFAIL_02: \"SYS_MSG_OBJ_GETFORMULAPROPFAIL_02\",\n    SYS_MSG_OBJ_GETEXTFORMULAFAIL: \"SYS_MSG_OBJ_GETEXTFORMULAFAIL\",\n    SYS_MSG_OBJ_CHKUNIQFLDFAIL_01: \"SYS_MSG_OBJ_CHKUNIQFLDFAIL_01\",\n    SYS_MSG_OBJ_CHKUNIQFLDFAIL_02: \"SYS_MSG_OBJ_CHKUNIQFLDFAIL_02\",\n    SYS_MSG_OBJ_UPDDEPTHFAIL_01: \"SYS_MSG_OBJ_UPDDEPTHFAIL_01\",\n    SYS_MSG_OBJ_UPDDEPTHFAIL_02: \"SYS_MSG_OBJ_UPDDEPTHFAIL_02\",\n    SYS_MSG_OBJ_UPDATECNTFAIL: \"SYS_MSG_OBJ_UPDATECNTFAIL\",\n    SYS_MSG_OBJ_SETVALFAIL: \"SYS_MSG_OBJ_SETVALFAIL\",\n    SYS_MSG_OBJ_DOLINKFAIL: \"SYS_MSG_OBJ_DOLINKFAIL\",\n    SYS_MSG_OBJ_SETFLDVALFAIL: \"SYS_MSG_OBJ_SETFLDVALFAIL\",\n    SYS_MSG_OBJ_MAPVALFAIL: \"SYS_MSG_OBJ_MAPVALFAIL\",\n    SYS_MSG_OBJ_EXECCOMPSQLFAIL_01: \"SYS_MSG_OBJ_EXECCOMPSQLFAIL_01\",\n    SYS_MSG_OBJ_EXECCOMPSQLFAIL_02: \"SYS_MSG_OBJ_EXECCOMPSQLFAIL_02\",\n    SYS_MSG_OBJ_RULEFAIL: \"SYS_MSG_OBJ_RULEFAIL\",\n    SYS_MSG_OBJ_RULEFAIL_02: \"SYS_MSG_OBJ_RULEFAIL_02\",\n    SYS_MSG_OBJ_FAILIFNULLFAIL: \"SYS_MSG_OBJ_FAILIFNULLFAIL\",\n    SYS_MSG_OBJ_EOFRULEFAIL: \"SYS_MSG_OBJ_EOFRULEFAIL\",\n    SYS_MSG_OBJ_COMPARENUMBERFAIL: \"SYS_MSG_OBJ_COMPARENUMBERFAIL\",\n    SYS_MSG_OBJ_INCORRECTVALUE: \"SYS_MSG_OBJ_INCORRECTVALUE\",\n    SYS_MSG_CONN_CONNFACTORY: \"SYS_MSG_CONN_CONNFACTORY\",\n    SYS_MSG_CONN_LOADERROR: \"SYS_MSG_CONN_LOADERROR\",\n    SYS_MSG_CONN_RPLLOADERROR: \"SYS_MSG_CONN_RPLLOADERROR\",\n    SYS_MSG_CONN_INCORRECVALUE: \"SYS_MSG_CONN_INCORRECVALUE\",\n    SYS_MSG_CONN_INNERCMDNULL: \"SYS_MSG_CONN_INNERCMDNULL\",\n    SYS_MSG_CONN_INVALIDACTION: \"SYS_MSG_CONN_INVALIDACTION\",\n    SYS_MSG_CONN_CMDNOTINITIALIZED: \"SYS_MSG_CONN_CMDNOTINITIALIZED\",\n    SYS_MSG_CONN_CONNNOTINITIALIZED: \"SYS_MSG_CONN_CONNNOTINITIALIZED\",\n    SYS_MSG_CONN_CLIENTFILENOTFOUND: \"SYS_MSG_CONN_CLIENTFILENOTFOUND\",\n    SYS_MSG_CONN_SQLSYNTAXERROR: \"SYS_MSG_CONN_SQLSYNTAXERROR\",\n    SYS_MSG_CONN_SQLPARSEERROR: \"SYS_MSG_CONN_SQLPARSEERROR\",\n    SYS_MSG_CONN_INVALIDPARAMVAL: \"SYS_MSG_CONN_INVALIDPARAMVAL\",\n    SYS_MSG_CONN_QUEUEINSERTERROR_01: \"SYS_MSG_CONN_QUEUEINSERTERROR_01\",\n    SYS_MSG_CONN_QUEUEINSERTERROR_02: \"SYS_MSG_CONN_QUEUEINSERTERROR_02\",\n    SYS_MSG_CONN_INCORRECTPARAM_01: \"SYS_MSG_CONN_INCORRECTPARAM_01\",\n    SYS_MSG_CONN_INCORRECTPARAM_02: \"SYS_MSG_CONN_INCORRECTPARAM_02\",\n    SYS_MSG_CONN_INVALIDCONNSTRING: \"SYS_MSG_CONN_INVALIDCONNSTRING\",\n    SYS_MSG_APP_CANNOTCREATEMAINCONN: \"SYS_MSG_APP_CANNOTCREATEMAINCONN\",\n    SYS_MSG_APP_OPENCONNERROR: \"SYS_MSG_APP_OPENCONNERROR\",\n    SYS_MSG_APP_LOGONNOUSERCOLL: \"SYS_MSG_APP_LOGONNOUSERCOLL\",\n    SYS_MSG_APP_LOGONUSERNOTFOUND: \"SYS_MSG_APP_LOGONUSERNOTFOUND\",\n    SYS_MSG_APP_UNKNOWNSYSMACRO: \"SYS_MSG_APP_UNKNOWNSYSMACRO\",\n    SYS_MSG_APP_ONLOGONFAILED: \"SYS_MSG_APP_ONLOGONFAILED\",\n    SYS_MSG_APP_ENTIDLEVELFAILED_01: \"SYS_MSG_APP_ENTIDLEVELFAILED_01\",\n    SYS_MSG_APP_NOCOMPANYCOLL: \"SYS_MSG_APP_NOCOMPANYCOLL\",\n    SYS_MSG_APP_NOCOMPANY: \"SYS_MSG_APP_NOCOMPANY\",\n    SYS_MSG_XERR_UNKNOWNMETHOD: \"SYS_MSG_XERR_UNKNOWNMETHOD\",\n    SYS_MSG_CTX_STAKUNDERFLOW: \"SYS_MSG_CTX_STAKUNDERFLOW\",\n    SYS_MSG_USR_READONLYFIELD: \"SYS_MSG_USR_READONLYFIELD\",\n    SYS_MSG_SQL_STRIPFIELDERROR: \"SYS_MSG_SQL_STRIPFIELDERROR\",\n    SYS_MSG_SQL_ADDFIELDERROR: \"SYS_MSG_SQL_ADDFIELDERROR\",\n    SYS_MSG_SQL_EMPTYBUFFERERROR: \"SYS_MSG_SQL_EMPTYBUFFERERROR\",\n    SYS_MSG_SQL_INCOMPLETETOKEN: \"SYS_MSG_SQL_INCOMPLETETOKEN\",\n    SYS_MSG_SQL_SYNTAXERROR: \"SYS_MSG_SQL_SYNTAXERROR\",\n    SYS_MSG_DBG_LINKDISCONNECTED: \"SYS_MSG_DBG_LINKDISCONNECTED\",\n    SYS_MSG_VBS_BADPARAMCOUNT: \"SYS_MSG_VBS_BADPARAMCOUNT\"\n};\n\n//# sourceMappingURL=XoneMessageKeys.js.map\n","import Hashtable from \"../Collections/HashMap/Hashtable\";\nimport Vector from \"../Collections/Vector\";\nimport { Exception } from \"../Exceptions/Exception\";\nimport XoneGenericException from \"../Exceptions/XoneGenericException\";\nimport { XoneMessageKeys } from \"../Exceptions/XoneMessageKeys\";\nimport { SqlParser } from \"../Parsers/SQL/SqlParser\";\nimport Calendar from \"../Utils/Calendar\";\nimport DataUtils from \"../Utils/DataUtils\";\nimport NumberUtils from \"../Utils/NumberUtils\";\nimport ObjUtils from \"../Utils/ObjUtils\";\nimport SqlType from \"../Utils/SqlType\";\nimport StringBuilder from \"../Utils/StringBuilder\";\nimport StringUtils from \"../Utils/StringUtils\";\nimport TextUtils from \"../Utils/TextUtils\";\nimport { Utils } from \"../Utils/Utils\";\nimport XoneLookupObject from \"./XoneLookupObject\";\nvar MovePtrType;\n(function (MovePtrType) {\n\tMovePtrType[(MovePtrType[\"MOVE_PTR_FIRST\"] = 1)] = \"MOVE_PTR_FIRST\";\n\tMovePtrType[(MovePtrType[\"MOVE_PTR_LAST\"] = 2)] = \"MOVE_PTR_LAST\";\n\tMovePtrType[(MovePtrType[\"MOVE_PTR_NEXT\"] = 3)] = \"MOVE_PTR_NEXT\";\n\tMovePtrType[(MovePtrType[\"MOVE_PTR_PREV\"] = 4)] = \"MOVE_PTR_PREV\";\n})(MovePtrType || (MovePtrType = {}));\n// type PageCall {\n//     start: number,\n//     length: number\n// }\n// type OnlineCall {\n//     count: number,\n//     coll: string,\n//     page: PageCall,\n//     loadall: boolean\n// }\nexport default class XoneBrowseData {\n\t/**\n\t *\n\t */\n\tconstructor(dataColl) {\n\t\tthis.m_dataColl = dataColl;\n\t\tlet str = \"\";\n\t\tthis.m_lookupObject = new XoneLookupObject(dataColl.getOwnerApp(), dataColl);\n\t\t// Crear la lista interna\n\t\tthis.m_lstObjectList = new Hashtable();\n\t\tthis.m_lstOrderedList = new Array();\n\t\tthis.m_lstObjectLru = new Vector();\n\t\tthis.m_lstFieldMappings = new Hashtable();\n\t\tthis.m_currentStart = 0;\n\t\tthis.m_currentLength = 1;\n\t\tthis.m_nCurrentIndex = 0;\n\t\tthis.m_bIsFetchDataRunning = false;\n\t\tif (!StringUtils.IsEmptyString((str = this.DataColl.CollPropertyValue(\"connection\")))) {\n\t\t\t// Guardar el nombre\n\t\t\tthis.m_strConnectionName = str;\n\t\t\t// Intenta obtener la conexión ya aquí... si no la encuentra, no pasa nada\n\t\t\tthis.m_connection = this.DataColl.getOwnerApp().getConnection(this.m_strConnectionName);\n\t\t} // Guardar el nombre\n\t\t// F11051804: Si hay atributo userawsql en una colección, no se coge la conexión correcta.\n\t\t// Esta es por defecto...\n\t\telse this.m_connection = this.DataColl.getOwnerApp().getConnection();\n\t}\n\tget DataColl() {\n\t\treturn this.m_dataColl;\n\t}\n\tget Options() {\n\t\treturn this.m_dataColl.Options;\n\t}\n\tisEquivalent(a, b) {\n\t\t// Create arrays of property names\n\t\tvar aProps = Object.getOwnPropertyNames(a);\n\t\tvar bProps = Object.getOwnPropertyNames(b);\n\t\t// If number of properties is different,\n\t\t// objects are not equivalent\n\t\tif (aProps.length != bProps.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (var i = 0; i < aProps.length; i++) {\n\t\t\tvar propName = aProps[i];\n\t\t\t// If values of same property are not equal,\n\t\t\t// objects are not equivalent\n\t\t\tif (a[propName] !== b[propName]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t// If we made it this far, objects\n\t\t// are considered equivalent\n\t\treturn true;\n\t}\n\tAddItem(Item, Index = -1) {\n\t\tlet bAdd = true;\n\t\tlet str = \"\",\n\t\t\tstrKey = \"\";\n\t\tlet objLru;\n\t\tif (this.m_lstCopyList != null) {\n\t\t\tthis.m_lstCopyList = new Vector();\n\t\t}\n\t\t//\n\t\t// Primero ver si hay clave\n\t\tif (\"NULL\".equals((strKey = Item.GetObjectIdString()))) strKey = null;\n\t\t//\n\t\t// Si ahora no la tiene, jodío está el pobre\n\t\tif (!StringUtils.IsEmptyString(strKey)) {\n\t\t\t// Tiene clave\n\t\t\t// Buscar si ya este objeto está en la colección\n\t\t\tif (this.m_lstObjectList.containsKey(strKey)) {\n\t\t\t\t// Ya hay un objeto con esta clave\n\t\t\t\tlet old = this.m_lstObjectList.get(strKey);\n\t\t\t\tif (old != null)\n\t\t\t\t\tif ((bAdd = !this.isEquivalent(old, Item))) {\n\t\t\t\t\t\tif (this.m_lstOrderedList.contains(old)) this.m_lstOrderedList.remove(old);\n\t\t\t\t\t\tif (this.m_lstObjectLru.contains(old)) this.m_lstObjectLru.removeElement(old);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t// Comprobar si es este mismo\n\t\t\t\t//bAdd = false; // Es diferente\n\t\t\t} // Ya hay un objeto con esta clave\n\t\t\tif (bAdd) {\n\t\t\t\t// Hay que adicionar\n\t\t\t\tthis.m_lstObjectList.put(strKey, Item);\n\t\t\t} // Hay que adicionar\n\t\t} // Tiene clave\n\t\t// Si la colección tiene límite, tenemos que cargarnos el objeto menos recientemente\n\t\t// accedido, de manera que el nuevo pase a ser el más recientemente usado...\n\t\tif (this.Options.nThreshold > 0) {\n\t\t\t// Ver si se ha sobrepasado el límite\n\t\t\tif (this.m_lstObjectLru.contains(Item)) this.m_lstObjectLru.removeElement(Item); // Existe en el LRU, eliminarlo de la lista\n\t\t\t// Ahora buscar el menos recientemente usado y sacarlo de la lista\n\t\t\tif (this.m_lstOrderedList.length >= this.Options.nThreshold) {\n\t\t\t\t// Buscar el menos recientemente usado\n\t\t\t\tobjLru = this.m_lstObjectLru[0]; // El primero\n\t\t\t\tif (!StringUtils.IsEmptyString((str = objLru.GetObjectIdString()))) {\n\t\t\t\t\t// Si está en el hash, nos lo cargamos\n\t\t\t\t\tif (this.m_lstObjectList.containsKey(str)) this.m_lstObjectList.delete(str);\n\t\t\t\t} // Si está en el hash, nos lo cargamos\n\t\t\t\t// Ahora nos lo cargamos de la lista\n\t\t\t\tthis.m_lstOrderedList.remove(0);\n\t\t\t\t// Y del LRU\n\t\t\t\tthis.m_lstObjectLru.removeElement(objLru);\n\t\t\t} // Buscar el menos recientemente usado\n\t\t} // Ver si se ha sobrepasado el límite\n\t\tif (Index >= 0) {\n\t\t\t// Tiene índice\n\t\t\tif (this.m_lstOrderedList.length > Index) this.m_lstOrderedList.add(Index, Item);\n\t\t\telse this.m_lstOrderedList.push(Item);\n\t\t} // Tiene índice\n\t\telse {\n\t\t\t// Adicionar a la lista\n\t\t\t// Si no está en lista, lo adicionamos\n\t\t\tif (!this.m_lstOrderedList.contains(Item)) this.m_lstOrderedList.push(Item);\n\t\t} // Adicionar a la lista\n\t\t// Si hay LRU, adicionar al final\n\t\tif (this.Options.nThreshold > 0) this.m_lstObjectLru.push(Item); // Adicionar este al final\n\t\t// Si se ha adicionado, actualizar el BL solo si es especial\n\t\tif (this.m_bIsSpecial) this.m_nBrowseLength = this.m_lstOrderedList.length;\n\t\t// Completo\n\t\treturn true;\n\t}\n\t/**\n\t * Devuelve el índice de un objeto dentro de la colección\n\t * @param Item\t\t\tObjeto cuyo índice se quiere conocer.\n\t * @return\t\t\t\tDevuelve el índice del objeto o -1 si no está en la lista.\n\t */\n\tObjectIndex(Item) {\n\t\t// Si no está, no está...\n\t\tif (!this.m_lstOrderedList.contains(Item)) return -1;\n\t\tfor (let i = 0; i < this.m_lstOrderedList.length; i++) if (this.m_lstOrderedList[i] === Item) return i;\n\t\t// Completo\n\t\treturn -1;\n\t}\n\tGetObjectInt(Index) {\n\t\t// Devolver el elemento indicado por Index\n\t\tif (this.m_lstOrderedList.length <= Index) return null;\n\t\tif (Index < 0) Index = 0;\n\t\treturn this.m_lstOrderedList[Index];\n\t}\n\tget ObjectList() {\n\t\treturn this.m_lstObjectList;\n\t}\n\t/**\n\t * Devuelve un objeto cuya clave se pasa como parámetro. Busca en colección primero y si no se encuentra se busca\n\t * en la base de datos siguiendo el criterio de esta clave.\n\t * @param Key\t\tClave de acceso (ID llevado a cadena o clave de texto que lo identifica)\n\t * @return\t\t\tDevuelve el objeto cuya clave corresponde con el parámetro indicado.\n\t * @throws Exception\n\t */\n\tasync GetObjectSring(Key) {\n\t\t// Buscar en la lista de objetos en memoria por la clave\n\t\tif (this.m_lstObjectList.containsKey(Key)) return this.m_lstObjectList.get(Key);\n\t\t// De lo contrario habrá que buscarlo...\n\t\tlet strField = this.DataColl.getIdFieldName();\n\t\tlet objVal = null;\n\t\tif (this.Options.bStringPk) objVal = Key;\n\t\telse objVal = NumberUtils.SafeToInt(Key);\n\t\tif (objVal == null) return null;\n\t\t// Ahora tenemos que buscar usando esta pareja como si fuera una búsqueda normal\n\t\treturn await this.GetObject(strField, objVal);\n\t}\n\tGetLocalObject(FieldName, FieldValue) {\n\t\t// Buscar un objeto por campo=valor tiene su moña\n\t\t//let obj: XoneDataObject = null;\n\t\tif (typeof FieldName === \"number\") return this.GetObjectInt(FieldName);\n\t\tif (FieldValue == null) {\n\t\t\tconst Key = FieldName;\n\t\t\tif (this.m_lstObjectList.containsKey(Key)) return this.m_lstObjectList.get(Key);\n\t\t}\n\t\t//return this.GetObjectSring(FieldName as string);\n\t\t// Primero buscar en la lista en memoria\n\t\t// F11110901: La búsqueda de objetos en cache debe hacerse en el OrderedList.\n\t\t// Busquemos en la lista ordenada porque igual es el mayor conjunto\n\t\t// Luis: Creo que debemos ser mas permisivos\n\t\tlet e = this.m_lstOrderedList.entries;\n\t\tfor (let i = 0; i < e.length; i++) {\n\t\t\t// Si alguno tiene este valor, lo devolvemos\n\t\t\tlet v = e[i];\n\t\t\t// F11092604: Al buscar un objeto por campo/valor, si el campo no existe lanzar un error.\n\t\t\t// v!=null && v.get(FieldName)!=null &&  Por Ahora no lo he puesto porque tenemos que ver\n\t\t\t// y creo que es mejor lanzar una error con que el campo no esta definido en el mapping, que es la causa casi segura\n\t\t\t// TODO ADD TAG Luis Proteccion cuando un valor es null\n\t\t\t//if (v.get(FieldName).equals(FieldValue))\n\t\t\tif (ObjUtils.EqualObj(v.get(FieldName), FieldValue)) return v;\n\t\t} // Si alguno tiene este valor, lo devolvemos\n\t\treturn null;\n\t}\n\tasync GetObject(FieldName, FieldValue, UseFilters = true, SearchDb = true) {\n\t\tvar _a;\n\t\t// Buscar un objeto por campo=valor tiene su moña\n\t\tlet obj = null;\n\t\tif (typeof FieldName === \"number\") return this.GetObjectInt(FieldName);\n\t\tif (FieldValue == null) return await this.GetObjectSring(FieldName);\n\t\t// Primero buscar en la lista en memoria\n\t\t// F11110901: La búsqueda de objetos en cache debe hacerse en el OrderedList.\n\t\t// Busquemos en la lista ordenada porque igual es el mayor conjunto\n\t\t// Luis: Creo que debemos ser mas permisivos\n\t\t// let e =this.m_lstOrderedList.entries;\n\t\t// for (let i=0;i<e.length;i++)\n\t\t// {// Si alguno tiene este valor, lo devolvemos\n\t\t// \tlet v =e[i];\n\t\t// \t// F11092604: Al buscar un objeto por campo/valor, si el campo no existe lanzar un error.\n\t\t// \t// v!=null && v.get(FieldName)!=null &&  Por Ahora no lo he puesto porque tenemos que ver\n\t\t// \t// y creo que es mejor lanzar una error con que el campo no esta definido en el mapping, que es la causa casi segura\n\t\t// \t// TODO ADD TAG Luis Proteccion cuando un valor es null\n\t\t//     //if (v.get(FieldName).equals(FieldValue))\n\t\t// \tif (ObjUtils.EqualObj(v.get(FieldName),FieldValue))\n\t\t//         return v;\n\t\t// }// Si alguno tiene este valor, lo devolvemos\n\t\t// M09072902:\tOptimizaciones varias en las búsquedas de objetos.\n\t\t// Mover esto para aquí... si no hay que buscar en base de datos habrá que irse antes\n\t\t// Este tipo de campo es especial...\n\t\t// ADD TAG Luis si es especial no buscar en BD\n\t\tif (((_a = FieldName) === null || _a === void 0 ? void 0 : _a.equals(\"MAP_$KEY\")) || this.m_bIsSpecial) SearchDb = false;\n\t\t// Si no hay que buscar en base de datos no lo hacemos\n\t\tif (SearchDb && obj == null) {\n\t\t\t// Buscar en base de datos\n\t\t\t// M09072902:\tOptimizaciones varias en las búsquedas de objetos.\n\t\t\t// Mover estas cosas para dentro de esta condición porque no tienen sentido si no hay\n\t\t\t// que buscar en base de datos.\n\t\t\t// No lo tiene, seguramente habrá que buscar en base de datos\n\t\t\t// Comprobar si el campo es el de ID, en cuyo caso habrá que hacer algunas conversiones\n\t\t\tlet strKeySearch = await this.GenerateKeySearch(FieldName, FieldValue);\n\t\t\tlet strCmd = await this.GenerateSearchSql(strKeySearch);\n\t\t\t// Buscar en base de datos\n\t\t\treturn await this.LookupObject(strCmd, strKeySearch, await this.IsSqlPrefiltered());\n\t\t\t//   if (\n\t\t\t//     null !=\n\t\t\t//     (obj =\n\t\t\t//   ) {\n\t\t\t//     // Lo tenemos\n\t\t\t//     obj.OnNormalSearh();\n\t\t\t//     return obj;\n\t\t\t//   } // Lo tenemos\n\t\t} // Buscar en base de datos\n\t\t//\n\t\t// TODO:    Ver si pasamos el mecanismo de helpers para otros tipos de búsqueda y tal...\n\t\t// Al final devolver lo que setenga\n\t\treturn obj;\n\t}\n\tasync LookupObject(strCmd, strKeySearch, arg2) {\n\t\treturn await this.m_lookupObject.LookupObject(strCmd, strKeySearch, arg2);\n\t}\n\t/**\n\t * Efectúa una búsqueda en la base de datos dado un criterio de búsqueda tipo WHERE. Si se encuentra el objeto, se adiciona a la colección.\n\t * @param SearchCriteria\t\t\t\tCriteriors de búsqueda para armar la sentencia SQL\n\t * @return\t\t\t\t\t\t\t\tDevuelve el objeto buscado según los criterios o NULL si no se puede encontrar.\n\t * @throws XoneGenericException\n\t */\n\tasync findObject(SearchCriteria) {\n\t\tlet strCmd = \"\",\n\t\t\tstr = \"\",\n\t\t\tstrTmp = \"\";\n\t\tlet obj = null;\n\t\ttry {\n\t\t\t// F11111103: FindObject debería limpiar el error antes de empezar a trabajar.\n\t\t\t//this.DataColl.getOwnerApp().ClearError();\n\t\t\tif (StringUtils.IsEmptyString(SearchCriteria)) return null;\n\t\t\t// str = await this.ApplyFilters(false);\n\t\t\t// if (!StringUtils.IsEmptyString(str))\n\t\t\t//     str = \" AND (\" + str + \")\";\n\t\t\t// Preparar los criterios\n\t\t\tstrTmp = await this.PrepareFilter(SearchCriteria);\n\t\t\t// str = strTmp + str;\t\t// Los paréntesis por si las moscas\n\t\t\t// if (this.m_bSingleObject)\n\t\t\t//     strCmd = \"SELECT * FROM \" + this.DataColl.getAccessString() + \" rrss WHERE \" + str;\n\t\t\t// else {// Un query\n\t\t\t//     if (!this.DataColl.Options.bUseRaw)\n\t\t\t//         strCmd = \"SELECT * FROM (\" + this.DataColl.getAccessString() + \") rrss WHERE \" + str;\n\t\t\t//     else\n\t\t\t//         strCmd = await this.EmbedFilters(str);\n\t\t\t// }// Un query\n\t\t\tobj = await this.LookupObject(strCmd, strTmp, await this.IsSqlPrefiltered());\n\t\t\treturn obj;\n\t\t} catch (ex) {\n\t\t\t//TODO ADD TAG Juan Carlos. getMessage puede devolver null.\n\t\t\tlet sDetails = ex.message;\n\t\t\t// M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n\t\t\t////throw new XoneGenericException(-1002, \"CXoneDataCollection::findObject ha fallado. \" + e.getMessage());\n\t\t\tlet sMessage = this.DataColl.GetMessage(XoneMessageKeys.SYS_MSG_GENERALFAIL, \"{0} failed. \");\n\t\t\tsMessage = sMessage.replace(\"{0}\", \"CXoneDataCollection::findObject\");\n\t\t\tif (!StringUtils.IsEmptyString(sDetails)) {\n\t\t\t\tsMessage = sMessage.concat(sDetails);\n\t\t\t}\n\t\t\tthrow new XoneGenericException(-1002, ex, sMessage);\n\t\t}\n\t}\n\tPrepareSpecialCollection() {\n\t\t// F11090501: onprepare debe fallar si no hay nodo, porque es lo que se espera fuera.\n\t\t// Si no hay nodo, fallar...\n\t\tif (null == this.m_dataColl.getNode(\"onprepare\")) return false; // No hay nodo\n\t\t// Ejecutar las acciones de este nodo\n\t\treturn false; // TODO: ExecuteCollAction(\"onprepare\");\n\t}\n\tasync CountAsync(data) {\n\t\tlet rs = await this.DataColl.getConnection().CountAsync(null, data);\n\t\tif (rs) {\n\t\t\tif (await rs.next()) {\n\t\t\t\treturn rs.getInt(\"N\");\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\t/**\n\t * Inicializa un recorrido por los objetos en base de datos. Cuenta los elementos en función de lo que se indique como parámetro.\n\t * @param CountRecords\t\tTRUE para contar los elementos del recorrido\n\t * @return\t\t\t\t\tDevuelve TRUE si el recorrido se inicia correctamente.\n\t * @throws Exception\n\t */\n\tasync startBrowse(CountRecords = false, options) {\n\t\tthis.m_bIsSpecial = this.DataColl.Options.bIsSpecial;\n\t\tlet strCmd = \"\",\n\t\t\tstr = \"\",\n\t\t\tstr1 = \"\",\n\t\t\tstrAccString = \"\";\n\t\tlet bPrefiltered = false;\n\t\t//  Si es una colección especial, es el objeto\n\t\t//  propietario quien tiene que llenarla. Problema\n\t\t//  suyo...\n\t\tif (this.m_bIsSpecial) {\n\t\t\t// Preparar la colección para el recorrido\n\t\t\tif (!this.PrepareSpecialCollection()) {\n\t\t\t\t// No tiene nodo, prepararla en el propietario o fallar\n\t\t\t\tif (this.DataColl.getOwnerObject() != null) this.DataColl.getOwnerObject().PrepareSpecialCollection(this.DataColl);\n\t\t\t\tthis.m_nBrowseLength = this.m_lstOrderedList.length;\n\t\t\t\tthis.m_nCurrentIndex = 0;\n\t\t\t\tif (await this.LoadCurrentItem()) return this.DataColl;\n\t\t\t} // No tiene nodo, prepararla en el propietario o fallar\n\t\t} // Preparar la colección para el recorrido\n\t\telse this.EndBrowse();\n\t\twhile (this.m_bIsFetchDataRunning == true) await (() => new Promise((resolve) => setTimeout(() => resolve(), 100)))();\n\t\t// Ahora hay que crear un nuevo recordset e iniciar el\n\t\t// recorrido\n\t\ttry {\n\t\t\tthis.m_bIsFetchDataRunning = true;\n\t\t\tthis.m_nCurrentRow = 0;\n\t\t\tthis.ClearCurrentItem(true); // El actual y el anterior\n\t\t\t//\n\t\t\t// Preparar el comando\n\t\t\t// Como en LoadAll, puede ser que la cadena SQL no sea válida, así que\n\t\t\t// nos protegemos al menos de que sea una cadena vacía...\n\t\t\tif (StringUtils.IsEmptyString((strAccString = this.DataColl.getAccessString())) && !this.getConnection().acceptsEmptyQueries()) return null;\n\t\t\t// Preparar el comandillo\n\t\t\tstrCmd = \"\";\n\t\t\t// if (this.DataColl.Options.bParseSQL) {\n\t\t\t//     if (this.DataColl.Options.bSingleObject)\n\t\t\t//         strCmd = \"SELECT * FROM \" + strAccString + \" rrss\";\n\t\t\t//     else if (!this.DataColl.Options.bUseRaw)\n\t\t\t//         strCmd = \"SELECT * FROM (\" + strAccString + \") rrss\";\n\t\t\t//     // Comprobar si ya trae WHERE de antes, entonces no habrá que cambiarlo por HAVING\n\t\t\t//     // porque estará bien, digo yo...\n\t\t\t//     if (this.DataColl.Options.bUseRaw && !this.DataColl.Options.bSingleObject) {// Ver si está prefiltrado\n\t\t\t//         bPrefiltered = await this.IsSqlPrefiltered();\n\t\t\t//     }// Ver si está prefiltrado\n\t\t\t//     // Aplica el filtro de enlace\n\t\t\t//     if (!this.DataColl.Options.bUseRaw)\n\t\t\t//         strCmd += await this.ApplyFilters(true);\n\t\t\t//     else\n\t\t\t//         strCmd = await this.EmbedFilters(this.m_parsedAccessString);\n\t\t\t// } else {\n\t\t\t//     strCmd = strAccString;\n\t\t\t//     bPrefiltered = false;\n\t\t\t// }\n\t\t\t// // Aplica el ordenamiento si existe\n\t\t\t// str1 = this.PrepareSort(this.DataColl.getSort());\n\t\t\t// if (!StringUtils.IsEmptyString(str1)) {// Tiene sort\n\t\t\t//     str = (\" ORDER BY \" + str1);\n\t\t\t//     strCmd += str;\n\t\t\t// }// Tiene sort\n\t\t\t// //\n\t\t\t// // Preparar las posibles macros globales\n\t\t\t// // F12042601: PrepareSqlString no delega en la aplicación cuando se llama a la colección.\n\t\t\t// strCmd = this.PrepareSqlString(strCmd, false, bPrefiltered);\n\t\t\t// // Comprobar si es un contents\n\t\t\t// if (this.DataColl.getOwnerObject() != null && strCmd.contains(\"##\"))\n\t\t\t//     strCmd = this.DataColl.getOwnerObject().PrepareSqlString(strCmd);\n\t\t\t// //////if (strCmd.contains(\"##\"))\n\t\t\t// //////\tstrCmd =m_owner.PrepareSqlString(strCmd);\n\t\t\t// // Evaluar las macros\n\t\t\t// strCmd = await this.DataColl.EvaluateAllMacros(strCmd, true);\n\t\t\tconst swhere = await this.ResolveFilters(false, null);\n\t\t\tconst sSort = this.DataColl.getSort();\n\t\t\tthis.DataColl.ParseMacros(swhere);\n\t\t\tthis.DataColl.ParseMacros(sSort);\n\t\t\tthis.DataColl.ParseMacros(str);\n\t\t\tstrCmd = await this.DataColl.EvaluateAllMacros(str, true);\n\t\t\tconst data = {\n\t\t\t\tcoll: this.DataColl.getName(),\n\t\t\t\tmacros: this.DataColl.getMacros(),\n\t\t\t\twhere: swhere,\n\t\t\t\tsort: sSort,\n\t\t\t\tloadall: false,\n\t\t\t\tpage: {},\n\t\t\t};\n\t\t\t//  Los DBMS que usan el SQL tal cual no pueden sustituir el LIMIT usando macrosustitución\n\t\t\t//  porque no se puede encerrar un SELECT dentro de otro, así que habrá que ponerlo al final\n\t\t\t//  en esos casos...\n\t\t\tif (this.DataColl.Options.bDebug) {\n\t\t\t\t// Dejar traza del SQL\n\t\t\t\tstr = \"\\r\\n\" + strCmd + \"\\r\\n\";\n\t\t\t\tthis.DataColl.getOwnerApp().writeConsoleString(str);\n\t\t\t} // Dejar traza del SQL\n\t\t\t// Si estamos en debug, habrá que sacar alguna cosilla\n\t\t\t// A12042503: Mecanismo para registrar un modo debug global en la aplicación.\n\t\t\tif (this.DataColl.getIsDebugging() || this.DataColl.getOwnerApp().isDebugMode())\n\t\t\t\tUtils.DebugLog(Utils.TAG_DATABASE_LOG, \"StartBrowse: \" + strCmd);\n\t\t\t// Contar records de forma directa, por ahora no lo utilizo\n\t\t\tif (CountRecords == true) this.m_nBrowseLength = await this.CountAsync(Object.assign({ count: true, page: {} }, data));\n\t\t\telse this.m_nBrowseLength = -1;\n\t\t\tif (\n\t\t\t\tnull ==\n\t\t\t\t(this.m_rs = await this.getConnection().CreateRecordsetAsync(\n\t\t\t\t\tstrCmd,\n\t\t\t\t\tObject.assign(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcount: CountRecords,\n\t\t\t\t\t\t\tpage: options != null ? options : {},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdata\n\t\t\t\t\t)\n\t\t\t\t))\n\t\t\t) {\n\t\t\t\t// Error\n\t\t\t\t// Error\n\t\t\t\t// M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n\t\t\t\t////throw new XoneGenericException(-1900, \"Error intentando abrir la conexión de datos de la colección '\" + m_strName + \"'\");\n\t\t\t\tlet sb = this.DataColl.GetMessage(XoneMessageKeys.SYS_MSG_COLL_COLLCONNOPENERR, \"Error opening connection in collection '{0}'\");\n\t\t\t\tsb = sb.replace(\"{0}\", this.DataColl.getName());\n\t\t\t\tthrow new XoneGenericException(-1900, sb);\n\t\t\t} // Error\n\t\t\t// // Obtener la cantidad de elementos\n\t\t\t// // cambio Sergio\n\t\t\t// if (CountRecords && !(this.m_rs.EOF()))\n\t\t\t//     this.m_nBrowseLength = await this.GetRowCount();    // Buscar la cantidad de elementos a recorrer\n\t\t\t// else\n\t\t\t//     this.m_nBrowseLength = -1;\n\t\t\t//\n\t\t\t// Supuestamente debe cargar el primer elemento de este\n\t\t\t// recorrido, no es necesario meter MoveFirst\n\t\t\t// Ahora tendrá que seguir recorriendo la colección\n\t\t\t// Comprobar la máscara de visibilidad que tiene que comparar con cada\n\t\t\t// una de las propiedades para preparar la colección de campos a leer\n\t\t\tif (!(await this.MoveFirst())) {\n\t\t\t\t// Error\n\t\t\t\tthis.m_rs.close();\n\t\t\t\tthis.m_rs = null;\n\t\t\t\treturn null;\n\t\t\t} // Error\n\t\t\t// M11111701: Protección de colecciones abiertas por error en scripts.\n\t\t\t// Si tenemos recordset, entonces tenemos que notificarlo\n\t\t\tthis.DataColl.getOwnerApp().AddOpenColl(this.DataColl);\n\t\t\treturn this.DataColl;\n\t\t} catch (ex) {\n\t\t\tthis.m_bIsFetchDataRunning = false;\n\t\t\tconsole.error(ex);\n\t\t\t//ex.printStackTrace();\n\t\t\t// M11111701: Protección de colecciones abiertas por error en scripts.\n\t\t\t// Intento desesperado\n\t\t\tthis.EndBrowse();\n\t\t\t// M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n\t\t\t/////throw new XoneGenericException(-1008, \"CXoneDataCollection::StartBrowse ha fallado en la colección '\" + m_strName + \"'. \" + e.getMessage());\n\t\t\tlet sb = this.DataColl.GetMessage(XoneMessageKeys.SYS_MSG_GENERALFAIL, \"{0} failed. \");\n\t\t\tsb = sb.replace(\"{0}\", \"CXoneDataCollection::StartBrowse\");\n\t\t\t//Juan Carlos: No todas las excepciones traen mensaje extra.\n\t\t\tlet message = ex.message;\n\t\t\tif (message != null) {\n\t\t\t\tsb = sb.concat(message);\n\t\t\t}\n\t\t\tthrow new XoneGenericException(-1008, ex, sb);\n\t\t} finally {\n\t\t\tthis.m_bIsFetchDataRunning = false;\n\t\t}\n\t}\n\tbrowseLength() {\n\t\treturn this.m_nBrowseLength;\n\t}\n\t/**\n\t * @return\t\tDevuelve la cantidad de filas que se van a recorrer en un SB/EB\n\t */\n\tasync GetRowCount() {\n\t\tlet nCount = 0;\n\t\tlet strCmd = \"\",\n\t\t\tstrAccString = \"\",\n\t\t\tstr = \"\";\n\t\tlet rs = null;\n\t\t// O10052501:\tPara contar las filas se pueden usar subqueries en sqlite.\n\t\tlet prefiltered = false;\n\t\tlet FunctionName = \"CXoneDataCollection::GetRowCount\";\n\t\ttry {\n\t\t\t// Si no hay cadena de acceso, será que va a devolver cero filas, a menos que sea\n\t\t\t// especial, en ese caso devuelve el Count\n\t\t\tstrAccString = this.DataColl.getAccessString();\n\t\t\tif (StringUtils.IsEmptyString(strAccString)) {\n\t\t\t\t// Ver si es especial\n\t\t\t\tif (this.m_bIsSpecial) return this.getCount();\n\t\t\t} // Ver si es especial\n\t\t\t// Preparar el SQL para contar la cantidad de ocurrencias de la clave primaria\n\t\t\tif (this.m_bSingleObject) strCmd = \"SELECT COUNT(\" + this.DataColl.strPk + \") AS N FROM \" + strAccString + \" rrss \";\n\t\t\telse {\n\t\t\t\t// No es solo una tabla\n\t\t\t\t// O10052501:\tPara contar las filas se pueden usar subqueries en sqlite.\n\t\t\t\t// Usaremos un subquery aunque no está marcado para este caso concreto.\n\t\t\t\tif (!this.DataColl.Options.bUseRaw || strAccString.toLowerCase().contains(\"group by\")) {\n\t\t\t\t\t// Soporta subqueries\n\t\t\t\t\t// O10052501:\tPara contar las filas se pueden usar subqueries en sqlite.\n\t\t\t\t\t// Al haber agrupación tendríamos que cambiar WHERE por HAVING...\n\t\t\t\t\tlet tmpSql = strAccString + \" \" + StringUtils.Replace(await this.ApplyFilters(true), \" WHERE \", \" HAVING \");\n\t\t\t\t\tstrCmd = \"SELECT COUNT(\" + this.DataColl.strPk + \") AS N FROM (\" + tmpSql + \") rrss\";\n\t\t\t\t\tprefiltered = true;\n\t\t\t\t} // Soporta subqueries\n\t\t\t\telse {\n\t\t\t\t\t// No soporta subqueries\n\t\t\t\t\tif (this.m_parsedAccessString == null) if (!(await this.ParseAccessString())) return -1;\n\t\t\t\t\t// Con lo que ha sacado, armar un SQL único para contar cada\n\t\t\t\t\t// miembro del UNION si lo hay\n\t\t\t\t\tlet lparser = new SqlParser(this.m_parsedAccessString);\n\t\t\t\t\tlparser.CopyData(this.m_parsedAccessString);\n\t\t\t\t\tif (!lparser.getIsUnionQuery()) {\n\t\t\t\t\t\t// Uno solo\n\t\t\t\t\t\tstr = \"COUNT(\" + this.QualifyField(this.DataColl.strPk) + \")\";\n\t\t\t\t\t\tlparser.clearQueryFields();\n\t\t\t\t\t\tlparser.AddField(str, \"N\");\n\t\t\t\t\t\t// Adicionar los filtros\n\t\t\t\t\t\tstrCmd = await this.EmbedFilters(lparser, null);\n\t\t\t\t\t} // Uno solo\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Unión\n\t\t\t\t\t\tfor (let i = 0; i < lparser.getUnionQueries().length; i++) {\n\t\t\t\t\t\t\t// Cada uno de los subqueries\n\t\t\t\t\t\t\tlet query = lparser.getUnionQueries()[i];\n\t\t\t\t\t\t\tstr = \"COUNT(\" + this.QualifyField(this.DataColl.strPk, query) + \")\";\n\t\t\t\t\t\t\tquery.clearQueryFields();\n\t\t\t\t\t\t\tquery.AddField(str, \"N\");\n\t\t\t\t\t\t} // Cada uno de los subqueries\n\t\t\t\t\t\t// Regenerar\n\t\t\t\t\t\tstrCmd = await this.EmbedFilters(lparser, null);\n\t\t\t\t\t} // Unión\n\t\t\t\t} // No soporta subqueries\n\t\t\t} // No es solo una tabla\n\t\t\t// Preparar las posibles macros globales\n\t\t\t// O10052501:\tPara contar las filas se pueden usar subqueries en sqlite.\n\t\t\t// Sustituciones propias de SQLITE para mejorar la ejecución de la sentencia.\n\t\t\tstrCmd = this.getConnection().PrepareSqlString(strCmd, false, prefiltered);\n\t\t\t// M11011001:\tIncluir macros globales y evaluación de dichas macros para IMEI y demás.\n\t\t\t// Macros y demás\n\t\t\tstrCmd = await this.DataColl.EvaluateAllMacros(strCmd, true);\n\t\t\tstrCmd = strCmd.replace(\"\\t\", \" \");\n\t\t\tstrCmd = strCmd.replace(\"\\r\", \" \");\n\t\t\tstrCmd = strCmd.replace(\"\\n\", \" \");\n\t\t\tif (this.DataColl.Options.bDebug) {\n\t\t\t\t// Dejar traza del SQL\n\t\t\t\tstr = \"\\r\\n\" + strCmd + \"\\r\\n\";\n\t\t\t\tthis.DataColl.getOwnerApp().writeConsoleString(str);\n\t\t\t} // Dejar traza del SQL\n\t\t\t// Ahora abre el recordset para contar\n\t\t\t// A12042503: Mecanismo para registrar un modo debug global en la aplicación.\n\t\t\tif (this.DataColl.getIsDebugging() || this.DataColl.getOwnerApp().isDebugMode())\n\t\t\t\tUtils.DebugLog(Utils.TAG_DATABASE_LOG, \"GetRowCount: \" + strCmd);\n\t\t\tif (\n\t\t\t\tnull ==\n\t\t\t\t(rs = await this.DataColl.getConnection().CreateRecordsetAsync(strCmd, {\n\t\t\t\t\tcount: true,\n\t\t\t\t\tcoll: this.DataColl.getName(),\n\t\t\t\t\tmacros: this.DataColl.getMacros(),\n\t\t\t\t\tloadall: false,\n\t\t\t\t\tpage: {},\n\t\t\t\t}))\n\t\t\t) {\n\t\t\t\t// Error\n\t\t\t\t// M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n\t\t\t\t////throw new XoneGenericException(-2000, \"XoneDataCollection::GetRowCount ha fallado. No se puede abrir la consulta para contar los registros.\");\n\t\t\t\tlet sb = this.DataColl.GetMessage(XoneMessageKeys.SYS_MSG_COLL_GETROWCOUNTFAIL, \"{0} failed. Row count query failed.\");\n\t\t\t\tsb = sb.replace(\"{0}\", FunctionName);\n\t\t\t\tthrow new XoneGenericException(-2000, sb);\n\t\t\t} // Error\n\t\t\t//\n\t\t\t// Recorrer el recordset abierto e ir sumando los resultados\n\t\t\twhile (await rs.next()) {\n\t\t\t\t// Para cada registro\n\t\t\t\tnCount += DataUtils.RsReadLong(rs, \"N\");\n\t\t\t\tif (this.m_nMaxRows > 0)\n\t\t\t\t\tif (nCount > this.m_nMaxRows) {\n\t\t\t\t\t\t// Pasado el máximo\n\t\t\t\t\t\tnCount = this.m_nMaxRows;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} // Pasado el máximo\n\t\t\t} // Para cada registro\n\t\t\trs.close();\n\t\t\trs = null;\n\t\t\treturn nCount;\n\t\t} catch (ex) {\n\t\t\tif (rs != null) {\n\t\t\t\t// Cerrar\n\t\t\t\ttry {\n\t\t\t\t\trs.close();\n\t\t\t\t} catch (se) {\n\t\t\t\t\t// Ignorar esta excepción\n\t\t\t\t}\n\t\t\t\trs = null;\n\t\t\t} // Cerrar\n\t\t\t// M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n\t\t\t////throw new XoneGenericException(-87878, \"CXoneDataCollection::GetRowCount ha fallado. \" + e.getMessage());\n\t\t\tlet sMessage = ex.message;\n\t\t\tlet sb = this.DataColl.GetMessage(XoneMessageKeys.SYS_MSG_GENERALFAIL, \"{0} failed. \");\n\t\t\tsb = sb.replace(\"{0}\", FunctionName);\n\t\t\tif (!TextUtils.isEmpty(sMessage)) {\n\t\t\t\tsb = sb.concat(sMessage);\n\t\t\t}\n\t\t\tthrow new XoneGenericException(-87878, ex, sb);\n\t\t}\n\t}\n\t/**\n\t * Mueve el recorrido hacia el primer objeto y lo carga en el CurrentItem\n\t *\n\t * K12112101: Cambios de interfaz en funciones de maquinaria para facilitar la gestión visual.\n\t * Poner esto público.\n\t *\n\t * @return\t\t\tDevuelve TRUE si la operación es correcta.\n\t * @throws Exception\n\t */\n\tasync MoveFirst() {\n\t\t// Iniciar el contador de objetos.\n\t\tthis.m_nBrowseOrder = 1;\n\t\tif (this.m_bIsSpecial) {\n\t\t\t// Especial\n\t\t\tthis.m_nCurrentIndex = 0;\n\t\t\treturn await this.LoadCurrentItem();\n\t\t} // Especial\n\t\treturn await this.MovePtr(MovePtrType.MOVE_PTR_FIRST);\n\t}\n\t/**\n\t * Mueve el recorrido hacia el siguiente objeto\n\t * @return\t\t\tDevuelve TRUE si la operación es correcta.\n\t * @throws Exception\n\t */\n\tasync MoveNext() {\n\t\tthis.m_nBrowseOrder++;\n\t\tif (this.m_bIsSpecial) {\n\t\t\t// Especial\n\t\t\tif (++this.m_nCurrentIndex >= this.m_nBrowseLength) this.m_nCurrentIndex = -1;\n\t\t\treturn await this.LoadCurrentItem();\n\t\t} // Especial\n\t\treturn await this.MovePtr(MovePtrType.MOVE_PTR_NEXT);\n\t}\n\t/**\n\t * Mueve el recorrido al último objeto\n\t * @return\t\t\tDevuelve TRUE si la operación es correcta.\n\t * @throws Exception\n\t */\n\tasync MoveLast() {\n\t\tthis.m_nBrowseOrder = -1;\n\t\tif (this.m_bIsSpecial) {\n\t\t\t// Especial\n\t\t\tthis.m_nCurrentIndex = this.m_nBrowseLength > 0 ? this.m_nBrowseLength - 1 : 0;\n\t\t\treturn await this.LoadCurrentItem();\n\t\t} // Especial\n\t\treturn await this.MovePtr(MovePtrType.MOVE_PTR_LAST);\n\t}\n\t/**\n\t * Mueve el recorrido al objeto anterior\n\t * @return\t\t\tDevuelve TRUE si la operación es correcta.\n\t * @throws Exception\n\t */\n\tasync MovePrevious() {\n\t\tif (--this.m_nBrowseOrder < 1) this.m_nBrowseOrder = 1;\n\t\tif (this.m_bIsSpecial) {\n\t\t\t// Especial\n\t\t\tthis.m_nCurrentIndex -= this.m_nCurrentIndex > 0 ? 1 : 0;\n\t\t\treturn await this.LoadCurrentItem();\n\t\t} // Especial\n\t\treturn await this.MovePtr(MovePtrType.MOVE_PTR_PREV);\n\t}\n\t/**\n\t * Interna para mover el puntero de la base de datos o fuente externa en función del tipo de colección y demás.\n\t * @param Type\t\tTipo de movimiento que se quiere efectuar (dirección de movimiento, etc.)\n\t * @return\t\t\tDevuelve TRUE si la operación es correcta.\n\t */\n\tasync MovePtr(Type) {\n\t\t//////boolean bFrst = false;\n\t\tlet bClear = false;\n\t\tlet bResult = false;\n\t\ttry {\n\t\t\tif (this.m_rs != null) {\n\t\t\t\t// Hay rs\n\t\t\t\tswitch (\n\t\t\t\t\tType // Qué tipo de movimiento\n\t\t\t\t) {\n\t\t\t\t\tcase MovePtrType.MOVE_PTR_FIRST:\n\t\t\t\t\t\tawait this.m_rs.next(); // Por ahora solamente leemos el primero\n\t\t\t\t\t\t//////m_bFrst = false;\n\t\t\t\t\t\tthis.m_nCurrentRow = 0;\n\t\t\t\t\t\tif (this.m_bHasTopRow && this.m_pTopRowItem != null) this.m_pTopRowItem = null; // El que sea se va del aire\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase MovePtrType.MOVE_PTR_LAST:\n\t\t\t\t\t\t// m_rs ->MoveLast ();\n\t\t\t\t\t\tif (this.m_nMaxRows > 0) this.m_nCurrentRow = this.m_nMaxRows - 1; // Moverse hasta la que es\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase MovePtrType.MOVE_PTR_NEXT:\n\t\t\t\t\t\tlet bHasNext = false;\n\t\t\t\t\t\tif (this.m_nMaxRows > 0) {\n\t\t\t\t\t\t\t// Ver si se mueve o no\n\t\t\t\t\t\t\tif (this.m_nCurrentRow < this.m_nMaxRows) {\n\t\t\t\t\t\t\t\t// Puede\n\t\t\t\t\t\t\t\tthis.m_nCurrentRow++;\n\t\t\t\t\t\t\t\tbHasNext = await this.m_rs.next();\n\t\t\t\t\t\t\t} // Puede\n\t\t\t\t\t\t} // Ver si se mueve o no\n\t\t\t\t\t\telse bHasNext = await this.m_rs.next();\n\t\t\t\t\t\t// Si no hay más elementos, entonces cerramos\n\t\t\t\t\t\tif (!bHasNext) {\n\t\t\t\t\t\t\t// Cerrar\n\t\t\t\t\t\t\tthis.m_rs.close();\n\t\t\t\t\t\t\tthis.m_rs = null;\n\t\t\t\t\t\t\t// M11111701: Protección de colecciones abiertas por error en scripts.\n\t\t\t\t\t\t\t// Fundir...\n\t\t\t\t\t\t\tthis.DataColl.getOwnerApp().RemoveOpenColl(this.DataColl);\n\t\t\t\t\t\t} // Cerrar\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase MovePtrType.MOVE_PTR_PREV:\n\t\t\t\t\t\t// TODO Ver si esto se puede hacer\n\t\t\t\t\t\t//m_rs ->MovePrevious ();\n\t\t\t\t\t\tif (--this.m_nCurrentRow < 0) this.m_nCurrentRow = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t} // Qué tipo de movimiento\n\t\t\t\tbResult = await this.LoadCurrentItem();\n\t\t\t\t//////m_bFrst = bFrst;\n\t\t\t} // Hay rs\n\t\t\telse bClear = true;\n\t\t\t//\n\t\t\t// Si tiene que cargarse el elemento actual hacerlo sin miramientos\n\t\t\tif (bClear) this.ClearCurrentItem(true);\n\t\t\treturn bResult;\n\t\t} catch (ex) {\n\t\t\t// M11111701: Protección de colecciones abiertas por error en scripts.\n\t\t\t// Intentar dejar esto de manera más o menos decente...\n\t\t\tthis.EndBrowse();\n\t\t\t// M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n\t\t\t////throw new XoneGenericException(-1010, \"CXoneDataCollection::MovePtr ha fallado. \" + ex.getMessage());\n\t\t\tlet str = this.m_dataColl.GetMessage(XoneMessageKeys.SYS_MSG_GENERALFAIL, \"{0} failed. \");\n\t\t\tstr = str.replace(\"{0}\", \"CXoneDataCollection::MovePtr\");\n\t\t\t//TODO ADD TAG Juan Carlos: Evitar NullPointerException\n\t\t\tlet sMessage = ex.message;\n\t\t\tif (TextUtils.isEmpty(sMessage)) {\n\t\t\t\tconsole.error(ex);\n\t\t\t} else {\n\t\t\t\tstr = str.concat(sMessage);\n\t\t\t}\n\t\t\tthrow new XoneGenericException(-1010, ex, str);\n\t\t}\n\t}\n\t/**\n\t *  Cierra el recorrido actualmente activo.\n\t */\n\tEndBrowse() {\n\t\ttry {\n\t\t\t/*\n\t\t\t * TODO ADD TAG\n\t\t\t * Cancelar todos los procesos que haya. La idea es que cuando esto retorne ya se pueda\n\t\t\t * usar todo lo demás.\n\t\t\t * TODO 28/07/2016 Juan Carlos\n\t\t\t * Si no hay conexion se tiene que explotar con un mensaje claro. Por ejemplo la\n\t\t\t * coleccion puede tener atributo connection pero el nodo puede no existir y\n\t\t\t * getCollection() devuelve null.\n\t\t\t */\n\t\t\tif (this.getConnection() == null) {\n\t\t\t\tlet sb = this.DataColl.GetMessage(XoneMessageKeys.SYS_MSG_GENERALFAIL, \"{0} failed. \");\n\t\t\t\tsb = sb.replace(\"{0}\", \"CXoneDataCollection::GetConnection\");\n\t\t\t\tsb = sb.concat(\"Cannot find connection \" + this.getConnectionName());\n\t\t\t\tthrow new XoneGenericException(-1900, sb);\n\t\t\t}\n\t\t\tthis.getConnection().cancelProcesses(0);\n\t\t\t//  Si es una colección especial, simplemente limpiar\n\t\t\t//  la colección de elementos\n\t\t\tif (this.m_bIsSpecial) {\n\t\t\t\t// Limpiar la colección\n\t\t\t\tthis.DataColl.clear();\n\t\t\t\treturn true;\n\t\t\t} // Limpiar la colección\n\t\t\t// Aquí continúa el proceso si es una colección normal\n\t\t\tthis.ClearCurrentItem(true);\n\t\t\tif (this.m_rs != null) {\n\t\t\t\t// Hay un recordset\n\t\t\t\tthis.m_rs.close();\n\t\t\t\tthis.m_rs = null;\n\t\t\t} // Hay un recordset\n\t\t\t// M11111701: Protección de colecciones abiertas por error en scripts.\n\t\t\t// Terminamos esto\n\t\t\tthis.DataColl.getOwnerApp().RemoveOpenColl(this.DataColl);\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\t// M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n\t\t\t////throw new XoneGenericException(-1009, \"CXoneDataCollection::EndBrowse ha fallado. \" + e.getMessage());\n\t\t\tlet sb = this.DataColl.GetMessage(XoneMessageKeys.SYS_MSG_GENERALFAIL, \"{0} failed. \");\n\t\t\tsb = sb.replace(\"{0}\", \"CXoneDataCollection::EndBrowse\");\n\t\t\tsb = sb.concat(e.getMessage());\n\t\t\t//TODO 28/07/2016 Juan Carlos. Respetar la traza del stack original\n\t\t\tthrow new XoneGenericException(-1009, e, sb);\n\t\t}\n\t}\n\tgetConnectionName() {\n\t\treturn this.m_strConnectionName;\n\t}\n\tgetConnection() {\n\t\tif (this.m_connection == null) this.m_connection = this.DataColl.getOwnerApp().getConnection(this.m_strConnectionName);\n\t\t// Devolver lo que sea\n\t\treturn this.m_connection;\n\t}\n\t//   loadAll(): boolean {\n\t//     let rs: IResultSet = null;\n\t//     let strCmd: string, str: string, str1: string;\n\t//     let obj: XoneDataObject = null;\n\t//     let nOrder: number = 1;\n\t//     let FunctionName = \"XoneDataCollection::LoadAll\";\n\t//     let bPrefiltered = false;\n\t//     if (this.DataColl.isLock() === true) return true;\n\t//         //\n\t//         // Cuando se hace LoadAll a una colección especial, ver si tiene <onprepare>\n\t//         // para llenarse. Ojo que el chequeo de bloqueo ahora ocurre ANTES\n\t//         // de este código...\n\t//         if (this.m_bIsSpecial)\n\t//         {// Colecciones especiales, ePrepareSpecialCollectionsto no hace nada\n\t//             const b = this.PrepareSpecialCollection();\n\t//             this.DataColl.setFull(true);\n\t//             return b;\n\t//         }// Colecciones especiales, esto no hace nada\n\t//     // Cargar los datos\n\t//     try {\n\t//         this.DataColl.setFull(false);\n\t//             this.DataColl.clear();\n\t//             if (this.DataColl.Options.bCheckOwner)\n\t//             {// Hay que chequear el propietario\n\t//                 if (this.DataColl.getOwnerObject() != null)\n\t//                 {// Es derivado\n\t//                     if (this.DataColl.getOwnerObject().GetObjectIdString(true).equals(\"NULL\"))\n\t//                         return true;   // No se ha grabao el puro\n\t//                 }// Es derivado\n\t//             }// Hay que chequear el propietario\n\t//             //\n\t//             // Continuar\n\t//             if (TextUtils.isEmpty(str = this.DataColl.getAccessString()) && !this.getConnection().acceptsEmptyQueries())\n\t//                 return true;    // Cadena vacía\n\t//             strCmd = \"\";\n\t//             if (this.Options.bParseSQL) {\n\t//                 if (this.Options.bSingleObject)\n\t//                     strCmd = \"SELECT * FROM \" + str + \" rrss\";\n\t//                 else\n\t//                 {// Query\n\t//                     if (!this.Options.bUseRaw)\n\t//                         strCmd = \"SELECT * FROM (\" + str + \") rrss\";\n\t//                 }// Query\n\t//                 // Comprobar si ya trae WHERE de antes, entonces no habrá que cambiarlo por HAVING\n\t//                 // porque estará bien, digo yo...\n\t//                 if (this.Options.bUseRaw && !this.Options.bSingleObject) {// Ver si está prefiltrado\n\t//                     bPrefiltered = this.IsSqlPrefiltered();\n\t//                 }// Ver si está prefiltrado\n\t//                 // Si hay filtro de enlace lo aplica\n\t//                 if (!this.Options.bUseRaw)\n\t//                     strCmd += this.ApplyFilters(true);\n\t//                 else\n\t//                     strCmd = this.EmbedFilters(null);\n\t//             } else {\n\t//                 strCmd  = str;\n\t//                 bPrefiltered=false;\n\t//             }\n\t//             // Aplica el orden si existe\n\t//             if (!StringUtils.IsEmptyString(str1 = this.PrepareSort(this.DataColl.getSort())))\n\t//             {// Tiene sort\n\t//                 str = (\" ORDER BY \" + str1);\n\t//                 strCmd += str;\n\t//             }// Tiene sort\n\t//             // Cambiando que primero lo pase por la coleccion\n\t//             strCmd = this.PrepareSqlString(strCmd,false,bPrefiltered); //getConnection().PrepareSqlString(strCmd,false,bPrefiltered);\n\t//             // Comprobar si es un contents\n\t//             if (this.DataColl.getOwnerObject() != null)\n\t//                 strCmd = this.PrepareSqlString(strCmd);\n\t//             // M11011001:\tIncluir macros globales y evaluación de dichas macros para IMEI y demás.\n\t//             // Sustituir macros (no sé por qué no se hacía)\n\t//             // Evaluar las macros (globales incluidas)\n\t//             strCmd = this.DataColl.EvaluateAllMacros(strCmd, true);\n\t//             if (this.Options.bDebug)\n\t//             {// Dejar traza del SQL\n\t//                 str = \"\\r\\n\" + strCmd + \"\\r\\n\";\n\t//                 this.DataColl.getOwnerApp().writeConsoleString(str);\n\t//             }// Dejar traza del SQL\n\t//             // A12042503: Mecanismo para registrar un modo debug global en la aplicación.\n\t//             if (this.DataColl.getIsDebugging() || this.DataColl.getOwnerApp().isDebugMode())\n\t//                 Utils.DebugLog(Utils.TAG_DATABASE_LOG,\"LoadAll: \"+strCmd);\n\t//             // TODO ADD TAG\n\t//             // Si hay procesos pendientes, cancelamos lo que sea que haya\n\t//             this.getConnection().cancelProcesses(0);\n\t//             // El recordset tiene que apuntar a la conexión correcta\n\t//             if (null == (rs = this.getConnection().CreateRecordset(strCmd)))\n\t//             {// Error\n\t//                 // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n\t//                 ////throw new XoneGenericException(-2999, \"CXoneDataCollection::LoadAll ha fallado. No se puede abrir la fuente de datos.\");\n\t//                 let sb = this.DataColl.GetMessage(XoneMessageKeys.SYS_MSG_DATASRCFAIL, \"{0} failed. Cannot open data source.\");\n\t//                 sb =sb.replace(\"{0}\", FunctionName);\n\t//                 throw new XoneGenericException(-2999, sb);\n\t//             }// Error\n\t//             // Ahora sí está en condiciones de recorrer el lazo\n\t//             // Simular el orden en el LoadAll\n\t//             for (; rs.next(); nOrder++)\n\t//             {// Todos los records\n\t//                 //  Crear el objeto es toda una yerba en condiciones normales\n\t//                 //  pero asumiremos que si no hay un GUID válido aquí sea\n\t//                 //  porque se va a usar el clásico. Al crear el objeto indicar que es solo para cargar...\n\t//                 if (null == (obj = this.DataColl.CreateObject(false)))\n\t//                 {// No se puede crear el objeto\n\t//                     // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n\t//                     ////throw new XoneGenericException(-1005, \"CXoneDataCollection::LoadAll no puede crear un nuevo objeto. CreateObject ha falldo.\");\n\t//                     let sb = this.DataColl.GetMessage(XoneMessageKeys.SYS_MSG_COLL_LOADALLFAIL_02, \"{0} cannot create a new object. CreateObject failed.\");\n\t//                     sb =sb.replace(\"{0}\", FunctionName);\n\t//                     throw new XoneGenericException(-1005, sb);\n\t//                 }// No se puede crear el objeto\n\t//                 // ADD TAG Cambiar de posicion el MAP_SYS_ORDER para que en el load ya este disponible en que posicion va a estar\n\t//                 obj.SetPropertyValue(\"MAP_SYS_ORDER\", nOrder-1);\n\t//                 // Cargar el objeto\n\t//                 if (!obj.Load(rs))\n\t//                 {// Error\n\t//                     // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n\t//                     ////throw new XoneGenericException(-10051, \"CXoneDataCollection::LoadAll ha fallado. Ha ocurrido un fallo llamando a MainObject::Load.\");\n\t//                     let sb = this.DataColl.GetMessage(XoneMessageKeys.SYS_MSG_COLL_LOADALLFAIL_03, \"{0} failed. Call to XoneDataObject::Load failed.\");\n\t//                     sb =sb.replace(\"{0}\", FunctionName);\n\t//                     throw new XoneGenericException(-10051, sb);\n\t//                 }// Error\n\t//                 obj.GetObjectIdString();\n\t//                 this.AddItem(obj);\n\t//             }// Todos los records\n\t//             //\n\t//             // Cerrar y liberar todo\n\t//             rs.close();\n\t//             rs = null;\n\t//             this.DataColl.setFull(true);\n\t//       return true;\n\t//     } catch (e) {\n\t//       if (rs != null)\n\t//       {// Cerrar\n\t//           try\n\t//           {\n\t//               rs.close();\n\t//           }\n\t//           catch (se)\n\t//           {\n\t//           }\n\t//           rs = null;\n\t//       }// Cerrar\n\t//       throw e;\n\t//     }\n\t//     return true;\n\t//   }\n\tasync loadAllAsyncWithParser(CountRecords = false, options) {\n\t\tlet rs = null;\n\t\tlet strCmd, str, str1;\n\t\tlet obj = null;\n\t\tlet nOrder = 1;\n\t\tlet FunctionName = \"XoneDataCollection::LoadAll\";\n\t\tlet bPrefiltered = false;\n\t\tif (this.DataColl.isLock() === true) return this.DataColl;\n\t\t//\n\t\t// Cuando se hace LoadAll a una colección especial, ver si tiene <onprepare>\n\t\t// para llenarse. Ojo que el chequeo de bloqueo ahora ocurre ANTES\n\t\t// de este código...\n\t\tif (this.m_bIsSpecial) {\n\t\t\t// Colecciones especiales, ePrepareSpecialCollectionsto no hace nada\n\t\t\tconst b = this.PrepareSpecialCollection();\n\t\t\tthis.DataColl.setFull(true);\n\t\t\treturn this.DataColl;\n\t\t} // Colecciones especiales, esto no hace nada\n\t\twhile (this.m_bIsFetchDataRunning == true) await (() => new Promise((resolve) => setTimeout(() => resolve(), 100)))();\n\t\t// Cargar los datos\n\t\ttry {\n\t\t\tthis.m_bIsFetchDataRunning = true;\n\t\t\tthis.DataColl.setFull(false);\n\t\t\tthis.Clear();\n\t\t\tif (this.Options.bCheckOwner) {\n\t\t\t\t// Hay que chequear el propietario\n\t\t\t\tif (this.DataColl.getOwnerObject() != null) {\n\t\t\t\t\t// Es derivado\n\t\t\t\t\tif (this.DataColl.getOwnerObject().GetObjectIdString(true).equals(\"NULL\")) return this.DataColl; // No se ha grabao el puro\n\t\t\t\t} // Es derivado\n\t\t\t} // Hay que chequear el propietario\n\t\t\t//\n\t\t\t// Continuar\n\t\t\tif (TextUtils.isEmpty((str = this.DataColl.getAccessString())) && !this.getConnection().acceptsEmptyQueries()) return this.DataColl; // Cadena vacía\n\t\t\tstrCmd = \"\";\n\t\t\tif (this.Options.bParseSQL) {\n\t\t\t\tif (this.Options.bSingleObject) strCmd = \"SELECT * FROM \" + str + \" rrss\";\n\t\t\t\telse {\n\t\t\t\t\t// Query\n\t\t\t\t\tif (!this.Options.bUseRaw) strCmd = \"SELECT * FROM (\" + str + \") rrss\";\n\t\t\t\t} // Query\n\t\t\t\t// Comprobar si ya trae WHERE de antes, entonces no habrá que cambiarlo por HAVING\n\t\t\t\t// porque estará bien, digo yo...\n\t\t\t\tif (this.Options.bUseRaw && !this.Options.bSingleObject) {\n\t\t\t\t\t// Ver si está prefiltrado\n\t\t\t\t\tbPrefiltered = await this.IsSqlPrefiltered();\n\t\t\t\t} // Ver si está prefiltrado\n\t\t\t\t// Si hay filtro de enlace lo aplica\n\t\t\t\tif (!this.Options.bUseRaw) strCmd += await this.ApplyFilters(true);\n\t\t\t\telse strCmd = await this.EmbedFilters(null);\n\t\t\t} else {\n\t\t\t\tstrCmd = str;\n\t\t\t\tbPrefiltered = false;\n\t\t\t}\n\t\t\t// Aplica el orden si existe\n\t\t\tif (!StringUtils.IsEmptyString((str1 = this.PrepareSort(this.DataColl.getSort())))) {\n\t\t\t\t// Tiene sort\n\t\t\t\tstr = \" ORDER BY \" + str1;\n\t\t\t\tstrCmd += str;\n\t\t\t} // Tiene sort\n\t\t\t// Cambiando que primero lo pase por la coleccion\n\t\t\tstrCmd = this.PrepareSqlString(strCmd, false, bPrefiltered); //getConnection().PrepareSqlString(strCmd,false,bPrefiltered);\n\t\t\t// Comprobar si es un contents\n\t\t\tif (this.DataColl.getOwnerObject() != null) strCmd = this.DataColl.getOwnerObject().PrepareSqlString(strCmd);\n\t\t\t// M11011001:\tIncluir macros globales y evaluación de dichas macros para IMEI y demás.\n\t\t\t// Sustituir macros (no sé por qué no se hacía)\n\t\t\t// Evaluar las macros (globales incluidas)\n\t\t\tstrCmd = await this.DataColl.EvaluateAllMacros(strCmd, true);\n\t\t\tif (this.Options.bDebug) {\n\t\t\t\t// Dejar traza del SQL\n\t\t\t\tstr = \"\\r\\n\" + strCmd + \"\\r\\n\";\n\t\t\t\tthis.DataColl.getOwnerApp().writeConsoleString(str);\n\t\t\t} // Dejar traza del SQL\n\t\t\t// A12042503: Mecanismo para registrar un modo debug global en la aplicación.\n\t\t\tif (this.DataColl.getIsDebugging() || this.DataColl.getOwnerApp().isDebugMode()) Utils.DebugLog(Utils.TAG_DATABASE_LOG, \"LoadAll: \" + strCmd);\n\t\t\t// TODO ADD TAG\n\t\t\t// Si hay procesos pendientes, cancelamos lo que sea que haya\n\t\t\tthis.getConnection().cancelProcesses(0);\n\t\t\tif (CountRecords == true) this.m_nBrowseLength = await this.CountAsync(null);\n\t\t\telse this.m_nBrowseLength = -1;\n\t\t\t// El recordset tiene que apuntar a la conexión correcta\n\t\t\tif (\n\t\t\t\tnull ==\n\t\t\t\t(rs = await this.getConnection().CreateRecordsetAsync(strCmd, {\n\t\t\t\t\tcount: false,\n\t\t\t\t\tcoll: this.DataColl.getName(),\n\t\t\t\t\tmacros: this.DataColl.getMacros(),\n\t\t\t\t\tloadall: false,\n\t\t\t\t\tpage: options != null ? options : { start: 0, length: 1000 },\n\t\t\t\t}))\n\t\t\t) {\n\t\t\t\t// Error\n\t\t\t\t// M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n\t\t\t\t////throw new XoneGenericException(-2999, \"CXoneDataCollection::LoadAll ha fallado. No se puede abrir la fuente de datos.\");\n\t\t\t\tlet sb = this.DataColl.GetMessage(XoneMessageKeys.SYS_MSG_DATASRCFAIL, \"{0} failed. Cannot open data source.\");\n\t\t\t\tsb = sb.replace(\"{0}\", FunctionName);\n\t\t\t\tthrow new XoneGenericException(-2999, sb);\n\t\t\t} // Error\n\t\t\t// Obtener la cantidad de elementos\n\t\t\t// cambio Sergio\n\t\t\t// if (CountRecords && !(this.m_rs.EOF()))\n\t\t\t//     this.m_nBrowseLength = await this.GetRowCount();    // Buscar la cantidad de elementos a recorrer\n\t\t\t// else\n\t\t\t//     this.m_nBrowseLength = -1;\n\t\t\t// Ahora sí está en condiciones de recorrer el lazo\n\t\t\t// Simular el orden en el LoadAll\n\t\t\tfor (; await rs.next(); nOrder++) {\n\t\t\t\t// Todos los records\n\t\t\t\t//  Crear el objeto es toda una yerba en condiciones normales\n\t\t\t\t//  pero asumiremos que si no hay un GUID válido aquí sea\n\t\t\t\t//  porque se va a usar el clásico. Al crear el objeto indicar que es solo para cargar...\n\t\t\t\tobj = await this.DataColl.CreateObject(false);\n\t\t\t\tif (null == obj) {\n\t\t\t\t\t// No se puede crear el objeto\n\t\t\t\t\t// M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n\t\t\t\t\t////throw new XoneGenericException(-1005, \"CXoneDataCollection::LoadAll no puede crear un nuevo objeto. CreateObject ha falldo.\");\n\t\t\t\t\tlet sb = this.DataColl.GetMessage(XoneMessageKeys.SYS_MSG_COLL_LOADALLFAIL_02, \"{0} cannot create a new object. CreateObject failed.\");\n\t\t\t\t\tsb = sb.replace(\"{0}\", FunctionName);\n\t\t\t\t\tthrow new XoneGenericException(-1005, sb);\n\t\t\t\t} // No se puede crear el objeto\n\t\t\t\t// ADD TAG Cambiar de posicion el MAP_SYS_ORDER para que en el load ya este disponible en que posicion va a estar\n\t\t\t\tobj.SetPropertyValue(\"MAP_SYS_ORDER\", nOrder - 1);\n\t\t\t\t// Cargar el objeto\n\t\t\t\tif (!obj.Load(rs)) {\n\t\t\t\t\t// Error\n\t\t\t\t\t// M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n\t\t\t\t\t////throw new XoneGenericException(-10051, \"CXoneDataCollection::LoadAll ha fallado. Ha ocurrido un fallo llamando a MainObject::Load.\");\n\t\t\t\t\tlet sb = this.DataColl.GetMessage(XoneMessageKeys.SYS_MSG_COLL_LOADALLFAIL_03, \"{0} failed. Call to XoneDataObject::Load failed.\");\n\t\t\t\t\tsb = sb.replace(\"{0}\", FunctionName);\n\t\t\t\t\tthrow new XoneGenericException(-10051, sb);\n\t\t\t\t} // Error\n\t\t\t\tobj.GetObjectIdString();\n\t\t\t\tthis.AddItem(obj);\n\t\t\t} // Todos los records\n\t\t\t//\n\t\t\t// Cerrar y liberar todo\n\t\t\trs.close();\n\t\t\trs = null;\n\t\t\tthis.DataColl.setFull(true);\n\t\t\treturn this.DataColl;\n\t\t} catch (e) {\n\t\t\tthis.m_bIsFetchDataRunning = true;\n\t\t\tif (rs != null) {\n\t\t\t\t// Cerrar\n\t\t\t\ttry {\n\t\t\t\t\trs.close();\n\t\t\t\t} catch (se) {}\n\t\t\t\trs = null;\n\t\t\t} // Cerrar\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\tthis.m_bIsFetchDataRunning = false;\n\t\t}\n\t}\n\tasync loadAllAsync(CountRecords = false, options) {\n\t\tlet rs = null;\n\t\tlet strCmd, str, str1;\n\t\tlet obj = null;\n\t\tlet nOrder = 1;\n\t\tlet FunctionName = \"XoneDataCollection::LoadAll\";\n\t\tlet bPrefiltered = false;\n\t\tif (this.DataColl.isLock() === true) return this.DataColl;\n\t\t// Amiyares: 20/10/2021, poder cargar datos desde atributo json en lugar de hacer siempre llamadas sql\n\t\tconst json = window.generateTestingData ? window.generateTestingData(this.DataColl) : this.DataColl.getXmlNode().getAttrValue(\"json\");\n\n\t\t//\n\t\t// Cuando se hace LoadAll a una colección especial, ver si tiene <onprepare>\n\t\t// para llenarse. Ojo que el chequeo de bloqueo ahora ocurre ANTES\n\t\t// de este código...\n\t\tif (this.m_bIsSpecial || json) {\n\t\t\t// Colecciones especiales, ePrepareSpecialCollectionsto no hace nada\n\t\t\tconst b = this.PrepareSpecialCollection();\n\t\t\t// Amiyares: 20/10/2021\n\t\t\tif (json) {\n\t\t\t\ttry {\n\t\t\t\t\tconst data = typeof json === \"string\" ? (() => {}).constructor(`return ${json}`)() : json;\n\t\t\t\t\tfor (const item of data) {\n\t\t\t\t\t\tconst dataObject = await this.DataColl.CreateObject();\n\t\t\t\t\t\tObject.entries(item).forEach(([key, value]) => (dataObject[key] = value));\n\t\t\t\t\t\tthis.DataColl.addItem(dataObject);\n\t\t\t\t\t}\n\t\t\t\t} catch (ex) {\n\t\t\t\t\tconsole.error(\"Error getting json.\", ex);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.DataColl.setFull(true);\n\t\t\treturn this.DataColl;\n\t\t} // Colecciones especiales, esto no hace nada\n\t\twhile (this.m_bIsFetchDataRunning == true) await (() => new Promise((resolve) => setTimeout(() => resolve(), 100)))();\n\t\t// Cargar los datos\n\t\ttry {\n\t\t\tthis.m_bIsFetchDataRunning = true;\n\t\t\tthis.DataColl.setFull(false);\n\t\t\tthis.Clear();\n\t\t\tif (this.Options.bCheckOwner) {\n\t\t\t\t// Hay que chequear el propietario\n\t\t\t\tif (this.DataColl.getOwnerObject() != null) {\n\t\t\t\t\t// Es derivado\n\t\t\t\t\tif (this.DataColl.getOwnerObject().GetObjectIdString(true).equals(\"NULL\")) return this.DataColl; // No se ha grabao el puro\n\t\t\t\t} // Es derivado\n\t\t\t} // Hay que chequear el propietario\n\t\t\t//\n\t\t\t// Continuar\n\t\t\tif (TextUtils.isEmpty((str = this.DataColl.getAccessString())) && !this.getConnection().acceptsEmptyQueries()) return this.DataColl; // Cadena vacía\n\t\t\tstrCmd = \"\";\n\t\t\t// if (this.Options.bParseSQL) {\n\t\t\t//     if (this.Options.bSingleObject)\n\t\t\t//         strCmd = \"SELECT * FROM \" + str + \" rrss\";\n\t\t\t//     else {// Query\n\t\t\t//         if (!this.Options.bUseRaw)\n\t\t\t//             strCmd = \"SELECT * FROM (\" + str + \") rrss\";\n\t\t\t//     }// Query\n\t\t\t//     // Comprobar si ya trae WHERE de antes, entonces no habrá que cambiarlo por HAVING\n\t\t\t//     // porque estará bien, digo yo...\n\t\t\t//     if (this.Options.bUseRaw && !this.Options.bSingleObject) {// Ver si está prefiltrado\n\t\t\t//         bPrefiltered = await this.IsSqlPrefiltered();\n\t\t\t//     }// Ver si está prefiltrado\n\t\t\t//     // Si hay filtro de enlace lo aplica\n\t\t\t//     if (!this.Options.bUseRaw)\n\t\t\t//         strCmd += await this.ApplyFilters(true);\n\t\t\t//     else\n\t\t\t//         strCmd = await this.EmbedFilters(null);\n\t\t\t// } else {\n\t\t\t//     strCmd = str;\n\t\t\t//     bPrefiltered = false;\n\t\t\t// }\n\t\t\t// Aplica el orden si existe\n\t\t\t// if (!StringUtils.IsEmptyString(str1 = this.PrepareSort(this.DataColl.getSort()))) {// Tiene sort\n\t\t\t//     str = (\" ORDER BY \" + str1);\n\t\t\t//     strCmd += str;\n\t\t\t// }// Tiene sort\n\t\t\t// // Cambiando que primero lo pase por la coleccion\n\t\t\t// strCmd = this.PrepareSqlString(strCmd, false, bPrefiltered); //getConnection().PrepareSqlString(strCmd,false,bPrefiltered);\n\t\t\t// // Comprobar si es un contents\n\t\t\t// if (this.DataColl.getOwnerObject() != null)\n\t\t\t//     strCmd = this.DataColl.getOwnerObject().PrepareSqlString(strCmd);\n\t\t\t// M11011001:\tIncluir macros globales y evaluación de dichas macros para IMEI y demás.\n\t\t\t// Sustituir macros (no sé por qué no se hacía)\n\t\t\t// Evaluar las macros (globales incluidas)\n\t\t\tconst swhere = await this.ResolveFilters(false, null);\n\t\t\tconst sSort = this.DataColl.getSort();\n\t\t\tthis.DataColl.ParseMacros(swhere);\n\t\t\tthis.DataColl.ParseMacros(sSort);\n\t\t\tthis.DataColl.ParseMacros(str);\n\t\t\tstrCmd = await this.DataColl.EvaluateAllMacros(str, true);\n\t\t\tconst data = {\n\t\t\t\tcoll: this.DataColl.getName(),\n\t\t\t\tmacros: this.DataColl.getMacros(),\n\t\t\t\twhere: swhere,\n\t\t\t\tsort: sSort,\n\t\t\t\tloadall: false,\n\t\t\t\tpage: {},\n\t\t\t};\n\t\t\tif (this.Options.bDebug) {\n\t\t\t\t// Dejar traza del SQL\n\t\t\t\tthis.DataColl.getOwnerApp().writeConsoleString(data);\n\t\t\t} // Dejar traza del SQL\n\t\t\t// A12042503: Mecanismo para registrar un modo debug global en la aplicación.\n\t\t\tif (this.DataColl.getIsDebugging() || this.DataColl.getOwnerApp().isDebugMode()) Utils.DebugLog(Utils.TAG_DATABASE_LOG, \"LoadAll: \" + data);\n\t\t\t// TODO ADD TAG\n\t\t\t// Si hay procesos pendientes, cancelamos lo que sea que haya\n\t\t\tthis.getConnection().cancelProcesses(0);\n\t\t\tif (CountRecords == true) this.m_nBrowseLength = await this.CountAsync(Object.assign({ count: true, page: {} }, data));\n\t\t\telse this.m_nBrowseLength = -1;\n\t\t\t// El recordset tiene que apuntar a la conexión correcta\n\t\t\tif (\n\t\t\t\tnull ==\n\t\t\t\t(rs = await this.getConnection().CreateRecordsetAsync(\n\t\t\t\t\tstrCmd,\n\t\t\t\t\tObject.assign({ count: false, page: options != null ? options : { start: 0, length: 1000 } }, data)\n\t\t\t\t))\n\t\t\t) {\n\t\t\t\t// Error\n\t\t\t\t// M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n\t\t\t\t////throw new XoneGenericException(-2999, \"CXoneDataCollection::LoadAll ha fallado. No se puede abrir la fuente de datos.\");\n\t\t\t\tlet sb = this.DataColl.GetMessage(XoneMessageKeys.SYS_MSG_DATASRCFAIL, \"{0} failed. Cannot open data source.\");\n\t\t\t\tsb = sb.replace(\"{0}\", FunctionName);\n\t\t\t\tthrow new XoneGenericException(-2999, sb);\n\t\t\t} // Error\n\t\t\t// Obtener la cantidad de elementos\n\t\t\t// cambio Sergio\n\t\t\t// if (CountRecords && !(this.m_rs.EOF()))\n\t\t\t//     this.m_nBrowseLength = await this.GetRowCount();    // Buscar la cantidad de elementos a recorrer\n\t\t\t// else\n\t\t\t//     this.m_nBrowseLength = -1;\n\t\t\t// Ahora sí está en condiciones de recorrer el lazo\n\t\t\t// Simular el orden en el LoadAll\n\t\t\tfor (; await rs.next(); nOrder++) {\n\t\t\t\t// Todos los records\n\t\t\t\t//  Crear el objeto es toda una yerba en condiciones normales\n\t\t\t\t//  pero asumiremos que si no hay un GUID válido aquí sea\n\t\t\t\t//  porque se va a usar el clásico. Al crear el objeto indicar que es solo para cargar...\n\t\t\t\tobj = await this.DataColl.CreateObject(false);\n\t\t\t\tif (null == obj) {\n\t\t\t\t\t// No se puede crear el objeto\n\t\t\t\t\t// M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n\t\t\t\t\t////throw new XoneGenericException(-1005, \"CXoneDataCollection::LoadAll no puede crear un nuevo objeto. CreateObject ha falldo.\");\n\t\t\t\t\tlet sb = this.DataColl.GetMessage(XoneMessageKeys.SYS_MSG_COLL_LOADALLFAIL_02, \"{0} cannot create a new object. CreateObject failed.\");\n\t\t\t\t\tsb = sb.replace(\"{0}\", FunctionName);\n\t\t\t\t\tthrow new XoneGenericException(-1005, sb);\n\t\t\t\t} // No se puede crear el objeto\n\t\t\t\t// ADD TAG Cambiar de posicion el MAP_SYS_ORDER para que en el load ya este disponible en que posicion va a estar\n\t\t\t\tobj.SetPropertyValue(\"MAP_SYS_ORDER\", nOrder - 1);\n\t\t\t\t// Cargar el objeto\n\t\t\t\tif (!obj.Load(rs)) {\n\t\t\t\t\t// Error\n\t\t\t\t\t// M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n\t\t\t\t\t////throw new XoneGenericException(-10051, \"CXoneDataCollection::LoadAll ha fallado. Ha ocurrido un fallo llamando a MainObject::Load.\");\n\t\t\t\t\tlet sb = this.DataColl.GetMessage(XoneMessageKeys.SYS_MSG_COLL_LOADALLFAIL_03, \"{0} failed. Call to XoneDataObject::Load failed.\");\n\t\t\t\t\tsb = sb.replace(\"{0}\", FunctionName);\n\t\t\t\t\tthrow new XoneGenericException(-10051, sb);\n\t\t\t\t} // Error\n\t\t\t\tobj.GetObjectIdString();\n\t\t\t\tthis.AddItem(obj);\n\t\t\t} // Todos los records\n\t\t\t//\n\t\t\t// Cerrar y liberar todo\n\t\t\trs.close();\n\t\t\trs = null;\n\t\t\tthis.DataColl.setFull(true);\n\t\t\treturn this.DataColl;\n\t\t} catch (e) {\n\t\t\tthis.m_bIsFetchDataRunning = true;\n\t\t\tif (rs != null) {\n\t\t\t\t// Cerrar\n\t\t\t\ttry {\n\t\t\t\t\trs.close();\n\t\t\t\t} catch (se) {}\n\t\t\t\trs = null;\n\t\t\t} // Cerrar\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\tthis.m_bIsFetchDataRunning = false;\n\t\t}\n\t}\n\t// amiyares 10/06/2021 -> fallaba parseando un formato de fecha\n\tPrepareSort(Sort) {\n\t\treturn Sort;\n\t}\n\t// PrepareSort(Sort: string): string {\n\t//     let i = 0, l = 0, k = 0;\n\t//     let str = \"\", str1 = \"\", strTmp = \"\", strField = \"\", strOut = \"\";\n\t//     let bFieldComplete = false, bIsField = false;\n\t//     if (StringUtils.IsEmptyString(Sort))\n\t//         return Sort;\n\t//     let strIn = Sort.trim();\n\t//     if (StringUtils.IsEmptyString(strIn))\n\t//         return strIn;\n\t//     for (i = 0, l = strIn.length; i < l; i++) {// Buscar cada caracter\n\t//         // F09042201:\tSubstring no funciona igual en java que en .NET Arreglar Blackberry\n\t//         str = strIn.substring(i, i + 1);\n\t//         if (str.equals(\"%\") || str.equals(\"$\") || str.equals(\"#\")) {// Buscar la coma o el final y quitarlo\n\t//             k = strIn.indexOf(\",\", i);\n\t//             if (k == -1) {// En dependencia de si va a la mitad o no\n\t//                 if (i > 0)\n\t//                     // F09042201:\tSubstring no funciona igual en java que en .NET Arreglar Blackberry\n\t//                     return strIn.substring(i - 1, i).equals(\",\") ? strIn.substring(0, i - 1) : strIn.substring(0, i);\n\t//                 else\n\t//                     return \"\";\n\t//             }// En dependencia de si va a la mitad o no\n\t//             if (i > 0)\n\t//                 // F09042201:\tSubstring no funciona igual en java que en .NET Arreglar Blackberry\n\t//                 str = strIn.substring(i - 1, i).equals(\",\") ? strIn.substring(0, i - 1) : strIn.substring(0, i);\n\t//             else\n\t//                 str = \"\";\n\t//             // F09042201:\tSubstring no funciona igual en java que en .NET Arreglar Blackberry\n\t//             str1 = strIn.substring(k + 1, strIn.length - k);\n\t//             strIn = str + str1;\n\t//             l = strIn.length;\n\t//             i = -1;\n\t//         }// Buscar la coma o el final y quitarlo\n\t//     }// Buscar cada caracter\n\t//     strIn = strIn.trim();\n\t//     if (StringUtils.IsEmptyString(strIn))\n\t//         return strIn;\n\t//     if (this.Options.bUseRaw && !this.IsUnionQuery()) {// Usa el SQL sin subqueries\n\t//         strOut = strField = \"\";\n\t//         for (i = 0, l = strIn.length, strTmp = \"\", bFieldComplete = false; i < l; i++) {// Cada caracter\n\t//             let c: string;\n\t//             switch (c = strIn.charAt(i)) {\n\t//                 case ' ': // Espacios\n\t//                 case ',':\n\t//                     if (bIsField) {// Se acabó el campo\n\t//                         // F09042201:\tSubstring no funciona igual en java que en .NET Arreglar Blackberry\n\t//                         for (strTmp = strIn.substring(i, i + 1); i < l && strIn.substring(i + 1, i + 2).equals(\" \"); strTmp += strIn.substring(i, i + 1), i++);\n\t//                         bFieldComplete = true;\n\t//                         bIsField = false;\n\t//                     }// Se acabó el campo\n\t//                     else\n\t//                         strOut += c;\n\t//                     break;\n\t//                 default:\n\t//                     if (bIsField)\n\t//                         strField += c;\n\t//                     else {// No contar este\n\t//                         bIsField = true;\n\t//                         i--;\n\t//                     }// No contar este\n\t//                     break;\n\t//             }\n\t//             // Si ha terminado un campo procesarlo\n\t//             if (bFieldComplete) {// Comprobar si es un operador\n\t//                 str = strField.toLowerCase();\n\t//                 if (!(str.equals(\"asc\") || str.equals(\"desc\"))) {// Comprobar\n\t//                     // Puede que sea un campo\n\t//                     strField = this.QualifyField(strField);\n\t//                 }// Comprobar\n\t//                 // Adicionar a la cadena de salida\n\t//                 if (strTmp.contains(\"  \"))\n\t//                     strTmp = StringUtils.Replace(strTmp, \"  \", \" \");\n\t//                 if (strTmp.contains(\",,\"))\n\t//                     strTmp = StringUtils.Replace(strTmp, \",,\", \",\");\n\t//                 strOut += (strField + strTmp);\n\t//                 strField = \"\";\n\t//                 strTmp = \"\";\n\t//                 bFieldComplete = false;\n\t//             }// Comprobar si es un operador\n\t//         }// Cada caracter\n\t//         if (bFieldComplete || !StringUtils.IsEmptyString(strField)) {// Comprobar si es un operador\n\t//             str = strField.toLowerCase();\n\t//             if (!(str.equals(\"asc\") || str.equals(\"desc\"))) {// Puede que sea un campo\n\t//                 strField = this.QualifyField(strField);\n\t//             }// Puede que sea un campo\n\t//             // Adicionar a la cadena de salida\n\t//             strOut += (strField + strTmp);\n\t//             strField = \"\";\n\t//             strTmp = \"\";\n\t//             bFieldComplete = false;\n\t//         }// Comprobar si es un operador\n\t//         strIn = strOut;\n\t//     }// Usa el SQL sin subqueries\n\t//     return strIn;\n\t// }\n\tasync IsUnionQuery(Sentence) {\n\t\tlet parser = Sentence;\n\t\tif (parser == null) {\n\t\t\t// Trabajar con la de la colección\n\t\t\tif (this.m_parsedAccessString == null)\n\t\t\t\tif (!(await this.ParseAccessString())) {\n\t\t\t\t\t// Error\n\t\t\t\t\t// M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n\t\t\t\t\t////throw new Exception(\"No se puede interpretar la sentencia SQL de la colección '\" + m_strName + \"'\");\n\t\t\t\t\tlet sb = this.DataColl.GetMessage(\n\t\t\t\t\t\tXoneMessageKeys.SYS_MSG_COLL_SQLPARSEERROR_01,\n\t\t\t\t\t\t\"{0} failed. Cannot parse SQL sentence for collection '{1}'\"\n\t\t\t\t\t);\n\t\t\t\t\tsb = sb.replace(\"{0}\", \"CXoneDataCollection::IsUnionQuery\");\n\t\t\t\t\tsb = sb.replace(\"{1}\", this.DataColl.getName());\n\t\t\t\t\tthrow new XoneGenericException(-10990, sb);\n\t\t\t\t} // Error\n\t\t\tparser = this.m_parsedAccessString;\n\t\t} // Trabajar con la de la colección\n\t\tif (parser == null) return false;\n\t\t// De lo contrario ver lo que dice el parser en sí y para sí\n\t\treturn parser.getIsUnionQuery();\n\t}\n\t/**\n\t * Parsea la cadena de acceso a datos de la colección\n\t * @return\t\t\t\tDevuelve TRUE si la cadena se parsea correctamente.\n\t * @throws Exception\n\t */\n\tasync ParseAccessString() {\n\t\t// M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n\t\tthis.m_parsedAccessString = new SqlParser(this.getConnection().getRowIdFieldName(), this.DataColl.getOwnerApp().getMessageHolder());\n\t\t// M09072901:\tPermitir que se puedan traducir los joins a formato where en blackberry\n\t\t// Indicar que las sentencias con inner join tienen que traducirse\n\t\t/////m_parsedAccessString.setTranslateJoins(true);\n\t\tlet s = this.DataColl.getAccessString();\n\t\tif (TextUtils.isEmpty(s)) return true;\n\t\t// Vamos a buscar las macros\n\t\tthis.DataColl.ParseMacros(s);\n\t\treturn true;\n\t\t// let b =\n\t\t//     this.m_parsedAccessString.ParseSqlString(s) == SqlType.SQLTYPE_SELECT;\n\t\t// // F10090805:\tSi falla el parsing del SQL de una colección, eliminar el parser.\n\t\t// // Si falla el parsing tenemos que cargarnos el parser.\n\t\t// if (!b) this.clearParsedAccessString();\n\t\t// return b;\n\t}\n\tclearParsedAccessString() {\n\t\tthis.m_parsedAccessString = null;\n\t}\n\tgetParsedAccessString() {\n\t\treturn this.m_parsedAccessString;\n\t}\n\tGenerateRowID() {\n\t\treturn this.getConnection().GenerateRowId();\n\t}\n\t/**\n\t * Devuelve el nombre real de un campo dado su nombre interno. La mayoría de los campos no están mapeados y devuelven el mismo nombre pasado como parámetro.\n\t * @param FieldName\t\t\tNombre del campo que se quiere mapear\n\t * @param DatabaseField\t\tTRUE si se trata de un campo de base de datos. En este caso si tiene espacios se encierra en separadores.\n\t * @return\t\t\t\t\tDevuelve el nombre del campo mapeado.\n\t */\n\tMapField(FieldName, DatabaseField = false) {\n\t\tlet strFldName = FieldName;\n\t\t// Si resulta que el nombre de campo que están pasando es nulo o vacío no hacemos nada\n\t\tif (StringUtils.IsEmptyString(strFldName)) return FieldName;\n\t\t// De lo contrario ya se puede buscar en la lista...\n\t\tif (this.m_lstFieldMappings.containsKey(FieldName)) strFldName = this.m_lstFieldMappings.get(FieldName);\n\t\t// Comprobar si tiene espacios y encerrarlo entre caracteres delimitadores\n\t\tif (strFldName.indexOf(\" \") != -1 && DatabaseField) strFldName = this.getConnection().QuoteFieldName(strFldName);\n\t\t// Lo que sea\n\t\treturn strFldName;\n\t}\n\t/**\n\t * Dada una cadena SQL la prepara sustituyendo las macros que contiene\n\t * F12042601: PrepareSqlString no delega en la aplicación cuando se llama a la colección.\n\t * Incluir los parámetros que le pasamos al PrepareSqlString de la conexión.\n\t *\n\t * @param Sentence\t\t\tSentencia SQL que se quiere preparar (sustituir macros y demás)\n\t * @return\t\t\t\t\tDevuelve la cadena con las macros sustituidas.\n\t * @throws Exception\n\t */\n\tPrepareSqlString(Sentence, ChkGroup = false, Prefiltered = false) {\n\t\t// Cadena vacía, no hacemos nada\n\t\tif (StringUtils.IsEmptyString(Sentence)) return Sentence;\n\t\t// No macros, tampoco\n\t\tif (!Sentence.contains(\"##\")) return Sentence;\n\t\t// No conexión, tampoco nada\n\t\tif (this.getConnection() == null) return Sentence;\n\t\t// Sustituir cosillas propias de la colección\n\t\tlet strOut = Sentence;\n\t\tif (strOut.contains(\"##FILTER##\")) {\n\t\t\t// Filtro\n\t\t\tstrOut = StringUtils.Replace(strOut, \"##FILTER##\", StringUtils.SafeToString(this.DataColl.getFilter())); // Filtro\n\t\t\tif (!strOut.contains(\"##\")) return strOut;\n\t\t} // Filtro\n\t\tif (strOut.contains(\"##LINKFILTER##\")) {\n\t\t\t// Filtro de enlace\n\t\t\tstrOut = StringUtils.Replace(strOut, \"##LINKFILTER##\", StringUtils.SafeToString(this.DataColl.getLinkFilter())); // Filtro de enlace\n\t\t\tif (!strOut.contains(\"##\")) return strOut;\n\t\t} // Filtro de enlace\n\t\t// ##ACCESS_STRING## completa, por si las moscas...\n\t\tif (strOut.contains(\"##ACCESS_STRING##\")) {\n\t\t\t// Cadena de acceso\n\t\t\tstrOut = StringUtils.Replace(\n\t\t\t\tstrOut,\n\t\t\t\t\"##ACCESS_STRING##\",\n\t\t\t\tUtils.EMPTY_STRING\n\t\t\t\t// Luis: Esto hay que ver si es necesario StringUtils.SafeToString(this.DataColl.getAccessString())\n\t\t\t);\n\t\t\tif (!strOut.contains(\"##\")) return strOut;\n\t\t} // Cadena de acceso\n\t\t// Si tiene ROWID, generarlo\n\t\tif (strOut.contains(\"##ROWID##\")) strOut = StringUtils.Replace(strOut, \"##ROWID##\", StringUtils.SafeToString(this.GenerateRowID())); // Generar un ROWID\n\t\t// Finalmente, lo que quiera amarosa\n\t\t// A11070101: Incluir la evaluación de operadores custom (BIT) en las sentencias SQL.\n\t\tlet cd = this.getConnection();\n\t\t// F12042601: PrepareSqlString no delega en la aplicación cuando se llama a la colección.\n\t\t// Pasar los parámetros a la conexión\n\t\tstrOut = cd.PrepareSqlString(strOut, ChkGroup, Prefiltered);\n\t\tif (strOut.contains(\"##BIT##\")) strOut = cd.ReplaceCustomOper(this.DataColl, strOut, \"##BIT##\");\n\t\t// F12042601: PrepareSqlString no delega en la aplicación cuando se llama a la colección.\n\t\tif (strOut.contains(\"##\")) strOut = this.DataColl.getOwnerApp().PrepareSqlString(strOut);\n\t\treturn strOut;\n\t}\n\t/**\n\t * Dada una sentencia o cadena cualquiera, desarrolla en ella las macros de filtros\n\t * @param Sentence\t\t\tSentencia SQL o cadena cuyas macros se quieren desarrollar.\n\t * @return\t\t\t\t\tDevuelve la cadena con las macros de filtro desarrolladas.\n\t */\n\tDevelopFilterMacros(Sentence) {\n\t\tlet strTmp = \"\";\n\t\t// UN CAMBEO\n\t\t// En este momento se pueden sustituir otros valores\n\t\t// para las macros de fecha y esas cosas\n\t\tif (StringUtils.IsEmptyString(Sentence)) return Sentence; // No hay nada que hacer\n\t\t// Sacar una copia para sustituir las macros\n\t\tlet strSrcFilter = Sentence;\n\t\tif (strSrcFilter.contains(\"##\")) {\n\t\t\t// Solo si hay algo en el filtro\n\t\t\tif (strSrcFilter.contains(\"##NOW\")) {\n\t\t\t\t// Macros de fecha\n\t\t\t\tlet dt = Calendar.getInstance();\n\t\t\t\t// Primero la fecha con hora\n\t\t\t\tif (strSrcFilter.contains(\"##NOW_TIME##\")) {\n\t\t\t\t\t// Con hora\n\t\t\t\t\tstrTmp = this.DevelopObjectValue(dt);\n\t\t\t\t\tstrSrcFilter = StringUtils.Replace(strSrcFilter, \"##NOW_TIME##\", strTmp);\n\t\t\t\t} // Con hora\n\t\t\t\t//\n\t\t\t\tif (strSrcFilter.contains(\"##NOW\")) {\n\t\t\t\t\t// Sin hora\n\t\t\t\t\t//\n\t\t\t\t\tObjUtils.ZeroCalendarTime(dt);\n\t\t\t\t\tstrTmp = this.DevelopObjectValue(dt);\n\t\t\t\t\t// Quitar la hora nula de la macro\n\t\t\t\t\t// K10052501:\tCon SQLite hay que incluir siempre la hora en las fechas.\n\t\t\t\t\t// Quitar la búsqueda y sustitución de la cadena de hora cero...\n\t\t\t\t\t////if (strTmp.indexOf(\" 00:00:00\") !=-1)\n\t\t\t\t\t////{// Tiene la hora nula, quitarla\n\t\t\t\t\t////    strTmp = StringUtils.Replace(strTmp, \" 00:00:00\", \"\").trim();\n\t\t\t\t\t////}// Tiene la hora nula, quitarla\n\t\t\t\t\tif (strSrcFilter.contains(\"##NOW_NOTIME##\")) strSrcFilter = StringUtils.Replace(strSrcFilter, \"##NOW_NOTIME##\", strTmp);\n\t\t\t\t\tif (strSrcFilter.contains(\"##NOW##\")) strSrcFilter = StringUtils.Replace(strSrcFilter, \"##NOW##\", strTmp);\n\t\t\t\t} // Sin hora\n\t\t\t} // Macros de fecha\n\t\t} // Solo si hay algo en el filtro\n\t\treturn strSrcFilter;\n\t}\n\t/**\n\t * Dada una sentencia o cadena cualquiera, desarrolla los filtros de colección incluidos en ella\n\t * @param Sentence\t\t\tSentencia SQL o cadena que se quiere desarrollar.\n\t * @return\t\t\t\t\tDevuelve una cadena con los filtros ya desarrollados.\n\t * @throws Exception\n\t */\n\tDevelopCollFilters(Sentence) {\n\t\tlet str = \"\",\n\t\t\tstrColl = \"\",\n\t\t\tstrUserIDColl = \"\",\n\t\t\tstrTmp = \"\";\n\t\tlet ent;\n\t\tif (!Sentence.contains(\"##\")) return Sentence; // Nada que hacer\n\t\t// Sacar una copia para efectuar las sustituciones...\n\t\tlet strFilter = Sentence;\n\t\tif (\n\t\t\tstrFilter.contains(\"##ENTID##\") ||\n\t\t\tstrFilter.contains(\"##ENTIDCOLL##\") ||\n\t\t\tstrFilter.contains(\"##USERID##\") ||\n\t\t\tstrFilter.contains(\"##USERIDCOLL##\") ||\n\t\t\tstrFilter.contains(\"##ENTIDLEVEL##\") ||\n\t\t\tstrFilter.contains(\"##ENTIDOWNER##\")\n\t\t) {\n\t\t\t// Macros de empresa o usuario\n\t\t\tif (null != (ent = this.DataColl.getOwnerApp().getCurrentCompany())) {\n\t\t\t\t// Tiene empresa\n\t\t\t\tstr = \"=\" + ent.GetObjectIdString(true);\n\t\t\t\t//\n\t\t\t\t// No es necesario incluir el ID de la propia empresa porque ya viene en el EntIDColl\n\t\t\t\t// De paso se comprueba que en caso de tratarse de un solo ID, no se incluya en un IN\n\t\t\t\t// sino que sea solo una igualdad...\n\t\t\t\t// Cuando se analiza el valor de la macro de ENTIDCOLL o ENTIDLEVEL hay que considerarla\n\t\t\t\t// valor único solamente si no tiene espacios, pues puede ser cualquier cosa mandada de\n\t\t\t\t// fuera... ante la duda usar IN\n\t\t\t\tif (!StringUtils.IsEmptyString(this.DataColl.getOwnerApp().getIdColl())) {\n\t\t\t\t\t// Tiene algo\n\t\t\t\t\tstrTmp = this.DataColl.getOwnerApp().getIdColl();\n\t\t\t\t\tif (strTmp.indexOf(\",\") == -1 && strTmp.indexOf(\" \") == -1) strColl = \"=\" + strTmp;\n\t\t\t\t\telse strColl = \" IN (\" + strTmp + \") \";\n\t\t\t\t} // Tiene algo\n\t\t\t\telse strColl = str;\n\t\t\t\tif (!StringUtils.IsEmptyString(this.DataColl.getOwnerApp().getUserIdColl()))\n\t\t\t\t\tstrUserIDColl = \" IN (\" + this.DataColl.getOwnerApp().getUserIdColl() + \")\";\n\t\t\t\telse strUserIDColl = \" IS NULL\";\n\t\t\t\tstrFilter = StringUtils.Replace(strFilter, \"=##ENTID##\", str);\n\t\t\t\tstrFilter = StringUtils.Replace(strFilter, \"=##ENTIDCOLL##\", strColl);\n\t\t\t\tstrFilter = StringUtils.Replace(strFilter, \"=##USERIDCOLL##\", strUserIDColl);\n\t\t\t\t// Buscar la colección de empresas al mismo nivel y por esta rama hacia arriba\n\t\t\t\tif (strFilter.contains(\"##ENTIDLEVEL##\")) {\n\t\t\t\t\t// Tiene esta macro\n\t\t\t\t\tif (!StringUtils.IsEmptyString(this.DataColl.getOwnerApp().getEntIdLevel())) {\n\t\t\t\t\t\t// Tiene algo\n\t\t\t\t\t\tstrTmp = this.DataColl.getOwnerApp().getEntIdLevel();\n\t\t\t\t\t\tif (strTmp.indexOf(\",\") == -1 && strTmp.indexOf(\" \") == -1) strColl = \"=\" + strTmp;\n\t\t\t\t\t\telse strColl = \" IN (\" + strTmp + \") \";\n\t\t\t\t\t} // Tiene algo\n\t\t\t\t\telse strColl = str;\n\t\t\t\t\t//\n\t\t\t\t\t// Ahora hacer la sustitución\n\t\t\t\t\tstrFilter = StringUtils.Replace(strFilter, \"=##ENTIDLEVEL##\", strColl);\n\t\t\t\t} // Tiene esta macro\n\t\t\t\t// Buscar la macro\n\t\t\t\tif (strFilter.contains(\"##ENTIDOWNER##\")) {\n\t\t\t\t\t// Tiene esta macro\n\t\t\t\t\tstrTmp = this.DataColl.getOwnerApp().getEntIdOwner();\n\t\t\t\t\tif (!StringUtils.IsEmptyString(strTmp)) strColl = \"=\" + strTmp;\n\t\t\t\t\t// Tiene algo\n\t\t\t\t\telse strColl = str;\n\t\t\t\t\t// Ahora hacer la sustitución\n\t\t\t\t\tstrFilter = StringUtils.Replace(strFilter, \"=##ENTIDOWNER##\", strColl);\n\t\t\t\t} // Tiene esta macro\n\t\t\t\t//\n\t\t\t\tstrFilter = StringUtils.Replace(strFilter, '\"', \"'\");\n\t\t\t\t// Usuario\n\t\t\t\tlet n = NumberUtils.SafeToInt(ent.GetRawPropertyValue(\"MAP_IDCURRENTUSER\"));\n\t\t\t\tif (n == 0) str = \" IS NULL\";\n\t\t\t\telse str = \"=\" + n;\n\t\t\t\tstrFilter = StringUtils.Replace(strFilter, \"=##USERID##\", str);\n\t\t\t} // Tiene empresa\n\t\t} // Macros de empresa o usuario\n\t\t//\n\t\t// El MID si está replicando\n\t\tif (strFilter.contains(\"##MID##\")) {\n\t\t\t// El MID solo si está replicando\n\t\t\tif (this.getConnection().getIsReplicating()) {\n\t\t\t\t// Está replicando\n\t\t\t\tstr = \"'\" + this.getConnection().getMID() + \"'\";\n\t\t\t\tstrFilter = StringUtils.Replace(strFilter, \"##MID##\", str);\n\t\t\t} // Está replicando\n\t\t} // El MID solo si está replicando\n\t\t//\n\t\tif (strFilter.contains(\"##ID##\")) {\n\t\t\t// Solo si tiene que sustituirlo\n\t\t\tif (this.DataColl.getOwnerObject() != null) {\n\t\t\t\t// Objeto propietario\n\t\t\t\tstr = this.DataColl.getOwnerObject().GetObjectIdString(true);\n\t\t\t\tstrFilter = StringUtils.Replace(strFilter, \"=##ID##\", str.equals(\"NULL\") ? \" IS NULL\" : \"=\" + str);\n\t\t\t} // Objeto propietario\n\t\t} // Solo si tiene que sustituirlo\n\t\t//\n\t\t// Si dentro de algún filtro hay operadores bitwise, comprobar los datos\n\t\t// en el nodo DBMS para sustituir por la operación correcta\n\t\tstrFilter = this.getConnection().ReplaceCustomOper(this.DataColl, strFilter, \"##BIT##\");\n\t\treturn strFilter;\n\t}\n\t//#endregion\n\t/**\n\t * Desarrolla el valor de un objeto y lo devuelve como cadena preparada para colocar en una sentencia SQL o filtro.\n\t *\n\t * K12102201: Modificación de DevelopObjectValue para pasar ForceNulls como parámetro.\n\t * Un parámetro para indicar si se fuerzan los nulos o no.\n\t *\n\t * @param Value\t\t\tValor que se quiere desarrollar.\n\t * @return\t\t\t\tDevuelve el valor desarrollado como cadena con sus comillas y demás.\n\t */\n\tDevelopObjectValue(Value, ForceNulls = true) {\n\t\treturn this.getConnection().DevelopObjectValue(Value, ForceNulls);\n\t}\n\t//#region Preparar busquedas en el SQL\n\t/**\n\t * M09072903:\tProgramar un mecanismo de restauración de campos para SQLs sin unión.\n\t * Dada una cadena de búsqueda se arma un SQL para ejecutar y buscar una o varias filas que\n\t * correspondan a dicha clave. Utilizado para las búsquedas de objetos en base de datos.\n\t * @param KeySearch\t\t\tClave que contiene los posibles filtros de búsqueda del elemento en base de datos.\n\t * @return\t\t\t\t\tDevuelve una sentencia SELECT Con la sintaxis adecuada y la clave pasada en su lugar correcto.\n\t * @throws Exception\n\t */\n\tasync GenerateSearchSql(KeySearch) {\n\t\tlet strCmd;\n\t\tif (this.Options.bUseRaw) {\n\t\t\t// No permite subqueries\n\t\t\t// F12042504: Una colección con un sql desconocido no debería generar sql de búsqueda.\n\t\t\t// Esto está hecho en PDA, habrá que documentar\n\t\t\tif (!this.Options.bParseSQL) return this.DataColl.getAccessString();\n\t\t\tif (this.m_parsedAccessString == null) if (!(await this.ParseAccessString())) return \"\";\n\t\t\tif (this.m_parsedAccessString == null) strCmd = Utils.EMPTY_STRING;\n\t\t\telse if (this.m_parsedAccessString.GetSqlType() == SqlType.SQLTYPE_UNKNOWN) strCmd = Utils.EMPTY_STRING;\n\t\t\telse strCmd = await this.EmbedFilters(KeySearch);\n\t\t} // No permite subqueries\n\t\telse {\n\t\t\t// Permite subqueries\n\t\t\t// F12112103: Cuando se usan subqueries no se está generando el SQL adecuado.\n\t\t\t// Arreglar esto cuando hay subqueries.\n\t\t\tif (this.Options.bSingleObject) strCmd = \"SELECT * FROM \" + this.DataColl.getAccessString() + \" rrss WHERE \" + KeySearch;\n\t\t\telse strCmd = \"SELECT * FROM (\" + this.DataColl.getAccessString() + \") rrss WHERE \" + KeySearch;\n\t\t} // Permite subqueries\n\t\treturn strCmd;\n\t}\n\t/**\n\t * M09072903:\tProgramar un mecanismo de restauración de campos para SQLs sin unión.\n\t * Esta función genera una cadena de búsqueda para efectuar una búsqueda en base de datos.\n\t * Incluye los filtros, las macros de búsqueda y demás.\n\t * @param FieldName\t\t\tNombre del campo por el que se va a armar la clave de búsqueda.\n\t * @param FieldValue\t\tValor que se quiere buscar.\n\t * @return\t\t\t\t\tDevuelve una cadena que se puede emplear para armar el SQL de búsqueda.\n\t * @throws Exception\n\t */\n\tasync GenerateKeySearch(FieldName, FieldValue) {\n\t\tlet strKeySearch;\n\t\tlet strField = this.QualifyField(FieldName);\n\t\tif (FieldName.equals(this.DataColl.getIdFieldName())) {\n\t\t\tstrKeySearch = strField + \"=\" + this.FormatKeyValue(FieldValue.toString());\n\t\t\t// O10082401: Cuando el KeySearch es el campo clave no hacen falta más filtros.\n\t\t\treturn strKeySearch;\n\t\t} else {\n\t\t\t// No es clave primaria\n\t\t\tstrKeySearch = strField + \"=\" + this.DevelopObjectValue(FieldValue); // Formatear la búsqueda\n\t\t\t// O10052502:\tAl armar la clave de búsqueda tener en cuenta la clave.\n\t\t\tif (this.DataColl.IsLinkedField(FieldName)) {\n\t\t\t\t// Si es un campo entero y el valor es cero, podría comparar con NULL también\n\t\t\t\tif (this.DataColl.FieldPropertyValue(FieldName, \"type\").equals(\"N\")) {\n\t\t\t\t\t// Convertir y preparar la cadenilla\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (NumberUtils.SafeToInt(FieldValue) == 0) strKeySearch = \"((\" + strKeySearch + \") OR (\" + strField + \" IS NULL))\";\n\t\t\t\t\t} catch (x) {\n\t\t\t\t\t\t// Ignorar\n\t\t\t\t\t}\n\t\t\t\t} // Convertir y preparar la cadenilla\n\t\t\t} // Si es un campo entero y el valor es cero, podría comparar con NULL también\n\t\t} // No es clave primaria\n\t\t// O10052502:\tAl armar la clave de búsqueda tener en cuenta la clave.\n\t\t// Incluir las declaraciones y llamada a ApplyFilters dentro de la condición\n\t\tif (StringUtils.IsEmptyString(this.Options.strLookupMacroName)) {\n\t\t\t// Búsqueda sin macro de búsqueda\n\t\t\tlet strFilters = await this.ApplyFilters(false);\n\t\t\tif (!StringUtils.IsEmptyString(strFilters)) {\n\t\t\t\t// Concatenar ambos\n\t\t\t\tstrKeySearch = strKeySearch + \" AND (\" + strFilters + \")\";\n\t\t\t} // Concatenar ambos\n\t\t} // Búsqueda sin macro de búsqueda\n\t\treturn strKeySearch;\n\t}\n\t/**\n\t * Formatea y devuelve el valor de una clave de búsqueda de la colección en función de si es numérica o de cadena.\n\t * @param Key\t\t\tClave que se quiere formatear.\n\t * @return\t\t\t\tDevuelve la clave formateada en función de si la colección tiene clave numérica o no.\n\t */\n\tFormatKeyValue(Key) {\n\t\tif (this.DataColl.getStringKey()) return \"'\" + Key + \"'\";\n\t\t// De lo contrario, tal cual\n\t\treturn StringUtils.removeChars(Key, \"'\");\n\t}\n\t//#endregion\n\t//#region Para aplicar filtros a los queries\n\t/**\n\t * @return\t\t\tDevuelve TRUE si la cadena de acceso a datos de la colección tiene ya un filtro (WHERE, HAVING o algo por el estilo)\n\t * @throws Exception\n\t */\n\tasync IsSqlPrefiltered() {\n\t\tif (!this.Options.bParseSQL) return false;\n\t\t// Si no está parseado el SQL, tendremos que parsearlo\n\t\tif (this.m_parsedAccessString == null || this.m_parsedAccessString.GetSqlType() == 0)\n\t\t\tif (!(await this.ParseAccessString())) {\n\t\t\t\t// Error\n\t\t\t\t// M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n\t\t\t\t////throw new Exception(\"No se puede interpretar la sentencia SQL de la colección '\" + m_strName + \"' para XoneDataCollection::IsSqlPrefiltered\");\n\t\t\t\tlet sb = this.DataColl.GetMessage(\n\t\t\t\t\tXoneMessageKeys.SYS_MSG_COLL_SQLPARSEERROR_01,\n\t\t\t\t\t\"{0} failed. Cannot parse SQL sentence for collection '{1}'\"\n\t\t\t\t);\n\t\t\t\tsb = sb.replace(\"{0}\", \"CXoneDataCollection::IsSqlPrefiltered\");\n\t\t\t\tsb = sb.replace(\"{1}\", this.DataColl.getName());\n\t\t\t\tthrow new XoneGenericException(-6631, sb);\n\t\t\t} // Error\n\t\t// Buscar si ya está filtrado\n\t\t// Si tiene WHERE, entonces está prefiltrado\n\t\tif (!StringUtils.IsEmptyString(this.m_parsedAccessString.GetWhereSentence())) return true;\n\t\t// Si tiene HAVING entonces también está prefiltrado\n\t\tif (!StringUtils.IsEmptyString(this.m_parsedAccessString.getHavingSentence())) return true;\n\t\t// De lo contrario podría ser una unión\n\t\tif (this.m_parsedAccessString.getIsUnionQuery()) {\n\t\t\t// Analizar cada posible registro de la unión\n\t\t\tfor (let i = 0; i < this.m_parsedAccessString.getUnionQueries().length; i++) {\n\t\t\t\t// Basta con que uno de ellos está prefiltrado para considerar que lo está del todo\n\t\t\t\tlet sql = this.m_parsedAccessString.getUnionQueries()[i];\n\t\t\t\tif (!StringUtils.IsEmptyString(sql.GetWhereSentence())) return true;\n\t\t\t\tif (!StringUtils.IsEmptyString(sql.getHavingSentence())) return true;\n\t\t\t} // Basta con que uno de ellos está prefiltrado para considerar que lo está del todo\n\t\t} // Analizar cada posible registro de la unión\n\t\t// Finalmente es que no tenemos prefiltado ninguno...\n\t\treturn false;\n\t}\n\t/// Devuelve una sentencia SQL con los filtros de colección incluidos donde vayan dentro de ella (empleado para los DBMS que no usan subqueries)\n\t/// <param name=\"Sentence\">Sentencia SQL en la que se quieren incluir los filtros. NULL para usar la cadena de acceso de datos de la colección.</param>\n\t/// <param name=\"Filter\">Filtros que se quieren incluir dentro de la sentencia SQL</param>\n\tasync EmbedFilters(Sentence, Filter) {\n\t\tlet sentence = null;\n\t\tif (typeof Sentence == \"string\") {\n\t\t\tFilter = Sentence;\n\t\t\tSentence = null;\n\t\t} else {\n\t\t\tsentence = Sentence;\n\t\t}\n\t\tconst FunctionName = \"CXoneDataCollection::EmbedFilters\";\n\t\t// Ver si nos han mandado los filtros. De lo contrario usamos los nuestros\n\t\tlet strFilter = StringUtils.IsEmptyString(Filter) ? await this.ApplyFilters(false) : Filter;\n\t\t// Ahora ver si nos mandan una sentencia en la cual insertar los filtros\n\t\tif (sentence == null) {\n\t\t\t// Obtener la de la colección\n\t\t\tif (this.m_parsedAccessString == null)\n\t\t\t\tif (!(await this.ParseAccessString())) {\n\t\t\t\t\t// Error\n\t\t\t\t\t// M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n\t\t\t\t\t////throw new XoneGenericException(-1278, \"No se puede interpretar la sentencia SQL de la colección '\" + m_strName + \"'\");\n\t\t\t\t\tlet sb = this.DataColl.GetMessage(\n\t\t\t\t\t\tXoneMessageKeys.SYS_MSG_COLL_SQLPARSEERROR_01,\n\t\t\t\t\t\t\"{0} failed. Cannot parse SQL sentence for collection '{1}'\"\n\t\t\t\t\t);\n\t\t\t\t\tsb = sb.replace(\"{0}\", FunctionName);\n\t\t\t\t\tsb = sb.replace(\"{1}\", this.DataColl.getName());\n\t\t\t\t\tthrow new XoneGenericException(-1278, sb);\n\t\t\t\t} // Error\n\t\t\tsentence = this.m_parsedAccessString;\n\t\t} // Obtener la de la colección\n\t\t// Si no hay filtros que aplicar, no hacemos nada\n\t\tif (StringUtils.IsEmptyString(strFilter)) return sentence.RegenerateSql();\n\t\t// Ahora habrá que trabajar diferente en función de si es una unión o no...\n\t\tlet output = new SqlParser(sentence);\n\t\tif (!output.CopyData(sentence)) {\n\t\t\t// Error\n\t\t\t// M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n\t\t\t////throw new XoneGenericException(-1279, \"Error introduciendo los filtros en la sentencia SQL de la colección '\" + m_strName + \"'\");\n\t\t\tlet sb = this.DataColl.GetMessage(XoneMessageKeys.SYS_MSG_COLL_EMBEDFILTERFAIL, \"{0} failed. Error embedding filters in collection '{1}'\");\n\t\t\tsb = sb.replace(\"{0}\", FunctionName);\n\t\t\tsb = sb.replace(\"{1}\", this.DataColl.getName());\n\t\t\tthrow new XoneGenericException(-1279, sb);\n\t\t} // Error\n\t\t// Ahora meter aquí las cosillas\n\t\tlet strWhere;\n\t\tif (output.getIsUnionQuery()) {\n\t\t\t// Filtros a cada query de la unión\n\t\t\tfor (let i = 0; i < output.getUnionQueries().length; i++) {\n\t\t\t\t// Cada subquery\n\t\t\t\tlet uq = output.getUnionQueries()[i];\n\t\t\t\tif (!StringUtils.IsEmptyString(uq.GetWhereSentence())) strWhere = \"(\" + uq.GetWhereSentence() + \") AND \" + strFilter;\n\t\t\t\telse strWhere = strFilter;\n\t\t\t\tuq.SetWhereSentence(strWhere);\n\t\t\t} // Cada subquery\n\t\t} // Filtros a cada query de la unión\n\t\telse {\n\t\t\t// Un solo filtro\n\t\t\t// F12042503: Las sentencias que tienen grup by deben usar having en su filtro.\n\t\t\t// Las sentencias agrupadas llevan having\n\t\t\tlet strPrevFilter;\n\t\t\tlet bGroup = !TextUtils.isEmpty(output.getGroupBySentence());\n\t\t\tif (bGroup) strPrevFilter = output.getHavingSentence();\n\t\t\telse strPrevFilter = output.GetWhereSentence();\n\t\t\t// Concatenar o no\n\t\t\tif (!StringUtils.IsEmptyString(strPrevFilter)) strWhere = \"(\" + strPrevFilter + \") AND \" + strFilter;\n\t\t\telse strWhere = strFilter;\n\t\t\tif (bGroup) {\n\t\t\t\toutput.setHavingSentence(strWhere);\n\t\t\t\toutput.SetWhereSentence(Utils.EMPTY_STRING);\n\t\t\t} else {\n\t\t\t\toutput.SetWhereSentence(strWhere);\n\t\t\t\toutput.setHavingSentence(Utils.EMPTY_STRING);\n\t\t\t}\n\t\t} // Un solo filtro\n\t\t// Devolver la sentencia ya arreglada\n\t\treturn output.RegenerateSql();\n\t}\n\t/**\n\t * @param IncludeWhere\t\t\tTRUE si además hay que devolverlo con la clave WHERE y listo para usarse como filtro.\n\t * @param Subquery\t\t\t\tSentencia SQL que se usará para cualificar los campos. NULL para usar la cadena de acceso de la colección.\n\t * @return\t\t\t\t\t\tDevuelve una cadena con los filtros de la colección ya desarrollados y con las macros sustituidas.\n\t * @throws Exception\n\t */\n\tasync ApplyFilters(IncludeWhere, Subquery = null) {\n\t\tlet strTmp = \"\",\n\t\t\tstr = \"\";\n\t\tif (!StringUtils.IsEmptyString(this.DataColl.getLinkFilter())) str = \"(\" + (await this.PrepareFilter(this.DataColl.getLinkFilter())) + \")\"; // Preparar y devolver el filtro\n\t\tif (!StringUtils.IsEmptyString(this.DataColl.getFilter())) {\n\t\t\t// Filtro normal\n\t\t\tif (!StringUtils.IsEmptyString(str)) str += \" AND \";\n\t\t\tstrTmp = \"(\" + (await this.PrepareFilter(this.DataColl.getFilter(), Subquery)) + \")\";\n\t\t\tstr += strTmp;\n\t\t} // Filtro normal\n\t\tif (!StringUtils.IsEmptyString(str)) {\n\t\t\t// Preparar el WHERE\n\t\t\tif (IncludeWhere) str = \" WHERE (\" + str + \") \";\n\t\t} // Preparar el WHERE\n\t\tif (!StringUtils.IsEmptyString(str)) {\n\t\t\t// Si no es vacia\n\t\t\t// Si lleva macros sustituirlas\n\t\t\tstr = this.DevelopCollFilters(str);\n\t\t\tstr = this.DevelopFilterMacros(str);\n\t\t\tstr = await this.DataColl.EvaluateAllMacros(str, true);\n\t\t\t//\n\t\t\t// Si la colección es un contents pasarle al propietario pa que evalúe las macros de campos\n\t\t\t/*\n                    Ocurre que desde que los filtros se evalúan siempre dinámicamente es necesario\n                    reevaluar incluso los filtros de los contents, sobre todo porque cuando se crean\n                    objetos nuevos hay que poner los valores por defecto o los que vienen de las macros\n                    de campos\n                */\n\t\t\tif (this.DataColl.getOwnerObject() != null) str = this.DataColl.getOwnerObject().PrepareSqlString(str);\n\t\t\t// A11070101: Incluir la evaluación de operadores custom (BIT) en las sentencias SQL.\n\t\t\t// F12042601: PrepareSqlString no delega en la aplicación cuando se llama a la colección.\n\t\t\telse str = this.PrepareSqlString(str, false, false);\n\t\t\t/*\n                    Puede ser que después de todo esto quedaran macros sin sustituir, por lo que\n                    en caso de tratarse de una colección de contents que está dentro de otro objeto\n                    se puedan resolver estas macros en la colección propietaria del otro objeto\n                */\n\t\t\tif (str.contains(\"##\") && this.DataColl.getOwnerObject() != null) {\n\t\t\t\t// Quedan cosas\n\t\t\t\tstr = await this.DataColl.getOwnerObject().getOwnerCollection().EvaluateAllMacros(str, true);\n\t\t\t} // Quedan cosas\n\t\t} // Si no es vacia\n\t\treturn str;\n\t}\n\t/**\n\t * @param IncludeWhere\t\t\tTRUE si además hay que devolverlo con la clave WHERE y listo para usarse como filtro.\n\t * @param Subquery\t\t\t\tSentencia SQL que se usará para cualificar los campos. NULL para usar la cadena de acceso de la colección.\n\t * @return\t\t\t\t\t\tDevuelve una cadena con los filtros de la colección ya desarrollados y con las macros sustituidas.\n\t * @throws Exception\n\t */\n\tasync ResolveFilters(IncludeWhere, Subquery = null, keySearch = null) {\n\t\tlet strTmp = \"\",\n\t\t\tstr = \"\";\n\t\tif (!StringUtils.IsEmptyString(this.DataColl.getLinkFilter())) str = \"(\" + (await this.PrepareFilter(this.DataColl.getLinkFilter())) + \")\"; // Preparar y devolver el filtro\n\t\tif (keySearch) {\n\t\t\tif (!StringUtils.IsEmptyString(str)) str += \" AND \";\n\t\t\tstrTmp = \"(\" + keySearch + \")\";\n\t\t\tstr += strTmp;\n\t\t} else if (!StringUtils.IsEmptyString(this.DataColl.getFilter())) {\n\t\t\t// Filtro normal\n\t\t\tif (!StringUtils.IsEmptyString(str)) str += \" AND \";\n\t\t\tstrTmp = \"(\" + (await this.PrepareFilter(this.DataColl.getFilter(), Subquery)) + \")\";\n\t\t\tstr += strTmp;\n\t\t} // Filtro normal\n\t\tif (!StringUtils.IsEmptyString(str)) {\n\t\t\t// Preparar el WHERE\n\t\t\tif (IncludeWhere) str = \" WHERE (\" + str + \") \";\n\t\t} // Preparar el WHERE\n\t\tif (!StringUtils.IsEmptyString(str)) {\n\t\t\t// Si no es vacia\n\t\t\t// Si lleva macros sustituirlas\n\t\t\tstr = this.DevelopCollFilters(str);\n\t\t\tstr = this.DevelopFilterMacros(str);\n\t\t\tstr = await this.DataColl.EvaluateAllMacros(str, true);\n\t\t\t//\n\t\t\t// Si la colección es un contents pasarle al propietario pa que evalúe las macros de campos\n\t\t\t/*\n                    Ocurre que desde que los filtros se evalúan siempre dinámicamente es necesario\n                    reevaluar incluso los filtros de los contents, sobre todo porque cuando se crean\n                    objetos nuevos hay que poner los valores por defecto o los que vienen de las macros\n                    de campos\n                */\n\t\t\tif (this.DataColl.getOwnerObject() != null) str = this.DataColl.getOwnerObject().PrepareSqlString(str);\n\t\t\t// A11070101: Incluir la evaluación de operadores custom (BIT) en las sentencias SQL.\n\t\t\t// F12042601: PrepareSqlString no delega en la aplicación cuando se llama a la colección.\n\t\t\telse str = this.PrepareSqlString(str, false, false);\n\t\t\t/*\n                    Puede ser que después de todo esto quedaran macros sin sustituir, por lo que\n                    en caso de tratarse de una colección de contents que está dentro de otro objeto\n                    se puedan resolver estas macros en la colección propietaria del otro objeto\n                */\n\t\t\tif (str.contains(\"##\") && this.DataColl.getOwnerObject() != null) {\n\t\t\t\t// Quedan cosas\n\t\t\t\tstr = await this.DataColl.getOwnerObject().getOwnerCollection().EvaluateAllMacros(str, true);\n\t\t\t} // Quedan cosas\n\t\t} // Si no es vacia\n\t\treturn str;\n\t}\n\t/**\n\t * Prepara el filtro que se pasa como parámetro cualificando sus campos y demás.\n\t * @param Filter\t\t\t\tFiltro de datos que se quiere preparar.\n\t * @param Subquery\t\t\t\tSentencia SQL parseada que se usará para cualificar los campos del filtro.\n\t * @return\t\t\t\t\t\tDevuelve el filtro ya preparado con los campos cualificados y demás.\n\t * @throws Exception\n\t */\n\tasync PrepareFilter(Filter, Subquery) {\n\t\tlet strField = \"\",\n\t\t\tstr = \"\";\n\t\tlet strOut = new StringBuilder();\n\t\tlet strTmp = new StringBuilder();\n\t\tlet c = \"\";\n\t\tlet i = 0,\n\t\t\tnCount = 0;\n\t\tlet bIsField = false,\n\t\t\tbFieldComplete = false,\n\t\t\tbIsTextToken = false;\n\t\tif (StringUtils.IsEmptyString(Filter)) return Filter;\n\t\t// Si no usa el SQL sin subqueries no es necesario hacer ningún preprocesamiento\n\t\t// del filtro, sino que se usa tal cual... ventajas de los DBMS decentes...\n\t\tif (!this.Options.bUseRaw) return Filter;\n\t\t// O11112401: Aquellas colecciones que usan una sola tabla no tienen que cualificar.\n\t\t// Si tenemos un sql de una sola tabla entonces no tenemos que cualificar los campos\n\t\tif (Subquery == null) {\n\t\t\t// Usar la parseada\n\t\t\tif (this.m_parsedAccessString == null) await this.ParseAccessString();\n\t\t\t// Usarla si la tenemos...\n\t\t\tSubquery = this.m_parsedAccessString;\n\t\t} // Usar la parseada\n\t\tif (Subquery != null) {\n\t\t\t// Tiene subquery\n\t\t\tlet table = Subquery.getTableFrom();\n\t\t\tif (table != null) {\n\t\t\t\t// Tabla\n\t\t\t\tif (null == table.getSecondTable()) return Filter;\n\t\t\t} // Tabla\n\t\t} // Tiene subquery\n\t\t// Ahora debe parsear el filtro, para ello usamos nuestro viejo formulaparser\n\t\t// empleando también como operadores los lógicos.\n\t\tfor (i = 0, nCount = Filter.length, bIsField = bFieldComplete = bIsTextToken = false; i < nCount; i++) {\n\t\t\t// Recorrer el filtro\n\t\t\tswitch ((c = Filter.charAt(i))) {\n\t\t\t\tcase \" \": // Espacios\n\t\t\t\tcase \"=\": // Operadores\n\t\t\t\tcase \">\":\n\t\t\t\tcase \"<\":\n\t\t\t\tcase \"(\":\n\t\t\t\tcase \")\":\n\t\t\t\tcase \",\" /* F10052503:\tIncluir la coma como separador en PrepareFilter. */:\n\t\t\t\t\tif (bIsField && !bIsTextToken) {\n\t\t\t\t\t\t// Se acabó el campo\n\t\t\t\t\t\tstrTmp = new StringBuilder();\n\t\t\t\t\t\tfor (; i < nCount; strTmp.append(Filter.charAt(i)), i++) if (Filter.charAt(i) == \" \" || !this.IsClosingToken(Filter.charAt(i))) break;\n\t\t\t\t\t\tfor (; i < nCount; strTmp.append(Filter.charAt(i)), i++) if (Filter.charAt(i) != \" \") break;\n\t\t\t\t\t\tbFieldComplete = true;\n\t\t\t\t\t\tbIsField = false;\n\t\t\t\t\t\ti--;\n\t\t\t\t\t} // Se acabó el campo\n\t\t\t\t\telse strOut.append(c);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"'\":\n\t\t\t\t\t/*\n                                Comprobar si está dentro de un literal de cadena, en cuyo caso no habrá que\n                                realizar cualificaciones de ningún tipo\n                            */\n\t\t\t\t\t// F11112806: Problema con los filtros con operadores raros en sqlite.\n\t\t\t\t\t// Si estamos trabajando con un campo (szField tiene valor) entonces posiblemente fuera un operador, así\n\t\t\t\t\t// que lo que tenemos que hacer es ponerlo a la salida y abrir el literal de texto\n\t\t\t\t\tif (!StringUtils.IsEmptyString(strField)) {\n\t\t\t\t\t\t// Tiene valor\n\t\t\t\t\t\tstrOut.append(strField);\n\t\t\t\t\t\tstrField = Utils.EMPTY_STRING;\n\t\t\t\t\t\tbIsField = bFieldComplete = false;\n\t\t\t\t\t} // Tiene valor\n\t\t\t\t\tbIsTextToken = !bIsTextToken;\n\t\t\t\t\tstrOut.append(c);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (bIsField) strField += c;\n\t\t\t\t\telse {\n\t\t\t\t\t\t// No contar este\n\t\t\t\t\t\tif (bIsTextToken) strOut.append(c);\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// No es un token de texto\n\t\t\t\t\t\t\tbIsField = true;\n\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t} // No es un token de texto\n\t\t\t\t\t} // No contar este\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t//\n\t\t\t// Si ha terminado un campo procesarlo\n\t\t\tif (bFieldComplete) {\n\t\t\t\t// Comprobar si es un operador\n\t\t\t\tstr = strField.toLowerCase();\n\t\t\t\tif (!(str.equals(\"is\") || str.equals(\"and\") || str.equals(\"or\") || str.equals(\"in\") || str.equals(\"between\") || str.equals(\"not\"))) {\n\t\t\t\t\t// Comprobar\n\t\t\t\t\t// Puede que sea un campo\n\t\t\t\t\tstrField = this.QualifyField(strField, Subquery);\n\t\t\t\t} // Comprobar\n\t\t\t\t// Adicionar a la cadena de salida\n\t\t\t\tstrOut.append(strField);\n\t\t\t\tstrOut.append(strTmp.toString());\n\t\t\t\tstrField = \"\";\n\t\t\t\tbFieldComplete = false;\n\t\t\t} // Comprobar si es un operador\n\t\t} // Recorrer el filtro\n\t\t//\n\t\tstrOut.append(strField);\n\t\treturn strOut.toString();\n\t}\n\t/**\n\t * TRUE si el parámetro es un token que cierra una expresión\n\t * @param Token\t\t\tElemento que se quiere comprobar.\n\t * @return\t\t\t\tDevuelve TRUE si el parámetro vale para cerrar una expresión.\n\t */\n\tIsClosingToken(Token) {\n\t\treturn Token == \"=\" || Token == \")\" || Token == \"=\" || Token == \">\" || Token == \"<\" || Token == \" \";\n\t}\n\t//#endregion\n\t/**\n\t * M09072903:\tProgramar un mecanismo de restauración de campos para SQLs sin unión.\n\t * Esta función tiene un objetivo bastante similar al de GetObject pero con algunas diferencias, a saber:\n\t * 1- Siempre busca en base de datos, por lo que no es necesario indicar un parámetro para eso.\n\t * 2- Siempre usa los filtros que tenga la colección, por lo que tampoco hace falta parámetro para eso.\n\t *\n\t * @param FieldName\t\t\tNombre del campo por el que se va a hacer la búsqueda.\n\t * @param FieldValue\t\tValor que se quiere usar como comparación.\n\t * @return\t\t\t\t\tDevuelve un resultset con la línea correspondiente al elemento a buscar.\n\t * @throws Exception\n\t */\n\tasync GetResultSet(FieldName, FieldValue) {\n\t\tlet strKeySearch = await this.GenerateKeySearch(FieldName, FieldValue);\n\t\tlet strCmd = await this.GenerateSearchSql(strKeySearch);\n\t\t// Preparar esta cosa, porque traerá macros y demás\n\t\t// F12042601: PrepareSqlString no delega en la aplicación cuando se llama a la colección.\n\t\tif (strCmd.contains(\"##\")) strCmd = this.PrepareSqlString(strCmd, false, await this.IsSqlPrefiltered());\n\t\t// Buscar en base de datos\n\t\tlet rs = await this.getConnection().CreateRecordsetAsync(strCmd, {\n\t\t\tcount: false,\n\t\t\tcoll: this.DataColl.getName(),\n\t\t\tmacros: this.DataColl.getMacros(),\n\t\t\tloadall: false,\n\t\t\tpage: {},\n\t\t});\n\t\t// Moverse para el primero, a fin de cuentas es lo que nos hace falta...\n\t\tawait rs.next();\n\t\treturn rs;\n\t}\n\t/**\n\t * @param FieldName\t\tValor que se quiere comparar. Si es un nombre de campo la función devuelve FALSE.\n\t * @return\t\t\t\tDevuelve TRUE si la cadena que se pasa como parámetro NO es un nombre de campo.\n\t */\n\tIsNotFieldName(FieldName) {\n\t\tlet strInvalid = \" /{}\\\\,;\\r\\n\\t:#\";\n\t\tfor (let i = 0; i < strInvalid.length; i++) {\n\t\t\t// Analiza cada caracter\n\t\t\tlet c = strInvalid.charAt(i);\n\t\t\tif (FieldName.indexOf(c) != -1) return true;\n\t\t} // Analiza cada caracter\n\t\t// De lo contrario posiblemente sea un campo\n\t\treturn false;\n\t}\n\tQualifyField(FieldName, Sentence) {\n\t\tvar _a, _b;\n\t\tlet str;\n\t\t// Primero ver si no hay que hacer nada\n\t\tif (!this.Options.bUseRaw || StringUtils.IsEmptyString(FieldName)) return FieldName;\n\t\t// Si no es un nombre de campo, tampoco devolvemos nada...\n\t\tif (this.IsNotFieldName(FieldName)) return FieldName;\n\t\t// Ante todo ver si ya está cualificado e insertado en una cache\n\t\tlet cache = null;\n\t\tif (null != (cache = this.DataColl.getOwnerApp().GetQualifyCache(this.DataColl.getName()))) {\n\t\t\t// Si tenemos cache, buscar\n\t\t\t// K13061901: Modificaciones para mejorar el soporte de concurrencia en la maquinaria.\n\t\t\t// Esto puede dar problemas si hay concurrencia...\n\t\t\t//synchronized (cache)\n\t\t\t{\n\t\t\t\tif (cache.containsKey(FieldName)) return cache.get(FieldName);\n\t\t\t}\n\t\t} // Si tenemos cache, buscar\n\t\t// F11070101: No cualificar campos especiales en las colecciones.\n\t\t// Los campos especiales no se cualifican\n\t\t// O12050702: Optimización al gestionas los campos que son de fórmula o bit.\n\t\t// Si es un campo fórmula o bit estará en la lista de tales.\n\t\t//////str =FieldPropertyValue (FieldName, \"bit\");\n\t\t//////if (!StringUtils.IsEmptyString(str))\n\t\tif ((_a = this.DataColl.BitProps) === null || _a === void 0 ? void 0 : _a.contains(FieldName)) return FieldName;\n\t\t//////str =FieldPropertyValue (FieldName, \"formula\");\n\t\t//////if (!StringUtils.IsEmptyString(str))\n\t\tif ((_b = this.DataColl.FormulaProps) === null || _b === void 0 ? void 0 : _b.contains(FieldName)) return FieldName;\n\t\t// En principio seguimos como antes...\n\t\tlet strQualifier = this.DataColl.FieldPropertyValue(FieldName, \"qualifier\");\n\t\tif (!StringUtils.IsEmptyString(strQualifier)) {\n\t\t\t// Cachearlo y devolverlo\n\t\t\t// K13061901: Modificaciones para mejorar el soporte de concurrencia en la maquinaria.\n\t\t\t// Por si las concurrencias...\n\t\t\tif (cache != null) {\n\t\t\t\t// Tiene cache\n\t\t\t\t//synchronized (cache)\n\t\t\t\t{\n\t\t\t\t\tcache.put(FieldName, strQualifier);\n\t\t\t\t}\n\t\t\t} // Tiene cache\n\t\t\treturn strQualifier;\n\t\t} // Cachearlo y devolverlo\n\t\t// Para cualificar un campo tenemos que tener el AccessString parseado\n\t\t// ya que es más eficiente buscar en la lista de campos que ponerse a parsear\n\t\t// cada vez que se vaya a cualificar un campo, algo que se hace bastante a menudo\n\t\tif (Sentence == null) {\n\t\t\t// Usar la cadena de conexión normal\n\t\t\tif (this.m_parsedAccessString == null) return FieldName;\n\t\t\t// if (!this.ParseAccessString())\n\t\t\t//     // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n\t\t\t//     ////throw new Exception(\"No se puede interpretar la sentencia de selección de datos de la colección.\");\n\t\t\t//     throw new XoneGenericException(\n\t\t\t//         -123343,\n\t\t\t//         this.DataColl.GetMessage(\n\t\t\t//             XoneMessageKeys.SYS_MSG_COLL_SQLPARSEERROR,\n\t\t\t//             \"Cannot parse SQL sentence for the collection.\"\n\t\t\t//         )\n\t\t\t//     );\n\t\t\t// Usar esta\n\t\t\tSentence = this.m_parsedAccessString;\n\t\t} // Usar la cadena de conexión normal\n\t\tif (ObjUtils.IsNothing(Sentence)) return FieldName;\n\t\t// Si el campo no está definido en la colección tenemos que ver si es especial.. de lo contrario\n\t\t// será un error porque no se puede cualificar un campo desonocido.\n\t\tif (!FieldName.equals(this.DataColl.strPk) && !this.DataColl.FieldExists(FieldName)) {\n\t\t\t// No existe y no es la clave\n\t\t\tif (FieldName.startsWith(\"MAP_\")) {\n\t\t\t\t// No está definido en la colección\n\t\t\t\tstr = \"No se puede cualificar el campo '\" + FieldName + \"' porque no está definido en la colección '\" + this.DataColl.getName() + \"'\";\n\t\t\t\tthrow new Exception(str);\n\t\t\t} // No está definido en la colección\n\t\t\t// Si no es algún campo especial, devolverlo tal cual\n\t\t\tif (!FieldName.equals(this.m_connection.getRowIdFieldName()) && !FieldName.equals(\"OBJTIMESTAMP\")) return FieldName;\n\t\t} // No existe y no es la clave\n\t\tlet queryFields = Sentence.getQueryFields();\n\t\t// Ahora proceder con los campos en función de su nombre\n\t\tif (FieldName.startsWith(\"MAP_\")) {\n\t\t\t// Campos MAP\n\t\t\tfor (let i = 0; i < queryFields.length; i++) {\n\t\t\t\t// Comprobar los alias que son los que tienen lo que buscamos\n\t\t\t\tlet f = queryFields[i];\n\t\t\t\tif (f.getAlias().equals(FieldName)) {\n\t\t\t\t\t// Cachear si aplica y devolver\n\t\t\t\t\t// K13061901: Modificaciones para mejorar el soporte de concurrencia en la maquinaria.\n\t\t\t\t\t// Por si las concurrencias...\n\t\t\t\t\tif (cache != null) {\n\t\t\t\t\t\t// Cache\n\t\t\t\t\t\t//synchronized (cache)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcache.put(FieldName, f.getName());\n\t\t\t\t\t\t}\n\t\t\t\t\t} // Cache\n\t\t\t\t\treturn f.getName();\n\t\t\t\t} // Cachear si aplica y devolver\n\t\t\t} // Comprobar los alias que son los que tienen lo que buscamos\n\t\t} // Campos MAP\n\t\telse {\n\t\t\t// Campo directo\n\t\t\tstr = \".\" + FieldName;\n\t\t\tfor (let i = 0; i < queryFields.length; i++) {\n\t\t\t\t// Comprobar cómo termina cada nombre de campo\n\t\t\t\tlet f = queryFields[i];\n\t\t\t\tif (f.getName().endsWith(str)) {\n\t\t\t\t\t// Cachear si aplica y devolver\n\t\t\t\t\t// F11041503: Problemas para cualificar campos cuando no tienen aliases.\n\t\t\t\t\tlet result = null;\n\t\t\t\t\tif (StringUtils.IsEmptyString(f.getAlias())) result = f.getName();\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (f.getAlias().compareToIgnoreCase(FieldName) == 0) result = f.getName();\n\t\t\t\t\t}\n\t\t\t\t\tif (!StringUtils.IsEmptyString(result)) {\n\t\t\t\t\t\t// K13061901: Modificaciones para mejorar el soporte de concurrencia en la maquinaria.\n\t\t\t\t\t\t// Por si hay concurrencia\n\t\t\t\t\t\tif (cache != null) {\n\t\t\t\t\t\t\t// Cache\n\t\t\t\t\t\t\t//synchronized (cache)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcache.put(FieldName, result);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} // Cache\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t} // Cachear si aplica y devolver\n\t\t\t} // Comprobar cómo termina cada nombre de campo\n\t\t} // Campo directo\n\t\t// Ahora tenemos que ver si el SQL tiene x.*\n\t\tfor (let i = 0; i < queryFields.length; i++) {\n\t\t\t// Ver si algún campo termina con .*\n\t\t\tlet f = queryFields[i];\n\t\t\tif (f.getName().endsWith(\".*\")) {\n\t\t\t\t// Este vale\n\t\t\t\tstr = f.getName().substring(0, f.getName().indexOf(\".*\")) + \".\" + FieldName;\n\t\t\t\t// K13061901: Modificaciones para mejorar el soporte de concurrencia en la maquinaria.\n\t\t\t\t// Por si hay concurrencia\n\t\t\t\tif (cache != null) {\n\t\t\t\t\t// Cache\n\t\t\t\t\t//synchronized (cache)\n\t\t\t\t\t{\n\t\t\t\t\t\tcache.put(FieldName, str);\n\t\t\t\t\t}\n\t\t\t\t} // Cache\n\t\t\t\treturn str;\n\t\t\t} // Este vale\n\t\t} // Ver si algún campo termina con .*\n\t\t// Finalmente cualificar con la primera tabla... algo es algo\n\t\tlet tbl;\n\t\tif (null != (tbl = Sentence.getTableFrom())) {\n\t\t\t// Obtener de la tabla solamente su alias\n\t\t\tif (!StringUtils.IsEmptyString((str = tbl.getAlias()))) {\n\t\t\t\t// Armar el cualificador\n\t\t\t\tstr = str + \".\" + FieldName;\n\t\t\t\t// K13061901: Modificaciones para mejorar el soporte de concurrencia en la maquinaria.\n\t\t\t\t// Por si hay concurrencia...\n\t\t\t\tif (cache != null) {\n\t\t\t\t\t// Cache\n\t\t\t\t\t//synchronized (cache)\n\t\t\t\t\t{\n\t\t\t\t\t\tcache.put(FieldName, str);\n\t\t\t\t\t}\n\t\t\t\t} // Cache\n\t\t\t\treturn str;\n\t\t\t} // Armar el cualificador\n\t\t\t// Armarlo con el nombre de la tabla\n\t\t\t// F11110811: QualifyField no debe usar el nombre completo de tabla en ningún caso.\n\t\t\t// Esto no por favor (el nombre de tabla no se usa como cualificador nunca)\n\t\t\t//////str = tbl.getActualName() + \".\" + FieldName;\n\t\t\t// F12060701: QualifyField no hace verificaciones antes de utilizar el valor por defecto.\n\t\t\tif (StringUtils.IsEmptyString(str)) str = FieldName;\n\t\t\t// K13061901: Modificaciones para mejorar el soporte de concurrencia en la maquinaria.\n\t\t\t// Por si hay concurrencia\n\t\t\tif (cache != null) {\n\t\t\t\t// Cache\n\t\t\t\t//synchronized (cache)\n\t\t\t\t{\n\t\t\t\t\tcache.put(FieldName, str);\n\t\t\t\t}\n\t\t\t} // Cache\n\t\t\treturn str;\n\t\t} // Obtener de la tabla solamente su alias\n\t\t// Finalmente, si no hay nada, devolver el campo tal cual\n\t\treturn FieldName;\n\t}\n\tgetCount() {\n\t\treturn this.m_lstOrderedList.length;\n\t}\n\t/**\n\t * Efectúa la limpieza real de la colección aunque esta está bloqueada\n\t * @return\t\tDevuelve TRUE si la colección se limpia correctamente.\n\t */\n\tClear() {\n\t\ttry {\n\t\t\t// Ahora limpiar las colecciones porsi...\n\t\t\tthis.m_lstObjectList.clear();\n\t\t\tthis.m_lstOrderedList = new Array();\n\t\t\tif (this.m_lstCopyList != null) {\n\t\t\t\tthis.m_lstCopyList = new Vector();\n\t\t\t\t//this.m_lstCopyList = null;\n\t\t\t}\n\t\t\tthis.m_lstObjectLru = new Vector();\n\t\t\t//   this.m_bFull = this.m_bIsClearing = false;\n\t\t\t// Si es especial esto es como un EB\n\t\t\tif (this.m_bIsSpecial) this.m_nBrowseLength = -1;\n\t\t} catch (e) {\n\t\t\t// Ignorar las excepciones a menos que sea debug\n\t\t\tif (this.Options.bDebug) {\n\t\t\t\t// Imprimir\n\t\t\t\t//this.m_ownerApp.WriteConsoleString(e.getMessage ());\n\t\t\t\tconsole.log(e.message);\n\t\t\t} // Imprimir\n\t\t}\n\t\treturn true;\n\t}\n\t//#region Load CurrentItem en StartBrowse\n\t/**\n\t * Carga el objeto actual en un recorrido SB/EB\n\t * @return\t\tDevuelve TRUE si la carga del elemento actual del recorrido es exitosa\n\t */\n\tasync LoadCurrentItem() {\n\t\tlet FunctionName = \"CXoneDataCollection::LoadCurrentItem\";\n\t\tlet obj;\n\t\tlet bClear = true,\n\t\t\tbReturn = false;\n\t\ttry {\n\t\t\t//  Si es una colección especial, el recorrido\n\t\t\t//  StartBrowse-EndBrowse busca elementos en la\n\t\t\t//  lista normal no en la base de datos...\n\t\t\tif (this.m_bIsSpecial) {\n\t\t\t\t// Especial\n\t\t\t\tthis.m_pCurrentItem = null;\n\t\t\t\tif (this.m_nBrowseLength < 0) this.m_nBrowseLength = this.m_lstOrderedList.length;\n\t\t\t\tif (this.m_nBrowseLength == 0 || this.m_nCurrentIndex < 0) return true;\n\t\t\t\tthis.m_pCurrentItem = await this.GetObject(this.m_nCurrentIndex);\n\t\t\t\treturn true;\n\t\t\t} // Especial\n\t\t\t// Si ya hay uno y tenemos que usarlo para todo el recorrido indicar que no hay que marcar\n\t\t\tif (this.m_pCurrentItem != null) if (this.m_bDeferredLoad) bClear = false;\n\t\t\tif (this.m_rs == null) bClear = bReturn = true;\n\t\t\t// No hay recorrido activo\n\t\t\telse {\n\t\t\t\t// Hay recorrido\n\t\t\t\t// M10052401:\tModificaciones en la forma de acceso a bases de datos SQLite.\n\t\t\t\tif (await this.m_rs.EOF()) bClear = bReturn = true; // No se puede crear el objeto;\t// No hay record actual\n\t\t\t} // Hay recorrido\n\t\t\t//\n\t\t\t// Solo limpia si hay que hacerlo\n\t\t\tif (bClear) this.ClearCurrentItem(true, true); // El que haya se jodio\n\t\t\tif (bReturn) return true;\n\t\t\t//\n\t\t\t// Si hay record actual, cargarlo\n\t\t\tobj = bClear ? null : this.m_pCurrentItem;\n\t\t\tif (obj == null) {\n\t\t\t\t// Crearlo\n\t\t\t\t// Si no ha encontrado un GUID válido pasar el ProgID\n\t\t\t\t// y que se explote pal carajo. Crear el objeto solo para cargarlo de BD\n\t\t\t\tobj = await this.DataColl.CreateObject(false);\n\t\t\t\tif (null == obj) {\n\t\t\t\t\t// Error\n\t\t\t\t\t// M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n\t\t\t\t\t////throw new XoneGenericException(-1818, \"CXoneDataCollection::LoadCurrentItem ha fallado. No se puede crear un nuevo objeto para la colección '\" + m_strName + \"'\");\n\t\t\t\t\tlet sb = this.DataColl.GetMessage(\n\t\t\t\t\t\tXoneMessageKeys.SYS_MSG_COLL_LOADCURRITEMFAIL_01,\n\t\t\t\t\t\t\"{0} failed. Cannot create new object from collection '{1}'\"\n\t\t\t\t\t);\n\t\t\t\t\tsb = sb.replace(\"{0}\", FunctionName);\n\t\t\t\t\tsb = sb.replace(\"{1}\", this.DataColl.getName());\n\t\t\t\t\tthrow new XoneGenericException(-1818, sb);\n\t\t\t\t} // Error\n\t\t\t} // Crearlo\n\t\t\t// ADD TAG Para poder tener la posicion del objeto antes del load\n\t\t\t// Asignar el contador a este objeto.\n\t\t\tobj.SetPropertyValue(\"MAP_SYS_ORDER\", this.m_nBrowseOrder - 1);\n\t\t\t// Esto hay que hacerlo siempre...\n\t\t\tif (!this.m_bDeferredLoad) {\n\t\t\t\t// Normal\n\t\t\t\t// Si es una colección normal, cargar del recordset... si no, cargar remoto\n\t\t\t\tif (!(await obj.Load(this.m_rs))) return false;\n\t\t\t} // Normal // Diferido\n\t\t\telse obj.setIsCurrentItem(true);\n\t\t\tthis.m_pCurrentItem = obj;\n\t\t\t// Sergio\n\t\t\treturn true;\n\t\t} catch (ex) {\n\t\t\t// M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n\t\t\t////throw new XoneGenericException(-10089, \"XoneDataCollection::LoadCurrentItem ha fallado. \" + e.getMessage());\n\t\t\tlet sMessage = ex.message;\n\t\t\tlet sb = this.DataColl.GetMessage(XoneMessageKeys.SYS_MSG_GENERALFAIL, \"{0} failed. \");\n\t\t\tsb = sb.replace(\"{0}\", FunctionName);\n\t\t\tif (!TextUtils.isEmpty(sMessage)) {\n\t\t\t\tsb = sb.concat(sMessage);\n\t\t\t}\n\t\t\tthrow new XoneGenericException(-10089, ex, sb);\n\t\t}\n\t}\n\t/**\n\t * Limpia el elemento actual del recorrido. Se mantiene por una cuestión de compatibilidad, porque aquí no se llevan los totales corridos.\n\t * @param ClearPrevious\t\tTRUE si hay que limpiar la referencia al objeto anterior del recorrido.\n\t * @param CopyPrevious\t\tTRUE si hay que copiar el objeto actual del recorrido al elemento anterior.\n\t */\n\tClearCurrentItem(ClearPrevious = false, CopyPrevious = false) {\n\t\tthis.m_pCurrentItem = null;\n\t}\n\t/**\n\t * @return\t\t\tDevuelve el Objeto del recorrido actual SB/EB o NULL si no hay recorrido activo o se ha llegado al final.\n\t */\n\tgetCurrentItem() {\n\t\treturn this.m_pCurrentItem;\n\t}\n\t//#endregion\n\t//#region\n\t/**\n\t * Elimina un objeto de la colección dado su índice numérico\n\t * @param Index\t\t\t\tIndice del objeto en la colección (comenzando por cero)\n\t * @return\t\t\t\t\tDevuelve TRUE si la operación es correcta.\n\t * @throws Exception\n\t */\n\tremoveItem(key) {\n\t\tlet obj = null;\n\t\tif (this.m_lstCopyList != null) {\n\t\t\tthis.m_lstCopyList = new Vector();\n\t\t\tthis.m_lstCopyList = null;\n\t\t}\n\t\tif (typeof key == \"number\" && key < this.m_lstOrderedList.length) {\n\t\t\tobj = this.m_lstOrderedList[key];\n\t\t} else if (typeof key == \"string\") {\n\t\t\tobj = this.m_lstObjectList.get(key);\n\t\t} else {\n\t\t\tobj = key;\n\t\t}\n\t\tif (!obj) return false;\n\t\tthis.m_lstOrderedList.remove(obj);\n\t\t// Eliminar el objeto del mapa si es que existe\n\t\tlet str = obj.GetObjectIdString();\n\t\t// F11081103: Protecciones al eliminar objetos de una colección por si no tienen ID.\n\t\tif (!TextUtils.isEmpty(str)) if (this.m_lstObjectList.containsKey(str)) this.m_lstObjectList.delete(str);\n\t\t// Actualizar el BL si se trata de una colección especial\n\t\tif (this.m_bIsSpecial) this.m_nBrowseLength = this.m_lstOrderedList.length;\n\t\tthis.DataColl.setFull(false);\n\t\treturn true;\n\t}\n}\n\n//# sourceMappingURL=XoneBrowseData.js.map\n","import StringUtils from \"./StringUtils\";\nimport { Utils } from \"./Utils\";\nexport default class DataUtils {\n    /**\n     * Lee un  valor de un recordset y devuelve la conversión a entero\n     *\n     * @param DataSource Origen de datos del que se va a leer.\n     * @param FieldName  Nombre del campo a leer.\n     * @return Devuelve el valor del campo. Si no es numérico posiblemente devuelva cero.\n     */\n    static RsReadLong(DataSource, FieldName) {\n        let l = 0;\n        try {\n            l = DataSource.getInt(FieldName);\n        }\n        catch (e) {\n            // Ignorar esta excepción... puede ser que el campo no exista o algo así...\n        }\n        return l;\n    }\n    /**\n     * Lee un  valor de un recordset y devuelve la conversión a entero\n     *\n     * @param DataSource Origen de datos del que se va a leer.\n     * @param FieldName  Nombre del campo a leer.\n     * @return Devuelve el valor del campo. Si no es numérico posiblemente devuelva cero.\n     */\n    static RsReadInt(DataSource, FieldName) {\n        return this.RsReadLong(DataSource, FieldName);\n    }\n    /**\n     * A10031101:\tProgramación del registro de operaciones en la cola para javoso.\n     * Esta función se usa para desdoblar la ejecución de SQLs, así que había que programarla.\n     * Leer una cadena de un resultset. Emplea mecanismos de seguridad para evitar que se\n     * devuelva un nulo.\n     *\n     * @param DataSource\n     * @param FieldName\n     * @return\n     */\n    static RsReadString(DataSource, FieldName) {\n        let str = Utils.EMPTY_STRING;\n        try {\n            str = DataSource.getString(FieldName);\n            str = StringUtils.SafeToString(str);\n        }\n        catch (e) {\n            e.printStackTrace();\n        }\n        return str;\n    }\n}\n\n//# sourceMappingURL=DataUtils.js.map\n","import Hashtable from \"../../Collections/HashMap/Hashtable\";\nimport XoneGenericException from \"../../Exceptions/XoneGenericException\";\nimport { XoneMessageKeys } from \"../../Exceptions/XoneMessageKeys\";\nimport DataUtils from \"../../Utils/DataUtils\";\nimport StringUtils from \"../../Utils/StringUtils\";\nimport XmlUtils from \"../../Utils/XmlUtils\";\nexport default class MacrosEvaluator {\n    constructor(ownerApp, ownerColl) {\n        this.m_lstMacros = new Hashtable();\n        this.m_parsedMacros = new Array();\n        this.m_ownerApp = ownerApp;\n        this.m_ownerColl = ownerColl;\n    }\n    /**\n     * @return\t\t\t\tDevuelve el valor de la macro cuyo nombre se pasa como parámetro.\n     * @param MacroName\t\tNombre de la macro cuyo valor se quiere conocer\n     */\n    getMacro(MacroName) {\n        if (!this.m_lstMacros.containsKey(MacroName))\n            return null;\n        return this.m_lstMacros.get(MacroName);\n    }\n    /**\n     * @return\t\t\t\tDevuelve el valor de la macro cuyo nombre se pasa como parámetro.\n     * @param MacroName\t\tNombre de la macro cuyo valor se quiere conocer\n     */\n    getMacros() {\n        if (this.m_evaluatedMacros)\n            return this.m_evaluatedMacros.toObject();\n        return {};\n    }\n    /**\n     *\n     * @param accessString\n     */\n    ParseMacros(accessString) {\n        if (!accessString)\n            return;\n        var s = accessString.slice();\n        var n = -1;\n        while ((n = s.indexOf(\"##\")) >= 0) {\n            var n2 = s.indexOf(\"##\", n + 1);\n            if (n2 > n) {\n                const macroName = s.substr(n, n2 - n + 2).trim();\n                if (this.m_parsedMacros.indexOf(macroName) < 0 && !macroName.equals(\"##PREF##\"))\n                    this.m_parsedMacros.push(macroName);\n                s = s.replace(macroName, \"\");\n            }\n        }\n    }\n    /**\n     * Asigna valor a la macro cuyo nombre se pasa como parámetro.\n     * @param MacroName\t\tNombre de la macro que se quiere asignar.\n     * @param MacroValue\tValor que se quiere asignar a la macro. Si se pasa NULL se sustituirá por cadena vacía.\n     */\n    setMacro(MacroName, MacroValue) {\n        let value = MacroValue;\n        if (value == null)\n            value = \"\";\n        this.m_lstMacros.put(MacroName, value);\n        if (this.m_parsedMacros && this.m_parsedMacros.indexOf(MacroName) < 0)\n            this.m_parsedMacros.push(MacroName);\n        // F10051901:   Cuando se modifican macros hay que descartar el SQL parseado.\n        // Invalidar el sql parseado\n        var parsedAccessString = this.m_ownerColl.BrowseData.getParsedAccessString();\n        if (parsedAccessString != null)\n            if (parsedAccessString.GetSentence().contains(MacroName))\n                this.m_ownerColl.BrowseData.clearParsedAccessString();\n    }\n    /**\n     * Copia todas las macros de esta colección hacia la que se pase como parámetro.\n     * @param DestColl\t\t\tColección hacia la que se quieren copiar las macros de esta.\n     */\n    CopyMacros(DestColl) {\n        this.m_lstMacros\n            .entrySet()\n            .forEach((item) => DestColl.setMacro(item[0], item[1]));\n        // Enumeration<String> e =this.m_lstMacros.keys();\n        // while (e.hasMoreElements())\n        // {// Recorrer la lista de variables y pasarla a la otra colección\n        // \tString k =e.nextElement();\n        // \tString v =(String) this.m_lstMacros.get(k);\n        //     DestColl.setMacro(k, v);\n        // }// Recorrer la lista de variables y pasarla a la otra colección\n    }\n    /**\n     * Evalúa todas las macros incluidas dentro de la sentencia que se pasa como parámetro\n     *\n     * M11011001:\tIncluir macros globales y evaluación de dichas macros para IMEI y demás.\n     * Hace falta que esta función sea pública para usarla desde fuera\n     *\n     * @param Sentence\t\t\t\tSentencia SQL o cadena en la que se quieren evaluar las macros.\n     * @param EvalLookupMacro\t\tTRUE si se va a evaluar la macro de acceso a datos (macro de búsqueda)\n     * @return\t\t\t\t\t\tDevuelve la cadena con todas las macros evaluadas.\n     * @throws Exception\n     */\n    async EvaluateAllMacrosOld(Sentence, EvalLookupMacro = false) {\n        if (Sentence == null) {\n            return null;\n        }\n        let strLookupMacroName = this.m_ownerColl.getLookupMacroName();\n        let str = Sentence;\n        let k1, k2;\n        for (k1 = 0; k1 < str.length;) { // Teóricamente debería sustituir todo...\n            k1 = str.indexOf(\"##\", k1);\n            //TODO ADD TAG Juan Carlos Cambio return por breaks para que evalúe OK macros.\n            if (k1 == -1)\n                break;\n            k2 = str.indexOf(\"##\", k1 + 2);\n            if (k2 == -1)\n                break;\n            //\n            // Buscar la cadenilla entre los dos kases...\n            // F09042201:\tSubstring no funciona igual en java que en .NET Arreglar Blackberry\n            let strMacro = str.substring(k1, k2 + 2);\n            // Buscar en el XML si está definida esta macro\n            let bEval = true;\n            if (!EvalLookupMacro) { // Hay que saltarla\n                if (!StringUtils.IsEmptyString(strLookupMacroName)) { // Tiene macro de búsqueda\n                    if (strLookupMacroName.equals(strMacro))\n                        bEval = false;\n                } // Tiene macro de búsqueda\n            } // Hay que saltarla\n            // Si hay que evaluar se evalúa, de lo contrario se deja tal cual\n            let strValue;\n            if (bEval)\n                strValue = await this.EvaluateMacro(strMacro);\n            else\n                strValue = strMacro;\n            //\n            // Comprobar si el valor de la macro es el mismo que tenía antes...\n            if (!strMacro.equals(strValue))\n                //\n                // Ahora sustituir esta cosa\n                str = StringUtils.Replace(str, strMacro, strValue);\n            else\n                k1 = k2 + 2;\n            //\n            // Seguimos buscando aquí, por si las macros son recursivas\n            // así que k1 se queda donde venía...\n        } // Teóricamente debería sustituir todo...\n        // M11011001:\tIncluir macros globales y evaluación de dichas macros para IMEI y demás.\n        if (str.contains(\"##\"))\n            str = this.m_ownerApp.PrepareSqlString(str);\n        // Completo\n        return str;\n    }\n    async EvaluateAllMacros(Sentence = \"\", EvalLookupMacro = false) {\n        if (Sentence == null) {\n            return null;\n        }\n        // this.m_parsedMacros.forEach(element => {\n        // });\n        let strLookupMacroName = this.m_ownerColl.getLookupMacroName();\n        let str = Sentence;\n        let k1, k2;\n        this.m_evaluatedMacros = new Hashtable();\n        await this.m_parsedMacros.forEach(async (strMacro) => {\n            // k1 = str.indexOf(\"##\", k1);\n            // //TODO ADD TAG Juan Carlos Cambio return por breaks para que evalúe OK macros.\n            // if (k1 == -1)\n            //     break;\n            // k2 = str.indexOf(\"##\", k1 + 2);\n            // if (k2 == -1)\n            //     break;\n            // //\n            // // Buscar la cadenilla entre los dos kases...\n            // // F09042201:\tSubstring no funciona igual en java que en .NET Arreglar Blackberry\n            // let strMacro = str.substring(k1, k2 + 2);\n            // Buscar en el XML si está definida esta macro\n            let bEval = true;\n            if (!EvalLookupMacro) { // Hay que saltarla\n                if (!StringUtils.IsEmptyString(strLookupMacroName)) { // Tiene macro de búsqueda\n                    if (strLookupMacroName.equals(strMacro))\n                        bEval = false;\n                } // Tiene macro de búsqueda\n            } // Hay que saltarla\n            // Si hay que evaluar se evalúa, de lo contrario se deja tal cual\n            let strValue = await this.EvaluateMacro(strMacro);\n            if (bEval)\n                this.m_evaluatedMacros.put(strMacro, strValue);\n            // strValue = await this.EvaluateMacro(strMacro);\n            if (strValue.startsWith(\"##\"))\n                this.m_evaluatedMacros.put(strMacro, this.m_ownerApp.EvaluateMacro(strMacro));\n            // //\n            // // Comprobar si el valor de la macro es el mismo que tenía antes...\n            // if (!strMacro.equals(strValue))\n            //     //\n            //     // Ahora sustituir esta cosa\n            //     str = StringUtils.Replace(str, strMacro, strValue);\n            // else\n            //     k1 = k2 + 2;\n            //\n            // Seguimos buscando aquí, por si las macros son recursivas\n            // así que k1 se queda donde venía...\n        }); // Teóricamente debería sustituir todo...\n        // M11011001:\tIncluir macros globales y evaluación de dichas macros para IMEI y demás.\n        // if (str.contains(\"##\"))\n        //     str = this.m_ownerApp.PrepareSqlString(str);\n        // Completo\n        return str;\n    }\n    /// Evalúa la macro cuyo nombre se pasa como parámetro.\n    /// <param name=\"MacroName\">Nombre de la macro que se quiere evaluar.</param>\n    async EvaluateMacro(MacroName) {\n        const FunctionName = \"CXoneDataCollection::EvaluateMacro\";\n        let strTmp;\n        let bIsFilter = false;\n        let strValue;\n        let node = this.m_ownerColl.getNode(\"macro\", \"name\", MacroName);\n        //\n        // Comprobar si esta macro es un filtro\n        if (node != null) { // Tiene nodo\n            strTmp = XmlUtils.getNodeAttr(node, \"filter\");\n            bIsFilter = StringUtils.ParseBoolValue(strTmp, false);\n        } // Tiene nodo\n        // Primero obtener el valor real de la macro antes de ir al mappings\n        if (this.m_lstMacros.containsKey(MacroName)) { // Procesar este valor\n            // F13022202: Las macros pueden contener valores de cualquier tipo, no solo cadenas.\n            // Las macros pueden contener cualquier cosa, no solo cadenillas\n            let value = this.m_lstMacros.get(MacroName);\n            if (bIsFilter)\n                strValue = this.m_ownerColl.DevelopObjectValue(value);\n            else\n                strValue = StringUtils.SafeToString(value);\n            if (!StringUtils.IsEmptyString(strValue) && this.m_ownerColl.getConnection()) { // Preparar el valor\n                //\n                // Si es un filtro, habrá que prepararlo antes\n                strTmp = this.m_ownerColl.getConnection().PrepareSqlString(strValue);\n                if (bIsFilter)\n                    strTmp = await this.m_ownerColl.BrowseData.PrepareFilter(strTmp);\n                return strTmp;\n            } // Preparar el valor\n        } // Procesar este valor\n        //\n        // Si no existe el nodo simplemente se devuelve el nombre de lo que se ha pedido\n        if (node == null)\n            return MacroName; // Nada más que hacer con esta...\n        //\n        // Buscar en este nodo el valor\n        strValue = XmlUtils.getNodeAttr(node, \"value\");\n        let strSQL = \"\";\n        let ent = null;\n        if (StringUtils.IsEmptyString(strValue)) { // Puede ser que el valor venga en algún nodo\n            strValue = \"\";\n            let actions = node.SelectNodes(\"Node\");\n            for (let i = 0; i < actions.count(); i++) { // Revisa las acciones\n                let action = actions.get(i);\n                if (this.EvaluateNodeRules(action)) { // Esta vale\n                    if (\"id-list\".equals(XmlUtils.getNodeAttr(action, \"name\"))) { // Lista de IDs\n                        strValue = XmlUtils.getNodeAttr(action, \"mask\");\n                        strSQL = XmlUtils.getNodeAttr(action, \"sql\");\n                        if (null != (ent = this.m_ownerApp.getCurrentCompany()))\n                            strSQL = ent.PrepareSqlString(strSQL);\n                        let rs = null;\n                        let conn = null;\n                        try {\n                            if (null == (conn = this.m_ownerColl.getConnection().GetNewConnection(true))) { // Error\n                                // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n                                ////throw new Exception(\"Error evaluando la macro '\" + MacroName + \"' No se puede crear una nueva conexión de acceso a datos.\");\n                                let sb = this.m_ownerColl.GetMessage(XoneMessageKeys.SYS_MSG_COLL_EVALMACROFAIL_01, \"{0} failed. Error evaluating macro '{1}'. Cannot create new data connection.\");\n                                sb = sb.replace(\"{0}\", FunctionName);\n                                sb = sb.replace(\"{1}\", MacroName);\n                                throw new XoneGenericException(-3998, sb);\n                            } // Error\n                            // Obtener una conexión\n                            // A12042503: Mecanismo para registrar un modo debug global en la aplicación.\n                            // if (this.getIsDebugging() || this.m_ownerApp.isDebugMode())\n                            // \tUtils.DebugLog(Utils.TAG_DATABASE_LOG,\"EvaluateMacros (id-list): \"+strSQL);\n                            if (null == (rs = await this.m_ownerColl.getConnection().CreateRecordsetAsync(conn, strSQL))) { // Error\n                                conn = null;\n                                // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n                                ////throw new Exception(\"Error evaluando la macro '\" + MacroName + \"'\");\n                                let sb = this.m_ownerColl.GetMessage(XoneMessageKeys.SYS_MSG_COLL_EVALMACROFAIL_02, \"{0} failed. Error evaluating macro '{1}'. Error executing SQL query.\");\n                                sb = sb.replace(\"{0}\", FunctionName);\n                                sb = sb.replace(\"{1}\", MacroName);\n                                throw new XoneGenericException(-3999, sb);\n                            } // Error\n                            strTmp = \"\";\n                            while (await rs.next()) { // Cada uno de los elementos\n                                let str1 = StringUtils.SafeToString(DataUtils.RsReadLong(rs, \"N\"));\n                                if (!StringUtils.IsEmptyString(strTmp))\n                                    strTmp += \",\";\n                                strTmp += str1;\n                            } // Cada uno de los elementos\n                            rs.close();\n                            rs = null;\n                            // Cerrar la conexión\n                            //////conn.close();\n                            conn = null;\n                        }\n                        catch (e) {\n                            if (rs != null) { // Cerrar\n                                try {\n                                    rs.close();\n                                }\n                                catch (se) {\n                                    // Ignorar esta excepción\n                                }\n                                rs = null;\n                            } // Cerrar\n                            /*\n                            if (conn != null)\n                            {// Cerrar\n                                try\n                                {\n                                    conn.close();\n                                }\n                                catch (SQLException se)\n                                {\n                                    // Ignorar esta excepción\n                                }\n                                conn = null;\n                            }// Cerrar\n                            */\n                            throw e;\n                        }\n                        //\n                        // Si ha encontrado alguna lista\n                        if (StringUtils.IsEmptyString(strTmp))\n                            strTmp = \"NULL\";\n                        // Sustituir los valores\n                        strValue = StringUtils.Replace(strValue, \"##LIST##\", strTmp);\n                        break;\n                    } // Lista de IDs\n                } // Esta vale\n            } // Revisa las acciones\n        } // Puede ser que el valor venga en algún nodo\n        //\n        // Si quedan cosas por solucionar, intentar reemplazar operadores custom\n        // No se retorna directamente, sino que se analiza si quedan cosas\n        // por sustituir\n        strSQL = this.m_ownerColl.getConnection().PrepareSqlString(strValue);\n        if (strSQL.contains(\"##\")) { // Llamar la función\n            strSQL = this.m_ownerColl.getConnection().ReplaceCustomOper(this.m_ownerColl, strSQL, \"##BIT##\");\n        } // Llamar la función\n        //\n        if (bIsFilter)\n            strSQL = this.m_ownerColl.getConnection().PrepareFilter(strSQL);\n        //\n        // Habrá que mirar otros...\n        return strSQL;\n    }\n    /**\n     * Evalúa todas las reglas que contiene el nodo que se pasa como parámetro.\n     * En esta implementación solamente se evalúan las reglas para el scope current-enterprise.\n     * @param Node\t\t\tNodo XML cuyas reglas se quieren evaluar.\n     * @return\t\t\t\tDevuelve TRUE si todas las reglas son exitosas.\n     * @throws Exception\n     */\n    EvaluateNodeRules(Node) {\n        let rules;\n        let strScope;\n        let ent = null;\n        rules = Node.SelectNodes(\"rule\");\n        for (let i = 0; i < rules.count(); i++) { // Verificar cada regla\n            let rule = rules.get(i);\n            strScope = XmlUtils.getNodeAttr(rule, \"scope\");\n            if (strScope.equals(\"current-enterprise\")) { // Empresa\n                if (ent == null)\n                    ent = this.m_ownerApp.getCompany();\n                if (ent == null)\n                    return false; // No tiene empresa\n                if (!ent.EvaluateRule(rule)) { // Limpiar el error y retornar\n                    return false;\n                } // Limpiar el error y retornar\n                continue;\n            } // Empresa\n        } // Verificar cada regla\n        return true;\n    }\n}\n\n//# sourceMappingURL=MacrosEvaluator.js.map\n","import { XoneDataObject } from \"./XoneDataObject\";\nexport default class XoneCompany extends XoneDataObject {\n}\n\n//# sourceMappingURL=XoneCompany.js.map\n","export default class Base64 {\n    static encodeBytes(ck) {\n        return Base64.encode(ck);\n    }\n    // private property\n    static get _keyStr() { return \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"; }\n    ;\n    // public method for encoding\n    static encode(input) {\n        var output = \"\";\n        var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n        var i = 0;\n        input = Base64._utf8_encode(input);\n        while (i < input.length) {\n            chr1 = input.charCodeAt(i++);\n            chr2 = input.charCodeAt(i++);\n            chr3 = input.charCodeAt(i++);\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n            if (isNaN(chr2)) {\n                enc3 = enc4 = 64;\n            }\n            else if (isNaN(chr3)) {\n                enc4 = 64;\n            }\n            output = output +\n                Base64._keyStr.charAt(enc1) + Base64._keyStr.charAt(enc2) +\n                Base64._keyStr.charAt(enc3) + Base64._keyStr.charAt(enc4);\n        }\n        return output;\n    }\n    // public method for decoding\n    static decode(input) {\n        var output = \"\";\n        var chr1, chr2, chr3;\n        var enc1, enc2, enc3, enc4;\n        var i = 0;\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n        while (i < input.length) {\n            enc1 = Base64._keyStr.indexOf(input.charAt(i++));\n            enc2 = Base64._keyStr.indexOf(input.charAt(i++));\n            enc3 = Base64._keyStr.indexOf(input.charAt(i++));\n            enc4 = Base64._keyStr.indexOf(input.charAt(i++));\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n            output = output + String.fromCharCode(chr1);\n            if (enc3 != 64) {\n                output = output + String.fromCharCode(chr2);\n            }\n            if (enc4 != 64) {\n                output = output + String.fromCharCode(chr3);\n            }\n        }\n        output = Base64._utf8_decode(output);\n        return output;\n    }\n    // private method for UTF-8 encoding\n    static _utf8_encode(string) {\n        string = string.replace(/\\r\\n/g, \"\\n\");\n        var utftext = \"\";\n        for (var n = 0; n < string.length; n++) {\n            var c = string.charCodeAt(n);\n            if (c < 128) {\n                utftext += String.fromCharCode(c);\n            }\n            else if ((c > 127) && (c < 2048)) {\n                utftext += String.fromCharCode((c >> 6) | 192);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n            else {\n                utftext += String.fromCharCode((c >> 12) | 224);\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n        }\n        return utftext;\n    }\n    // private method for UTF-8 decoding\n    static _utf8_decode(utftext) {\n        var string = \"\";\n        var i = 0;\n        var c = 0, c1 = 0, c2 = 0, c3 = 0;\n        while (i < utftext.length) {\n            c = utftext.charCodeAt(i);\n            if (c < 128) {\n                string += String.fromCharCode(c);\n                i++;\n            }\n            else if ((c > 191) && (c < 224)) {\n                c2 = utftext.charCodeAt(i + 1);\n                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n                i += 2;\n            }\n            else {\n                c2 = utftext.charCodeAt(i + 1);\n                c3 = utftext.charCodeAt(i + 2);\n                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n                i += 3;\n            }\n        }\n        return string;\n    }\n}\n\n//# sourceMappingURL=Base64.js.map\n","import { createHash } from \"crypto\";\nimport TextUtils from \"./TextUtils\";\nimport { Utils } from \"./Utils\";\nimport Base64 from \"./Base64\";\nexport default class HashUtils {\n    static createHash(algorithm, encode, value) {\n        if (TextUtils.isEmpty(value)) {\n            return Utils.EMPTY_STRING;\n        }\n        if (TextUtils.isEmpty(algorithm)) {\n            return Base64.encodeBytes(value);\n        }\n        if (TextUtils.isEmpty(encode) || \"BASE64\".compareToIgnoreCase(encode)) {\n            return createHash(algorithm).update(value).digest(\"base64\");\n        }\n        if (\"hex\".equals(encode)) {\n            return createHash(algorithm).update(value).digest(\"hex\").toLowerCase();\n        }\n        if (\"HEX\".equals(encode)) {\n            return createHash(algorithm).update(value).digest(\"hex\").toUpperCase();\n        }\n        return createHash(algorithm).update(value).digest(\"base64\");\n    }\n    static encodeHash(buff, encode) {\n        if (buff == null || buff.length == 0) {\n            return Utils.EMPTY_STRING;\n        }\n        if (TextUtils.isEmpty(encode) || \"BASE64\".compareToIgnoreCase(encode)) {\n            return buff.toString('base64');\n        }\n        if (\"hex\".equals(encode)) {\n            return buff.toString('hex').toLowerCase();\n        }\n        if (\"HEX\".equals(encode)) {\n            return buff.toString('hex').toUpperCase();\n        }\n        return buff.toString('base64');\n    }\n}\n\n//# sourceMappingURL=HashUtils.js.map\n","import HashUtils from \"../Utils/HashUtils\";\nimport StringUtils from \"../Utils/StringUtils\";\nimport { XoneDataObject } from \"./XoneDataObject\";\nexport default class XoneUser extends XoneDataObject {\n    /**\n     * Construye un objeto de datos que representa un usuario de aplicación.\n     *\n     * @param OwnerCollection Colección propietaria de este objeto.\n     */\n    constructor(OwnerCollection) {\n        super(OwnerCollection);\n        // A11042901: Modificaciones para adicionar nuevos algoritmos de comprobación de claves.\n        // Obtener el modelo de hash que lleva el campo que nos interesa\n        try {\n            this.m_strHashType = OwnerCollection.FieldPropertyValue(\"PWD\", \"hash-type\");\n            // K13022601: Modificaciones en el manejo de claves de usuario usando hash.\n            // El encoding\n            if (StringUtils.IsEmptyString(this.m_strEncode = OwnerCollection.FieldPropertyValue(\"PWD\", \"encode\"))) {\n                // Por defecto base64\n                this.m_strEncode = \"base64\";\n            }\n        }\n        catch (ex) {\n            throw ex;\n        }\n    }\n    ValidateUserCredentials(UserData) {\n        // Aquí solamente esperamos un parámetro que será la clave o el hash\n        let strPwd = StringUtils.SafeToString(UserData[0]);\n        let strObjPwd = StringUtils.SafeToString(this.get(\"PWD\"));\n        if (StringUtils.IsEmptyString(strPwd)) {\n            // Clave vacía\n            return StringUtils.IsEmptyString(strObjPwd);\n        }\n        // A11042901: Modificaciones para adicionar nuevos algoritmos de comprobación de claves.\n        if (!StringUtils.IsEmptyString(this.m_strHashType)) {\n            /*\n             * K13022601: Modificaciones en el manejo de claves de usuario usando hash. El atributo\n             * hash-type y encode debe ser case insensitive\n             */\n            strPwd = HashUtils.createHash(this.m_strHashType, this.m_strEncode, strPwd);\n            // this.MessageDigest md = this.getMessageDigest(this.m_strHashType);\n            // if (md != null) {\n            //     byte[] source = new byte[strPwd.length()];\n            //     StringUtils.CopyAsBytes(strPwd, source, 0);\n            //     md.update(source);\n            //     byte[] btmp = md.digest();\n            //     strPwd = StringUtils.encodeHash(btmp, this.m_strEncode);\n            // }\n        }\n        // Ahora comparamos... clave con clave o hash con hash... lo que sea...\n        return strObjPwd.equals(strPwd);\n    }\n}\n\n//# sourceMappingURL=XoneUser.js.map\n","import XoneWebCoreResulset from \"../Connection/WebCore/XoneWebCoreResulset\";\nimport XoneGenericException from \"../Exceptions/XoneGenericException\";\nimport { XoneMessageKeys } from \"../Exceptions/XoneMessageKeys\";\nimport NumberUtils from \"../Utils/NumberUtils\";\nimport StringUtils from \"../Utils/StringUtils\";\nimport TextUtils from \"../Utils/TextUtils\";\nexport default class XoneLookupObject {\n\tconstructor(ownerApp, ownerColl) {\n\t\tthis.m_ownerApp = ownerApp;\n\t\tthis.m_ownerColl = ownerColl;\n\t}\n\t/**\n\t * Efectúa la búsqueda de un objeto en la base de datos\n\t * @param Sentence\t\t\tSentencia SQL que se ejecutará contra la conexión de la colección.\n\t * @param KeySearch\t\t\tClave simple de búsqueda usada para pasarle a los objetos de búsqueda que la necesiten.\n\t * @param Prefiltered\t\tTRUE si la sentencia de acceso ya viene prefiltrada por lo que hay que tener cuidado a la hora de adicionarle los filtros de colección.\n\t * @return\t\t\t\t\tDevuelve el objeto si se encuentra en base de datos o NULL si no se encuentra.\n\t * @throws Exception\n\t */\n\tasync LookupObject(Sentence, KeySearch, Prefiltered) {\n\t\tlet strKey = null,\n\t\t\tstr;\n\t\tlet obj = null;\n\t\tlet rs = null;\n\t\tlet val1 = null;\n\t\tconst FunctionName = \"CXoneDataCollection::LookupObject\";\n\t\ttry {\n\t\t\t//\n\t\t\t// Asignar valor a la macro de búsqueda. La sintaxis corre a cuenta del desarrollador\n\t\t\tif (!StringUtils.IsEmptyString(this.m_ownerColl.getLookupMacroName()))\n\t\t\t\tthis.m_ownerColl.setMacro(this.m_ownerColl.getLookupMacroName(), KeySearch);\n\t\t\tif (TextUtils.isEmpty((str = this.m_ownerColl.getAccessString()))) return null; // Cadena vacía\n\t\t\t// // Pasar el prefiltered al prepare\n\t\t\t// let strCmd = this.m_ownerColl.getConnection().PrepareSqlString(Sentence, false, Prefiltered);\n\t\t\t// // Evaluar las macros por si las moscas las hay fuera de los filtros...\n\t\t\t// strCmd = await this.m_ownerColl.EvaluateAllMacros(strCmd);\n\t\t\t//\n\t\t\t// Restaurar el valor de la macro para las otras operaciones\n\t\t\tif (!StringUtils.IsEmptyString(this.m_ownerColl.getLookupMacroName())) this.m_ownerColl.setMacro(this.m_ownerColl.getLookupMacroName(), null);\n\t\t\t//\n\t\t\t// if (m_bDebug)\n\t\t\t// {// Dejar traza del SQL\n\t\t\t//     str = \"\\r\\n\" + strCmd + \"\\r\\n\";\n\t\t\t//     m_owner.WriteConsoleString(str);\n\t\t\t// }// Dejar traza del SQL\n\t\t\t// A12042503: Mecanismo para registrar un modo debug global en la aplicación.\n\t\t\t// if (this.getIsDebugging() || this.m_ownerColl.getOwnerApp().isDebugMode())\n\t\t\t// \tUtils.DebugLog(Utils.TAG_DATABASE_LOG,\"LookupObject: \"+strCmd);\n\t\t\t//////strCmd = InsertTop(strCmd, 1);\n\t\t\tconst swhere = await this.m_ownerColl.BrowseData.ResolveFilters(false, null, KeySearch);\n\t\t\tconst sSort = this.m_ownerColl.getSort();\n\t\t\tthis.m_ownerColl.ParseMacros(swhere);\n\t\t\tthis.m_ownerColl.ParseMacros(sSort);\n\t\t\tthis.m_ownerColl.ParseMacros(str);\n\t\t\tconst strCmd = await this.m_ownerColl.EvaluateAllMacros(str, true);\n\t\t\tconst data = {\n\t\t\t\tcoll: this.m_ownerColl.getName(),\n\t\t\t\tmacros: this.m_ownerColl.getMacros(),\n\t\t\t\twhere: swhere,\n\t\t\t\tsort: sSort,\n\t\t\t\tloadall: false,\n\t\t\t\tpage: {},\n\t\t\t};\n\t\t\t// Amiyares: 8/11/2021, modifico esto para generar datos fake, tengo que refactorizarlo\n\t\t\tif (window.generateTestingData) {\n\t\t\t\tconst res = window.generateTestingData(this.m_ownerColl);\n\t\t\t\trs = new XoneWebCoreResulset(this.m_ownerColl.getConnection().GetCurrentConnection(), res);\n\t\t\t\trs.m_data = res;\n\t\t\t\trs.m_keys = Object.keys(res[0]);\n\t\t\t\trs.m_maxRows = res.length;\n\t\t\t} else if (\n\t\t\t\tnull ==\n\t\t\t\t(rs = await this.m_ownerColl\n\t\t\t\t\t.getConnection()\n\t\t\t\t\t.CreateRecordsetAsync(strCmd, Object.assign({ count: false, page: { start: 0, length: 2 } }, data)))\n\t\t\t) {\n\t\t\t\t// Error\n\t\t\t\t// M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n\t\t\t\t////throw new Exception(\"XoneDataCollection::LookupObject ha fallado. Error ejecutando la sentencia de acceso a los datos.\");\n\t\t\t\tlet sb = this.m_ownerColl.GetMessage(XoneMessageKeys.SYS_MSG_COLL_LOOKUPOBJFAIL_02, \"{0} failed. Error executing data access query.\");\n\t\t\t\tsb = sb.replace(\"{0}\", FunctionName);\n\t\t\t\tthrow new XoneGenericException(-5634, sb);\n\t\t\t} // Error\n\t\t\t//\n\t\t\t// Ver si ha encontrado algo\n\t\t\tif (await rs.next()) {\n\t\t\t\t// Lo ha encontrado\n\t\t\t\t//\n\t\t\t\t// Comprobar la cantidad de records que se encontraron\n\t\t\t\tif (!this.m_ownerColl.strPk.contains(\",\")) {\n\t\t\t\t\t// Una sola\n\t\t\t\t\tstrKey = \"\";\n\t\t\t\t\t// M10052401:\tModificaciones en la forma de acceso a bases de datos SQLite.\n\t\t\t\t\t// K11010501:\tModificaciones para la versión 1.5 de Android.\n\t\t\t\t\tval1 = rs.getValue(this.m_ownerColl.strPk, this.m_ownerColl.Options.nPkType);\n\t\t\t\t\t// Los datos de tipo VT_DECIMAL tienen que convertirse a LONG para que no haya\n\t\t\t\t\t// ambiguedades con las claves\n\t\t\t\t\tif (!this.m_ownerColl.Options.bStringPk) val1 = NumberUtils.SafeToInt(val1);\n\t\t\t\t\tstrKey = this.m_ownerColl.BrowseData.DevelopObjectValue(val1);\n\t\t\t\t} // Una sola\n\t\t\t\telse {\n\t\t\t\t\t// Es múltiple, desarrollar este valor\n\t\t\t\t\t// TODO Ver si las claves múltiples serán usadas o no... a fin de cuentas eso no lo usa nadie en otras plataformas.\n\t\t\t\t\t/*\n                    strKey = \"\";\n                    str1 = this.m_ownerColl.strPk;\n                    String[] strFields = str1.Split(',');\n                    foreach (string fn in strFields)\n                    {// Todos los campos\n                        val1 = rs[fn];\n                        //\n                        str2 = string.Format(\"{0}={1}\", fn, DevelopObjectValue(val1));\n                        if (!CStringUtils.IsEmptyString(strKey))\n                            strKey += \",\";\n                        strKey += str2;\n                    }// Todos los campos\n                    */\n\t\t\t\t} // Es múltiple, desarrollar este valor\n\t\t\t\tif (!StringUtils.IsEmptyString(strKey)) {\n\t\t\t\t\t// Ver si ya está en lista\n\t\t\t\t\tif (this.m_ownerColl.BrowseData.ObjectList.containsKey(strKey)) obj = this.m_ownerColl.BrowseData.ObjectList.get(strKey);\n\t\t\t\t} // Ver si ya está en lista\n\t\t\t\t/*\n                    Puede ser que ya este objeto ande por la lista\n                    aunque con otros valores. A los efectos esto viene\n                    a ser una especie de Refresh. La idea sería recargar\n                    el original y devolver ese, pues puede haber referencias\n                    a él en alguna otra parte. Así que primero hay que\n                    buscar este ID en la lista\n                */\n\t\t\t\t// M11092601: Modificaciones para mejorar el soporte de objetos volátiles.\n\t\t\t\t// Volatile debería ser\n\t\t\t\tlet bNewObject = false;\n\t\t\t\tif (obj == null) {\n\t\t\t\t\t// No existe, así que crear nuevo\n\t\t\t\t\t//  Primero tiene que comprobar que haya un GUID válido\n\t\t\t\t\t//  o al menos una cadenilla ProgID para construir los\n\t\t\t\t\t//  objetos. Indicar que se trata de un objeto creado solo para cargarlo.\n\t\t\t\t\tobj = await this.m_ownerColl.CreateObject(false);\n\t\t\t\t\tif (null == obj) {\n\t\t\t\t\t\t// Error\n\t\t\t\t\t\trs.close();\n\t\t\t\t\t\trs = null;\n\t\t\t\t\t\t// M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n\t\t\t\t\t\t////throw new Exception(\"CASDataColl::LookupObject ha fallado. CreateObject ha devuelto NULL.\");\n\t\t\t\t\t\tlet sb = this.m_ownerColl.GetMessage(XoneMessageKeys.SYS_MSG_COLL_LOOKUPOBJFAIL_03, \"{0} failed. CreateObject returned NULL.\");\n\t\t\t\t\t\tsb = sb.replace(\"{0}\", FunctionName);\n\t\t\t\t\t\tthrow new XoneGenericException(-5635, sb);\n\t\t\t\t\t} // Error\n\t\t\t\t\t// M11092601: Modificaciones para mejorar el soporte de objetos volátiles.\n\t\t\t\t\tbNewObject = true;\n\t\t\t\t} // No existe, así que crear nuevo\n\t\t\t\t// Cargar el objeto\n\t\t\t\t// M11092601: Modificaciones para mejorar el soporte de objetos volátiles.\n\t\t\t\t// Cargar el objeto solamente si es nuevo o volátil...\n\t\t\t\tlet bLoadOk = true;\n\t\t\t\tif (bNewObject || this.m_ownerColl.Options.bVolatile) bLoadOk = await obj.Load(rs);\n\t\t\t\trs.close();\n\t\t\t\trs = null;\n\t\t\t\tif (!bLoadOk) {\n\t\t\t\t\t// Error\n\t\t\t\t\tobj = null;\n\t\t\t\t\treturn null;\n\t\t\t\t} // Error\n\t\t\t\t// M11092601: Modificaciones para mejorar el soporte de objetos volátiles.\n\t\t\t\t// Si el objeto es nuevo o volátil lo adicionamos a la lista...\n\t\t\t\tif (bNewObject) {\n\t\t\t\t\t// Nuevo. Adicionar a la lista\n\t\t\t\t\t//\n\t\t\t\t\t// Adicionar el objeto a la colección y a los posibles\n\t\t\t\t\t// índices\n\t\t\t\t\tif (!this.m_ownerColl.addItem(obj)) {\n\t\t\t\t\t\t// Error\n\t\t\t\t\t\tobj = null;\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t} // Error\n\t\t\t\t} // Nuevo. Adicionar a la lista\n\t\t\t\t//\n\t\t\t\t// Si había más de un objeto, particularizar\n\t\t\t\t// la búsqueda según los otros campos\n\t\t\t\t// Esta cosa finalmente nunca se usa para lo que\n\t\t\t\t// fue creada, así que en WInCE nadie la echará de menos\n\t\t\t} // Lo ha encontrado\n\t\t\telse {\n\t\t\t\t// Nionionio\n\t\t\t\t// F12110901: No se cierra en recordset cuando no se encuentra un objeto.\n\t\t\t\t// Cerramos\n\t\t\t\trs.close();\n\t\t\t\trs = null;\n\t\t\t} // Nionionio\n\t\t\t//\n\t\t\t// Retornar el objeto encontrado\n\t\t\treturn obj;\n\t\t} catch (e) {\n\t\t\t// Si hay recordset tenemos que cerrarlo\n\t\t\tif (rs != null) {\n\t\t\t\t// Hay recordset\n\t\t\t\ttry {\n\t\t\t\t\trs.close();\n\t\t\t\t} catch (se) {\n\t\t\t\t\t// Ignorar esta excepción\n\t\t\t\t}\n\t\t\t\trs = null;\n\t\t\t} // Hay recordset\n\t\t\t/*\n            if (conn != null)\n            {// Cerrarla\n                try\n                {\n                    conn.close();\n                }\n                catch (SQLException se)\n                {\n                    // Ignorar esta excepción\n                }\n                conn = null;\n            }// Cerrarla\n            */\n\t\t\t// Lanzar la excepción\n\t\t\tthrow e;\n\t\t}\n\t}\n\t/**\n\t * Efectúa la búsqueda de un objeto en la base de datos\n\t *\n\t * @return\t\t\t\t\tDevuelve el objeto si se encuentra en base de datos o NULL si no se encuentra.\n\t * @throws Exception\n\t */\n\tasync LookupObjectByObject(objFind) {\n\t\tlet strKey = null;\n\t\tlet obj = null;\n\t\tlet rs = null;\n\t\tlet val1 = null;\n\t\tconst FunctionName = \"CXoneDataCollection::LookupObject\";\n\t\ttry {\n\t\t\t/*if (m_bDebug)\n            {// Dejar traza del SQL\n                str = \"\\r\\n\" + strCmd + \"\\r\\n\";\n                m_owner.WriteConsoleString(str);\n            }// Dejar traza del SQL\n            // A12042503: Mecanismo para registrar un modo debug global en la aplicación.\n            if (this.getIsDebugging() || this.getOwnerApp().isDebugMode())\n                Utils.DebugLog(Utils.TAG_DATABASE_LOG,\"LookupObject: \"+strCmd);*/\n\t\t\t//////strCmd = InsertTop(strCmd, 1);\n\n\t\t\tif (\n\t\t\t\tnull ==\n\t\t\t\t(rs = await this.m_ownerColl.getConnection().CreateRecordsetAsync(null, {\n\t\t\t\t\tcount: true,\n\t\t\t\t\tcoll: this.m_ownerColl.getName(),\n\t\t\t\t\tloadall: true,\n\t\t\t\t\tpage: {},\n\t\t\t\t}))\n\t\t\t) {\n\t\t\t\t//  this.m_ownerColl.getName(), null, -1 new CallParameter(objFind), -1)))\n\t\t\t\t// Error\n\t\t\t\t// M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n\t\t\t\t////throw new Exception(\"XoneDataCollection::LookupObject ha fallado. Error ejecutando la sentencia de acceso a los datos.\");\n\t\t\t\tlet sb = this.m_ownerColl.GetMessage(XoneMessageKeys.SYS_MSG_COLL_LOOKUPOBJFAIL_02, \"{0} failed. Error executing data access query.\");\n\t\t\t\tsb = sb.replace(\"{0}\", FunctionName);\n\t\t\t\tthrow new XoneGenericException(-5634, sb);\n\t\t\t} // Error\n\t\t\t//\n\t\t\t// Ver si ha encontrado algo\n\t\t\tif (await rs.next()) {\n\t\t\t\t// Lo ha encontrado\n\t\t\t\t//\n\t\t\t\t// Comprobar la cantidad de records que se encontraron\n\t\t\t\tif (!this.m_ownerColl.strPk.contains(\",\")) {\n\t\t\t\t\t// Una sola\n\t\t\t\t\tstrKey = \"\";\n\t\t\t\t\t// M10052401:\tModificaciones en la forma de acceso a bases de datos SQLite.\n\t\t\t\t\t// K11010501:\tModificaciones para la versión 1.5 de Android.\n\t\t\t\t\ttry {\n\t\t\t\t\t\tval1 = rs.getValue(this.m_ownerColl.strPk, this.m_ownerColl.Options.nPkType);\n\t\t\t\t\t\t// Los datos de tipo VT_DECIMAL tienen que convertirse a LONG para que no haya\n\t\t\t\t\t\t// ambiguedades con las claves\n\t\t\t\t\t\tif (!this.m_ownerColl.Options.bStringPk) val1 = NumberUtils.SafeToInt(val1);\n\t\t\t\t\t\tstrKey = this.m_ownerColl.BrowseData.DevelopObjectValue(val1);\n\t\t\t\t\t} catch (ex) {}\n\t\t\t\t} // Una sola\n\t\t\t\telse {\n\t\t\t\t\t// Es múltiple, desarrollar este valor\n\t\t\t\t\t// TODO Ver si las claves múltiples serán usadas o no... a fin de cuentas eso no lo usa nadie en otras plataformas.\n\t\t\t\t\t/*\n                    strKey = \"\";\n                    str1 = this.m_ownerColl.strPk;\n                    String[] strFields = str1.Split(',');\n                    foreach (string fn in strFields)\n                    {// Todos los campos\n                        val1 = rs[fn];\n                        //\n                        str2 = string.Format(\"{0}={1}\", fn, DevelopObjectValue(val1));\n                        if (!CStringUtils.IsEmptyString(strKey))\n                            strKey += \",\";\n                        strKey += str2;\n                    }// Todos los campos\n                    */\n\t\t\t\t} // Es múltiple, desarrollar este valor\n\t\t\t\tif (!StringUtils.IsEmptyString(strKey)) {\n\t\t\t\t\t// Ver si ya está en lista\n\t\t\t\t\tif (this.m_ownerColl.BrowseData.ObjectList.containsKey(strKey)) obj = this.m_ownerColl.BrowseData.ObjectList.get(strKey);\n\t\t\t\t} // Ver si ya está en lista\n\t\t\t\t/*\n                    Puede ser que ya este objeto ande por la lista\n                    aunque con otros valores. A los efectos esto viene\n                    a ser una especie de Refresh. La idea sería recargar\n                    el original y devolver ese, pues puede haber referencias\n                    a él en alguna otra parte. Así que primero hay que\n                    buscar este ID en la lista\n                */\n\t\t\t\t// M11092601: Modificaciones para mejorar el soporte de objetos volátiles.\n\t\t\t\t// Volatile debería ser\n\t\t\t\tlet bNewObject = false;\n\t\t\t\tif (obj == null) {\n\t\t\t\t\t// No existe, así que crear nuevo\n\t\t\t\t\t//  Primero tiene que comprobar que haya un GUID válido\n\t\t\t\t\t//  o al menos una cadenilla ProgID para construir los\n\t\t\t\t\t//  objetos. Indicar que se trata de un objeto creado solo para cargarlo.\n\t\t\t\t\tobj = await this.m_ownerColl.CreateObject(false);\n\t\t\t\t\tif (null == obj) {\n\t\t\t\t\t\t// Error\n\t\t\t\t\t\trs.close();\n\t\t\t\t\t\trs = null;\n\t\t\t\t\t\t// M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n\t\t\t\t\t\t////throw new Exception(\"CASDataColl::LookupObject ha fallado. CreateObject ha devuelto NULL.\");\n\t\t\t\t\t\tlet sb = this.m_ownerColl.GetMessage(XoneMessageKeys.SYS_MSG_COLL_LOOKUPOBJFAIL_03, \"{0} failed. CreateObject returned NULL.\");\n\t\t\t\t\t\tsb = sb.replace(\"{0}\", FunctionName);\n\t\t\t\t\t\tthrow new XoneGenericException(-5635, sb);\n\t\t\t\t\t} // Error\n\t\t\t\t\t// M11092601: Modificaciones para mejorar el soporte de objetos volátiles.\n\t\t\t\t\tbNewObject = true;\n\t\t\t\t} // No existe, así que crear nuevo\n\t\t\t\t// Cargar el objeto\n\t\t\t\t// M11092601: Modificaciones para mejorar el soporte de objetos volátiles.\n\t\t\t\t// Cargar el objeto solamente si es nuevo o volátil...\n\t\t\t\tlet bLoadOk = true;\n\t\t\t\tif (bNewObject || this.m_ownerColl.Options.bVolatile) bLoadOk = await obj.Load(rs);\n\t\t\t\trs.close();\n\t\t\t\trs = null;\n\t\t\t\tif (!bLoadOk) {\n\t\t\t\t\t// Error\n\t\t\t\t\tobj = null;\n\t\t\t\t\treturn null;\n\t\t\t\t} // Error\n\t\t\t\t// M11092601: Modificaciones para mejorar el soporte de objetos volátiles.\n\t\t\t\t// Si el objeto es nuevo o volátil lo adicionamos a la lista...\n\t\t\t\tif (bNewObject) {\n\t\t\t\t\t// Nuevo. Adicionar a la lista\n\t\t\t\t\t//\n\t\t\t\t\t// Adicionar el objeto a la colección y a los posibles\n\t\t\t\t\t// índices\n\t\t\t\t\tif (!this.m_ownerColl.addItem(obj)) {\n\t\t\t\t\t\t// Error\n\t\t\t\t\t\tobj = null;\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t} // Error\n\t\t\t\t} // Nuevo. Adicionar a la lista\n\t\t\t\t//\n\t\t\t\t// Si había más de un objeto, particularizar\n\t\t\t\t// la búsqueda según los otros campos\n\t\t\t\t// Esta cosa finalmente nunca se usó para lo que\n\t\t\t\t// fue creada, así que en WInCE nadie la echará de menos\n\t\t\t} // Lo ha encontrado\n\t\t\telse {\n\t\t\t\t// Nionionio\n\t\t\t\t// F12110901: No se cierra en recordset cuando no se encuentra un objeto.\n\t\t\t\t// Cerramos\n\t\t\t\trs.close();\n\t\t\t\trs = null;\n\t\t\t} // Nionionio\n\t\t\t//\n\t\t\t// Retornar el objeto encontrado\n\t\t\treturn obj;\n\t\t} catch (e) {\n\t\t\t// Si hay recordset tenemos que cerrarlo\n\t\t\tif (rs != null) {\n\t\t\t\t// Hay recordset\n\t\t\t\ttry {\n\t\t\t\t\trs.close();\n\t\t\t\t} catch (se) {\n\t\t\t\t\t// Ignorar esta excepción\n\t\t\t\t}\n\t\t\t\trs = null;\n\t\t\t} // Hay recordset\n\t\t\t/*\n            if (conn != null)\n            {// Cerrarla\n                try\n                {\n                    conn.close();\n                }\n                catch (SQLException se)\n                {\n                    // Ignorar esta excepción\n                }\n                conn = null;\n            }// Cerrarla\n            */\n\t\t\t// Lanzar la excepción\n\t\t\tthrow e;\n\t\t}\n\t}\n}\n\n//# sourceMappingURL=XoneLookupObject.js.map\n","import StringBuilder from \"./StringBuilder\";\nimport StringUtils from \"./StringUtils\";\nimport { Utils } from \"./Utils\";\nexport default class ScriptUtils {\n    static GenerateFunctionName(xmlNode) {\n        let strName = new StringBuilder();\n        let strNodeName = \"\";\n        /*\n         * Armar el nombre de la función de la forma más inteligente posible.\n         * Comprobar primero si este está solo en la colección del padre\n         */\n        let parentList = xmlNode.getParentNode().SelectNodes(xmlNode.getName());\n        if (parentList.count() == 1) {\n            // Ver si tiene nombre\n            // F11051002: El nombre de función para nodos debería tener en cuenta el nombre.\n            strNodeName = xmlNode.getAttrValue(Utils.PROP_ATTR_NAME);\n            strName.append(xmlNode.getName());\n            if (!StringUtils.IsEmptyString(strNodeName)) {\n                strName.append(\"[@\");\n                strName.append(Utils.PROP_ATTR_NAME);\n                strName.append(\"='\");\n                strName.append(strNodeName);\n                strName.append(\"']\");\n            }\n        }\n        else {\n            // Varios\n            // F11051002: El nombre de función para nodos debería tener en cuenta el nombre.\n            // Estoooo, si el nodo tiene name, es el que nos vale...\n            strName.append(xmlNode.getName());\n            // F13080702: La generación de nombres de función de nodo puede repetirse.\n            // Quitamos el if que había aquí...\n            for (let i = 0; i < parentList.count(); i++) {\n                let node = parentList.get(i);\n                if (node === xmlNode) {\n                    // Este es\n                    if (strName.length() > 0) {\n                        strName.append(\"[\");\n                    }\n                    strName.append(StringUtils.SafeToString(i + 1));\n                    strName.append(\"]\");\n                    break;\n                }\n            }\n        }\n        if (xmlNode.hasChildNodes() && xmlNode.getChildren() != null && xmlNode.getChildren().length > 0 && xmlNode.SelectSingleNode(\"script\") != null) {\n            strName.append(\"/script\");\n        }\n        if (strName.length() == 0) {\n            strName.append(xmlNode.getName());\n        }\n        let parent = xmlNode.getParentNode();\n        while (true) {\n            // Recorrer el árbol hacia atrás\n            let strTmp = parent.getName();\n            strNodeName = parent.getAttrValue(\"name\");\n            if (!StringUtils.IsEmptyString(strNodeName)) {\n                // Concatenar\n                strTmp += \"[@\";\n                strName.append(Utils.PROP_ATTR_NAME);\n                strName.append(\"='\");\n                strTmp += strNodeName;\n                strName.append(\"']\");\n            }\n            //strTmp = strTmp.replace(\"-\", \"_\");\n            strName.insert(0, \"/\");\n            strName.insert(0, strTmp); // + \".\" + strName;\n            parent = parent.getParentNode();\n            if (parent.getName().equals(\"coll\")) {\n                // El nombre de la colección también\n                strName.insert(0, \"|//\");\n                strName.insert(0, parent.getAttrValue(\"name\"));\n                break;\n            }\n            else {\n                strName.insert(0, \"/\");\n            }\n        }\n        // Indicar que es un nombre de módulo y no de fichero\n        strName.insert(0, \"@\");\n        return strName.toString();\n    }\n    static GenerateFunctionNameDebug(xmlNode) {\n        let strName = new StringBuilder();\n        let strNodeName = \"\";\n        /*\n         * Armar el nombre de la función de la forma más inteligente posible.\n         * Comprobar primero si este está solo en la colección del padre\n         */\n        let parentList = xmlNode.getParentNode().SelectNodes(xmlNode.getName());\n        if (parentList.count() == 1) {\n            // Ver si tiene nombre\n            // F11051002: El nombre de función para nodos debería tener en cuenta el nombre.\n            strNodeName = xmlNode.getAttrValue(Utils.PROP_ATTR_NAME);\n            strName.append(xmlNode.getName());\n            if (!StringUtils.IsEmptyString(strNodeName)) {\n                strName.append(\"[@\");\n                strName.append(Utils.PROP_ATTR_NAME);\n                strName.append(\"='\");\n                strName.append(strNodeName);\n                strName.append(\"']\");\n            }\n        }\n        else {\n            // Varios\n            // F11051002: El nombre de función para nodos debería tener en cuenta el nombre.\n            // Estoooo, si el nodo tiene name, es el que nos vale...\n            strName.append(xmlNode.getName());\n            // F13080702: La generación de nombres de función de nodo puede repetirse.\n            // Quitamos el if que había aquí...\n            for (let i = 0; i < parentList.count(); i++) {\n                let node = parentList.get(i);\n                if (node === xmlNode) {\n                    // Este es\n                    if (strName.length() > 0) {\n                        strName.append(\"[\");\n                    }\n                    strName.append(StringUtils.SafeToString(i + 1));\n                    strName.append(\"]\");\n                    break;\n                }\n            }\n        }\n        if (xmlNode.hasChildNodes() && xmlNode.getChildren() != null && xmlNode.getChildren().length > 0 && xmlNode.SelectSingleNode(\"script\") != null) {\n            strName.append(\"/script\");\n        }\n        if (strName.length() == 0) {\n            strName.append(xmlNode.getName());\n        }\n        let parent = xmlNode.getParentNode();\n        while (true) {\n            // Recorrer el árbol hacia atrás\n            let strTmp = parent.getName();\n            strNodeName = parent.getAttrValue(\"name\");\n            if (!StringUtils.IsEmptyString(strNodeName)) {\n                // Concatenar\n                strTmp += \"[@\";\n                strName.append(Utils.PROP_ATTR_NAME);\n                strName.append(\"='\");\n                strTmp += strNodeName;\n                strName.append(\"']\");\n            }\n            //strTmp = strTmp.replace(\"-\", \"_\");\n            strName.insert(0, \"/\");\n            strName.insert(0, strTmp); // + \".\" + strName;\n            parent = parent.getParentNode();\n            if (parent.getName().equals(\"coll\")) {\n                // El nombre de la colección también\n                strName.insert(0, \"|//\");\n                strName.insert(0, parent.getAttrValue(\"name\"));\n                break;\n            }\n            else {\n                strName.insert(0, \"/\");\n            }\n        }\n        // Indicar que es un nombre de módulo y no de fichero\n        strName.insert(0, \"@\");\n        return strName.toString();\n    }\n}\n\n//# sourceMappingURL=ScriptUtils.js.map\n","import TextUtils from \"../Utils/TextUtils\";\nimport StringUtils from \"../Utils/StringUtils\";\nimport Hashtable from \"../Collections/HashMap/Hashtable\";\nimport { Utils } from \"../Utils/Utils\";\nimport { XoneDataObject } from \"./XoneDataObject\";\nimport { Exception } from \"../Exceptions/Exception\";\nimport XoneGenericException from \"../Exceptions/XoneGenericException\";\nimport { XoneMessageKeys } from \"../Exceptions/XoneMessageKeys\";\nimport NumberUtils from \"../Utils/NumberUtils\";\nimport MacrosEvaluator from \"./Macros/MacrosEvaluator\";\nimport StringBuilder from \"../Utils/StringBuilder\";\nimport XoneCompany from \"./XoneCompany\";\nimport XoneUser from \"./XoneUser\";\nimport Vector from \"../Collections/Vector\";\nimport XmlUtils from \"../Utils/XmlUtils\";\nimport XmlNode from \"../Xml/JSONImpl/XmlNode\";\nimport IllegalArgumentException from \"../Exceptions/IllegalArgumentException\";\nimport UITransform from \"../Transform/UITransform\";\nimport XoneBrowseData from \"./XoneBrowseData\";\nimport ScriptUtils from \"../Utils/ScriptUtils\";\nimport ScriptContext from \"../XoneScripts/ScriptContext\";\nexport class XoneDataCollection {\n    constructor(appData, source, version) {\n        this.UNIQUE_ID = Symbol(\"XoneDataCollection\");\n        this.m_ownerApp = appData;\n        this.m_xmlNode = source; // new XoneDataSource(null,source);\n        this.m_version = version;\n        this.m_messages = appData.getMessageHolder();\n        this.m_options = {};\n        this.m_strPk = \"ID\";\n        this.m_nPkType = 0;\n        this.m_parent = null;\n        this.m_bLocked = false;\n        this.m_macrosEvaluator = new MacrosEvaluator(this.m_ownerApp, this);\n        // this.m_lstMacros = new Hashtable<string, string>();\n        // Si la colección no tiene nombre nos explotamos...\n        // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n        if (StringUtils.IsEmptyString((this.m_strName = this.m_xmlNode.getAttrValue(\"name\"))))\n            ////throw new Exception(\"No se puede crear una colección sin nombre o con nombre vacío.\");\n            throw new Exception(this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_COLL_NONAME, \"Cannot create a collection with an empty name.\"));\n        // Crear la lista de claves múltiples por si las moscas\n        this.m_lstKeyFields = new Vector();\n        // O12050702: Optimización al gestionas los campos que son de fórmula o bit.\n        this.m_lstFormulaProps = new Array();\n        this.m_lstBitProps = new Array();\n        this.m_cachePlatformNodes = new Hashtable();\n        // Iniciar el browserdata\n        this.m_browserData = new XoneBrowseData(this);\n    }\n    // Solo para identificar que una instancia es una colección\n    get isDataCollection() {\n        return true;\n    }\n    getXmlNode() {\n        return this.m_xmlNode;\n    }\n    getVersion() {\n        return this.m_version;\n    }\n    get BrowseData() {\n        return this.m_browserData;\n    }\n    /**\n     * Devuelve el valor del atributo cuyo nombre se indica en la propiedad deseada.\n     * @param FieldName\t\t\tNombre de la propiedad o campo de la colección cuyo atributo se quiere extraer.\n     * @param AttrName\t\t\tNombre del atributo cuyo valor se quiere leer en el campo AttrName.\n     * @return\t\t\t\t\tDevuelve el valor del atributo de la propiedad solicitada. NULL o cadena vacía si no existe dicho atributo.\n     * @throws Exception\n     */\n    FieldPropertyValue(FieldName, AttrName) {\n        if (!AttrName)\n            return; //TAG 20201123 (Alejandro) parche temporal, he agregado esta clausula para evitar un error al llegar AttrName null\n        if (TextUtils.isEmpty(FieldName) || TextUtils.isEmpty(AttrName)) {\n            /*\n             * TODO 25/02/2019 Juan Carlos\n             * Antes no había check de esto y el código siempre acababa explotándose mucho después\n             * y sin una descripción clara. Mejor ponerlo aquí, comentarlo si resulta que null es\n             * un valor válido, que no creo.\n             */\n            throw new IllegalArgumentException(\"Empty field name passed to XoneDataCollection.FieldPropertyValue(). Collection name: \" + this.getName());\n        }\n        // Si no tiene nodo XML, no hacemos nada\n        let strTmp = \"\";\n        // F13022109: No devolver nulos cuando los atributos no existen o tienen cadenas vacías.\n        // No es lo mismo cadena vacía que NULL\n        if (this.m_xmlNode == null)\n            return Utils.EMPTY_STRING;\n        let xprop = null;\n        // A11070701: Introducción de los CSS en la maquinaria para poder parametrizar el mappings.\n        // Armar la cadena a buscar para resolver el cacheo\n        // O11110801: Cache multinivel para las propiedades de nodos XML para acelerar la búsqueda.\n        // Cambiamos esto para usar cache multinivel\n        //////StringBuilder sb =new StringBuilder();\n        //////sb.append(\"##prop|\").append(FieldName).append(\"|\").append(AttrName);\n        // Ver si es una propiedad que no está definida\n        // O11081101: Optimizar las estructuras de datos de las caches de atributos inexistentes.\n        //////Set<String> ucache =m_owner.GetCollPropUndefinedValues(m_strName);\n        // K12050901: Permitir activar o desactivar las caches de valores de atributos.\n        //////if (ucache !=null)\n        //////\tif (ucache.contains(sb.toString()))\n        //////\t\treturn null;\n        // Obtiene la cache para buscar los atributos.\n        // O11110801: Cache multinivel para las propiedades de nodos XML para acelerar la búsqueda.\n        let cache = this.m_ownerApp.GetCollPropValueCache(this.m_strName, \"prop\", FieldName);\n        // K12050901: Permitir activar o desactivar las caches de valores de atributos.\n        // F13022103: La gestión de caches de atributos debe tener en cuenta la concurrencia.\n        if (cache != null) {\n            // Tiene cache\n            //synchronized (cache)\n            {\n                if (cache.containsKey(AttrName))\n                    return cache.get(AttrName);\n            }\n        } // Tiene cache\n        // De lo contrario buscar el nodo de la propiedad para sacar el atributo\n        xprop = this.m_xmlNode.SelectSingleNode(\"prop\", \"name\", FieldName);\n        // M10090801:\tModificaciones para permitir que los <button> sean considerados propiedades.\n        // Comprobar si no tenemos prop, al menos si hay button\n        if (xprop == null)\n            xprop = this.m_xmlNode.SelectSingleNode(\"button\", \"name\", FieldName);\n        // Si tenemos la propiedad, devolver su valor...\n        if (xprop != null) {\n            // Tiene la propiedad\n            // test sergio*\n            ////m_propertyHashNamesValues.put(FieldName, xprop);\n            // Obtener la plataforma\n            if (!StringUtils.IsEmptyString((strTmp = this.getOwnerApp().getPlatform()))) {\n                // Ver si la puede sacar de aquí\n                let platNode = xprop.SelectSingleNode(\"platform\", \"name\", strTmp);\n                if (platNode != null)\n                    if (!StringUtils.IsEmptyString((strTmp = XmlUtils.getNodeAttr(platNode, AttrName)))) {\n                        // Este vale\n                        // A11070701: Introducción de los CSS en la maquinaria para poder parametrizar el mappings.\n                        // Cachear el valor para ahorrarnos esto después.\n                        // K12050901: Permitir activar o desactivar las caches de valores de atributos.\n                        // O11110801: Cache multinivel para las propiedades de nodos XML para acelerar la búsqueda.\n                        // F13022103: La gestión de caches de atributos debe tener en cuenta la concurrencia.\n                        if (cache != null) {\n                            // Tiene cache\n                            //synchronized (cache)\n                            {\n                                cache.put(AttrName, strTmp);\n                            }\n                        } // Tiene cache\n                        // O13080801: Mecanismo de optimización para la gestión de controles visuales y atributos.\n                        return this.CheckIfEvaluated(FieldName, AttrName, strTmp);\n                    } // Este vale\n            } // Ver si la puede sacar de aquí\n            // De lo contrario lo sacamos del propio nodo...\n            // M10090801:\tModificaciones para permitir que los <button> sean considerados propiedades.\n            // Contemplar casos especiales (type en los botones, por ejemplo)\n            let strAttrVal = XmlUtils.getNodeAttr(xprop, AttrName);\n            if (!StringUtils.IsEmptyString(strAttrVal)) {\n                // Este nos vale\n                // A11070701: Introducción de los CSS en la maquinaria para poder parametrizar el mappings.\n                // Cachear el valor para ahorrarnos esto después.\n                // K12050901: Permitir activar o desactivar las caches de valores de atributos.\n                // O11110801: Cache multinivel para las propiedades de nodos XML para acelerar la búsqueda.\n                // F13022103: La gestión de caches de atributos debe tener en cuenta la concurrencia.\n                if (cache != null) {\n                    // Tiene cache\n                    //synchronized (cache)\n                    {\n                        cache.put(AttrName, strAttrVal);\n                    }\n                } // Tiene cache\n                // O13080801: Mecanismo de optimización para la gestión de controles visuales y atributos.\n                return this.CheckIfEvaluated(FieldName, AttrName, strAttrVal);\n            } // Este nos vale\n            // Si es un botón, comprobar el caso especial\n            if (AttrName.equals(\"type\")) {\n                // Ver si es un botón\n                let strName = xprop.getName();\n                if (strName.equals(\"button\")) {\n                    // Botón\n                    // A11070701: Introducción de los CSS en la maquinaria para poder parametrizar el mappings.\n                    // Cachear el valor.\n                    // K12050901: Permitir activar o desactivar las caches de valores de atributos.\n                    // O11110801: Cache multinivel para las propiedades de nodos XML para acelerar la búsqueda.\n                    // F13022103: La gestión de caches de atributos debe tener en cuenta la concurrencia.\n                    if (cache != null) {\n                        // Tiene cache\n                        //synchronized (cache)\n                        {\n                            cache.put(AttrName, \"B\");\n                        }\n                    } // Tiene cache\n                    return \"B\";\n                } // Botón\n            } // Ver si es un botón\n            // A11070701: Introducción de los CSS en la maquinaria para poder parametrizar el mappings.\n            // Comprobar si hay hojas de estilo para hacer búsquedas...\n            // TODO: Luis Esto es lo mas grave que es utilizar nuestro CSS\n            if (this.getOwnerApp().hasStylesheets()) {\n                // Tiene CSS\n                // A12042502: Los selectores de CSS pueden estar tipificados.\n                let strType = xprop.getAttrValue(\"type\");\n                let css = null;\n                let strClass = xprop.getAttrValue(\"class\");\n                if (StringUtils.IsEmptyString(strClass))\n                    strClass = this.m_xmlNode.getAttrValue(\"class\");\n                if (!StringUtils.IsEmptyString(strClass)) {\n                    // Buscar por clase\n                    // A12042502: Los selectores de CSS pueden estar tipificados.\n                    // ADD Tag: Luis 1604201801 Modificaco para permitir las clases en cascadas\n                    // Separadas por coma.\n                    // TODO: Permitir los atributos con !important se necesita doble pasada\n                    let clsArr = strClass.split(\" \");\n                    clsArr.reverse();\n                    for (let i = 0; i < clsArr.length; i++) {\n                        let cls = clsArr[i].trim();\n                        if (TextUtils.isEmpty(cls))\n                            continue;\n                        // Buscar primero por subtipo (i.e. prop.kaka:T)\n                        if (null == (css = this.m_ownerApp.FindStylesheetByClassName(\"prop.\" + cls + \":\" + strType, AttrName))) {\n                            // No está por subtipo\n                            if (null == (css = this.m_ownerApp.FindStylesheetByClassName(\"prop.\" + cls, AttrName)))\n                                css = this.m_ownerApp.FindStylesheetByClassName(\".\" + cls, AttrName);\n                        } // No está por subtipo\n                        if (css != null)\n                            break;\n                    }\n                } // Buscar por clase\n                else {\n                    // Buscar por el prop\n                    // A12042502: Los selectores de CSS pueden estar tipificados.\n                    // Buscar primero por subtipo (i.e. prop:B)\n                    if (null == (css = this.m_ownerApp.FindStylesheetByClassName(\"prop:\" + strType, AttrName)))\n                        css = this.m_ownerApp.FindStylesheetByClassName(\"prop\", AttrName);\n                } // Buscar por el prop\n                if (css != null) {\n                    // Buscar en el stylesheet\n                    strTmp = css.getRuleValue(AttrName);\n                    if (!StringUtils.IsEmptyString(strTmp)) {\n                        // Anda\n                        // K12050901: Permitir activar o desactivar las caches de valores de atributos.\n                        // O11110801: Cache multinivel para las propiedades de nodos XML para acelerar la búsqueda.\n                        // F13022103: La gestión de caches de atributos debe tener en cuenta la concurrencia.\n                        if (cache != null) {\n                            // Tiene cache\n                            //synchronized (cache)\n                            {\n                                cache.put(AttrName, strTmp);\n                            }\n                        } // Tiene cache\n                        // O13080801: Mecanismo de optimización para la gestión de controles visuales y atributos.\n                        return this.CheckIfEvaluated(FieldName, AttrName, strTmp);\n                    } // Anda\n                } // Buscar en el stylesheet\n            } // Tiene CSS\n            // Vale, se acaban los casos especiales, así que NULL pallá\n            // A11070701: Introducción de los CSS en la maquinaria para poder parametrizar el mappings.\n            // Pero antes guardamos el descriptor de esta propiedad para decir que es nulo siempre\n            // K12050901: Permitir activar o desactivar las caches de valores de atributos.\n            // O11110801: Cache multinivel para las propiedades de nodos XML para acelerar la búsqueda.\n            // F13022103: La gestión de caches de atributos debe tener en cuenta la concurrencia.\n            if (cache != null) {\n                // Tiene cache\n                //synchronized (cache)\n                {\n                    cache.put(AttrName, Utils.EMPTY_STRING);\n                }\n            } // Tiene cache\n            // F13022109: No devolver nulos cuando los atributos no existen o tienen cadenas vacías.\n            // No es lo mismo cadena vacía que NULL\n            return Utils.EMPTY_STRING;\n        } // Tiene la propiedad\n        // De lo contrario tenemos que ver si es una colección heredada, y llamar a la del padre\n        if (!StringUtils.IsEmptyString(this.m_options.strParentCollection)) {\n            // Supuestamente tiene padre\n            if (this.getParentCollection() == null) {\n                // Error\n                // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n                ////throw new XoneGenericException(-17171, \"CXoneDataCollection::FieldPropertyValue ha fallado en la colección '\" + m_strName + \"'. La colección padre ('\" + m_strParentCollection + \"') no se puede obtener.\");\n                let strMsg = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_COLL_XPROPVALUEFAIL, \"{0} failed for collection '{1}'. Cannot get parent collection '{2}'\");\n                strMsg = strMsg.replace(\"{0}\", \"CXoneDataCollection::FieldPropertyValue\");\n                strMsg = strMsg.replace(\"{1}\", this.m_strName);\n                strMsg = strMsg.replace(\"{2}\", this.m_options.strParentCollection);\n                throw new XoneGenericException(-17171, strMsg);\n            } // Error\n            return this.getParentCollection().FieldPropertyValue(FieldName, AttrName);\n        } // Supuestamente tiene padre\n        // De lo contrario nanai...\n        // A11070701: Introducción de los CSS en la maquinaria para poder parametrizar el mappings.\n        // Pero antes cachear que no tenemos valor\n        // K12050901: Permitir activar o desactivar las caches de valores de atributos.\n        // O11110801: Cache multinivel para las propiedades de nodos XML para acelerar la búsqueda.\n        if (cache != null)\n            cache.put(AttrName, Utils.EMPTY_STRING);\n        // F13022109: No devolver nulos cuando los atributos no existen o tienen cadenas vacías.\n        // No es lo mismo cadena vacía que NULL\n        return Utils.EMPTY_STRING;\n    }\n    getName() {\n        return this.m_strName;\n    }\n    // A10090601:\tIncluir el mecanismo de réplica selectiva por colecciones a la maquinaria.\n    // TRUE si la colección replica (solo cuando la réplica es selectiva por colecciones)\n    getReplicate() {\n        return StringUtils.ParseBoolValue(this.CollPropertyValue(\"replicate\"), false);\n    }\n    CheckIfEvaluated(FieldName, AttrName, sVal) {\n        try {\n            if (!StringUtils.IsEmptyString(sVal)) {\n                if (sVal.contains(\"##\")) {\n                    // Es una macro o la contiene\n                    // M11060902: Mejoras en el sistema de evaluación de macros en el framework.\n                    if (sVal.equals(StringUtils.XONE_EMPTY_STRING))\n                        return Utils.EMPTY_STRING;\n                    // O13080801: Mecanismo de optimización para la gestión de controles visuales y atributos.\n                    let key = FieldName + \":\" + AttrName;\n                    this.m_ownerApp.addEvaluatedAttributesList(this.m_strName, key);\n                }\n            }\n        }\n        catch (e) {\n            console.error(e);\n        }\n        return sVal;\n    }\n    //#region Transformaciones para el UI PWA\n    getLayout(visibility = 1, parent = null) {\n        return UITransform.getLayout(this, parent || this.getHierarchyXml(), visibility);\n    }\n    async getLayoutAsync(visibility = 1, parent = null) {\n        return await UITransform.getLayoutAsync(this, parent || this.getHierarchyXml(), visibility);\n    }\n    // Vamos a leer la herencia en formato de XML para arriba\n    getHierarchyXml() {\n        if (this.getParentCollection() == null)\n            return this.getProperties();\n        return this.getProperties().merge(this.getParentCollection().getHierarchyXml());\n    }\n    QualifyField(FieldName, Sentence) {\n        return this.BrowseData.QualifyField(FieldName, Sentence);\n    }\n    getPropAttributes(Value, type = Utils.PROP_NAME) {\n        return UITransform.getPropAttributes(this, Value, type);\n        // let node: XmlNode;\n        // let PropName: string\n        // if (typeof Value == 'string') {\n        //     node=this.m_xmlNode.SelectSingleNode(type,Utils.PROP_ATTR_NAME,Value);\n        //     PropName=Value;\n        // } else {\n        //     node= Value as XmlNode;\n        //     PropName=node.getAttrValue(Utils.PROP_ATTR_NAME);\n        //     type=node.getName();\n        // }\n        // if (ObjUtils.IsNothing(node))\n        //     return {};\n        // let attrs=node.getAttrs();\n        // let result=<any>{ node: type};\n        // for (const key in UITransform.UI_ATTRIBUTES[type]) {\n        //     if (Object.prototype.hasOwnProperty.call(UITransform.UI_ATTRIBUTES[type], key)) {\n        //         const element = UITransform.UI_ATTRIBUTES[type][key];\n        //         const value=node.getName().equalsIgnoreCase(Utils.PROP_NAME)?this.FieldPropertyValue(PropName,element):this.NodePropertyValue(type,PropName,element);\n        //         if (!TextUtils.isEmpty(value))\n        //         {\n        //             result[key]=UITransform.developValue(this,PropName,key,element);\n        //         }\n        //     }\n        // }\n        // return result;\n    }\n    //#endregion\n    /**\n     * A14040101: Función sobrecargada de NodePropertyValue jerárquica.\n     * Sobrecarga de NodePropertyValue para poder sacar valores de jerarquías de nodos.\n     *\n     * @param BaseNode\t\tNodo usado como base para buscar el se pide.\n     * @param NodeName\t\tNombre del nodo xml cuyo atributo se quiere obtener.\n     * @param ItemName\t\tNombre del atributo name del nodo que se quiere buscar.\n     * @param AttrName\t\tNombre del atributo cuyo valor se quiere obtener.\n     * @return\n     * @throws Exception\n     */\n    NodePropertyValueBase(BaseNode, NodeName, ItemName, AttrName) {\n        let strTmp = \"\";\n        // Si no tiene nodo XML, no hacemos nada\n        if (this.m_xmlNode == null)\n            return Utils.EMPTY_STRING;\n        // Obtener la cache correspondiente para el nodo en cuestión.... dando patrás hasta que llegue a coll\n        let sbCacheTag = new StringBuilder(NodeName);\n        let parent = BaseNode;\n        while (!parent.getName().equals(Utils.COLL_COLL)) {\n            // Lo que tengamos lo arreglamos\n            sbCacheTag.insert(0, \"/\");\n            sbCacheTag.insert(0, parent.getName());\n            parent = parent.getParentNode();\n        } // Lo que tengamos lo arreglamos\n        // Ahora buscamos la cache...\n        let cache = this.m_ownerApp.GetCollPropValueCache(this.m_strName, sbCacheTag.toString(), ItemName);\n        if (cache != null) {\n            //synchronized (cache)\n            if (cache.containsKey(AttrName))\n                return cache.get(AttrName);\n        }\n        // Ahora tendremos que buscar el nodo en cuestión dentro del que nos han mandado, no en la lista general\n        let xprop = null;\n        if (StringUtils.IsEmptyString(ItemName))\n            xprop = BaseNode.SelectSingleNode(NodeName);\n        else\n            xprop = BaseNode.SelectSingleNode(NodeName, Utils.PROP_ATTR_NAME, ItemName);\n        // Si tenemos la propiedad, devolver su valor...\n        if (xprop != null) {\n            // Tiene la propiedad\n            // Obtener la plataforma\n            if (!StringUtils.IsEmptyString((strTmp = this.getOwnerApp().getPlatform()))) {\n                // Ver si la puede sacar de aquí\n                let platNode = xprop.SelectSingleNode(\"platform\", Utils.PROP_ATTR_NAME, strTmp);\n                if (platNode != null)\n                    if (!StringUtils.IsEmptyString((strTmp = platNode.getAttrValue(AttrName)))) {\n                        // Tiene valor\n                        // Cachear el valor.\n                        if (cache != null) {\n                            ///synchronized (cache)\n                            cache.put(AttrName, strTmp);\n                        }\n                        return this.CheckIfEvaluated(ItemName, AttrName, strTmp); //strTmp;\n                    } // Tiene valor\n            } // Ver si la puede sacar de aquí\n            // De lo contrario lo sacamos del propio nodo...\n            // Cachear o cachear...\n            strTmp = xprop.getAttrValue(AttrName);\n            if (!StringUtils.IsEmptyString(strTmp)) {\n                // Tiene valor\n                if (cache != null) {\n                    //synchronized (cache)\n                    cache.put(AttrName, strTmp);\n                }\n                // Cualquier otro valor de nodo, no hay verificación...\n                return this.CheckIfEvaluated(ItemName, AttrName, strTmp); //strTmp;\n            } // Tiene valor\n            // Comprobar si hay hojas de estilo para hacer búsquedas...\n            if (this.m_ownerApp.hasStylesheets()) {\n                // Tiene CSS\n                let css = null;\n                let strClass = xprop.getAttrValue(\"class\");\n                if (StringUtils.IsEmptyString(strClass))\n                    strClass = this.m_xmlNode.getAttrValue(\"class\");\n                if (!StringUtils.IsEmptyString(strClass)) {\n                    // Buscar por clase\n                    // ADD Tag: Luis 1604201801 Modificaco para permitir las clases en cascadas\n                    // Separadas por coma.\n                    // TODO: Permitir los atributos con !important se necesita doble pasada\n                    let clsArr = strClass.split(\" \");\n                    clsArr.reverse();\n                    for (let i = 0; i < clsArr.length; i++) {\n                        let cls = clsArr[i].trim();\n                        if (TextUtils.isEmpty(cls))\n                            continue;\n                        if (null == (css = this.m_ownerApp.FindStylesheetByClassName(NodeName + \".\" + cls, AttrName))) {\n                            css = this.m_ownerApp.FindStylesheetByClassName(\".\" + cls, AttrName);\n                        }\n                        if (css != null)\n                            break;\n                    }\n                    //                    if (null == (css = m_owner.FindStylesheetByClassName(NodeName + \".\" + strClass, AttrName)))\n                    //                        css = m_owner.FindStylesheetByClassName(\".\" + strClass, AttrName);\n                } // Buscar por clase\n                else\n                    css = this.m_ownerApp.FindStylesheetByClassName(NodeName, AttrName);\n                if (css != null) {\n                    // Buscar en el stylesheet\n                    strTmp = css.getRuleValue(AttrName);\n                    if (!StringUtils.IsEmptyString(strTmp)) {\n                        // Anda\n                        if (cache != null) {\n                            //synchronized (cache)\n                            cache.put(AttrName, strTmp);\n                        }\n                        return this.CheckIfEvaluated(ItemName, AttrName, strTmp); //strTmp;\n                    } // Anda\n                } // Buscar en el stylesheet\n            } // Tiene CSS\n            // Cachear idicando que no hay valor.\n            // Guardamos en la misma cache una constante vacía\n            if (cache != null) {\n                //synchronized (cache)\n                cache.put(AttrName, Utils.EMPTY_STRING);\n            }\n            // No es lo mismo cadena vacía que NULL\n            return Utils.EMPTY_STRING;\n        } // Tiene la propiedad\n        // De lo contrario tenemos que ver si es una colección heredada, y llamar a la del padre\n        if (!StringUtils.IsEmptyString(this.Options.strParentCollection)) {\n            // Supuestamente tiene padre\n            if (this.getParentCollection() == null)\n                throw new XoneGenericException(-17171, \"CXoneDataCollection::NodePropertyValue ha fallado en la colección '\" +\n                    this.m_strName +\n                    \"'. La colección padre ('\" +\n                    this.Options.strParentCollection +\n                    \"') no se puede obtener.\");\n            return this.getParentCollection().NodePropertyValueBase(BaseNode, NodeName, ItemName, AttrName);\n        } // Supuestamente tiene padre\n        // De lo contrario nanai...\n        // Cachear para indicar que no hay valor\n        if (cache != null) {\n            //synchronized (cache)\n            cache.put(AttrName, Utils.EMPTY_STRING);\n        }\n        // No es lo mismo cadena vacía que NULL\n        return Utils.EMPTY_STRING;\n    }\n    // M10082302:\tCrear una función para sacar cualquier atributo de cualquier nodo de la colección.\n    // Propiedades de un nodo dado su nombre y su atributo\n    NodePropertyValue(NodeName, ItemName, AttrName) {\n        // Si no tiene nodo XML, no hacemos nada\n        let strTmp = \"\";\n        // F13022109: No devolver nulos cuando los atributos no existen o tienen cadenas vacías.\n        // No es lo mismo cadena vacía que NULL\n        if (this.m_xmlNode == null)\n            return Utils.EMPTY_STRING;\n        let xprop = null;\n        // A11070701: Introducción de los CSS en la maquinaria para poder parametrizar el mappings.\n        // Armar la cadena a buscar para resolver el cacheo\n        // O11110801: Cache multinivel para las propiedades de nodos XML para acelerar la búsqueda.\n        //////StringBuilder sb =new StringBuilder();\n        //////sb.append(\"##\").append(NodeName).append(\"|\").append(ItemName).append(\"|\").append(AttrName);\n        // Ver si es una propiedad que no está definida\n        // O11081101: Optimizar las estructuras de datos de las caches de atributos inexistentes.\n        //////Set<String> ucache =m_owner.GetCollPropUndefinedValues(m_strName);\n        // K12050901: Permitir activar o desactivar las caches de valores de atributos.\n        //////if (ucache !=null)\n        //////\tif (ucache.contains(sb.toString()))\n        //////\t\treturn null;\n        // Obtener la cache con los valores de los atributos de la colección.\n        let cache = this.m_ownerApp.GetCollPropValueCache(this.m_strName, NodeName, ItemName);\n        // K12050901: Permitir activar o desactivar las caches de valores de atributos.\n        // F13022103: La gestión de caches de atributos debe tener en cuenta la concurrencia.\n        if (cache != null) {\n            // Tiene cache\n            //synchronized (cache)\n            {\n                if (cache.containsKey(AttrName))\n                    return cache.get(AttrName);\n            }\n        } // Tiene cache\n        // De lo contrario buscar el nodo de la propiedad para sacar el atributo\n        xprop = NodeName.equals(this.m_xmlNode.getName()) ? this.m_xmlNode : this.m_xmlNode.SelectSingleNode(NodeName, Utils.PROP_ATTR_NAME, ItemName);\n        // Si tenemos la propiedad, devolver su valor...\n        if (xprop != null) {\n            // Tiene la propiedad\n            // Obtener la plataforma\n            if (!StringUtils.IsEmptyString((strTmp = this.getOwnerApp().getPlatform()))) {\n                // Ver si la puede sacar de aquí\n                let platNode = xprop.SelectSingleNode(Utils.PLATFORM_NAME, Utils.PROP_ATTR_NAME, strTmp);\n                if (platNode != null)\n                    if (!StringUtils.IsEmptyString((strTmp = XmlUtils.getNodeAttr(platNode, AttrName)))) {\n                        // Tiene valor\n                        // A11070701: Introducción de los CSS en la maquinaria para poder parametrizar el mappings.\n                        // Cachear el valor.\n                        // K12050901: Permitir activar o desactivar las caches de valores de atributos.\n                        // O11110801: Cache multinivel para las propiedades de nodos XML para acelerar la búsqueda.\n                        // F13022103: La gestión de caches de atributos debe tener en cuenta la concurrencia.\n                        if (cache != null) {\n                            // Tiene cache\n                            //synchronized (cache)\n                            {\n                                cache.put(AttrName, strTmp);\n                            }\n                        } // Tiene cache\n                        return this.CheckIfEvaluated(ItemName, AttrName, strTmp); //strTmp;\n                    } // Tiene valor\n            } // Ver si la puede sacar de aquí\n            // De lo contrario lo sacamos del propio nodo...\n            // A11070701: Introducción de los CSS en la maquinaria para poder parametrizar el mappings.\n            // Cachear o cachear...\n            strTmp = xprop.getAttrValue(AttrName);\n            if (!StringUtils.IsEmptyString(strTmp)) {\n                // Tiene valor\n                // K12050901: Permitir activar o desactivar las caches de valores de atributos.\n                // O11110801: Cache multinivel para las propiedades de nodos XML para acelerar la búsqueda.\n                // F13022103: La gestión de caches de atributos debe tener en cuenta la concurrencia.\n                if (cache != null) {\n                    // Tiene cache\n                    //synchronized (cache)\n                    {\n                        cache.put(AttrName, strTmp);\n                    }\n                } // Tiene cache\n                return this.CheckIfEvaluated(ItemName, AttrName, strTmp); //strTmp;\n            } // Tiene valor\n            // A11070701: Introducción de los CSS en la maquinaria para poder parametrizar el mappings.\n            // Comprobar si hay hojas de estilo para hacer búsquedas...\n            if (this.m_ownerApp.hasStylesheets()) {\n                // Tiene CSS\n                let css = null;\n                let strClass = xprop.getAttrValue(\"class\");\n                if (StringUtils.IsEmptyString(strClass))\n                    strClass = this.m_xmlNode.getAttrValue(\"class\");\n                if (!StringUtils.IsEmptyString(strClass)) {\n                    // Buscar por clase\n                    // F11072901: La búsqueda en NodePropertyValue no usa el tag apropiado.\n                    // ADD Tag: Luis 1604201801 Modificaco para permitir las clases en cascadas\n                    // Separadas por coma.\n                    // TODO: Permitir los atributos con !important se necesita doble pasada\n                    let clsArr = strClass.split(\" \");\n                    clsArr.reverse();\n                    for (let i = 0; i < clsArr.length; i++) {\n                        let cls = clsArr[i].trim();\n                        if (TextUtils.isEmpty(cls))\n                            continue;\n                        if (null == (css = this.m_ownerApp.FindStylesheetByClassName(NodeName + \".\" + cls, AttrName))) {\n                            css = this.m_ownerApp.FindStylesheetByClassName(\".\" + cls, AttrName);\n                        }\n                        if (css != null)\n                            break;\n                    }\n                    //\t    \t\t\tif (null ==(css =m_owner.FindStylesheetByClassName (NodeName + \".\" + strClass, AttrName)))\n                    //\t    \t\t\t\tcss =m_owner.FindStylesheetByClassName(\".\" + strClass, AttrName);\n                } // Buscar por clase\n                else\n                    css = this.m_ownerApp.FindStylesheetByClassName(NodeName, AttrName);\n                if (css != null) {\n                    // Buscar en el stylesheet\n                    strTmp = css.getRuleValue(AttrName);\n                    if (!StringUtils.IsEmptyString(strTmp)) {\n                        // Anda\n                        // K12050901: Permitir activar o desactivar las caches de valores de atributos.\n                        // O11110801: Cache multinivel para las propiedades de nodos XML para acelerar la búsqueda.\n                        // F13022103: La gestión de caches de atributos debe tener en cuenta la concurrencia.\n                        if (cache != null) {\n                            // Tiene cache\n                            //synchronized (cache)\n                            {\n                                cache.put(AttrName, strTmp);\n                            }\n                        } // Tiene cache\n                        return this.CheckIfEvaluated(ItemName, AttrName, strTmp); //strTmp;\n                    } // Anda\n                } // Buscar en el stylesheet\n            } // Tiene CSS\n            // Cachear idicando que no hay valor.\n            // K12050901: Permitir activar o desactivar las caches de valores de atributos.\n            // O11110801: Cache multinivel para las propiedades de nodos XML para acelerar la búsqueda.\n            // Guardamos en la misma cache una constante vacía\n            // F13022103: La gestión de caches de atributos debe tener en cuenta la concurrencia.\n            if (cache != null) {\n                // Tiene cache\n                //synchronized (cache)\n                {\n                    cache.put(AttrName, Utils.EMPTY_STRING);\n                }\n            } // Tiene cache\n            // F13022109: No devolver nulos cuando los atributos no existen o tienen cadenas vacías.\n            // No es lo mismo cadena vacía que NULL\n            return Utils.EMPTY_STRING;\n        } // Tiene la propiedad\n        // De lo contrario tenemos que ver si es una colección heredada, y llamar a la del padre\n        if (!StringUtils.IsEmptyString(this.Options.strParentCollection)) {\n            // Supuestamente tiene padre\n            if (this.getParentCollection() == null) {\n                // Error\n                // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n                let str = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_COLL_XPROPVALUEFAIL, \"{0} failed for collection '{1}'. Cannot get parent collection '{2}'.\");\n                str = str.replace(\"{0}\", \"CXoneDataCollection::NodePropertyValue\");\n                str = str.replace(\"{1}\", this.m_strName);\n                str = str.replace(\"{2}\", this.Options.strParentCollection);\n                throw new XoneGenericException(-17171, str);\n            } // Error\n            ////throw new XoneGenericException(-17171, \"CXoneDataCollection::FieldPropertyValue ha fallado en la colección '\" + m_strName + \"'. La colección padre ('\" + m_strParentCollection + \"') no se puede obtener.\");\n            return this.getParentCollection().NodePropertyValue(NodeName, ItemName, AttrName);\n        } // Supuestamente tiene padre\n        // De lo contrario nanai...\n        // A11070701: Introducción de los CSS en la maquinaria para poder parametrizar el mappings.\n        // Cachear para indicar que no hay valor\n        // K12050901: Permitir activar o desactivar las caches de valores de atributos.\n        // O11110801: Cache multinivel para las propiedades de nodos XML para acelerar la búsqueda.\n        // Guardamos en la misma cache una constante vacía\n        // F13022103: La gestión de caches de atributos debe tener en cuenta la concurrencia.\n        if (cache != null) {\n            // Tiene cache\n            //synchronized (cache)\n            {\n                cache.put(AttrName, Utils.EMPTY_STRING);\n            }\n        } // Tiene cache\n        // F13022109: No devolver nulos cuando los atributos no existen o tienen cadenas vacías.\n        // No es lo mismo cadena vacía que NULL\n        return Utils.EMPTY_STRING;\n    }\n    SetNodePropertyValue(NodeName, ItemName, AttrName, sValue) {\n        if (this.m_xmlNode == null) {\n            return;\n        }\n        let cache = this.m_ownerApp.GetCollPropValueCache(this.m_strName, NodeName, ItemName);\n        if (cache == null) {\n            return;\n        }\n        cache.put(AttrName, sValue);\n    }\n    /// Devuelve el valor del atributo del grupo cuyo id se indica en la propiedad deseada.\n    /// A09100502:   Adicionar un equivalente a FieldPropertyValue para los grupos\n    /// <param name=\"GroupId\">Id del grupo de la colección cuyo atributo se quiere extraer</param>\n    /// <param name=\"AttrName\">Nombre del atributo cuyo valor se quiere leer en el campo AttrName</param>\n    GroupPropertyValue(GroupId, AttrName) {\n        // Si no tiene nodo XML, no hacemos nada\n        let strTmp = \"\";\n        // F13022109: No devolver nulos cuando los atributos no existen o tienen cadenas vacías.\n        // No es lo mismo cadena vacía que NULL\n        if (this.m_xmlNode == null)\n            return Utils.EMPTY_STRING;\n        let xprop = null;\n        // A11070701: Introducción de los CSS en la maquinaria para poder parametrizar el mappings.\n        // Armar la cadena a buscar para resolver el cacheo\n        // O11110801: Cache multinivel para las propiedades de nodos XML para acelerar la búsqueda.\n        // Cambiar un poco esto como se hace.\n        //////StringBuilder sb =new StringBuilder();\n        //////sb.append(\"##group|\").append(GroupId).append(\"|\").append(AttrName);\n        // Ver si es una propiedad que no está definida\n        // O11081101: Optimizar las estructuras de datos de las caches de atributos inexistentes.\n        //////Set<String> ucache =m_owner.GetCollPropUndefinedValues(m_strName);\n        // K12050901: Permitir activar o desactivar las caches de valores de atributos.\n        //////if (ucache !=null)\n        //////\tif (ucache.contains(sb.toString()))\n        //////\t\treturn null;\n        // Obtener la cache con los atributos de la colección.\n        let cache = this.m_ownerApp.GetCollPropValueCache(this.m_strName, \"group\", GroupId);\n        // K12050901: Permitir activar o desactivar las caches de valores de atributos.\n        // F13022103: La gestión de caches de atributos debe tener en cuenta la concurrencia.\n        if (cache != null) {\n            // Tiene cache\n            //synchronized (cache)\n            {\n                if (cache.containsKey(AttrName))\n                    return cache.get(AttrName);\n            }\n        } // Tiene cache\n        // De lo contrario buscar el nodo de la propiedad para sacar el atributo\n        xprop = this.m_xmlNode.SelectSingleNode(\"group\", \"id\", GroupId);\n        // Si tenemos la propiedad, devolver su valor...\n        if (xprop != null) {\n            // Tiene la propiedad\n            // Obtener la plataforma\n            if (!StringUtils.IsEmptyString((strTmp = this.getOwnerApp().getPlatform()))) {\n                // Ver si la puede sacar de aquí\n                let platNode = xprop.SelectSingleNode(\"platform\", \"name\", strTmp);\n                if (platNode != null)\n                    if (!StringUtils.IsEmptyString((strTmp = XmlUtils.getNodeAttr(platNode, AttrName)))) {\n                        // Tiene valor\n                        // A11070701: Introducción de los CSS en la maquinaria para poder parametrizar el mappings.\n                        // Cachear el valor.\n                        // K12050901: Permitir activar o desactivar las caches de valores de atributos.\n                        // O11110801: Cache multinivel para las propiedades de nodos XML para acelerar la búsqueda.\n                        // F13022103: La gestión de caches de atributos debe tener en cuenta la concurrencia.\n                        if (cache != null) {\n                            // Tiene cache\n                            //synchronized (cache)\n                            {\n                                cache.put(AttrName, strTmp);\n                            }\n                        } // Tiene cache\n                        return strTmp;\n                    } // Tiene valor\n            } // Ver si la puede sacar de aquí\n            // De lo contrario lo sacamos del propio nodo...\n            // A11070701: Introducción de los CSS en la maquinaria para poder parametrizar el mappings.\n            // Cachear o cachear...\n            strTmp = XmlUtils.getNodeAttr(xprop, AttrName);\n            if (StringUtils.IsEmptyString(strTmp) && !StringUtils.IsEmptyString(this.Options.strParentCollection)) {\n                // Supuestamente tiene padre\n                if (this.getParentCollection() != null) {\n                    strTmp = this.getParentCollection().GroupPropertyValue(GroupId, AttrName);\n                }\n            } // Supuestamente tiene padre\n            if (!StringUtils.IsEmptyString(strTmp)) {\n                // Tiene valor\n                // K12050901: Permitir activar o desactivar las caches de valores de atributos.\n                // O11110801: Cache multinivel para las propiedades de nodos XML para acelerar la búsqueda.\n                // F13022103: La gestión de caches de atributos debe tener en cuenta la concurrencia.\n                if (cache != null) {\n                    // Tiene cache\n                    //synchronized (cache)\n                    {\n                        cache.put(AttrName, strTmp);\n                    }\n                } // Tiene cache\n                return strTmp;\n            } // Tiene valor\n            // A11070701: Introducción de los CSS en la maquinaria para poder parametrizar el mappings.\n            // Comprobar si hay hojas de estilo para hacer búsquedas...\n            if (this.m_ownerApp.hasStylesheets()) {\n                // Tiene CSS\n                let css = null;\n                let strClass = xprop.getAttrValue(\"class\");\n                if (StringUtils.IsEmptyString(strClass))\n                    strClass = this.m_xmlNode.getAttrValue(\"class\");\n                if (!StringUtils.IsEmptyString(strClass)) {\n                    // Buscar por clase\n                    // ADD Tag: Luis 1604201801 Modificaco para permitir las clases en cascadas\n                    // Separadas por coma.\n                    // TODO: Permitir los atributos con !important se necesita doble pasada\n                    let clsArr = strClass.split(\" \");\n                    clsArr.reverse();\n                    for (let i = 0; i < clsArr.length; i++) {\n                        let cls = clsArr[i].trim();\n                        if (TextUtils.isEmpty(cls))\n                            continue;\n                        if (null == (css = this.m_ownerApp.FindStylesheetByClassName(\"group.\" + cls, AttrName))) {\n                            css = this.m_ownerApp.FindStylesheetByClassName(\".\" + cls, AttrName);\n                        }\n                        if (css != null)\n                            break;\n                    }\n                    //\t    \t\t\tif (null ==(css =m_owner.FindStylesheetByClassName (\"group.\" + strClass, AttrName)))\n                    //\t    \t\t\t\tcss =m_owner.FindStylesheetByClassName(\".\" + strClass, AttrName);\n                } // Buscar por clase\n                else\n                    css = this.m_ownerApp.FindStylesheetByClassName(\"group\", AttrName);\n                if (css != null) {\n                    // Buscar en el stylesheet\n                    strTmp = css.getRuleValue(AttrName);\n                    if (!StringUtils.IsEmptyString(strTmp)) {\n                        // Anda\n                        // K12050901: Permitir activar o desactivar las caches de valores de atributos.\n                        // O11110801: Cache multinivel para las propiedades de nodos XML para acelerar la búsqueda.\n                        // F13022103: La gestión de caches de atributos debe tener en cuenta la concurrencia.\n                        if (cache != null) {\n                            // Tiene cache\n                            //synchronized (cache)\n                            {\n                                cache.put(AttrName, strTmp);\n                            }\n                        } // Tiene cache\n                        return strTmp;\n                    } // Anda\n                } // Buscar en el stylesheet\n            } // Tiene CSS\n            // Cachear idicando que no hay valor.\n            // K12050901: Permitir activar o desactivar las caches de valores de atributos.\n            // O11110801: Cache multinivel para las propiedades de nodos XML para acelerar la búsqueda.\n            // F13022103: La gestión de caches de atributos debe tener en cuenta la concurrencia.\n            if (cache != null) {\n                // Tiene cache\n                //synchronized (cache)\n                {\n                    cache.put(AttrName, Utils.EMPTY_STRING);\n                }\n            } // Tiene cache\n            // F13022109: No devolver nulos cuando los atributos no existen o tienen cadenas vacías.\n            // No es lo mismo cadena vacía que NULL\n            return Utils.EMPTY_STRING;\n        } // Tiene la propiedad\n        // De lo contrario tenemos que ver si es una colección heredada, y llamar a la del padre\n        else if (!StringUtils.IsEmptyString(this.Options.strParentCollection)) {\n            // Supuestamente tiene padre\n            if (this.getParentCollection() == null) {\n                // Error\n                // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n                ////throw new XoneGenericException(-17171, \"CXoneDataCollection::GroupPropertyValue ha fallado en la colección '\" + m_strName + \"'. La colección padre ('\" + m_strParentCollection + \"') no se puede obtener.\");\n                let str = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_COLL_XPROPVALUEFAIL, \"{0} failed for collection '{1}'. Cannot get parent collection '{2}'\");\n                str = str.replace(\"{0}\", \"CXoneDataCollection::GroupPropertyValue\");\n                str = str.replace(\"{1}\", this.m_strName);\n                str = str.replace(\"{2}\", this.Options.strParentCollection);\n                throw new XoneGenericException(-17171, str);\n            } // Error\n            return this.getParentCollection().GroupPropertyValue(GroupId, AttrName);\n        } // Supuestamente tiene padre\n        // De lo contrario nanai...\n        // A11070701: Introducción de los CSS en la maquinaria para poder parametrizar el mappings.\n        // Indicar que no hay valor y cachear...\n        // K12050901: Permitir activar o desactivar las caches de valores de atributos.\n        // O11110801: Cache multinivel para las propiedades de nodos XML para acelerar la búsqueda.\n        // F13022103: La gestión de caches de atributos debe tener en cuenta la concurrencia.\n        if (cache != null) {\n            // Tiene cache\n            //synchronized (cache)\n            {\n                cache.put(AttrName, Utils.EMPTY_STRING);\n            }\n        } // Tiene cache\n        // F13022109: No devolver nulos cuando los atributos no existen o tienen cadenas vacías.\n        // No es lo mismo cadena vacía que NULL\n        return Utils.EMPTY_STRING;\n    }\n    CollPropertyValue(AttrName) {\n        let str = \"\";\n        // A11070701: Introducción de los CSS en la maquinaria para poder parametrizar el mappings.\n        // Para los CSS\n        // O11081101: Optimizar las estructuras de datos de las caches de atributos inexistentes.\n        const ncache = this.m_ownerApp.GetCollPropUndefinedValues(this.m_strName);\n        // K12050901: Permitir activar o desactivar las caches de valores de atributos.\n        if (ncache != null)\n            if (ncache.contains(AttrName))\n                return str; // Cadena vacía.\n        const cache = this.m_ownerApp.GetCollPropValueCache(this.m_strName);\n        // K12050901: Permitir activar o desactivar las caches de valores de atributos.\n        if (cache != null)\n            if (cache.containsKey(AttrName))\n                return cache.get(AttrName);\n        // A11120701: Mecanismo para exponer el DBMS de una conexión.\n        // Si es un tipo reservado atenderlo\n        if (AttrName.equals(\"##DBMS##\"))\n            return this.BrowseData.getConnection().getDbmsTag();\n        // Primero nos hacemos con el platform\n        const strPlatform = this.m_ownerApp.getPlatform();\n        if (!StringUtils.IsEmptyString(strPlatform)) {\n            // Ver si hay nodo platform en la colección\n            let nd = null;\n            if (this.m_cachePlatformNodes.containsKey(strPlatform))\n                nd = this.m_cachePlatformNodes.get(strPlatform);\n            else {\n                this.m_cachePlatformNodes.put(strPlatform, (nd = this.m_xmlNode.SelectSingleNode(\"platform\", \"name\", strPlatform)));\n            }\n            if (nd != null)\n                str = nd.getAttrValue(AttrName);\n        } // Ver si hay nodo platform en la colección\n        if (StringUtils.IsEmptyString(str))\n            str = XmlUtils.getNodeAttr(this.m_xmlNode, AttrName);\n        // Cachear el valor que sea para no tener que montar esta después...\n        if (StringUtils.IsEmptyString(str)) {\n            // Ver si hay CSS\n            // A11070701: Introducción de los CSS en la maquinaria para poder parametrizar el mappings.\n            // Comprobar si hay hojas de estilo para hacer búsquedas...\n            if (this.m_ownerApp.hasStylesheets()) {\n                // Tiene CSS\n                let css = null;\n                let strClass = this.m_xmlNode.getAttrValue(\"class\");\n                if (!StringUtils.IsEmptyString(strClass)) {\n                    // Buscar por clase\n                    if (null == (css = this.m_ownerApp.FindStylesheetByClassName(\"coll.\" + strClass, AttrName)))\n                        css = this.m_ownerApp.FindStylesheetByClassName(\".\" + strClass, AttrName);\n                } // Buscar por clase\n                else\n                    css = this.m_ownerApp.FindStylesheetByClassName(\"coll\", AttrName);\n                if (css != null) {\n                    // Buscar en el stylesheet\n                    let strTmp = css.getRuleValue(AttrName);\n                    if (!StringUtils.IsEmptyString(strTmp)) {\n                        // Anda\n                        // K12050901: Permitir activar o desactivar las caches de valores de atributos.\n                        if (cache != null)\n                            cache.put(AttrName, strTmp);\n                        return strTmp;\n                    } // Anda\n                } // Buscar en el stylesheet\n            } // Tiene CSS\n            try {\n                if (!StringUtils.IsEmptyString(this.Options.strParentCollection)) {\n                    // Supuestamente tiene padre\n                    if (this.getParentCollection() == null) {\n                        // Error\n                        // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n                        //String str = m_messages.GetMessage(XoneMessageKeys.SYS_MSG_COLL_XPROPVALUEFAIL, \"{0} failed for collection '{1}'. Cannot get parent collection '{2}'.\");\n                        //str = str.replace(\"{0}\", \"CXoneDataCollection::NodePropertyValue\");\n                        //str = str.replace(\"{1}\", m_strName);\n                        //str = str.replace(\"{2}\", m_strParentCollection);\n                        //throw new XoneGenericException(-17171, str);\n                    } // Error\n                    else {\n                        ////throw new XoneGenericException(-17171, \"CXoneDataCollection::FieldPropertyValue ha fallado en la colección '\" + m_strName + \"'. La colección padre ('\" + m_strParentCollection + \"') no se puede obtener.\");\n                        return this.getParentCollection().CollPropertyValue(AttrName);\n                    }\n                }\n            }\n            catch (ee) {\n                console.error(ee);\n            }\n            // Finalmente no tenemos nada...\n            // K12050901: Permitir activar o desactivar las caches de valores de atributos.\n            // if (ncache !=null)\n            // \tncache.add(AttrName);\n            str = \"\";\n        } // Propiedad que no está\n        else {\n            // Está\n            // K12050901: Permitir activar o desactivar las caches de valores de atributos.\n            // if (cache !=null)\n            // \tcache.put(AttrName, str);\n        } // Está\n        return str;\n    }\n    async getFirstParentCollection() {\n        // Directamente, si ya está cargada, la cargamos aquí...\n        if (this.m_parent != null)\n            return this.m_parent;\n        // Si no tiene colección padre, NULL\n        if (StringUtils.IsEmptyString(this.Options.strParentCollection))\n            return null;\n        // De lo contrario trataremos de buscar el propietario...\n        if (this.m_strName.equals(this.Options.strParentCollection))\n            throw new XoneGenericException(-2322, \"CXoneDataCollection::ParentCollection has failed for collection \" + this.m_strName + \". Cannot define a parent collection as its own.\");\n        // Cargar la colección\n        return await this.m_ownerApp.getCollection(this.Options.strParentCollection);\n    }\n    getParentCollection() {\n        // Directamente, si ya está cargada, la cargamos aquí...\n        //     if (this.m_parent != null) return this.m_parent;\n        //      // Si no tiene colección padre, NULL\n        //      if (StringUtils.IsEmptyString(this.Options.strParentCollection))\n        //      return null;\n        //  // De lo contrario trataremos de buscar el propietario...\n        //     if (this.m_strName.equals(this.Options.strParentCollection))\n        //         throw new XoneGenericException(-2322, \"CXoneDataCollection::ParentCollection has failed for collection \" + this.m_strName + \". Cannot define a parent collection as its own.\");\n        //     // Cargar la colección\n        //     this.m_parent = await this.m_ownerApp.getCollection(this.Options.strParentCollection);\n        return this.m_parent;\n    }\n    ExtractConnections() {\n        let xl = this.m_xmlNode.SelectNodes(\"connection\");\n        // Buscar cada conexión\n        for (let i = 0; i < xl.count(); i++) {\n            // Cargar los datos de cada conexión\n            let xn = xl.get(i);\n            // F12051401: Cuando se extraen las conexiones de una colección se pueden repetir.\n            // Las conexiones solo las creamos si hace falta, claro está\n            const strName = xn.getAttrValue(\"name\");\n            if (!StringUtils.IsEmptyString(strName)) {\n                // Solo las creamos si tienen nombre\n                if (this.m_ownerApp.getConnection(strName) == null) {\n                    // La creamos\n                    if (!this.m_ownerApp.LoadConnection(xn))\n                        return false;\n                } // La creamos\n            } // Solo las creamos si tienen nombre\n        } // Cargar los datos de cada conexión\n        return true;\n    }\n    GetNodeList(NodeName, AttrName, AttrValue, Exist) {\n        return this.getNodeList(NodeName, AttrName, AttrValue, Exist);\n    }\n    getNodeList(NodeName, AttrName, AttrValue, Exist) {\n        // SI no hay nodo... nanai...\n        if (this.m_xmlNode == null)\n            return null;\n        return this.m_xmlNode.SelectNodes(NodeName, AttrName, AttrValue, Exist);\n    }\n    /**\n     * @param NodeName\t\tNombre del nodo que se quiere buscar.\n     * @param AttrName\t\tNombre del atributo que se quiere comparar.\n     * @param AttrValue\t\tValor que tiene que tener el atributo para reconocer un nodo como válido.\n     * @return\t\t\t\tDevuelve un nodo XML dentro del nodo de esta colección con un atributo cuyo valor se solicita.\n     */\n    GetNode(NodeName, AttrName, AttrValue) {\n        return this.getNode(NodeName, AttrName, AttrValue);\n    }\n    getNode(NodeName, AttrName, AttrValue) {\n        // No tiene nodo, no hacemos nada\n        if (this.m_xmlNode == null)\n            return null;\n        // A15091003\n        let node = this.m_xmlNode.SelectSingleNode(NodeName, AttrName, AttrValue);\n        if (node == null) {\n            // De lo contrario tenemos que ver si es una colección heredada, y llamar a la del padre\n            if (!StringUtils.IsEmptyString(this.m_options.strParentCollection)) {\n                // Supuestamente tiene padre\n                try {\n                    let parentCollection = this.getParentCollection();\n                    if (parentCollection != null) {\n                        // Error\n                        node = parentCollection.getNode(NodeName, AttrName, AttrValue);\n                    } // Error\n                }\n                catch (e) {\n                    console.error(e);\n                }\n            } // Supuestamente tiene padre\n        }\n        return node;\n    }\n    getNodeAttr(NodeName, AttrName) {\n        // No tiene nodo, no hacemos nada\n        if (this.m_xmlNode == null)\n            return null;\n        // A15091003\n        let node = this.getNode(NodeName);\n        if (node == null) {\n            // De lo contrario tenemos que ver si es una colección heredada, y llamar a la del padre\n            if (!StringUtils.IsEmptyString(this.m_options.strParentCollection)) {\n                // Supuestamente tiene padre\n                try {\n                    let parentCollection = this.getParentCollection();\n                    if (parentCollection != null) {\n                        // Error\n                        node = parentCollection.getNode(NodeName);\n                    } // Error\n                }\n                catch (e) {\n                    console.error(e);\n                }\n            } // Supuestamente tiene padre\n        }\n        if (node == null)\n            return null;\n        let attrValue = node.getAttrValue(AttrName);\n        if (attrValue == null && !StringUtils.IsEmptyString(this.m_options.strParentCollection)) {\n            // Supuestamente tiene padre\n            try {\n                let parentCollection = this.getParentCollection();\n                if (parentCollection != null) {\n                    // Error\n                    attrValue = parentCollection.getNodeAttr(NodeName, AttrName);\n                } // Error\n            }\n            catch (e) {\n                console.error(e);\n            }\n        } // Supuestamente tiene padre\n        return attrValue;\n    }\n    async Load() {\n        // Si no hay nodo XML se trata de una colección intermedia que no lleva plantilla\n        if (this.m_xmlNode === null) {\n            return true;\n        }\n        // // Si la colección no tiene nombre nos explotamos...\n        // // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n        // if (\n        //     StringUtils.IsEmptyString(\n        //         (this.m_strName = this.m_xmlNode.getAttrValue(\"name\"))\n        //     )\n        // )\n        //     ////throw new Exception(\"No se puede crear una colección sin nombre o con nombre vacío.\");\n        //     throw new Exception(\n        //         this.m_messages.GetMessage(\n        //             XoneMessageKeys.SYS_MSG_COLL_NONAME,\n        //             \"Cannot create a collection with an empty name.\"\n        //         )\n        //     );\n        // Obtener la declaración de conexiones que haya en la colección\n        let str;\n        if (!this.ExtractConnections()) {\n            Utils.DebugLog(Utils.TAG_FRAMEWORK, \"DataCollection.Load(): Cannot extract connections from collection \" + this.m_xmlNode);\n            return false;\n        }\n        // Leer otras cosas del nodo XML para tenerlas ya en variables antes de usarlas...\n        // Booleanas\n        this.m_options.bLoadLayouts = StringUtils.ParseBoolValue(this.CollPropertyValue(\"load-layouts\"), true);\n        // K11092602: Modificaciones para trabajar con conexiones online puras.\n        // Obtener el valor de atributo que indica si la colección es indexada...\n        this.m_options.bisIndexed = StringUtils.ParseBoolValue((str = this.CollPropertyValue(\"indexed\")), false);\n        this.m_options.bCheckOwner = StringUtils.ParseBoolValue((str = this.CollPropertyValue(\"check-owner\")), false);\n        this.m_options.bIsSpecial = StringUtils.ParseBoolValue((str = this.CollPropertyValue(\"special\")), false);\n        this.m_options.bStringPk = StringUtils.ParseBoolValue((str = this.CollPropertyValue(\"stringkey\")), false);\n        this.m_options.bObjLoadAll = StringUtils.ParseBoolValue((str = this.CollPropertyValue(\"obj-loadall\")), true);\n        this.m_options.bVolatile = StringUtils.ParseBoolValue(this.CollPropertyValue(\"volatile\"), false);\n        // En esta plataforma tendremos carga diferida por defecto\n        this.m_options.bDeferredLoad = StringUtils.ParseBoolValue(this.CollPropertyValue(\"deferred-load\"), true);\n        this.m_options.bDebug = StringUtils.ParseBoolValue(this.CollPropertyValue(\"sql-debug\"), false);\n        // En esta plataforma tendremos por defecto que no se soportan subqueries.\n        this.m_options.bUseRaw = StringUtils.ParseBoolValue((str = this.CollPropertyValue(\"userawsql\")), true);\n        if (StringUtils.IsEmptyString(str)) {\n            // Si UseRaw no está definido en la colección tenemos que sacarlo del DBMS\n            if (this.BrowseData.getConnection() != null) {\n                // Sacar el dato de los subqueries de allí\n                this.m_options.bUseRaw = !this.BrowseData.getConnection().getSubqueries();\n            } // Sacar el dato de los subqueries de allí\n        } // Si UseRaw no está definido en la colección tenemos que sacarlo del DBMS\n        // TAG 3010201501 Permitir usar el atributo sql sin parsearlo. Ojo si se sustituyen las macros\n        this.m_options.bParseSQL = StringUtils.ParseBoolValue(this.CollPropertyValue(\"sql-parser\"), true);\n        // Cadenillas\n        this.m_strPk = \"ID\";\n        if (!StringUtils.IsEmptyString((str = this.CollPropertyValue(\"idfieldname\")))) {\n            // Guardar el nombre del campo clave\n            this.m_strPk = str;\n            // K11010501:\tModificaciones para la versión 1.5 de Android.\n            this.m_options.nPkType = StringUtils.ParseBoolValue(this.CollPropertyValue(\"stringkey\"), false) ? 1 : 0;\n            // Comprobar si se trata de una clave múltiple\n            if (this.m_strPk.contains(\",\")) {\n                // Indicar que tenemos varias claves y separarlas\n                this.m_options.bMultipleKey = true;\n            } // Indicar que tenemos varias claves y separarlas\n        } // Guardar el nombre del campo clave\n        if (!StringUtils.IsEmptyString((str = this.CollPropertyValue(\"object-prefix\"))))\n            this.m_options.strPrefix = str;\n        // Sacar los filtros\n        this.m_strLinkFilter = this.CollPropertyValue(\"filter\");\n        this.m_strSort = this.CollPropertyValue(\"sort\");\n        this.m_options.strLookupMacroName = this.CollPropertyValue(\"lookup-macro\");\n        // SQL de la colección\n        this.m_options.strAccessString = this.CollPropertyValue(\"sql\");\n        if (!StringUtils.IsEmptyString(this.m_options.strAccessString))\n            this.m_options.bSingleObject = this.m_options.strAccessString.indexOf(\" \") == -1;\n        // ProgId\n        this.m_options.strProgId = this.CollPropertyValue(\"progid\");\n        this.m_options.strClassName = this.CollPropertyValue(\"classname\");\n        this.m_options.strParentCollection = this.CollPropertyValue(\"inherits\");\n        // *\n        //  * TODO 02/10/2018\n        //  * Si una colección se define a sí misma como padre, ignorarlo.\n        //  *\n        if (!TextUtils.isEmpty(this.m_options.strParentCollection) && this.m_options.strParentCollection.equals(this.m_xmlNode.getName())) {\n            this.m_options.strParentCollection = Utils.EMPTY_STRING;\n        }\n        // Si no tiene colección padre, NULL\n        if (!StringUtils.IsEmptyString(this.m_options.strParentCollection)) {\n            // De lo contrario trataremos de buscar el propietario...\n            if (!StringUtils.areEquals(this.m_strName, this.m_options.strParentCollection)) {\n                // throw new XoneGenericException(\n                //     -2322,\n                //     \"CXoneDataCollection::ParentCollection has failed for collection \" +\n                //     this.m_strName +\n                //     \". Cannot define a parent collection as its own.\"\n                // );\n                // Cargar la colección\n                this.m_parent = await this.getFirstParentCollection();\n                // this.m_parent = await this.m_ownerApp.getCollection(\n                //     this.m_options.strParentCollection\n                // );\n            }\n        }\n        // threshold\n        if (!StringUtils.IsEmptyString((str = this.CollPropertyValue(\"threshold\"))))\n            this.m_options.nThreshold = NumberUtils.SafeToInt(str);\n        if (!StringUtils.IsEmptyString((str = this.CollPropertyValue(\"maxrows\"))))\n            this.m_options.nMaxRows = NumberUtils.SafeToInt(str);\n        this.m_options.strObjectName = this.CollPropertyValue(\"objname\");\n        // F11112404: La colección que no tenga objectname debería usar un valor por defecto.\n        if (StringUtils.IsEmptyString(this.m_options.strObjectName)) {\n            // Puede ser un error\n            if (!this.m_options.bIsSpecial) {\n                // Error\n                this.m_options.strObjectName = this.m_xmlNode.getName();\n            } // Error\n        } // Puede ser un error\n        this.m_options.strUpdateObject = this.CollPropertyValue(\"updateobj\");\n        // De otra naturaleza...\n        // Comprobar si tiene propiedades xlat\n        if (this.getParentCollection() != null)\n            this.m_options.bHasXlatProps = false; // this.getParentCollection().getHasXlatProperties ();\n        if (!this.m_options.bHasXlatProps) {\n            // Leerlo de las propiedades locales\n            const list = this.getNodeList(\"prop\", \"xlat\", null, true);\n            if (list.count() > 0)\n                this.m_options.bHasXlatProps = true;\n        } // Leerlo de las propiedades locales\n        // O12050702: Optimización al gestionas los campos que son de fórmula o bit.\n        // Guarda las propiedades que son fórmulas o bits...\n        let lst = this.m_xmlNode.SelectNodes(\"prop\", \"formula\", Utils.EMPTY_STRING, true);\n        for (let i = 0; i < lst.count(); i++) {\n            // Copiar\n            let node = lst.get(i);\n            this.m_lstFormulaProps.push(node.getAttrValue(\"name\"));\n        } // Copiar\n        lst = this.m_xmlNode.SelectNodes(\"prop\", \"bit\", Utils.EMPTY_STRING, true);\n        for (let i = 0; i < lst.count(); i++) {\n            // Copiar\n            let node = lst.get(i);\n            this.m_lstBitProps.push(node.getAttrValue(\"name\"));\n        } // Copiar\n        // TODO ADD TAG 29/03/2016 Juan Carlos Implementacion de nodos include-layout\n        //LoadIncludeLayoutNodes();\n        // A12122701: Sistema para gestionar la estructura lógica de vistas en la maquinaria.\n        // Lanzar una tarea en segundo plano para armar el layout de la colección...\n        // TODO ADD TAG\n        // Estas cosas solo hay que hacerlas si hace falta y está autorizado\n        // if (LoadLayouts())\n        // {// Lo soporta\n        //     if (m_layout == null)\n        //     {// Allá va eso\n        //         // Lo creamos por aquello de que no sea nulo...\n        //         m_layout = new XoneViewLayoutV2();\n        //         // O13061301: Carajal de optimizaciones de todo tipo en maquinaria y demás.\n        //         // Mover esto pacá para hacerlo en segundo plano...\n        //         // F13022104: El acceso a las fórmulas de visibilidad de campos debe ser concurrente.\n        //         // Recolecta las propiedades en una lista que podamos usar para PropertyCount y demás.\n        //         // Evita que se llame esta función en entornos concurrentes que puedan traer explotes.\n        //         CollectCollProperties();\n        //         // Nos creamos el layout de todas las propiedades... que sean visibles, claro\n        //         m_layout.build(this, -1);\n        //         // A13022107: Mecanismo para gestionar el ColorView de manera abstracta desde la maquinaria.\n        //         // Poner el colorview...\n        //         m_layout.setColorViewField (m_strColorViewField);\n        //         // A13030601: Gestión de campos especiales en el modelo de Views de la maquinaria.\n        //         // Campos de inicio y fin de rango de fechas.\n        //         m_layout.DateFromField = m_strDateFromField;\n        //         m_layout.DateToField = m_strDateToField;\n        //         // Adicionar los campos que son subject...\n        //         for (int i =0;i <m_lstProperties.count();i++)\n        //         {// Si es subject adicionamos\n        //             XmlNode n =m_lstProperties.get(i);\n        //             if (StringUtils.ParseBoolValue(n.getAttrValue(\"subject\"), false))\n        //                 m_layout.AddSubjectField(n.getAttrValue(Utils.PROP_ATTR_NAME));\n        //         }// Si es subject adicionamos\n        //     }// Allá va eso\n        // }// Lo soporta\n        // else\n        // {// No lo soporta\n        //     // Recolecta las propiedades en una lista que podamos usar para PropertyCount y demás.\n        //     // Evita que se llame esta función en entornos concurrentes que puedan traer explotes.\n        // \tif (!m_bPropsCollected)\n        // \t\tCollectCollProperties();\n        // }// No lo soporta\n        // TAG 2710201502 Cuando se terminade cargar la coleccion\n        // cargar su sincludes, ahora en el scope principal mas adelante veremos\n        // LoadIncludeFiles();\n        return true;\n    }\n    get BitProps() {\n        return this.m_lstBitProps;\n    }\n    get FormulaProps() {\n        return this.m_lstFormulaProps;\n    }\n    getIsDebugging() {\n        return this.Options.bDebug;\n    }\n    //#region Obtener objetos de la coleccion\n    getLocalObject(FieldName, FieldValue = null) {\n        return this.BrowseData.GetLocalObject(FieldName, FieldValue);\n    }\n    async get(FieldName, FieldValue = null) {\n        return this.getObject(FieldName, FieldValue);\n    }\n    async getObject(FieldName, FieldValue, UseFilters = true, SearchDb = true) {\n        return this.BrowseData.GetObject(FieldName, FieldValue, UseFilters, SearchDb);\n    }\n    async findObject(SearchCriteria) {\n        return await this.BrowseData.findObject(SearchCriteria);\n    }\n    /**\n     * Genera un ROWID a partir de los datos de réplica y tablas de esta colección\n     * @return\t\t\tDevuelve un nuevo ROWID para la tabla a que pertenece esta colección.\n     */\n    GenerateRowId() {\n        return this.getConnection().GenerateRowId(this.getFixedObjectName());\n    }\n    /**\n     * TRUE si el valor que se pasa como parámetro es un ROWID único (no existe en la tabla afectada ningún registro con este ROWID)\n     * @param RowId\t\t\t\tValor de ROWID que se quiere comprobar en la tabla de esta colección.\n     * @return\t\t\t\t\tDevuelve TRUE si el ROWID no existe en la tabla (se puede usar para un nuevo registro.)\n     * @throws Exception\n     */\n    IsUniqueRowId(RowId) {\n        // A11092601: Modificaciones para mejorar el soporte de conexiones remotas y demás.\n        // El trabajo debería hacerlo la conexión y no nosotros...\n        return this.getConnection().isUniqueRowID(this.getFixedObjectName(), RowId);\n    }\n    /**\n     * @return\t\t\tDevuelve el nombre del campo ROWID usado por esta colección.\n     */\n    getRowIdFieldName() {\n        return this.getConnection().getRowIdFieldName();\n    }\n    /**\n     * @return\t\t\tDevuelve el nombre del objeto en la fuente de datos ya con el prefijo sustituido y demás.\n     */\n    getFixedObjectName() {\n        return this.getFixedUpdateObjectName();\n    }\n    getFixedUpdateObjectName() {\n        return this.getConnection().FixObjectName(this.getObjectName());\n    }\n    MapField(FieldName, DatabaseField = false) {\n        return this.BrowseData.MapField(FieldName, DatabaseField);\n    }\n    async GetResultSet(FieldName, FieldValue) {\n        return await this.BrowseData.GetResultSet(FieldName, FieldValue);\n    }\n    DevelopObjectValue(Value, ForceNulls = true) {\n        return this.BrowseData.DevelopObjectValue(Value, ForceNulls);\n    }\n    getObjectName() {\n        return this.Options.strObjectName;\n    }\n    /**\n     * Adiciona un objeto a la colección\n     * @param Item\t\t\tObjeto de datos que se va a adicionar a la colección.\n     * @param Index\t\t\tIndice en el cual se quiere insertar el objeto. Si es mayor que la cantidad de elementos lo inserta al final.\n     * @return\t\t\t\tDevuelve TRUE si se ha insertado el objeto correctamente.\n     * @throws Exception\n     */\n    addItem(Item, Index = -1) {\n        return this.BrowseData.AddItem(Item, Index);\n    }\n    //#endregion\n    /**\n     * TRUE si el campo cuyo nombre se indica es un campo enlazado (tiene mapcol)\n     * @param FieldName\t\t\tNombre del campo que se quiere comprobar.\n     * @return\t\t\t\t\tDevuelve TRUE si el campo es enlazado de verdad.\n     */\n    IsLinkedField(FieldName) {\n        try {\n            // Ver si tiene mapcol.\n            if (StringUtils.IsEmptyString(this.FieldPropertyValue(FieldName, \"mapcol\")))\n                return false;\n            // Ver si tiene mapfld\n            if (StringUtils.IsEmptyString(this.FieldPropertyValue(FieldName, \"mapfld\")))\n                return false;\n            // OK\n            return true;\n        }\n        catch (e) {\n            // Las excepciones nos cagamos en ellas\n            return false;\n        }\n    }\n    getIdFieldName() {\n        return this.m_strPk;\n    }\n    /**\n     * K11010501:\tModificaciones para la versión 1.5 de Android.\n     * @return\n     */\n    getIdFieldType() {\n        return this.m_nPkType;\n    }\n    getAccessString() {\n        return this.m_options.strAccessString;\n        // Si no tiene ningún caracter de macro, no tenemos que sustituir nada...\n        // if (!EvalMacros || !str.contains(\"##\")) return str;\n        // return await this.m_macrosEvaluator.EvaluateAllMacros(str);\n    }\n    // public setAccessString(value: string) { this.m_options.strAccessString = value; }\n    get accessString() {\n        return this.m_options.strAccessString;\n    }\n    getCollPropertyValue(propiedad) {\n        return this.CollPropertyValue(propiedad);\n    }\n    /**\n     * @return\t\t\tDevuelve TRUE si el campo clave principal de la colección es de tipo texto.\n     */\n    getStringKey() {\n        return this.m_options.bStringPk;\n    }\n    getLookupMacroName() {\n        return this.m_options.strLookupMacroName;\n    }\n    async EvaluateAllMacros(Sentence, EvalLookupMacro = false) {\n        return await this.m_macrosEvaluator.EvaluateAllMacros(Sentence, EvalLookupMacro);\n    }\n    /**\n     * @param sVariableName Nombre de la variable cuyo valor se quiere leer.\n     * @return Devuelve la variable cuyo nombre se pasa como parámetro. Si la variable no existe devuelve NULL.\n     */\n    SafeGetVariableList() {\n        if (this.m_lstVariables != null)\n            return this.m_lstVariables;\n        return (this.m_lstVariables = new Hashtable());\n    }\n    getVariables(sVariableName) {\n        return this.getVariable(sVariableName);\n    }\n    getVariable(sVariableName) {\n        if (!this.SafeGetVariableList().containsKey(sVariableName)) {\n            return null;\n        }\n        return this.SafeGetVariableList().get(sVariableName);\n    }\n    /**\n     * Asigna valor a la variable cuyo nombre se pasa como parámetro.\n     * K11011201:\tModificaciones en el tratamiento de las variables.\n     * Poner esto público\n     *\n     * @param sVariableName Nombre de la variable que se quiere asignar.\n     * @param value         Valor que se quiere asignar a la variable.\n     */\n    setVariables(sVariableName, value) {\n        this.setVariable(sVariableName, value);\n    }\n    /**\n     * Asigna valor a la variable cuyo nombre se pasa como parámetro.\n     * K11011201:\tModificaciones en el tratamiento de las variables.\n     * Poner esto público\n     *\n     * @param sVariableName Nombre de la variable que se quiere asignar.\n     * @param value         Valor que se quiere asignar a la variable.\n     */\n    setVariable(sVariableName, value) {\n        // F12042505: Si se pasa NULL a SetVariables hay moña con las listas de valores.\n        if (value == null) {\n            if (this.SafeGetVariableList().containsKey(sVariableName)) {\n                this.SafeGetVariableList().delete(sVariableName);\n            }\n        }\n        else {\n            this.SafeGetVariableList().put(sVariableName, value);\n        }\n    }\n    /**\n     *\n     * @param AccessString\n     */\n    ParseMacros(AccessString) {\n        // if (!this.m_lstMacros.containsKey(MacroName)) return null;\n        // return this.m_lstMacros.get(MacroName);\n        this.m_macrosEvaluator.ParseMacros(AccessString);\n    }\n    /**\n     * @return\t\t\t\tDevuelve el valor de la macro cuyo nombre se pasa como parámetro.\n     * @param MacroName\t\tNombre de la macro cuyo valor se quiere conocer\n     */\n    getMacro(MacroName) {\n        // if (!this.m_lstMacros.containsKey(MacroName)) return null;\n        // return this.m_lstMacros.get(MacroName);\n        return this.m_macrosEvaluator.getMacro(MacroName);\n    }\n    /**\n     * @return\t\t\t\tDevuelve el valor de la macro cuyo nombre se pasa como parámetro.\n     * @param MacroName\t\tNombre de la macro cuyo valor se quiere conocer\n     */\n    getMacros() {\n        // if (!this.m_lstMacros.containsKey(MacroName)) return null;\n        // return this.m_lstMacros.get(MacroName);\n        // return this.m_macrosEvaluator.getMacros();\n        // Amiyares 13/08/2021, agrego resolución de macros\n        const macros = this.m_macrosEvaluator.getMacros();\n        Object.entries(macros).forEach(([key, value]) => macros[key] = this.BrowseData.PrepareSqlString(value));\n        return macros;\n    }\n    /**\n     * Asigna valor a la macro cuyo nombre se pasa como parámetro.\n     * @param MacroName\t\tNombre de la macro que se quiere asignar.\n     * @param MacroValue\tValor que se quiere asignar a la macro. Si se pasa NULL se sustituirá por cadena vacía.\n     */\n    setMacro(MacroName, MacroValue) {\n        // let value = MacroValue;\n        // if (value == null) value = \"\";\n        this.m_macrosEvaluator.setMacro(MacroName, MacroValue); //.m_lstMacros.put(MacroName, value);\n        // F10051901:   Cuando se modifican macros hay que descartar el SQL parseado.\n        // Invalidar el sql parseado\n        // if (this.accessString != null)\n        //     if (this.accessString.contains(MacroName))\n        //         this.BrowseData.clearParsedAccessString();\n    }\n    get strPk() {\n        return this.m_strPk;\n    }\n    set strPk(value) {\n        this.m_strPk = value;\n    }\n    GetMessage(sKey, sDefault) {\n        return this.m_messages.GetMessage(sKey, sDefault);\n    }\n    get Options() {\n        return this.m_options;\n    }\n    async createObject(initialize = null, addToColl = false) {\n        let obj = await this.CreateObject();\n        if (addToColl) {\n            this.addItem(obj);\n        }\n        if (typeof initialize == \"object\") {\n            for (let key in initialize) {\n                // TAG: 19032019 Luis para cuando se inicializa por un native object poder convertir bien\n                let value = initialize[key];\n                // if (value instanceof ConsString) {\n                //     value = TypeConverter.toJava((ConsString) value);\n                // } else if (value instanceof NativeDate) {\n                //     value = TypeConverter.toJava((NativeDate) value);\n                // }\n                obj.put(key.toString(), value);\n            }\n        }\n        return obj;\n    }\n    /**\n     * Crea un objeto de datos usando el ClassName o ProgId de la colección.\n     * @param CreateNew\t\tTRUE si se quiere crear un objeto nuevo. FALSE para crear un objeto que se cargará de base de datos.\n     * @return\t\t\t\tDevuelve el objeto recién creado. NULL si no se puede crear el objeto o no se conoce la clase.\n     * @throws XoneGenericException\n     */\n    async CreateObject(CreateNew = true) {\n        let item = null;\n        //\n        // Primero tenemos que ver si tenemos declarado un nombre de clase\n        let strClassName = Utils.EMPTY_STRING;\n        if (StringUtils.IsEmptyString((strClassName = this.Options.strClassName)))\n            strClassName = this.Options.strClassName = this.m_ownerApp.GetClassName(this.Options.strProgId);\n        else\n            strClassName = this.m_ownerApp.CheckClassName(this.Options.strClassName);\n        // A12122701: Sistema para gestionar la estructura lógica de vistas en la maquinaria.\n        // Si el layout no está construido del todo entonces tendremos que esperar\n        // TODO ADD TAG\n        // if (m_layout !=null)\n        // \tm_layout.waitUntilReady();\n        // F10100704:\tProtección contra ProgIds vacíos en las colecciones.\n        // Si el progid está vacío será el de toda la vida\n        // Aquí habrá que hacer algo para aquellas clases que sean diferentes... por el momento creamos\n        // solamente el equivalente del BasicDataObj\n        // Esto hay que cacharrearlo su poco\n        // TODO Ver si esto se puede hacer con alguna forma de carga por nombre o algo así.\n        if (StringUtils.IsEmptyString(strClassName))\n            item = new XoneDataObject(this);\n        else if (strClassName.equalsIgnoreCase(\"xonedataobject\"))\n            item = new XoneDataObject(this);\n        else if (strClassName.equalsIgnoreCase(\"xoneuser\"))\n            item = new XoneUser(this);\n        else if (strClassName.equalsIgnoreCase(\"xonecompany\"))\n            item = new XoneCompany(this);\n        else\n            item = new XoneDataObject(this);\n        await item.OnCreate(CreateNew); // Está creando el objeto nuevo...\n        return item;\n    }\n    getOwnerApp() {\n        return this.m_ownerApp;\n    }\n    getMultipleKey() {\n        return this.Options.bMultipleKey;\n    }\n    /**\n     * @return\t\t\tDevuelve una lista de claves cuando la colección tiene claves múltiples\n     */\n    getKeyFields() {\n        return this.m_lstKeyFields;\n    }\n    /**\n     * Devuelve el tipo de la propiedad o campo cuyo nombre se pasa como parámetro.\n     * @param FieldName\t\t\tNombre del campo o propiedad cuyo tipo se quiere conocer.\n     * @return\t\t\t\t\tDevuelve el tipo declarado en la propiedad o \"absent\" si no está definida.\n     * @throws Exception\n     */\n    PropType(FieldName) {\n        // Primero buscarlo en esta colección...\n        let strType = this.FieldPropertyValue(FieldName, \"type\");\n        // K11010501:\tModificaciones para la versión 1.5 de Android.\n        // Si es la  clave primaria será texto o número\n        if (FieldName.equals(this.m_strPk))\n            return this.Options.bStringPk ? \"T\" : \"N\";\n        // De lo contrario asumimos que es texto\n        if (StringUtils.IsEmptyString(strType))\n            strType = \"T\";\n        return strType;\n    }\n    /**\n     * Devuelve la visibilidad de una propiedad teniendo en cuenta plataformas y demás.\n     * @param FieldName\t\t\tNombre del campo o propiedad cuya visibilidad se quiere conocer.\n     * @return\t\t\t\t\tDevuelve el valor de \"visible\" para este campo, o \"1\" si no está definido.\n     * @throws Exception\n     */\n    PropVisibility(FieldName) {\n        let str = this.FieldPropertyValue(FieldName, \"visible\");\n        // A09100501:   Permitir que las propiedades tengan un tipo button.\n        // En los button la visibilidad venía como true o false, así que tenemos que permitirlo para mantener\n        // la compatibilidad...\n        // Si no hay plataforma, o el atributo no está definido, buscarlo en el original\n        if (StringUtils.IsEmptyString(str))\n            str = \"1\";\n        else {\n            // Caso especial true/false\n            if (str.equals(\"true\"))\n                str = \"1\";\n            else if (str.equals(\"false\"))\n                str = \"0\";\n        } // Caso especial true/false\n        return str;\n    }\n    isIndexed() {\n        return false;\n    }\n    getProperties() {\n        return this.m_xmlNode;\n    }\n    /**\n     * Esta función devuelve la bandera que indica si hay que usar objetos en la restauración de mapeos\n     * cuando se trata de colecciones complejas en las que hay varios niveles de objetos en la restauración.\n     * @return\t\tDevuelve el valor de la bandera (TRUE por defecto, se cambia durante la ejecución si es necesario)\n     */\n    getUseObjectsInRestore() {\n        return this.m_bUseObjectsInRestore;\n    }\n    /**\n     * Asigna valor a la bandera que indica que en vez de lanzar una SQL y devolver una fila de base de datos hay\n     * que cargar el objeto y utilizarlo tal cual porque en las restauraciones se usan campos que están a varios niveles\n     * de anidamiento.\n     * @param value\t\tTRUE para usar objetos, FALSE para utilizar una fila en base de datos (más rápido y eficiente)\n     */\n    setUseObjectsInRestore(value) {\n        this.m_bUseObjectsInRestore = value;\n    }\n    PropertyTitle(FieldName) {\n        let strProp = \"\", str = \"\";\n        let node = null, platNode = null;\n        if (!StringUtils.IsEmptyString((strProp = this.FieldPropertyValue(FieldName, \"title\"))))\n            return strProp; // Este mismo y pa la pinga\n        // M10090801:\tModificaciones para permitir que los <button> sean considerados propiedades.\n        // El atributo caption también vale (en el caso de los botones, sentiende)\n        if (!StringUtils.IsEmptyString((strProp = this.FieldPropertyValue(FieldName, \"caption\"))))\n            return strProp;\n        //\n        // Buscarlo sin más...\n        let coll = this;\n        do {\n            if (null != (node = coll.getNode(\"prop\", \"name\", FieldName)))\n                break;\n            // M10090801:\tModificaciones para permitir que los <button> sean considerados propiedades.\n            // Comprobar si se trata de un botoncejo antiguo\n            if (null != (node = coll.getNode(\"button\", \"name\", FieldName)))\n                break;\n            coll = coll.getParentCollection();\n        } while (coll != null);\n        if (node == null)\n            return FieldName;\n        // Cambiar el chequeo pues el puntero puede ser nulo. No se soportan\n        // cadenas vacías.\n        if (!StringUtils.IsEmptyString((str = this.getOwnerApp().getPlatform()))) {\n            // Buscar el nodo\n            platNode = node.SelectSingleNode(\"platform\", \"name\", str);\n        } // Buscar el nodo\n        str = \"\";\n        // M10090801:\tModificaciones para permitir que los <button> sean considerados propiedades.\n        // En caso de los botones, vale caption también\n        if (platNode != null) {\n            // Comprobar title y caption\n            if (StringUtils.IsEmptyString((str = XmlUtils.getNodeAttr(platNode, \"title\"))))\n                str = platNode.getAttrValue(\"caption\");\n        } // Comprobar title y caption\n        if (StringUtils.IsEmptyString(str)) {\n            // No está en el nodo de plataforma\n            str = XmlUtils.getNodeAttr(node, \"title\");\n            if (StringUtils.IsEmptyString(str)) {\n                // Si no tiene title, ver si tiene texto\n                // M10090801:\tModificaciones para permitir que los <button> sean considerados propiedades.\n                // Comprobar también caption, que para los botones vale lo mismo\n                str = node.getAttrValue(\"caption\");\n                if (StringUtils.IsEmptyString(str))\n                    str = node.getText();\n                if (StringUtils.IsEmptyString(str)) {\n                    // Si es un botón, no devolver el nombre\n                    // F10100708:\tLos botones que no tengan texto deberían devolver título vacío.\n                    // Cambiar este mecanismo porque puede explotarse si no hay Type.\n                    let bButton = false;\n                    if (node.getName().equals(\"button\"))\n                        bButton = true;\n                    else {\n                        // Obtener el tipo\n                        let strType = node.getAttrValue(\"type\");\n                        if (!StringUtils.IsEmptyString(strType)) {\n                            // Ver si es un botón\n                            if (strType.equals(\"B\"))\n                                bButton = true;\n                        } // Ver si es un botón\n                    } // Obtener el tipo\n                    if (!bButton)\n                        str = FieldName;\n                } // Si es un botón, no devolver el nombre\n            } // Si no tiene title, ver si tiene texto\n        } // No está en el nodo de plataforma\n        return StringUtils.SafeToString(str);\n    }\n    IsFormulaProperty(FieldName) {\n        if (this.m_lstFormulaProps.length == 0)\n            return false;\n        return this.m_lstFormulaProps.contains(FieldName) ? true : false;\n    }\n    IsBitProperty(FieldName) {\n        if (this.m_lstBitProps.length == 0)\n            return false;\n        return this.m_lstBitProps.contains(FieldName) ? true : false;\n    }\n    getDeferredLoad() {\n        return this.Options.bDeferredLoad;\n    }\n    GetCurrentItemValue(FieldName) {\n        throw new Error(\"Method not implemented.\");\n    }\n    FieldExists(FieldName) {\n        // Buscar si el campo existe en la lista del nodo XML\n        if (null != this.m_xmlNode.SelectSingleNode(\"prop\", \"name\", FieldName))\n            return true;\n        // M10090801:\tModificaciones para permitir que los <button> sean considerados propiedades.\n        // Lo mismo con los botones\n        if (null != this.m_xmlNode.SelectSingleNode(\"button\", \"name\", FieldName))\n            return true;\n        // F10052502:\tFieldExists no debe comprobar existencia del campo clave.\n        if (this.m_strPk.equals(FieldName))\n            return true;\n        // Buscar si heredamos de alguna, en ese caso buscar en el parent\n        if (!StringUtils.IsEmptyString(this.Options.strParentCollection)) {\n            // Comprobar\n            if (this.getParentCollection() == null) {\n                // Error\n                // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n                ////throw new XoneGenericException(-17778, \"CXoneDataCollection::FieldExists ha fallado. La colección '\" + m_strName + \"' hereda de '\" + m_strParentCollection + \"' y no se encuentra la colección padre.\");\n                let sb = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_COLL_FIELDEXISTSFAIL, \"CXoneDataCollection::FieldExists failed. Collection '{0}' inherits '{1}' and it cannot be found.\");\n                sb = sb.replace(\"{0}\", this.m_strName);\n                sb = sb.replace(\"{1}\", this.Options.strParentCollection);\n                throw new XoneGenericException(-17778, sb);\n            } // Error\n            return this.getParentCollection().FieldExists(FieldName);\n        } // Comprobar\n        // De lo contrario.. nanai...\n        return false;\n    }\n    getSpecial() {\n        return this.isSpecial;\n    }\n    get isSpecial() {\n        return this.m_options.bIsSpecial;\n    }\n    getObjectIndex(Item) {\n        return this.BrowseData.ObjectIndex(Item);\n    }\n    /**\n     * K11010501:\tModificaciones para la version 1.5 de Android.\n     *\n     * TODO 24/01/2019 Juan Carlos\n     * Esta función no está teniendo en cuenta los types que inventamos posteriormente que no\n     * siguen la regla de la primera letra indicado el tipo de dato en base de datos. Corrijo el\n     * switch y pongo constantes públicas, que el resto del código debería empezar a usar. Dejo la\n     * función antigua comentada abajo por si acaso.\n     *\n     * PROP_TYPE_INTEGER = Integer (Type N)\n     * PROP_TYPE_STRING = String (Type T, IMG, PH, DR)\n     * PROP_TYPE_DOUBLE = Double (Type N2, N3, N4, etc...)\n     * PROP_TYPE_DATE = Fecha (Type D, DT, TT)\n     * PROP_TYPE_RESULTSET = ResultSet (Type Z) Su valor es 0 como integer, no sé porqué esto está\n     * así pero seguramente sea malo.\n     *\n     * @param sTypeName\n     * @return\n     */\n    getTypeFromXml(sTypeName) {\n        if (TextUtils.isEmpty(sTypeName)) {\n            return XoneDataCollection.PROP_TYPE_STRING;\n        }\n        switch (sTypeName) {\n            case \"T\":\n            case \"TN\":\n            case \"DR\":\n            case \"IMG\":\n            case \"PH\":\n            case \"TT\":\n                return XoneDataCollection.PROP_TYPE_STRING;\n            case \"N\":\n            case \"NC\":\n                return XoneDataCollection.PROP_TYPE_INTEGER;\n            case \"D\":\n            case \"DT\":\n                return XoneDataCollection.PROP_TYPE_DATE;\n            case \"Z\":\n                // A11092602: Permitir el uso de resultsets jerárquicos en forma de árbol para cargas múltiples.\n                return XoneDataCollection.PROP_TYPE_RESULTSET;\n            default:\n                let sTypeFirstLetter = sTypeName.charAt(0);\n                if (sTypeFirstLetter == \"N\") {\n                    return XoneDataCollection.PROP_TYPE_DOUBLE;\n                }\n                return XoneDataCollection.PROP_TYPE_STRING;\n        }\n    }\n    /**\n     *  Bloquea la colección para que no se pueda limpiar ni recargar\n     */\n    lock() {\n        this.m_bLocked = true;\n    }\n    /**\n     *  Desbloquea la colección para que se puede vaciar y/o llenar\n     */\n    unlock() {\n        this.m_bLocked = false;\n    }\n    isLock() {\n        return this.m_bLocked;\n    }\n    /**\n     * Limpia la colección de los objetos que hay en memoria. Si la colección está bloqueada no hace nada.\n     * @return\t\t\tTRUE si la operación es correcta.\n     */\n    clear() {\n        // Si está bloqueada, no hacemos nada...\n        if (this.m_bLocked)\n            return true;\n        return this.ClearCollection();\n    }\n    /**\n     * Efectúa la limpieza real de la colección aunque esta está bloqueada\n     * @return\t\tDevuelve TRUE si la colección se limpia correctamente.\n     */\n    ClearCollection() {\n        if (this.m_bIsClearing || this.m_bLocked)\n            return true; // Ya está dentro...\n        try {\n            this.m_bIsClearing = true;\n            // Ahora limpiar las colecciones porsi...\n            this.BrowseData.Clear();\n            this.m_bFull = this.m_bIsClearing = false;\n            // Si es especial esto es como un EB\n            if (this.m_bIsSpecial)\n                this.m_nBrowseLength = -1;\n        }\n        catch (e) {\n            // Ignorar las excepciones a menos que sea debug\n            if (this.Options.bDebug) {\n                // Imprimir\n                //this.m_ownerApp.WriteConsoleString(e.getMessage ());\n                console.log(e.message);\n            } // Imprimir\n        }\n        return true;\n    }\n    /**\n     * @return\t\t\tDevuelve la cadena para el ordenamiento de los datos.\n     */\n    getSort() {\n        return this.m_strSort;\n    }\n    /**\n     * Asigna valor a la cadena de ordenamiento de los datos de la colección.\n     * @param value\t\tNuevo valor de la cadena de ordenamiento de los datos de la colección.\n     */\n    setSort(value) {\n        this.m_strSort = value;\n    }\n    setLinkFilter(str) {\n        this.m_strLinkFilter = str;\n    }\n    /**\n     * @return\t\t\tDevuelve el filtro interno, leído del atributo filter del mappings y usado para enlazar contents\n     */\n    getLinkFilter() {\n        return this.m_strLinkFilter;\n    }\n    /**\n     * @return\t\t\tDevuelve el filtro externo usado por los frameworks para limitar las búsquedas\n     */\n    getFilter() {\n        return this.m_strFilter;\n    }\n    /**\n     * Asigna valor al filtro de usuario de la colección.\n     * @param value\t\tNuevo valor para el filtro de la colección.\n     */\n    setFilter(value) {\n        this.m_strFilter = value;\n    }\n    /**\n     * @return\t\t\tDevuelve el Objeto propietario de la colección cuando se usa como contents\n     */\n    getOwnerObject() {\n        return this.m_pOwnerObject;\n    }\n    /**\n     * Permite asignar el objeto propietario de la colección en tiempo de ejecución.\n     * @param value\t\tNuevo objeto propietario de la colección (i.e. de la cual es contents)\n     */\n    setOwnerObject(value) {\n        this.m_pOwnerObject = value;\n    }\n    /**\n     * Crea un clon de esta colección (no copia el contenido)\n     * @return\t\t\t\tDevuelve la colección creada con los datos de esta colección también clonados\n     * @throws Exception\n     */\n    createClone() {\n        return this.CreateClone();\n    }\n    CreateClone() {\n        let newColl = null;\n        // A12122701: Sistema para gestionar la estructura lógica de vistas en la maquinaria.\n        // Para clonar nos creamos la nueva colección a partir de esta...\n        newColl = new XoneDataCollection(this.getOwnerApp(), this.getProperties(), this.getVersion());\n        // // M10051901:  Los scripts deben almacenarse parseados en la maquinaria.\n        // // El evento no nos hace falta, así que nos lo cargamos y tal y tal\n        // m_propsCollected = null;\n        // // Copiamos el layout...\n        // //m_layout = Origin.getViewLayout();\n        // // O13061301: Carajal de optimizaciones de todo tipo en maquinaria y demás.\n        // // Referenciar las propiedades... a fin de cuentas serán las mismas... digo yo...\n        // // Con la lista de tipos... más de lo mismo... También copiamos otras cositas.\n        // m_lstProperties = this.getPropertyList();\n        // m_lstPropTypes = this.getTypeList();\n        // m_lstPropTitles = this.getTitleList();\n        // m_bPropsCollected = true;   // Ya nos lo ha hecho otro, claro...\n        // this.m_parent = this.getParentCollection();\n        // // A13071201: Control de macros a nivel de colección de contents.\n        // // Si nos han indicado el nombre del contents, lo guardamos aquí\n        // this.m_strContentsName = ContentsName;\n        /////////////\n        // F13022104: El acceso a las fórmulas de visibilidad de campos debe ser concurrente.\n        // Copiar las fórmulas\n        // if (Origin.HasFormulas())\n        // {// Tiene fórmulas\n        //     m_formulas = new Hashtable<String, IFormulaParser>();\n        //     Enumeration<String> enm =Origin.getFormulas().keys ();\n        //     while (enm.hasMoreElements())\n        //     {// Copiar\n        //     \tString key =enm.nextElement();\n        //     \tIFormulaParser ipf =Origin.getFormulas().get(key);\n        //     \tif (ipf instanceof FormulaParser)\n        //     \t\tm_formulas.put (key, (FormulaParser)ipf);\n        //     }// Copiar\n        // }// Tiene fórmulas\n        // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n        ////throw new XoneGenericException(-11123, \"XoneDataCollection::CreateClone ha fallado. No se puede crear una nueva colección.\");\n        ////throw new XoneGenericException(-11123, m_messages.GetMessage (XoneMessageKeys.SYS_MSG_COLL_CREATECLONEFAIL, \"CXoneDataCollection::CreateClone failed. Cannot create new collection.\"));\n        // Cargar las cosas\n        if (!newColl.Load())\n            return null;\n        // En el constructor se copian las cosas que normalmente habría que poner a mano..\n        // Estas cosas podrían haber cambiado, así que las asignamos aquí otra vez...\n        newColl.setSort(this.m_strSort);\n        newColl.setFilter(this.m_strFilter);\n        this.CopyMacros(newColl);\n        this.CopyVariables(newColl);\n        return newColl;\n    }\n    /**\n     * Copia todas las variables de esta colección hacia la que se pasa como parámetro\n     * @param DestColl\t\tColección hacia la que se quieren copiar las variables de esta colección.\n     */\n    CopyVariables(DestColl) {\n        this.SafeGetVariableList()\n            .entrySet()\n            .forEach((item) => DestColl.setVariables(item[0], item[1]));\n        // this.m_lstVariables.keys();\n        // while (e.hasMoreElements())\n        // {// Recorrer la lista de variables y pasarla a la otra colección\n        // \tString k =(String) e.nextElement();\n        // \tObject v =this.m_lstVariables.get(k);\n        //     DestColl.setVariables(k, v);\n        // }// Recorrer la lista de variables y pasarla a la otra colección\n    }\n    /**\n     * Copia todas las macros de esta colección hacia la que se pase como parámetro.\n     * @param DestColl\t\t\tColección hacia la que se quieren copiar las macros de esta.\n     */\n    CopyMacros(DestColl) {\n        this.m_macrosEvaluator.CopyMacros(DestColl);\n        // this.m_lstMacros\n        //     .entrySet()\n        //     .forEach((item) => DestColl.setMacro(item[0], item[1]));\n        // Enumeration<String> e =this.m_lstMacros.keys();\n        // while (e.hasMoreElements())\n        // {// Recorrer la lista de variables y pasarla a la otra colección\n        // \tString k =e.nextElement();\n        // \tString v =(String) this.m_lstMacros.get(k);\n        //     DestColl.setMacro(k, v);\n        // }// Recorrer la lista de variables y pasarla a la otra colección\n    }\n    async loadAll(CountRecords = false, options) {\n        return this.BrowseData.loadAllAsync(CountRecords, options);\n    }\n    async loadAllAsync(CountRecords = false, options) {\n        return this.BrowseData.loadAllAsync(CountRecords, options);\n    }\n    async startBrowse(CountRecords = false, options) {\n        return this.BrowseData.startBrowse(CountRecords, options);\n    }\n    async moveNext() {\n        return this.BrowseData.MoveNext();\n    }\n    endBrowse() {\n        return this.BrowseData.EndBrowse();\n    }\n    get currentItem() {\n        return this.getCurrentItem();\n    }\n    getCurrentItem() {\n        return this.BrowseData.getCurrentItem();\n    }\n    getConnection() {\n        return this.BrowseData.getConnection();\n    }\n    isFull() {\n        return this.getFull();\n    }\n    /**\n     * @return\t\tDevuelve TRUE si la colección se ha cargado completamente con LoadAll.\n     */\n    getFull() {\n        return this.m_bFull;\n    }\n    /**\n     * A11092602: Permitir el uso de resultsets jerárquicos en forma de árbol para cargas múltiples.\n     * Hacer que la colección está llena a la fuerza.\n     * @param isFull\n     */\n    setFull(isFull) {\n        this.m_bFull = isFull;\n    }\n    getCount() {\n        return this.BrowseData.getCount();\n    }\n    count() {\n        return this.getCount();\n    }\n    get length() {\n        return this.getCount();\n    }\n    PrepareSqlString(Sentence, ChkGroup = false, Prefiltered = false) {\n        return this.BrowseData.PrepareSqlString(Sentence, ChkGroup, Prefiltered);\n    }\n    // addItem(param0) {\n    // }\n    // browseDeleteAll() {\n    // }\n    // browseDeleteWithNoRules() {\n    // }\n    browseLength() {\n        return this.BrowseData.browseLength();\n    }\n    /**\n     * K13080701: La ejecución de scripts con argumentos a nivel de colección falta en algunos casos.\n     * Esta acción podría llevar argumentos...\n     */\n    async ExecuteCollAction(ActionNode, ActionName, ...Arguments) {\n        return await this.executeCollAction(ActionNode, ActionName, ...Arguments);\n    }\n    async executeCollAction(ActionNode, ActionName, ...Arguments) {\n        let node = null;\n        let str = \"\";\n        if (StringUtils.IsEmptyString(ActionNode))\n            return null;\n        // Primero tenemos que buscar el nodo correspondiente al prefijo\n        let prefix = this.GetNode(ActionNode);\n        if (prefix == null) {\n            // No existe el nodo\n            if (this.Options.bDebug)\n                console.log(\"Colección '\" + this.getName() + \"' ExecuteCollAction no encuentra el nodo '\" + ActionNode + \"'\");\n            // Esto en sí no es un fallo de ejecución\n            return null;\n        } // No existe el nodo\n        if (!StringUtils.IsEmptyString(ActionName))\n            node = prefix.SelectSingleNode(\"action\", \"name\", ActionName);\n        else\n            node = prefix.SelectSingleNode(\"action\");\n        if (null != node) {\n            // Comprobar qué tipo de acción es\n            str = XmlUtils.GetNodeAttr(node, \"type\");\n            // F11051805: Permitir que los nodos coll-action no tengan tipo.\n            // Por defecto...\n            if (StringUtils.IsEmptyString(str))\n                str = \"runscript\";\n            // K13080701: La ejecución de scripts con argumentos a nivel de colección falta en algunos casos.\n            // Pasar los argumentos que nos han mandado (puede ser nulo)\n            if (str.equals(\"runscript\"))\n                return await this.doRunScript(node, Arguments);\n        } // Comprobar qué tipo de acción es\n        else {\n            // Si está en debug, dejar traza\n            if (this.Options.bDebug) {\n                // Mostrar mensaje\n                if (StringUtils.IsEmptyString((str = ActionName)))\n                    str = \"\";\n                console.log(\"Colección '\" + this.getName() + \"' ExecuteCollAction no encuentra el nodo action[name='\" + str + \"']\");\n            } // Mostrar mensaje\n        } // Si está en debug, dejar traza\n        // No hacer nada de nada...\n        return null;\n    }\n    prepareContext(scope, ActionNode, ...Arguments) {\n        let scripts;\n        let strScript = \"\", strLang = \"\", str = \"\";\n        let ctx = new ScriptContext(scope);\n        // K10090801:\tCarga de includes locales en los nodos de acciones.\n        // Adicionar scripts locales de los nodos <action>\n        // TODO: Luis los includes se manejaran de forma distintas\n        // let includes:XmlNodeList = ActionNode.SelectNodes(\"include\");\n        // for (let i =0;i <includes.count();i++)\n        // {// Cargar todos los includes\n        // \tlet include =includes.get(i);\n        // \tlet strFilename =include.getAttrValue(\"file\");\n        // \t// 27/02/2017 Los include dentro de un action no hacían caso al language\n        //     let strIncludeLanguage = StringUtils.SafeToString(include.getAttrValue(\"language\"), this.getOwnerApp().getDefaultScriptLanguage());\n        // \t// Que se pueda definir desde fuera el charset correcto. ISO-8859-1 permite tildes y eñes.\n        // \tlet strCharsetEncoding = include.getAttrValue(\"encoding\");\n        // \t// TODO Permitir que la compilación de scripts se ejecute en background mientras temporalmente ejecutamos en modo intérprete\n        //     let bDelayCompilation = StringUtils.ParseBoolValue(include.getAttrValue(\"delay-compilation\"), false);\n        //     let bCompile = StringUtils.ParseBoolValue(include.getAttrValue(\"compile\"), true);\n        //     if (!StringUtils.IsEmptyString(strFilename))\n        // \t{// Cargar el fichero\n        //         if(strIncludeLanguage.compareToIgnoreCase(Utils.JAVASCRIPT_LANGUAGE) == 0) {\n        //             this.getOwnerApp().LoadJavascriptIncludeFile(strFilename, strCharsetEncoding, bDelayCompilation, bCompile, ctx);\n        //         } else {\n        //             VbsScript script = this.getOwnerApp().LoadIncludeFile(strFilename, null, \"vbscript\", strCharsetEncoding);\n        //             if (script == null) {// Error\n        //                 // TODO PROGRAMAR ESTO\n        //                 // Indicar el error\n        //                 // Y retornar con error...\n        //                 throw new XoneScriptFailedException(-1, \"Script execution failed in LoadIncludeFile(), file name \" + strFilename);\n        //             }// Error\n        //             // Incluirlo en el contexto\n        //             ctx.getLocalIncludes().addElement(script);\n        //         }\n        // \t}// Cargar el fichero\n        // }// Cargar todos los includes\n        let strFunctionName = \"\";\n        let aScripts = [];\n        let aFunctionsName = [];\n        let argsName = [];\n        let argsValue = [];\n        if (ActionNode instanceof XmlNode) {\n            // A12081701: Mecanismo para pasar parámetros a un nodo de acción.\n            // Sacar los nodos de parámetros si es que los necesitamos\n            if (Arguments && Array.isArray(Arguments) && Arguments.length > 0) {\n                // Sacar nodos\n                // K13080701: La ejecución de scripts con argumentos a nivel de colección falta en algunos casos.\n                // Sacar los argumentos a nivel de contexto para poder usarlo también a nivel de colección\n                ctx.ExtractArguments(ActionNode, ...Arguments);\n            } // Sacar nodos\n            else {\n                Arguments = null;\n            }\n            scripts = ActionNode.SelectNodes(\"script\");\n            // Si hay scripts precompilados, tratemos de usarlos\n            // De lo contrario usar el mecanismo de toda la vida\n            for (let i = 0; i < scripts.count(); i++) {\n                // Recorre los scripts y los ejecuta\n                let script = scripts.get(i);\n                let xs = script;\n                str = XmlUtils.getNodeAttr(script, \"name\");\n                if (!StringUtils.IsEmptyString(str)) {\n                    // Buscar el script en otra parte\n                    //////strScript = string.Format(\"mp:script[@name='{0}']\", str);\n                    if (null == (xs = this.getNode(\"script\", \"name\", str)))\n                        continue;\n                    strScript = null;\n                } // Buscar el script en otra parte\n                // Obtener el lenguaje\n                strLang = XmlUtils.getNodeAttr(xs, \"language\");\n                if (StringUtils.IsEmptyString(strLang))\n                    strLang = this.getOwnerApp().getDefaultLanguage();\n                // Ejecuta el script que sea\n                strScript = xs.getText();\n                let index = 0;\n                if (ctx.GetParams() && !ctx.GetParams().isEmpty()) {\n                    ctx\n                        .GetParams()\n                        .entrySet()\n                        .forEach((e) => {\n                        // Amiyares 18/06/2021: modificaciones en el intérprete de scripts\n                        strScript = \"\\t\" + `let ${e[0]}=XArguments[${index}];` + \"\\n\" + strScript;\n                        argsName.push(e[0]);\n                        if (e[1].toString().startsWith(\"'\") && e[1].toString().endsWith(\"'\"))\n                            e[1] = e[1].toString().slice(1, e[1].toString().length - 1);\n                        argsValue.push(e[1]);\n                        index++;\n                    });\n                }\n                // A10051901:   Componentes de depuración y modificación de maquinaria XOne para depurar.\n                // Lo cierto es que este código no se va a llamar, pero por lo que sea...\n                strFunctionName = ScriptUtils.GenerateFunctionName(ActionNode);\n                aScripts.push(strScript);\n                aFunctionsName.push(strFunctionName);\n                //var sct=require(\"__\"+this.getOwnerCollection().getName()+\"__\");\n                //return this.getOwnerApp().RunScript(strFunctionName, strLang, strScript, ctx, Arguments);\n            }\n        }\n        else {\n            strScript = ActionNode.replace(\"javascript:\", \"\");\n            aScripts.push(strScript);\n            aFunctionsName.push(strFunctionName);\n            //return this.getOwnerApp().RunScript(strFunctionName, strLang, strScript, ctx, Arguments);\n        } // Recorre los scripts y los ejecuta\n        // OK\n        return {\n            ctx: ctx,\n            scripts: aScripts,\n            funcNames: aFunctionsName,\n            slang: strLang,\n            Arguments: Arguments,\n            argsName: argsName,\n            argsValue: argsValue,\n        };\n    }\n    /**\n     * Ejecuta un nodo runscript pasando el script y el contexto a la aplicación base.\n     * @param ActionNode\t\tNodo script a ejecutar.\n     * @return\t\t\t\t\tDevuelve TRUE si se ejecutan correctamente todos los scripts.\n     * @throws Exception\n     */\n    async doRunScript(ActionNode, ...Arguments) {\n        return await this.DoRunScriptAsync(ActionNode, ...Arguments);\n    }\n    // protected DoRunScript(ActionNode: XmlNode | string, ...Arguments): any {\n    //     let data = this.prepareContext(ActionNode, ...Arguments);\n    //     let n = data.scripts.length;\n    //     for (let i = 0; i < n; i++) {\n    //         this.getOwnerApp().RunScript(data.funcNames[i], data.slang, data.scripts[i], data.ctx, data.Arguments);\n    //     }\n    //     // OK\n    //     return true;\n    // }\n    async DoRunScriptAsync(ActionNode, ...Arguments) {\n        let data = this.prepareContext(this, ActionNode, ...Arguments);\n        let n = data.scripts.length;\n        let promises = new Array();\n        for (let i = 0; i < n; i++) {\n            // Amiyares 18/06/2021: modificaciones en el intérprete de scripts\n            await this.getOwnerApp().RunScriptAsync(data.funcNames[i], data.slang, data.scripts[i], data.ctx, data.Arguments, data.argsName, data.argsValue);\n        }\n        // OK\n        return true;\n    }\n    async getItem(...FunctionParams) {\n        return await this.WrapGetItem(FunctionParams);\n    }\n    async WrapGetItem(...FunctionParams) {\n        let obj = null;\n        // En función de la cantidad de parámetros\n        //CheckNullParameters(\"Item\", FunctionParams);\n        switch (FunctionParams.length) {\n            case 1:\n                // Puede ser entero o cadenilla\n                if (typeof FunctionParams[0] === \"string\") {\n                    // Cadena\n                    obj = await this.get(FunctionParams[0].toString());\n                    break;\n                } // Cadena\n                // TODO ADD TAG 17042014: Luis si es un objeto de datos\n                // if (FunctionParams[0] instanceof IRuntimeObject)\n                // {// Cadena\n                //     obj = GetObject((IRuntimeObject)FunctionParams[0]);\n                //     break;\n                // }// Cadena\n                // De lo contrario será un número\n                let n = NumberUtils.SafeToInt(FunctionParams[0]);\n                obj = await this.get(n);\n                break;\n            case 2:\n                let strFieldName = FunctionParams[0].toString();\n                obj = await this.get(strFieldName, FunctionParams[1]);\n                break;\n            default: {\n                // Error\n                // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n                ////throw new XoneGenericException(-91111, \"XoneDataCollection::GetItem ha fallado. Número incorrecto de parámetros.\");\n                let sb = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_VBS_BADPARAMCOUNT, \"VBS Runtime Error. Incorrect number of parameters for '{0}'\");\n                sb = sb.replace(\"{0}\", \"Item\");\n                throw new XoneGenericException(-91111, sb);\n            } // Error\n        }\n        // De lo contrario lo encarsulamos\n        return obj;\n    }\n    async deleteItem(key) {\n        if (key instanceof XoneDataObject)\n            key = key.getObjectIndex();\n        let obj = await this.get(key);\n        if (obj) {\n            // Lo ha encontrado\n            obj.setFollowRules(this.m_bFollowRules);\n            // O12050301: Si la colección es especial no hay que borrar el objeto de base de datos.\n            // Si la colección es especial no tenemos nada que borrar\n            if (!this.m_options.bIsSpecial) {\n                // Solo si no es especial\n                if (!obj.deleteObject())\n                    // Elimina el objeto de la base de datos\n                    return false;\n            } // Solo si no es especial\n            // Ahora borra el objeto de la lista\n            this.removeItem(key);\n            // Ejecuta las acciones posteriores a la eliminación\n            // del objeto\n            // F10090804:\tDeleteItem (const char*) invoca las acciones de borrado de más.\n            // Esto ya lo hace DeleteObject... además, RemoveItem ya lo ha borrado así que esto está mal\n            ////if (!obj.ExecuteDeleteActions(true))    // Error\n            ////    throw new XoneGenericException(-8001, \"CXoneDataCollection::DeleteItem ha fallado. Ha fallado la ejecución de acciones después de eliminar el objeto.\");\n        } // Lo ha encontrado\n    }\n    /**\n     * Elimina un objeto de la colección dado su índice numérico\n     * @param Index\t\t\t\tIndice del objeto en la colección (comenzando por cero)\n     * @return\t\t\t\t\tDevuelve TRUE si la operación es correcta.\n     * @throws Exception\n     */\n    removeItem(Index) {\n        this.BrowseData.removeItem(Index);\n        this.m_bFull = false;\n        return true;\n    }\n    async loadFromJson(...FunctionParams) {\n        const FunctionName = \"loadFromJson\";\n        Utils.CheckNullParameters(FunctionName, FunctionParams);\n        Utils.CheckIncorrectParamRange(FunctionName, FunctionParams, 1, 2);\n        let jsonArray = FunctionParams[0];\n        let jsParams = FunctionParams.length > 1 ? FunctionParams[1] : null;\n        // TAG 2020031801: Luis Añadida la posibilidad de modo estricto o no.\n        let bStrictMode = jsParams && StringUtils.ParseBoolValue(jsParams[\"strictMode\"], false);\n        if (typeof jsonArray === \"string\") {\n            jsonArray = JSON.parse(jsonArray);\n        }\n        // if (value instanceof NativeArray) {\n        //     return loadFromJsonInternal((NativeArray) value, bStrictMode);\n        // } else if (value instanceof JSONArray) {\n        //     jsonArray = (JSONArray) value;\n        // } else {\n        //     String sJsonObject = StringUtils.SafeToString(value);\n        //     jsonArray = new JSONArray(sJsonObject);\n        // }\n        this.ClearCollection();\n        await this.loadFromJsonArray(this, jsonArray, bStrictMode);\n        return this;\n    }\n    //     public async loadFromJson(value: any): Promise<XoneDataCollection> {\n    //         const sFunctionName = \"loadFromJson\";\n    //         if (value == null) {\n    //             throw new IllegalArgumentException(sFunctionName + \"(): Empty value\");\n    //         }\n    //         return await this.loadFromJsonInternal(value, false);\n    //     }\n    // public XoneDataCollection loadFromJson(NativeArray value, NativeObject jsParams) throws Exception {\n    //     String sFunctionName = \"loadFromJson\";\n    //     if (value == null) {\n    //         throw new IllegalArgumentException(sFunctionName + \"(): Empty value\");\n    //     }\n    //     // TAG 2020031801: Luis Añadida la posibilidad de modo estricto o no.\n    //     boolean bStrictMode = RhinoUtils.SafeGetBoolean(jsParams, \"strictMode\", false);\n    //     return loadFromJsonInternal(value, bStrictMode);\n    // }\n    // public XoneDataCollection loadFromJsonInternal(NativeArray jsArray, boolean bStrictMode) throws Exception {\n    //     JSONArray jsonArray = RhinoUtils.toJsonArray(jsArray);\n    //     ClearCollection();\n    //     loadFromJsonArray(this, jsonArray, bStrictMode);\n    //     return this;\n    // }\n    async loadFromJsonArray(collection, jsonArray, bStrictMode) {\n        for (let i = 0; i < jsonArray.length; i++) {\n            let itemDataObject = new XoneDataObject(collection);\n            //let item = jsonArray[i];\n            itemDataObject.loadFromJson(jsonArray[i]);\n            // for (let sPropertyName in item) {\n            //     let propertyValue = item[sPropertyName];\n            //     if (bStrictMode) {\n            //         let sPropertyType = collection.FieldPropertyValue(sPropertyName, Utils.PROP_ATTR_TYPE);\n            //         if (TextUtils.isEmpty(sPropertyType)) {\n            //             continue;\n            //         }\n            //     }\n            //     if (Array.isArray(propertyValue)) {\n            //         let contentCollection = await itemDataObject.getContents(sPropertyName);\n            //         if (!contentCollection) {\n            //             throw new Exception(\"loadFromJson(): Content collection \" + sPropertyName + \" not found\");\n            //         }\n            //         this.loadFromJsonArray(contentCollection, propertyValue, bStrictMode);\n            //         continue;\n            //     }\n            //     /*\n            //      * 15/07/2020\n            //      * No insertar este null extraño de este parser de JSON. Dejar el null de java para\n            //      * que las maquinarias de script y cualquier otra cosa tenga mejor oportunidad de\n            //      * defenderse\n            //      */\n            //     if (propertyValue == null) {\n            //         propertyValue = null;\n            //     }\n            //     itemDataObject[sPropertyName] = propertyValue;\n            // }\n            // Iterator < String > iterator = item.keys();\n            // while (iterator.hasNext()) {\n            //     String sPropertyName = iterator.next();\n            //     Object propertyValue = item.get(sPropertyName);\n            //     if (bStrictMode) {\n            //         String sPropertyType = collection.FieldPropertyValue(sPropertyName, Utils.PROP_ATTR_TYPE);\n            //         if (TextUtils.isEmpty(sPropertyType)) {\n            //             continue;\n            //         }\n            //     }\n            //     if (propertyValue instanceof JSONArray) {\n            //         XoneDataCollection contentCollection = itemDataObject.Contents(sPropertyName);\n            //         if (contentCollection == null) {\n            //             throw new Exception(\"loadFromJson(): Content collection \" + sPropertyName + \" not found\");\n            //         }\n            //         loadFromJsonArray(contentCollection, (JSONArray) propertyValue, bStrictMode);\n            //         continue;\n            //     }\n            //     /*\n            //      * 15/07/2020\n            //      * No insertar este null extraño de este parser de JSON. Dejar el null de java para\n            //      * que las maquinarias de script y cualquier otra cosa tenga mejor oportunidad de\n            //      * defenderse\n            //      */\n            //     if (propertyValue == JSONObject.NULL) {\n            //         propertyValue = null;\n            //     }\n            //     itemDataObject.put(sPropertyName, propertyValue);\n            // }\n            collection.addItem(itemDataObject);\n        }\n    }\n}\nXoneDataCollection.PROP_TYPE_INTEGER = 0;\nXoneDataCollection.PROP_TYPE_STRING = 1;\nXoneDataCollection.PROP_TYPE_DOUBLE = 2;\nXoneDataCollection.PROP_TYPE_DATE = 3;\nXoneDataCollection.PROP_TYPE_RESULTSET = 0;\n\n//# sourceMappingURL=XoneDataCollection.js.map\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Video.vue?vue&type=style&index=0&id=42c3aa31&scoped=true&lang=css\"","/** @type {string} */\nlet appPath = \"\";\n\n/**\n * setAppPath\n * @param {string} value\n * @returns\n */\nexport const setAppPath = (value) => (appPath = value);\n\nexport const getAppPath = () => appPath;\n\n/** @type {Map<string, Object>} */\nconst mapPaths = new Map();\n\n/**\n * get Image Path\n * @param {string} imgPath\n * @param {string} [initialPath]\n * @param {number} [checkNumber]\n * @param {string} [mapPathName]\n * @returns {Promise<string|null>}\n */\nexport const getImagePath = async (imgPath, initialPath = \"icons\", checkNumber = 0, mapPathName) => {\n\tif (!imgPath) return;\n\n\tif (!mapPathName) mapPathName = `getImagePath:${imgPath}-${initialPath}`;\n\n\tif (mapPaths.has(mapPathName)) {\n\t\treturn mapPaths.get(mapPathName);\n\t}\n\n\tconst image = new Image();\n\tlet finalPath = imgPath;\n\n\ttry {\n\t\tif (checkNumber == 2) finalPath = finalPath.replace(\"icons/\", \"source/\").replace(\"images/\", \"source/\");\n\n\t\tawait new Promise((resolve, reject) => {\n\t\t\tif (\n\t\t\t\t!finalPath?.includes(\"icons/\") &&\n\t\t\t\t!finalPath?.includes(\"files/\") &&\n\t\t\t\t!finalPath?.includes(\"source/\") &&\n\t\t\t\t!imgPath.startsWith(\"http\") &&\n\t\t\t\t!imgPath.startsWith(\"www.\")\n\t\t\t)\n\t\t\t\tfinalPath = `/${initialPath}/${finalPath}`;\n\n\t\t\tif (appPath && !finalPath.startsWith(appPath) && !finalPath.startsWith(\"http\") && !finalPath.startsWith(\"www.\"))\n\t\t\t\tfinalPath = `${appPath}${finalPath}`;\n\n\t\t\timage.src = finalPath;\n\n\t\t\timage.onload = function () {\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\timage.onerror = () => reject();\n\t\t});\n\t} catch {\n\t\tcheckNumber++;\n\t\tif (checkNumber > 2 || imgPath.trim().startsWith(\"http\") || imgPath.trim().startsWith(\"www.\")) return null;\n\t\tif (finalPath?.includes(\"icons/\")) return getImagePath(finalPath.replace(\"icons/\", \"files/\"), \"\", checkNumber, mapPathName);\n\t\treturn getImagePath(finalPath.replace(\"files/\", \"icons/\"), \"\", checkNumber);\n\t}\n\n\tif (!mapPaths.has(mapPathName)) mapPaths.set(mapPathName, finalPath);\n\n\treturn finalPath;\n};\n\n/**\n * getImagePathAndSize\n * @param {string} imgPath\n * @param {string} [initialPath]\n * @param {number} [checkNumber]\n * @param {string} [mapPathName]\n * @returns {Promise<{path:string,imgSize:{width:number,height:number}}|null>}\n */\nexport const getImagePathAndSize = async (imgPath, initialPath = \"icons\", checkNumber = 0, mapPathName) => {\n\tif (!imgPath) return;\n\n\tif (!mapPathName) mapPathName = `getImagePathAndSize:${imgPath}-${initialPath}`;\n\n\tif (mapPaths.has(mapPathName)) {\n\t\treturn mapPaths.get(mapPathName);\n\t}\n\n\tconst image = new Image();\n\tlet finalPath = imgPath;\n\tlet imgSize = { width: 0, height: 0 };\n\n\ttry {\n\t\tif (checkNumber == 2) finalPath = finalPath.replace(\"icons/\", \"source/\").replace(\"images/\", \"source/\");\n\n\t\timgSize = await new Promise((resolve, reject) => {\n\t\t\tif (\n\t\t\t\t!finalPath?.includes(\"icons/\") &&\n\t\t\t\t!finalPath?.includes(\"files/\") &&\n\t\t\t\t!finalPath?.includes(\"source/\") &&\n\t\t\t\t!imgPath.startsWith(\"http\") &&\n\t\t\t\t!imgPath.startsWith(\"www.\")\n\t\t\t)\n\t\t\t\tfinalPath = `/${initialPath}/${finalPath}`;\n\n\t\t\tif (appPath && !finalPath.startsWith(appPath) && !finalPath.startsWith(\"http\") && !finalPath.startsWith(\"www.\"))\n\t\t\t\tfinalPath = `${appPath}${finalPath}`;\n\n\t\t\timage.src = finalPath;\n\n\t\t\timage.onload = function () {\n\t\t\t\t// @ts-ignore\n\t\t\t\tresolve({ width: this.width, height: this.height });\n\t\t\t};\n\t\t\timage.onerror = () => reject();\n\t\t});\n\t} catch {\n\t\tcheckNumber++;\n\t\tif (checkNumber > 2 || imgPath.trim().startsWith(\"http\") || imgPath.trim().startsWith(\"www.\")) return null;\n\t\tif (finalPath?.includes(\"icons/\")) return getImagePathAndSize(finalPath.replace(\"icons/\", \"files/\"), \"\", checkNumber, mapPathName);\n\t\treturn getImagePathAndSize(finalPath.replace(\"files/\", \"icons/\"), \"\", checkNumber);\n\t}\n\n\tif (!mapPaths.has(mapPathName)) mapPaths.set(mapPathName, { path: finalPath, imgSize });\n\n\treturn { path: finalPath, imgSize };\n};\n","let appData, self, ui, selfDataColl;\n\nexport const __SCRIPT_WRAPPER = function(\n  appDataVal,\n  uiVal,\n  selfVal,\n  functionString,\n  Arguments\n) {\n  appData = appDataVal;\n  ui = uiVal;\n  self = selfVal;\n  if (typeof functionString == \"string\") eval(functionString);\n  else functionString.call(this, Arguments);\n};\n\nexport const __SCRIPT_WRAPPERASYNC = async function(\n  appDataVal,\n  uiVal,\n  selfVal,\n  selfDataCollVal,\n  functionString,\n  Arguments\n) {\n  appData = appDataVal;\n  ui = uiVal;\n  self = selfVal;\n  selfDataColl = selfDataCollVal;\n  if (typeof functionString == \"string\") await eval(functionString);\n  else await functionString.call(this, Arguments);\n};\n\n/***\n *\n * Code from funciones_varias.js\n *\n ***/\n\n//Funcion para guardar las coordenadas GPS en un objeto dado.\nasync function GetPosGPS(tipo, auxcollobj) {\n  var latitud = 0;\n  var longitud = 0;\n  var distinta = 0;\n  //Activamos el GPS\n  ui.startGps();\n  // Capturamos las coordenadas GPS\n  var collGPS = await appData.getCollection(\"ContentConectarGPS\");\n  await collGPS.startBrowse();\n  var x = await collGPS.getCurrentItem();\n  if (typeof x !== \"undefined\") {\n    if (x !== null) {\n      if (x.STATUS == 1) {\n        // si status vale 1 significa que no hay error de conexion con el servicio\n        if (x.HGPS.length > 0) {\n          if (x.LATITUD !== \"\") latitud = parseFloat(x.LATITUD);\n          if (x.LONGITUD.length > 0) longitud = parseFloat(x.LONGITUD);\n        }\n      } else {\n        latitud = appData.getCurrentEnterprise().getVariables(\"LATITUD\");\n        longitud = appData.getCurrentEnterprise().getVariables(\"LONGITUD\");\n      }\n    } else {\n      latitud = appData.getCurrentEnterprise().getVariables(\"LATITUD\");\n      longitud = appData.getCurrentEnterprise().getVariables(\"LONGITUD\");\n    }\n  }\n  collGPS = null;\n  x = null;\n\n  // La guardamos en variable global si es distinta\n  if (\n    appData.getCurrentEnterprise().getVariables(\"LATITUD\") !== latitud ||\n    appData.getCurrentEnterprise().getVariables(\"LONGITUD\") !== longitud\n  ) {\n    appData.getCurrentEnterprise().setVariables(\"LATITUD\", latitud);\n    appData.getCurrentEnterprise().setVariables(\"LONGITUD\", longitud);\n    distinta = 1;\n  }\n\n  if (tipo === \"tracking\") {\n    if (distinta === 1) {\n      var colltracking = await appData.getCollection(auxcollobj);\n      var objtracking = await colltracking.createObject();\n      colltracking.addItem(objtracking);\n      objtracking.LATITUD = latitud;\n      objtracking.LONGITUD = longitud;\n      await objtracking.save();\n      replica.start();\n      colltracking.clear();\n      colltracking = null;\n      objtracking = null;\n    }\n  } else {\n    // Aqui se guarda solo la coordenada para saber donde se hizo la visita\n    auxcollobj.LATITUD = latitud;\n    auxcollobj.LONGITUD = longitud;\n  }\n}\n\nasync function PosicionamientoGPS() {\n  var latitud, longitud, veces, x;\n  if (appData.getCurrentEnterprise().getVariables(\"MIUBICACION\") === 0) {\n    latitud = 38.886442;\n    longitud = -7.004351;\n  } else {\n    //var collGPS =appData.getCollection(\"ContentConectarGPS\");\n    var coordenadas = 0;\n    ui.setMaxWaitDialog(2);\n    ui.updateWaitDialog(\"Detectando localizacion del dispositivo\", 1);\n    veces = 0;\n    //collGPS.startBrowse();\n\n    var collGPS = await appData.getCollection(\"GPSColl\");\n    await collGPS.loadAll();\n    var objGPS = collGPS.getObject(0);\n    //collGPS.clear();\n\n    while (coordenadas == 0) {\n      collGPS.clear();\n      if (objGPS != undefined) {\n        if (objGPS.STATUS != 1) {\n          //ui.showToast(\"El campo STATUS vale \" + objGPS.STATUS);\n        } else {\n          // si status vale 1 significa que no hay error de conexion con el servicio\n          if (objGPS.HGPS.length > 0) {\n            if (objGPS.LATITUD !== \"\") latitud = parseFloat(objGPS.LATITUD);\n            if (objGPS.LONGITUD.length > 0)\n              longitud = parseFloat(objGPS.LONGITUD);\n          }\n        }\n      }\n      veces++;\n      if (veces === 200) {\n        coordenadas = 1;\n        latitud = 38.886442;\n        longitud = -7.004351;\n      }\n    }\n    if (veces === 200)\n      appData.getCurrentEnterprise().setVariables(\"MIUBICACION\", 10);\n\n    collGPS = null;\n  }\n  ui.updateWaitDialog(\"Localizacion Terminada\", 2);\n}\n\n//FUNCION PARA COMPROBAR SI TIENE CONEXION CON EL SERVIDOR PARA LAS COLL ONLINE\nasync function ComprobarConexion() {\n  var conexion = 0;\n  try {\n    //appdata.Error.Clear\n    //on error resume next\n    var coll = await appData.getCollection(\"ContentComprobarConexion\");\n    await coll.startBrowse();\n    //appdata.Error.Clear\n    if ((await coll.getCurrentItem()) !== null)\n      if ((await coll.getCurrentItem()).RESULTADO === \"##OK##\") conexion = 1;\n    coll.endBrowse();\n    coll.clear();\n    coll = null;\n    return conexion;\n  } catch (err) {\n    return conexion;\n  }\n}\n\n/***\n *\n * Code from funciones_openStreetMap.js\n *\n ***/\n\nvar bBreakUpdateGpsLoop = false;\nlet allMarkers = [];\n\nfunction startUpdateGpsLoop() {\n  let myPromise = new Promise(function(bien, mal) {\n    bBreakUpdateGpsLoop = false;\n    let ventana = ui.getView(self);\n    while (!bBreakUpdateGpsLoop) {\n      if (!ventana) {\n        break;\n      }\n      try {\n        actualizarGps();\n      } catch (error) {\n        ui.showToast(\"Hubo un error\");\n      }\n      ventana.refreshValue(\"MAP_LONGITUD\", \"MAP_LATITUD\", \"MAP_FGPS\");\n    }\n  });\n  myPromise.then(\n    function() {\n      ui.showToast(\"Todo OK en promesa\");\n    },\n    function() {\n      ui.showToast(\"Error en promesa\");\n    }\n  );\n}\n\nfunction stopUpdateGpsLoop() {\n  bBreakUpdateGpsLoop = true;\n}\n\nfunction startGpsCallback() {\n  let jsParams = {\n    nodeName: \"callbackgps\",\n    timeBetweenUpdates: 10000,\n    minimumMetersDistanceRange: 0,\n    foreground: true,\n    title: \"Titulo\",\n    text: \"Texto\",\n  };\n  ui.startGps(jsParams);\n  ui.showSnackbar(\"Invocado con callback 50 segs\");\n}\n\nfunction startGpsInterval() {\n  let jsParams = {\n    timeBetweenUpdates: 0,\n    minimumMetersDistanceRange: 0,\n  };\n  ui.startGps(jsParams);\n}\n\nfunction comprobarEstadoGps() {\n  let sDeviceOs = appData.getGlobalMacro(\"##DEVICE_OS##\");\n  if (sDeviceOs == \"android\") {\n    let nStatus = ui.checkGpsStatus();\n    if (nStatus === 0) {\n      ui.showToast(\"No hay GPS, no se puede activar.\");\n    }\n    if (nStatus == 1) {\n      ui.showToast(\"Está activada la localización por GPS.\");\n    }\n    if (nStatus == 2) {\n      ui.showToast(\n        \"Está activada la localización por redes wifi y de telefonía.\"\n      );\n    }\n    if (nStatus == 3) {\n      ui.showToast(\n        \"No está activado el GPS ni la ubicación por redes wifi y telefonía, a ver si nos lo activan.\"\n      );\n      ui.askUserForGpsPermission();\n    }\n    if (nStatus == 4) {\n      ui.showToast(\n        \"Está activada la localización por GPS y redes wifi y de telefonía.\"\n      );\n    }\n    if (nStatus == -1) {\n      ui.showToast(\"Error inesperado, compruebe la consola de mensajes.\");\n    }\n  }\n}\n\nasync function actualizarGps() {\n  let collGps, objCollGps;\n  collGps = await appData.getCollection(\"GPSColl\");\n  await collGps.startBrowse();\n  try {\n    objCollGps = await collGps.getCurrentItem();\n    if (!objCollGps) {\n      throw \"GPS no disponible. objCollGps es: \" + objCollGps;\n    }\n    if (objCollGps.STATUS != 1) {\n      throw \"GPS no disponible. STATUS vale: \" + objCollGps.STATUS;\n    }\n    if (!objCollGps.LONGITUD) {\n      throw \"Sin cobertura GPS\";\n    }\n    self.MAP_LONGITUD = objCollGps.LONGITUD;\n    self.MAP_LATITUD = objCollGps.LATITUD;\n    self.MAP_ALTITUD = objCollGps.ALTITUD;\n    self.MAP_VELOCIDAD = objCollGps.VELOCIDAD;\n    self.MAP_RUMBO = objCollGps.RUMBO;\n    self.MAP_FGPS = objCollGps.FGPS;\n    self.MAP_HGPS = objCollGps.HGPS;\n    self.MAP_STATUS = objCollGps.STATUS;\n    self.MAP_SATELITES = objCollGps.SATELITES;\n    self.MAP_FUENTE = objCollGps.FUENTE;\n    self.MAP_PRECISION = objCollGps.PRECISION;\n    ui.getView(self).refresh(\n      \"MAP_LONGITUD,MAP_LATITUD,MAP_ALTITUD,MAP_VELOCIDAD,MAP_RUMBO,MAP_FGPS,MAP_HGPS,MAP_STATUS,MAP_SATELITES,MAP_FUENTE,MAP_PRECISION\"\n    );\n  } finally {\n    collGps.endBrowse();\n  }\n}\n\nfunction onMapClicked(evento) {\n  ui.showToast(\n    \"onMapClicked(): latitude: \" +\n      evento.latitude +\n      \" longitude: \" +\n      evento.longitude\n  );\n  let mapControl = getControl(evento.target);\n  let params = {\n    latitude: evento.latitude,\n    longitude: evento.longitude,\n    //rotation: 100,\n    //alpha: 0.5,\n    draggable: true,\n    icon: \"icon.png\",\n    tag: \"Soy un marker\",\n  };\n  let marker = mapControl.addMarker(params);\n  allMarkers.push(marker);\n}\n\nfunction onMapLongClicked(evento) {\n  ui.showToast(\n    \"onMapLongClicked(): latitude: \" +\n      evento.latitude +\n      \" longitude: \" +\n      evento.longitude\n  );\n}\n\nasync function onMarkerDraggedEnd(evento) {\n  let nResult = await ui.msgBox(\"¿Aquí está bien?\", \"Mensaje\", 4);\n  if (nResult != 6) {\n    // Moverlo a un sitio particular\n    // evento.marker.setPosition(38.8685452, -6.8170906);\n    // Quitarlo\n    evento.marker.remove();\n  }\n  ui.showToast(\n    \"Tag: \" +\n      evento.tag +\n      \" latitude: \" +\n      evento.latitude +\n      \" longitude: \" +\n      evento.longitude\n  );\n}\n\nfunction onMapReady(evento) {\n  ui.showToast(\"El mapa ha sido creado\");\n}\n\nfunction onLocationReady(evento) {\n  ui.showToast(\n    \"Localización encontrada por primera vez.\\nLatitud: \" +\n      evento.latitude +\n      \"\\nLongitud:\" +\n      evento.longitude\n  );\n}\n\nfunction onLocationChanged(evento) {\n  ui.showToast(\n    \"Localización cambiada.\\nLatitud: \" +\n      evento.latitude +\n      \"\\nLongitud:\" +\n      evento.longitude\n  );\n}\n\nfunction onDistanceMeter(evento) {\n  ui.showToast(\"Distancia en metros: \" + evento.distance);\n}\n\nfunction showMarkers() {\n  let nLength = allMarkers.length;\n  for (let i = 0; i < nLength; i++) {\n    let marker = allMarkers[i];\n    marker.setVisible(true);\n  }\n}\n\nfunction hideMarkers() {\n  let nLength = allMarkers.length;\n  for (let i = 0; i < nLength; i++) {\n    let marker = allMarkers[i];\n    marker.setVisible(false);\n  }\n}\n\nfunction setMarkersDraggable(bDraggable) {\n  let nLength = allMarkers.length;\n  for (let i = 0; i < nLength; i++) {\n    let marker = allMarkers[i];\n    marker.setDraggable(bDraggable);\n  }\n}\n\nfunction removeMarkers() {\n  let nLength = allMarkers.length;\n  for (let i = 0; i < nLength; i++) {\n    let marker = allMarkers[i];\n    marker.remove();\n  }\n  allMarkers.splice(0, allMarkers.length);\n}\n\nasync function doChangeMapPois(sMapControl) {\n  let mapContent = await self.getContents(\"ClientesCoord\");\n  if (mapContent.getFilter() == \"t1.NOMBRE = 'Madrid'\") {\n    mapContent.setFilter(\"\");\n  } else {\n    mapContent.setFilter(\"t1.NOMBRE = 'Madrid'\");\n  }\n  mapContent.unlock();\n  mapContent.clear();\n  await mapContent.loadAll();\n  mapContent.lock();\n  ui.refresh(sMapControl);\n}\n\nfunction doRefresh(sControl) {\n  if (!sControl) {\n    throw \"El nombre del control no puede estar vacío\";\n  }\n  ui.refresh(sControl);\n}\n\nfunction getUserLocation(sMapControl) {\n  let mapControl = getControl(sMapControl);\n  if (!mapControl) {\n    return;\n  }\n  let userLocation = mapControl.getUserLocation();\n  if (userLocation === null) {\n    ui.showToast(\"No se ha podido obtener la localización del usuario\");\n  } else {\n    ui.showToast(\n      \"Latitud: \" +\n        userLocation.latitude +\n        \"\\nLongitud: \" +\n        userLocation.longitude\n    );\n  }\n}\n\nfunction isUserLocationEnabled(sMapControl) {\n  let mapControl = getControl(sMapControl);\n  if (!mapControl) {\n    return;\n  }\n  ui.showToast(\"Enabled: \" + mapControl.isUserLocationEnabled());\n}\n\nfunction enableUserLocation(sMapControl) {\n  let mapControl = getControl(sMapControl);\n  if (!mapControl) {\n    return;\n  }\n  mapControl.enableUserLocation();\n}\n\nfunction disableUserLocation(sMapControl) {\n  let mapControl = getControl(sMapControl);\n  if (!mapControl) {\n    return;\n  }\n  mapControl.disableUserLocation();\n}\n\nfunction drawLine(sMapControl) {\n  let mapControl = getControl(sMapControl);\n  if (!mapControl) {\n    return;\n  }\n  mapControl.drawLine(\n    \"ruta 1\",\n    \"#FF0000\",\n    \"normal\",\n    37.348394305664385,\n    -9.723497182130814,\n    37.348394305664385,\n    -0.002672821283340454\n  );\n  mapControl.drawLine(\n    \"ruta 1\",\n    \"#00FF00\",\n    \"dashed\",\n    38.47718888472095,\n    -9.644861854612827,\n    38.63807799294125,\n    -0.1756015419960022\n  );\n  mapControl.drawLine(\n    \"ruta 2\",\n    \"#0000FF\",\n    \"dotted\",\n    41.053614029734,\n    -9.531369879841805,\n    40.98011827779008,\n    0.7152241095900536\n  );\n  mapControl.drawLine(\n    \"ruta 2\",\n    \"#FFFF00\",\n    \"mixed\",\n    43.67910133655382,\n    -10.153294019401073,\n    43.03194923828824,\n    3.0807440355420117\n  );\n}\n\nfunction drawLine2(sMapControl) {\n  let mapControl = getControl(sMapControl);\n  if (!mapControl) {\n    return;\n  }\n  let params = {\n    line: \"ruta 1\",\n    strokeColor: \"#FF0000\",\n    mode: \"normal\",\n    locations: [\n      {\n        latitude: 37.348394305664385,\n        longitude: -9.723497182130814,\n      },\n      {\n        latitude: 37.348394305664385,\n        longitude: -0.002672821283340454,\n      },\n    ],\n  };\n  mapControl.drawLine(params);\n  params = {\n    line: \"ruta 1\",\n    strokeColor: \"#00FF00\",\n    mode: \"dashed\",\n    locations: [\n      {\n        latitude: 38.47718888472095,\n        longitude: -9.644861854612827,\n      },\n      {\n        latitude: 38.63807799294125,\n        longitude: -0.1756015419960022,\n      },\n    ],\n  };\n  mapControl.drawLine(params);\n  params = {\n    line: \"ruta 2\",\n    strokeColor: \"#0000FF\",\n    mode: \"dotted\",\n    locations: [\n      {\n        latitude: 41.053614029734,\n        longitude: -9.531369879841805,\n      },\n      {\n        latitude: 40.98011827779008,\n        longitude: 0.7152241095900536,\n      },\n    ],\n  };\n  mapControl.drawLine(params);\n  params = {\n    line: \"ruta 2\",\n    strokeColor: \"#FFFF00\",\n    mode: \"mixed\",\n    locations: [\n      {\n        latitude: 43.67910133655382,\n        longitude: -10.153294019401073,\n      },\n      {\n        latitude: 43.03194923828824,\n        longitude: 3.0807440355420117,\n      },\n    ],\n  };\n  mapControl.drawLine(params);\n}\n\nfunction drawRoute(sMapControl) {\n  let mapControl = getControl(sMapControl);\n  if (!mapControl) {\n    return;\n  }\n  let params = {\n    route: \"ruta 1\",\n    // Estos dos parámetros solo están soportados con OpenStreetMap\n    // urlType             : \"osm2po\",\n    // url                 : \"http://127.0.0.1:8888/Osm2poService\",\n    // urlType             : \"osrm\",\n    // url                 : \"http://127.0.0.1:5000/route/v1/\",\n    // Usar accurate para tener una ruta precisa con Google Maps. Consume bastante más recursos y puede hacer el mapa de Google lento\n    // accurate            : true,\n    // Badajoz\n    sourceLatitude: 38.8685452,\n    sourceLongitude: -6.8170906,\n    // Madrid\n    destinationLatitude: 40.4167747,\n    destinationLongitude: -3.70379019,\n    /*\n     * Usar waypoints para indicar una ruta con más de dos posiciones (no\n     * soportado con osm2po)\n     */\n\n    // waypoints: [{\n    //     // Madrid\n    //     latitude : 40.4893538,\n    //     longitude: -3.6827461\n    // }, {\n    //     // Badajoz\n    //     latitude : 38.8685452,\n    //     longitude: -6.8170906\n    // }, {\n    //     // Barcelona\n    //     latitude : 41.3850632,\n    //     longitude: 2.1734035\n    // }],\n    mode: \"driving\",\n    strokeColor: \"#FFFF00\",\n    strokeWidth: 5.0,\n  };\n  mapControl.drawRoute(params);\n  //mapControl.zoomTo(40.4167747, -3.70379019);\n}\n\nfunction drawArea(sMapControl) {\n  let mapControl = getControl(sMapControl);\n  if (!mapControl) {\n    return;\n  }\n  let params = {\n    id: \"Area #2\",\n    fillcolor: \"#7F00FF00\",\n    color: \"#FF0000FF\",\n    width: 5,\n    pattern: \"normal\",\n    // El polígono a dibujar (La Coruña -> Bilbao -> Lisboa)\n    data: [\n      \"43.3712591, -8.4188010\",\n      \"43.2603479, -2.9334110\",\n      \"38.7166700, -9.1333300\",\n    ],\n  };\n  mapControl.drawArea(params);\n}\n\nfunction drawEncodeArea(sMapControl) {\n  let mapControl = getControl(sMapControl);\n  if (!mapControl) {\n    return;\n  }\n  let params = {\n    id: \"Area #1\",\n    fillcolor: \"#7F0000FF\",\n    color: \"#FFFF0000\",\n    width: 5,\n    pattern: \"normal\",\n    // El polígono a dibujar (Badajoz -> Madrid -> Barcelona -> Valencia)\n    data: toEncoded([\n      \"38.8685452, -6.8170906\",\n      \"40.4167747, -3.70379019\",\n      \"41.3850632, 2.1734035\",\n      \"39.4561165, -0.3545661\",\n    ]),\n  };\n  mapControl.drawEncodeArea(params);\n}\n\nfunction removeArea(sMapControl) {\n  let mapControl = getControl(sMapControl);\n  if (!mapControl) {\n    return;\n  }\n  mapControl.removeArea(\"Area #1\");\n}\n\nfunction clearAllAreas(sMapControl) {\n  let mapControl = getControl(sMapControl);\n  if (!mapControl) {\n    return;\n  }\n  mapControl.clearAllAreas();\n}\n\nfunction routeTo(sMapControl) {\n  let mapControl = getControl(sMapControl);\n  if (!mapControl) {\n    return;\n  }\n  let params = {\n    route: \"ruta 1\",\n    sourceLatitude: 40.4167747,\n    sourceLongitude: -3.70379019,\n    destinationLatitude: 41.3850632,\n    destinationLongitude: 2.1734035,\n    mode: \"driving\",\n    strokeColor: \"#FFFF00\",\n    strokeWidth: 5.0,\n    //Valores posibles: internal, external, google_maps, osmand, osmand_plus\n    source: \"external\",\n  };\n  mapControl.routeTo(params);\n  //mapControl.zoomTo(40.4167747, -3.70379019);\n}\n\nfunction clearRoute(sMapControl) {\n  let mapControl = getControl(sMapControl);\n  if (!mapControl) {\n    return;\n  }\n  mapControl.clearRoute(\"ruta 1\");\n}\n\nfunction clearAllRoutes(sMapControl) {\n  let mapControl = getControl(sMapControl);\n  if (!mapControl) {\n    return;\n  }\n  mapControl.clearAllRoutes();\n}\n\nfunction clearLine(sMapControl) {\n  let mapControl = getControl(sMapControl);\n  if (!mapControl) {\n    return;\n  }\n  mapControl.clearLine(\"ruta 1\");\n}\n\nfunction clearAllLines(sMapControl) {\n  let mapControl = getControl(sMapControl);\n  if (!mapControl) {\n    return;\n  }\n  mapControl.clearAllLines();\n}\n\nfunction showPoisMenu(sMapControl) {\n  let mapControl = getControl(sMapControl);\n  if (!mapControl) {\n    return;\n  }\n  mapControl.showPoisMenu();\n}\n\nfunction hidePoisMenu(sMapControl) {\n  let mapControl = getControl(sMapControl);\n  if (!mapControl) {\n    return;\n  }\n  mapControl.hidePoisMenu();\n}\n\nfunction togglePoisMenu(sMapControl) {\n  let mapControl = getControl(sMapControl);\n  if (!mapControl) {\n    return;\n  }\n  mapControl.togglePoisMenu();\n}\n\nfunction zoomTo(sMapControl) {\n  let mapControl = getControl(sMapControl);\n  if (!mapControl) {\n    return;\n  }\n  mapControl.zoomTo(38.886546, -7.0043193);\n}\n\nfunction zoomToEncodeData(sMapControl) {\n  let mapControl = getControl(sMapControl);\n  if (!mapControl) {\n    return;\n  }\n  mapControl.zoomToEncodeData(\n    toEncoded([\"38.8685452, -6.8170906\", \"40.4167747, -3.70379019\"])\n  );\n}\n\nfunction zoomToBounds(sMapControl) {\n  let mapControl = getControl(sMapControl);\n  if (!mapControl) {\n    return;\n  }\n  mapControl.zoomToBounds([\n    \"35.946850084, -9.39288367353\",\n    \"43.7483377142, 3.03948408368\",\n  ]);\n}\n\nfunction zoomToMyLocation(sMapControl) {\n  let mapControl = getControl(sMapControl);\n  if (!mapControl) {\n    return;\n  }\n  mapControl.zoomToMyLocation(20);\n}\n\nfunction restrictMapToBounds(sMapControl) {\n  let mapControl = getControl(sMapControl);\n  if (!mapControl) {\n    return;\n  }\n  mapControl.restrictMapToBounds([\n    \"35.946850084, -9.39288367353\",\n    \"43.7483377142, 3.03948408368\",\n  ]);\n}\n\nfunction startDistanceMeter(sMapControl) {\n  let mapControl = getControl(sMapControl);\n  if (!mapControl) {\n    return;\n  }\n  let jsParams = {\n    latitude: 38.886546,\n    longitude: -7.0043193,\n    startMarkerIcon: \"start_distance_marker_icon.png\",\n    endMarkerIcon: \"end_distance_marker_icon.png\",\n  };\n  mapControl.startDistanceMeter(jsParams);\n  // mapControl.startDistanceMeter(\"38.886546,-7.0043193\");\n  mapControl.zoomTo(38.886546, -7.0043193);\n}\n\nfunction stopDistanceMeter(sMapControl) {\n  let mapControl = getControl(sMapControl);\n  if (!mapControl) {\n    return;\n  }\n  mapControl.stopDistanceMeter();\n}\n\nasync function testInexistente(sMapControl) {\n  let contents = await self.getContents(\"ClientesCoord\");\n  let newObject = await contents.createObject();\n  newObject.NOMBRE = \"Test POI\";\n  newObject.DIRECCION = \"Calle Falsa\";\n  contents.unlock();\n  contents.clear();\n  contents.addItem(newObject);\n  contents.lock();\n  let window = ui.getView(self);\n  if (!window) {\n    return;\n  }\n  window.refresh(sMapControl);\n}\n\nfunction distanceTo() {\n  //let jsParams = [\"38.8685452, -6.8170906\", \"40.4167747, -3.70379019\"];\n  let jsParams = [\n    {\n      latitude: 38.8685452,\n      longitude: -6.8170906,\n    },\n    {\n      latitude: 40.4167747,\n      longitude: -3.70379019,\n    },\n  ];\n  let nMeters = new GpsTools().distanceTo(jsParams);\n  ui.showToast(\"Distancia entre Badajoz y Madrid: \" + nMeters + \" metros.\");\n}\n\nasync function getAddressFromPosition() {\n  let result = new GpsTools().getAddressFromPosition(\"38.8862106, -7.0040345\");\n  let str =\n    \"Localidad: \" +\n    result.locality +\n    \"\\nSublocalidad: \" +\n    result.subLocality +\n    \"\\nÁrea administración: \" +\n    result.adminArea +\n    \"\\nSubárea de administración: \" +\n    result.subAdminArea +\n    \"\\nCaracterísticas: \" +\n    result.features +\n    \"\\nPaís: \" +\n    result.country +\n    \"\\nCódigo país: \" +\n    result.countryCode +\n    \"\\nCalle: \" +\n    result.street +\n    \"\\nNúmero: \" +\n    result.number +\n    \"\\nDirección: \" +\n    result.address +\n    \"\\nCódigo postal: \" +\n    result.postal;\n  await ui.msgBox(str, \"Resultado\", 0);\n}\n\nasync function containsLocation() {\n  let bResult;\n  await ui.msgBox(\n    \"¿Es Teruel una ciudad contenida en un polígono formado por La Coruña -> Bilbao -> Lisboa?\",\n    \"Mensaje\",\n    0\n  );\n  bResult = new GpsTools().containsLocation(\"40.3633442, -1.0893794\", [\n    \"43.3712591, -8.4188010\",\n    \"43.2603479, -2.9334110\",\n    \"38.7166700, -9.1333300\",\n  ]);\n  if (bResult) {\n    await ui.msgBox(\"Por ahí anda Teruel\", \"Mensaje\", 0);\n  } else {\n    await ui.msgBox(\"No, Teruel no está ahí\", \"Mensaje\", 0);\n  }\n  await ui.msgBox(\n    \"¿Es Teruel una ciudad contenida en un polígono formado por Badajoz -> Madrid -> Barcelona -> Valencia?\",\n    \"Mensaje\",\n    0\n  );\n  bResult = new GpsTools().containsLocation(\"40.3633442, -1.0893794\", [\n    \"38.8685452, -6.8170906\",\n    \"40.4167747, -3.70379019\",\n    \"41.3850632, 2.1734035\",\n    \"39.4561165, -0.3545661\",\n  ]);\n  if (bResult) {\n    await ui.msgBox(\"Por ahí anda Teruel\", \"Mensaje\", 0);\n  } else {\n    await ui.msgBox(\"No, Teruel no está ahí\", \"Mensaje\", 0);\n  }\n}\n\nasync function getLastKnownLocation() {\n  let location = new GpsTools().getLastKnownLocation();\n  if (!location) {\n    ui.showToast(\"No hay última localización conocida\");\n    return;\n  }\n  await ui.msgBox(\n    \"Latitud: \" +\n      location.latitude +\n      \"\\nLongitud: \" +\n      location.longitude +\n      \"\\nPrecisión (metros): \" +\n      location.accuracy +\n      \"\\nAltitud (metros elipsis WSG 84): \" +\n      location.altitude +\n      \"\\nRumbo (grados): \" +\n      location.bearing +\n      \"\\nVelocidad (metros/segundo): \" +\n      location.speed +\n      \"\\nFecha: \" +\n      location.time.toString(),\n    \"Mensaje\",\n    0\n  );\n}\n\nfunction encoded() {\n  let sEncoded = toEncoded([\n    \"38.8685452, -6.8170906\",\n    \"40.4167747, -3.70379019\",\n  ]);\n  ui.showToast(sEncoded);\n}\n\nfunction toEncoded(lstCoords) {\n  if (!lstCoords) {\n    return null;\n  }\n  return new GpsTools().encode(lstCoords);\n}\n\nfunction doFollowUserLocation(sControl, bFollow) {\n  let control = getControl(sControl);\n  if (!control) {\n    return;\n  }\n  control.setFollowUserLocation(bFollow);\n}\n\nfunction doSetMapType(sControl, sMapType) {\n  let control = getControl(sControl);\n  if (!control) {\n    return;\n  }\n  control.setMapType(sMapType);\n}\n\nfunction getControl(sControl) {\n  if (!sControl) {\n    throw \"El nombre del control no puede estar vacío\";\n  }\n  let window = ui.getView(self);\n  if (!window) {\n    return null;\n  }\n  let control = window[sControl];\n  if (!control) {\n    return null;\n  }\n  if (control === undefined) {\n    return null;\n  }\n  return control;\n}\n\n/***\n *\n * Code from pdf.js\n *\n ***/\n\nfunction AddTableCellText(\n  pdf,\n  cellText,\n  leftBorder,\n  topBorder,\n  rightBorder,\n  bottomBorder\n) {\n  pdf.setCellBorder(\"none\");\n  if (leftBorder === true) pdf.setCellBorder(\"left\");\n  if (rightBorder === true) pdf.setCellBorder(\"right\");\n  if (topBorder === true) pdf.setCellBorder(\"top\");\n\n  if (bottomBorder) pdf.setCellBorder(\"bottom\");\n  pdf.addCellText(cellText);\n}\n\nasync function GeneratePDFDocument() {\n  var pdf01 = createObject(\"XOnePDF\");\n  pdf01.create(\"PDFbyXOne.pdf\");\n  pdf01.open();\n\n  pdf01.setFont(\"helvetica\");\n  pdf01.setFontSize(12);\n  pdf01.setFontStyle(\"normal\");\n  pdf01.setFontColor(\"#000000\");\n\n  pdf01.createTable(1);\n  pdf01.setTableCellWidths(400);\n  AddTableCellText(pdf01, \"\", 0, 0, 0, 0);\n  pdf01.setAlignment(\"center\");\n  AddTableCellText(pdf01, \"Prueba Crear PDF\", 0, 0, 0, 0);\n  pdf01.addTable();\n\n  pdf01.setFontSize(9);\n\n  pdf01.createTable(1);\n  pdf01.setTableCellWidths(400);\n  AddTableCellText(pdf01, \" \", 0, 0, 0, 0);\n  pdf01.addTable();\n\n  pdf01.createTable(3);\n  pdf01.setTableCellWidths(280, 70, 50);\n  AddTableCellText(pdf01, \"\", 0, 0, 0, 0);\n  pdf01.setAlignment(\"left\");\n  AddTableCellText(pdf01, \"Serie: \", 1, 1, 0, 0);\n  pdf01.setAlignment(\"center\");\n  AddTableCellText(pdf01, self.MAP_PDFSERIE, 0, 1, 1, 0);\n  pdf01.addTable();\n\n  pdf01.createTable(6);\n  pdf01.setTableCellWidths(60, 70, 60, 90, 30, 90);\n  pdf01.setAlignment(\"left\");\n  AddTableCellText(pdf01, \"FECHA \", 1, 1, 0, 1);\n  pdf01.setAlignment(\"center\");\n  AddTableCellText(pdf01, getDate(self.MAP_PDFFECHA), 0, 1, 1, 1);\n  pdf01.setAlignment(\"left\");\n  AddTableCellText(pdf01, \" \", 0, 1, 0, 1);\n  pdf01.setAlignment(\"center\");\n  AddTableCellText(pdf01, \"\", 0, 1, 1, 1);\n  pdf01.setAlignment(\"left\");\n  AddTableCellText(pdf01, \"Nº \", 0, 1, 0, 1);\n  pdf01.setAlignment(\"center\");\n  AddTableCellText(pdf01, self.MAP_PDFNUMERO, 0, 1, 1, 1);\n  pdf01.addTable();\n\n  pdf01.createTable(1);\n  pdf01.setTableCellWidths(400);\n  AddTableCellText(pdf01, \"\", 0, 0, 0, 0);\n  pdf01.setAlignment(\"left\");\n  AddTableCellText(pdf01, cstr(self.MAP_PDFTEXT), 0, 0, 0, 0);\n  pdf01.addTable();\n\n  pdf01.addImageSetXY(\"faro.jpg\", 200, 100, 150, 75);\n\n  pdf01.close();\n\n  pdf01.flattenPdf(\"\");\n\n  //var a=ui.mgBox (\"Quiere Abrir el PDF?\",\"PDF GENERADO\",4);\n  if ((await ui.msgBox(\"Quiere Abrir el PDF?\", \"PDF GENERADO\", 4)) === 6)\n    pdf01.launchPDF(\"PDFbyXOne.pdf\");\n\n  pdf01 = null;\n}\n\nfunction getDate(stdate) {\n  return stdate.toString().substr(0, 11);\n\n  // \tgetDate = \"\"\n  // \tgetDate = mid(cstr(stdate),1,11)\n  // \texit function\n}\n\n/***\n *\n * Code from vbscriptsupport.js\n *\n ***/\n\nfunction VBScriptSupport() {\n  this.cstr = function(value) {\n    return safeToString(value);\n  };\n\n  this.now = function() {\n    return new Date();\n  };\n\n  this.len = function(str) {\n    return safeToString(str).length;\n  };\n\n  this.cint = function(value) {\n    return parseInt(value);\n  };\n\n  this.left = function(str, n) {\n    if (n <= 0) {\n      return new String();\n    } else if (n > String(str).length) {\n      return safeToString(str);\n    } else {\n      return safeToString(str).substring(0, n);\n    }\n  };\n\n  this.replace = function(source, search, replacement) {\n    source = safeToString(source);\n    search = safeToString(search);\n    replacement = safeToString(replacement);\n    search = escapeRegularExpression(search);\n    source.replace(search, replacement);\n    return source;\n  };\n\n  this.day = function(mDate) {\n    mDate = safeToDate(mDate);\n    return mDate.getDate();\n  };\n\n  this.month = function(mDate) {\n    mDate = safeToDate(mDate);\n    return mDate.getMonth();\n  };\n\n  this.year = function(mDate) {\n    mDate = safeToDate(mDate);\n    return mDate.getFullYear();\n  };\n\n  this.right = function(str, n) {\n    str = new String(str);\n    if (n <= 0 || n > str.length) {\n      return str;\n    } else {\n      var iLen = str.length;\n      return str.substring(iLen, iLen - n);\n    }\n  };\n\n  this.mid = function(str, start, len) {\n    if (start < 0 || len < 0) {\n      return str;\n    }\n    var iEnd,\n      iLen = new String(str).length;\n    if (start + len > iLen) {\n      iEnd = iLen;\n    } else {\n      iEnd = start + len;\n    }\n    return new String(str).substring(start, iEnd);\n  };\n\n  this.inStr = function(strSearch, charSearchFor) {\n    for (i = 0; i < len(strSearch); i++) {\n      if (charSearchFor == mid(strSearch, i, 1)) {\n        return i;\n      }\n    }\n    return -1;\n  };\n\n  this.lcase = function(str) {\n    if (isString(str)) {\n      return str.toLowerCase();\n    }\n    return new String(str).toLowerCase();\n  };\n\n  this.ucase = function(str) {\n    if (isString(str)) {\n      return str.toUpperCase();\n    }\n    return new String(str).toUpperCase();\n  };\n\n  this.abs = function(value) {\n    return Math.abs(value);\n  };\n\n  this.trim = function(str) {\n    str = safeToString(str);\n    return str.trim();\n  };\n\n  this.split = function(str, delimiter) {\n    return str.split(delimiter);\n  };\n\n  this.dateDiff = function(sPeriod, mDate1, mDate2) {\n    mDate1 = safeToDate(mDate1);\n    mDate2 = safeToDate(mDate2);\n    nDiff = Math.abs(mDate1.getTime() - mDate2.getTime());\n    switch (sPeriod) {\n      case \"h\":\n        return nDiff / 3600000;\n      case \"n\":\n        return nDiff / 60000;\n      default:\n        throw new Error(\"dateDiff(): Unknown date period \" + sPeriod);\n    }\n  };\n\n  this.dateAdd = function(sPeriod, nNumber, mDate) {\n    mDate = safeToDate(mDate);\n    switch (sPeriod) {\n      case \"yyyy\":\n        //Year\n        mDate.setYear(mDate.getYear() + nNumber);\n        return mDate;\n      case \"q\":\n        //Quarter\n        return mDate;\n      case \"m\":\n        //Month\n        mDate.setMonth(mDate.getMonth() + nNumber);\n        return mDate;\n      case \"y\":\n        //Day of year\n        return mDate;\n      case \"d\":\n        //Day\n        mDate.setDate(mDate.getDate() + nNumber);\n        return mDate;\n      case \"w\":\n        //Weekday\n        return mDate;\n      case \"ww\":\n        //Week of year\n        return mDate;\n      case \"h\":\n        //Hour\n        mDate.setHours(mDate.getHours() + nNumber);\n        return mDate;\n      case \"n\":\n        //Minute\n        mDate.setMinutes(mDate.getMinutes() + nNumber);\n        return mDate;\n      case \"s\":\n        //Second\n        mDate.setSeconds(mDate.getSeconds() + nNumber);\n        return mDate;\n      default:\n        throw new Error(\"dateAdd(): Unknown date period \" + sPeriod);\n    }\n  };\n}\n\nvar vbSupport = new VBScriptSupport();\n\nfunction isNothing(obj) {\n  if (obj === null) {\n    return true;\n  }\n  if (obj == \"undefined\") {\n    return true;\n  }\n  return false;\n}\n\nfunction isSomething(obj) {\n  if (obj === null) {\n    return false;\n  }\n  if (obj == \"undefined\") {\n    return false;\n  }\n  return true;\n}\n\nfunction getClassName(obj) {\n  if (isNothing(obj)) {\n    return null;\n  }\n  return obj.constructor.name;\n}\n\nfunction isFloatNumber(n) {\n  return n === +n && n !== (n | 0);\n}\n\nfunction isIntegerNumber(n) {\n  return n === +n && n === (n | 0);\n}\n\nfunction isNumber(obj) {\n  if (isNothing(obj)) {\n    return false;\n  }\n  return !isNaN(parseFloat(obj)) && isFinite(obj);\n}\n\nfunction isString(obj) {\n  return typeof obj === \"string\" || obj instanceof String;\n}\n\nfunction isEmptyString(obj) {\n  if (!isString(obj)) {\n    return false;\n  }\n  return !obj || 0 === obj.length;\n}\n\nfunction isDate(obj) {\n  if (obj instanceof Date) {\n    return true;\n  }\n  return false;\n}\n\nfunction safeToString(value) {\n  if (isNothing(value)) {\n    return new String();\n  }\n  return new String(value);\n}\n\nfunction safeToDate(mDate) {\n  if (isDate(mDate)) {\n    return mDate;\n  }\n  return new Date(replaceAll(safeToString(mDate), \"-\", \"/\"));\n}\n\nfunction escapeRegularExpression(str) {\n  return str.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n}\n\nfunction replaceAll(sSource, sSearch, sReplacement) {\n  sSearch = escapeRegularExpression(sSearch);\n  return sSource.split(sSearch).join(sReplacement);\n}\n\n/***\n *\n * Code from nfc.js\n *\n ***/\n\nfunction ponerCallbackNfc() {\n  let nfc = new XOneNFC();\n  nfc.setOnTagDiscoveredCallback(tagNfcEncontrado);\n}\n\nfunction tagNfcEncontrado(tag) {\n  let sMessage = \"ID tag NFC (hex): \" + tag.getHexId();\n  if (tag.isTechnologyAvailable(\"ndef\")) {\n    // Vamos a manipular NDEF, decírselo al frame\n    tag.setType(\"ndef\");\n    let ndefMessage = tag.getNdefMessage();\n    let allRecords = ndefMessage.getAllRecords();\n    if (!allRecords || allRecords.length <= 0) {\n      sMessage = sMessage + \"\\nNo hay records NDEF en este tag\";\n    } else {\n      for (let i = 0; i < allRecords.length; i++) {\n        let record = allRecords[i];\n        let sMimeType = record.getMimeType();\n        let sText = record.getText();\n        sMessage =\n          sMessage +\n          \"\\nRecord #1\\nMime type: \" +\n          sMimeType +\n          \"\\nText: \" +\n          sText;\n      }\n    }\n    self.MAP_DATA = sMessage;\n    ui.refreshValue(\"MAP_DATA\");\n  } else if (tag.isTechnologyAvailable(\"nfc_v\")) {\n    tag.setType(\"nfc_v\");\n    tag.connect();\n    ui.showToast(\"Es NFC-V: \" + tag.readNfcV());\n  } else {\n    ui.showToast(\"Tag NFC inválido\");\n  }\n}\n\n/***\n *\n * Code from dnie.js\n *\n ***/\n\n// Lectura de DNI datos personales\nfunction enableDnieReader() {\n  if (self.MAP_CAN_NUMBER === \"\") {\n    ui.showSnackbar(\"Introduzca el CAN del DNI electrónico\");\n    return;\n  }\n  var options = {\n    readProfileData: true,\n    // Recuperar la foto del usuario, la de la firma y los certificados de autenticación y firma es lento. Hacerlo sólo cuando sea necesario.\n    readUserImage: true,\n    readSignatureImage: true,\n    canNumber: self.MAP_CAN_NUMBER,\n    onDnieRead: function(dnieReadResult) {\n      self.MAP_TEXT = \"DNI number: \" + dnieReadResult.getDniNumber() + \"\\n\";\n      self.MAP_TEXT =\n        self.MAP_TEXT +\n        \"Document type: \" +\n        dnieReadResult.getDocumentType() +\n        \"\\n\";\n      self.MAP_TEXT =\n        self.MAP_TEXT + \"Name: \" + dnieReadResult.getName() + \"\\n\";\n      self.MAP_TEXT =\n        self.MAP_TEXT + \"Surname: \" + dnieReadResult.getSurname() + \"\\n\";\n      self.MAP_TEXT =\n        self.MAP_TEXT +\n        \"Date of birth: \" +\n        dnieReadResult.getDateOfBirth() +\n        \"\\n\";\n      self.MAP_TEXT =\n        self.MAP_TEXT +\n        \"Date of expiry: \" +\n        dnieReadResult.getDateOfExpiry() +\n        \"\\n\";\n      self.MAP_TEXT =\n        self.MAP_TEXT +\n        \"Nationality: \" +\n        dnieReadResult.getNationality() +\n        \"\\n\";\n      self.MAP_TEXT =\n        self.MAP_TEXT + \"Issuer: \" + dnieReadResult.getIssuer() + \"\\n\";\n      self.MAP_TEXT =\n        self.MAP_TEXT +\n        \"Optional data: \" +\n        dnieReadResult.getOptionalData() +\n        \"\\n\";\n      self.MAP_TEXT = self.MAP_TEXT + \"Sex: \" + dnieReadResult.getSex() + \"\\n\";\n      self.MAP_TEXT =\n        self.MAP_TEXT + \"Birth place: \" + dnieReadResult.getBirthPlace() + \"\\n\";\n      self.MAP_TEXT =\n        self.MAP_TEXT + \"Address: \" + dnieReadResult.getAddress() + \"\\n\";\n      self.MAP_TEXT =\n        self.MAP_TEXT +\n        \"Custody info: \" +\n        dnieReadResult.getCustodyInfo() +\n        \"\\n\";\n      self.MAP_TEXT =\n        self.MAP_TEXT + \"Icao name: \" + dnieReadResult.getIcaoName() + \"\\n\";\n      self.MAP_TEXT =\n        self.MAP_TEXT + \"Other info: \" + dnieReadResult.getOtherInfo() + \"\\n\";\n      self.MAP_TEXT =\n        self.MAP_TEXT + \"Profession: \" + dnieReadResult.getProfession() + \"\\n\";\n      self.MAP_TEXT =\n        self.MAP_TEXT + \"Phone: \" + dnieReadResult.getPhone() + \"\\n\";\n      self.MAP_TEXT =\n        self.MAP_TEXT + \"Title: \" + dnieReadResult.getTitle() + \"\\n\";\n      self.MAP_TEXT = self.MAP_TEXT + \"Summary: \" + dnieReadResult.getSummary();\n      self.MAP_USER_IMAGE = dnieReadResult.getUserImage(\n        appData.getFilesPath() +\n          \"user_\" +\n          dnieReadResult.getDniNumber() +\n          \".png\"\n      );\n      self.MAP_SIGNATURE_IMAGE = dnieReadResult.getSignatureImage(\n        appData.getFilesPath() +\n          \"signature_\" +\n          dnieReadResult.getDniNumber() +\n          \".png\"\n      );\n      ui.refreshValue(\"MAP_TEXT\");\n      ui.refresh(\"MAP_TEXT\", \"MAP_USER_IMAGE\", \"MAP_SIGNATURE_IMAGE\");\n    },\n    onDnieReadError: function(sReadError) {\n      self.MAP_TEXT = \"Error: \" + sReadError;\n      ui.refreshValue(\"MAP_TEXT\");\n    },\n    onProgressUpdated: function(sMessage, nProgress) {\n      self.MAP_TEXT = \"Reading DNIe.\\nProgress: \" + nProgress + \"\\n\" + sMessage;\n      ui.refreshValue(\"MAP_TEXT\");\n    },\n  };\n  var nfc = createObject(\"XOneNFC\");\n  nfc.enableDnieReader(options);\n  ui.showSnackbar(\"Pase su DNI electrónico por el lector NFC\");\n}\n\nfunction disableDnieReader() {\n  var nfc = createObject(\"XOneNFC\");\n  nfc.disableDnieReader();\n}\n\n// Ejemplo de PDFs\nfunction generatePdfDemo() {\n  var source =\n    \"<P> <TABLE border='1'> <CAPTION align='top'> A more complex table-within-a table. </CAPTION> <TR> <TH> Outer Table </TH> <TD> <TABLE border='1'> <CAPTION align='top'> An inner table showing a variety of headings and data items. </CAPTION> <TR> <TH colspan='5'> Inner Table </TH> </TR> <TR> <TH rowspan='2' colspan='2'> CORNER </TH> <TH colspan='3'> Head1 </TH> </TR> <TR> <TH rowspan='2'> Head2 </TH> <TH colspan='2'> Head3 </TH> </TR> <TR> <TH> Head4 </TH> <TH> Head5 </TH> <TH> Head6 </TH> </TR> <TR> <TD> A </TD> <TD rowspan='2' valign='middle' bgcolor= 'yellow'> Two Tall </TD> <TD bgcolor='green'> <UL> <LI> Lists can be table data </LI> <LI> Images can be table data </LI> </UL> </TD> <TD colspan='2' align='center'> Two Wide </TD> </TR> <TR valign='middle'> <TD> aaaaa </TD> <TD align='center'> A <A href='form.html'>Form</A> in a table: <FORM Method='POST' Action= 'http://www.december.com/cgi-bin/formmail.secure.cgi'> <INPUT type='hidden' name='recipient' value='nobody@december.com'><INPUT type= 'hidden' name='subject' value= 'Table Example'> Your age: <INPUT type= 'text' name='user-age' size='2'><BR> What is your favorite ice cream?<BR> <SELECT name='favorite-icecream'> <OPTION> Vanilla </OPTION> <OPTION> Chocolate </OPTION> <OPTION> Cherry Garcia </OPTION> <OPTION> Pizza Pancake </OPTION> <OPTION> None of the above! </OPTION> </SELECT><BR> <INPUT type='submit' value='OK'> <INPUT type='reset' value='Cancel'> </FORM> </TD> <TD> <TABLE> <CAPTION> No border </CAPTION> <TR> <TH> Little </TH> </TR> <TR> <TD> Table </TD> </TR> </TABLE> </TD> <TD> Multiple<BR> line<BR> item </TD> </TR> </TABLE> </TD> </TR> </TABLE> <P> For more practical examples, see the Periodic Table of the Elements, <A href= 'http://www.webelements.com/'>WebElements</A>. </P> <P> You can see a <A href='tablem.html'>variety of table cellspacing and cellpadding attributes demonstrated</A>. </P>\";\n  var pdf = createObject(\"XOnePDF\");\n  pdf.permissions(\"assembly\");\n  pdf.create(appData.getFilesPath() + \"PDFbyXOne.pdf\");\n  pdf.open();\n  pdf.fromHtml(source);\n  pdf.close();\n  pdf.launchPDF();\n}\n\n// Lectura de DNIs (firma digital)\nfunction signPdfDemo() {\n  var fm = createObject(\"FileManager\");\n  var nResult = fm.fileExists(appData.getFilesPath() + \"PDFbyXOne.pdf\");\n  if (nResult != 0) {\n    ui.showSnackbar(\"El fichero PDF a firmar no existe. Genérelo primero.\");\n    return;\n  }\n  if (self.MAP_CAN_NUMBER == \"\") {\n    ui.showSnackbar(\"Introduzca el CAN del DNI electrónico\");\n    return;\n  }\n  if (self.MAP_PIN == \"\") {\n    ui.showSnackbar(\"Introduzca el PIN del DNI electrónico\");\n    return;\n  }\n  var options = {\n    readSignatureCertificate: true,\n    canNumber: self.MAP_CAN_NUMBER,\n    pin: self.MAP_PIN,\n    onDnieRead: function(dnieReadResult) {\n      var pdf = createObject(\"XOnePDF\");\n      var sSourcePdf = appData.getFilesPath() + \"PDFbyXOne.pdf\";\n      var sSignedPdf = appData.getFilesPath() + \"PDFbyXOne_signed.pdf\";\n      pdf.signPdfWithKey(\n        sSourcePdf,\n        sSignedPdf,\n        dnieReadResult.getSignatureKey(),\n        dnieReadResult.getSignatureCertificateChain()\n      );\n      pdf.launchPDF(sSignedPdf);\n    },\n    onDnieReadError: function(sReadError) {\n      self.MAP_TEXT = \"Error: \" + sReadError;\n      ui.refreshValue(\"MAP_TEXT\");\n    },\n    onProgressUpdated: function(sMessage, nProgress) {\n      self.MAP_TEXT =\n        \"Reading DNIe.\\nProgress: \" + nProgress + \"%\\n\" + sMessage;\n      ui.refreshValue(\"MAP_TEXT\");\n    },\n  };\n  var nfc = createObject(\"XOneNFC\");\n  nfc.enableDnieReader(options);\n  ui.showSnackbar(\"Pase su DNI electrónico por el lector NFC\");\n}\n\nfunction sendSignedPdf() {\n  var fm = createObject(\"FileManager\");\n  var sSignedPdf = appData.getFilesPath() + \"PDFbyXOne_signed.pdf\";\n  var nResult = fm.fileExists(sSignedPdf);\n  if (nResult != 0) {\n    ui.showSnackbar(\"El fichero PDF firmado no existe. Fírmelo primero.\");\n    return;\n  }\n  ui.sendMail(\n    \"\",\n    \"\",\n    \"PDF firmado\",\n    \"Adjunto PDF firmado con DNI electrónico\",\n    sSignedPdf\n  );\n}\n\n/***\n *\n * Code from funciones_calendario.js\n *\n ***/\n\nasync function inicializarCal() {\n  //Primero eliminamos los registros que haya. Lo hacemos de forma logica.\n  //Habra algun mantenimiento programado que elimine estos registros, de forma que los borrados no entren en replica.\n  var cCal = await appData.getCollection(\"ContentdatosCalendario\");\n  var objCalendario;\n  var stDia, fecha;\n  for (var k = 1; k <= 5; k++) {\n    fecha = new Date();\n    objCalendario = await cCal.createObject();\n    cCal.addItem(objCalendario);\n    //  Vamos a agregar algunos eventos en distintos días para probar.\n    stDia = \"00\" + k * 5;\n    stDia = Right(stDia, 2);\n    objCalendario.FECHA =\n      \"\" + fecha.getFullYear() + \"-\" + fecha.getMonth() + \"-\" + stDia;\n    objCalendario.HORAINI = \"19:00\";\n    objCalendario.HORAFIN = \"23:00\";\n    if (k === 1 || k === 3) {\n      objCalendario.TIPO = \"Info: Azul\";\n      objCalendario.DESCRIPCION = \"Tarea de información\";\n    } else {\n      if (k === 2 || k === 5) {\n        objCalendario.TIPO = \"Visita: Naranja\";\n        objCalendario.DESCRIPCION = \"Visita al cliente\";\n      } else {\n        objCalendario.TIPO = \"Pedido: Verde\";\n        objCalendario.DESCRIPCION = \"Visita con pedido creado\";\n      }\n    }\n    await objCalendario.save();\n  }\n  objCalendario = null;\n  cCal = null;\n}\n\nasync function ShowMessageDebug(mode, stmsg) {\n  //Para poder utilizar esta funcion tenemos que tener una variable global \"Debug\"\n  if (appData.getCurrentEnterprise().getVariables(\"Debug\") === true) {\n    if (mode === \"msgbox\") await ui.msgBox(stmsg, \"¡App_log_xone!\", 0);\n    else if (mode === \"showtoast\") ui.showToast(\"App_log_xone->\" + stmsg);\n    else if (mode === \"consola\")\n      appdata.writeConsoleString(\"App_log_xone->\" + stmsg);\n  }\n}\n\n/***\n *\n * Code from funciones_chat.js\n *\n ***/\n\n// Funcion para bloquear un listado de contents.\n// listContents: Listado de contents\nasync function lockContents(listContents) {\n  var content = null;\n  for (var i = 0; i < listContents.length; i++) {\n    content = await self.getContents(listContents[i]);\n    if (content != null) {\n      content.lock();\n    }\n  }\n}\n\n// Funcion para inicializar los parametros de la coleccion EspecialChat\nasync function inicializeChats() {\n  self.MAP_GRUPOSEL = 1;\n  self.MAP_VERFLOTANTE = 0;\n  self.MAP_RECORDON = 0;\n  self.MAP_PHONE = \"\";\n  self.MAP_USERLOGIN = user.LOGIN;\n  (await self.getContents(\"Chat\")).setMacro(\"##MACRO##\", user.LOGIN);\n  self.MAP_FOTO_FONDO = \"fondo_chat.png\";\n}\n\n// Function para crear el chat ...\nasync function createChat(userFrom, userTo) {\n  var index = 0;\n  var coll = await self.getContents(\"Chat\");\n  coll.unlock();\n  var obj = await coll.findObject(\n    \"(USUARIO='\" +\n      userFrom +\n      \"' AND USUARIO2='\" +\n      userTo +\n      \"') OR (USUARIO='\" +\n      userTo +\n      \"' AND USUARIO2='\" +\n      userFrom +\n      \"')\"\n  );\n  if (obj == null) {\n    obj = await coll.createObject();\n    obj.USUARIO = userFrom;\n    obj.USUARIO2 = userTo;\n    obj.FECHA = new Date();\n    await obj.save();\n  }\n  index = obj.getObjectIndex();\n  coll.lock();\n  return index;\n}\n\nasync function openChat(index, mSelf) {\n  var coll = await mSelf.getContents(\"Chat\");\n  coll.unlock();\n  await coll.loadAll();\n  var obj = coll.get(index);\n  mSelf.MAP_INDICESEL = index;\n  mSelf.MAP_IDCHATSEL = obj.ID;\n  mSelf.MAP_IMGTIPO = obj.MAP_IMAGEN;\n  mSelf.MAP_CHATTITULO = obj.MAP_TITULO;\n  mSelf.MAP_CCUSUARIO = obj.USUARIO2;\n  coll.lock();\n  ui.getView(mSelf).refresh(\"MAP_BTVERGENTE\", \"MAP_IMGTIPO\", \"MAP_CHATTITULO\");\n  await mSelf.executeNode(\"abrirDrawer(2)\");\n}\n\nasync function openListUser() {\n  // habilitamos la visibilidad de la ventana flotante ...\n  self.MAP_VERFLOTANTE = 1;\n  // desbloqueamos el content que contiene a los usuarios ya que lo hemos bloqueado en el nodo after-edit ...\n  (await self.getContents(\"nUsuarios\")).unlock();\n  await (await self.getContents(\"nUsuarios\")).loadAll();\n  (await self.getContents(\"nUsuarios\")).lock();\n  // creamos el indice despues de cargar los usuarios, para poder buscar en memoria ...\n  (await self.getContents(\"nUsuarios\")).createSearchIndex([\"NOMBRE,\"]);\n  // usamos refreshAll porque queremos que se refresquen todos sus hijos y no solo la visibilidad del frame ...\n  ui.getView(self).refreshAll(\"frmnuevochat\");\n}\n\nfunction closeListUser() {\n  self.MAP_VERFLOTANTE = 0;\n  ui.getView(self).refresh(\"frmnuevochat\");\n}\n\nfunction salir() {\n  //ui.showToast(\"MAP_VERFLOTANTE: \"+ self.MAP_VERFLOTANTE);\n  //ui.showToast(\"MAP_GRUPOSEL: \"+ self.MAP_GRUPOSEL);\n  if (self.MAP_VERFLOTANTE != 0) {\n    self.MAP_VERFLOTANTE = 0;\n    ui.refresh(\"frmnuevochat,frmInfoCentralfloating\");\n  } else {\n    if (self.MAP_GRUPOSEL == 1) {\n      appData.failWithMessage(-11888, \"##EXIT##\");\n    } else {\n      ui.refresh(\"Chat\");\n      self.MAP_GRUPOSEL = 1;\n      irGrupo(1);\n    }\n  }\n}\n\nfunction setTimeRecording(sTime) {\n  var v = self[sTime].split(\":\");\n  var m = Number(v[0]);\n  var s = Number(v[1]);\n  if (s < 60) {\n    s++;\n  } else {\n    m++;\n    s = 0;\n  }\n  if (s < 10) {\n    s = \"0\" + s.toString();\n  }\n  self[sTime] = m.toString() + \":\" + s.toString();\n  ui.refreshValue(sTime);\n  if (self.MAP_RECORDON == 1) {\n    ui.executeActionAfterDelay(\"onSetTime\", 1);\n  }\n}\n\nasync function AccionesChatEspecial(parametro, evento) {\n  var coll, obj, fecha;\n  switch (parametro) {\n    case \"nuevochat\":\n      // Aqui es donde vamos a crear un nuevo chat ...\n      await openListUser();\n      break;\n    case \"ok\":\n      // Aqui es donde ese crea el chat y se abre ...\n      // creamos el chat, si no existiera ...\n      var index = await createChat(user.LOGIN, self.MAP_CCUSUARIO);\n      // cerramos el menu de seleccion de usuarios ...\n      closeListUser();\n      // abrirmos el chat ...\n      await openChat(index, self);\n      break;\n    case \"llamada\":\n      //ver a quien llamamos\n      //si es unico, es decir, personal, se llama al USUARIO\n      //si es grupo: mostrar frame flotante, para llamar a uno de ellos\n      if (self.MAP_PHONE.toString().length == 0) {\n        await ui.msgBox(\n          \"La persona con la que quiere contactar no tiene relleno el número de teléfono\",\n          \"Notificación\",\n          0\n        );\n      } else {\n        ui.makePhoneCall(self.MAP_PHONE);\n      }\n      break;\n    case \"fotoabrir\":\n      self.MAP_TIPO = 1;\n      ui.startCamera(\"MAP_FOTO\", \"photo\");\n      break;\n    case \"voz\":\n      if (self.MAP_RECORDON == 0) {\n        self.MAP_TIPO = 2;\n        self.MAP_RECORDON = 1;\n        self.MAP_SHOWADDTEXT = 1;\n        self.MAP_TIMERECORD = \"0:00\";\n        ui.startAudioRecord(\"onrecordfinished\", \"MAP_VOZGRABADA\", 0);\n        ui.executeActionAfterDelay(\"onSetTime\", 1);\n        ui.refresh(\"frmNormal,MAP_ADDTEXT\");\n        ui.getView(self).refreshAll(\"frmRecording\");\n      } else {\n        self.MAP_TIPO = 0;\n        self.MAP_RECORDON = 0;\n        self.MAP_SHOWADDTEXT = 0;\n        self.MAP_TIMERECORD = \"0:00\";\n        ui.stopAudioRecord();\n        ui.refresh(\"frmRecording,MAP_ADDTEXT\");\n        ui.getView(self).refreshAll(\"frmNormal\");\n      }\n      break;\n    //Revisar esto en sistema operativo Android-10\n    case \"textoChange\":\n      if (evento != null) {\n        var w;\n        self.MAP_TIPO = 0;\n        if (evento.newText.length > 0 && self.MAP_SHOWADDTEXT == 0) {\n          self.MAP_SHOWADDTEXT = 1;\n          w = self.getFieldPropertyValue(\"MAP_TITLE\", \"width\");\n          w = w.replace(\"p\", \"\");\n          w = parseInt(w) + 100;\n          self.setFieldPropertyValue(\"MAP_TITLE\", \"width\", w.toString() + \"p\");\n          self.MAP_TITLE = evento.newText;\n          ui.refresh(\"MAP_TITLE,MAP_ADDFOTO,MAP_ADDRECORD,MAP_ADDTEXT\");\n        } else {\n          if (evento.newText.length == 0) {\n            self.MAP_SHOWADDTEXT = 0;\n            w = self.getFieldPropertyValue(\"MAP_TITLE\", \"width\");\n            w = w.replace(\"p\", \"\");\n            w = parseInt(w) - 100;\n            self.setFieldPropertyValue(\n              \"MAP_TITLE\",\n              \"width\",\n              w.toString() + \"p\"\n            );\n            self.MAP_TITLE = evento.newText;\n            ui.refresh(\"MAP_TITLE,MAP_ADDFOTO,MAP_ADDRECORD,MAP_ADDTEXT\");\n          }\n        }\n      }\n      break;\n    case \"enviar\":\n      switch (self.MAP_TIPO) {\n        case 0:\n          await sendMessage(\n            await self.getContents(\"Chatear\"),\n            self,\n            \"MAP_TITLE\",\n            true\n          );\n          self.MAP_TIPO = 0;\n          break;\n        case 1:\n          await sendMessage(\n            await self.getContents(\"Chatear\"),\n            self,\n            \"MAP_FOTO\",\n            true\n          );\n          self.MAP_TIPO = 0;\n          break;\n        case 2:\n          ui.stopAudioRecord();\n          await sendMessage(\n            await self.getContents(\"Chatear\"),\n            self,\n            \"MAP_VOZGRABADA\",\n            true\n          );\n          self.MAP_TIPO = 0;\n          self.MAP_RECORDON = 0;\n          self.MAP_SHOWADDTEXT = 0;\n          self.MAP_TIMERECORD = \"0:00\";\n          ui.refresh(\"frmRecording,MAP_ADDTEXT\");\n          ui.getView(self).refreshAll(\"frmNormal\");\n          break;\n      }\n      break;\n    case \"textoU\":\n      if (evento != null) {\n        (await self.getContents(\"nUsuarios\")).doSearch(evento.newText);\n        ui.refresh(\"@nUsuarios\");\n      }\n      break;\n  }\n}\n\nasync function AccionesChat(parametro) {\n  switch (parametro) {\n    case \"ver\":\n      // abrirmos el chat ...\n      await openChat(\n        self.getObjectIndex(),\n        self.getOwnerCollection().getOwnerObject()\n      );\n      break;\n    // case 'veradjunto':\n    //     ui.openFile(self.ADJUNTO);\n    //     break;\n    case \"verfoto\":\n      ui.openFile(self.MAP_FOTO);\n      break;\n    case \"vervoz\":\n      ui.openFile(self.MAP_VOZ);\n      break;\n    // case 'compartir':\n    //     break;\n  }\n}\n\nasync function sendMessage(colMUser, obj, title, isFromUser) {\n  if (obj[title].length != 0) {\n    var CollCV = await appData.getCollection(\"MensajesReader\");\n    var ObjCV = await CollCV.createObject();\n    if (isFromUser) {\n      ObjCV.USUARIOTO = self.MAP_CCUSUARIO;\n      ObjCV.USUARIOFROM = user.LOGIN;\n    } else {\n      ObjCV.USUARIOTO = user.LOGIN;\n      ObjCV.USUARIOFROM = self.MAP_CCUSUARIO;\n    }\n    ObjCV.FECHA = new Date();\n    ObjCV.MENSAJE = self[title];\n    ObjCV.TIPO = self.MAP_TIPO;\n    ObjCV.IDCHAT = self.MAP_IDCHATSEL;\n    await ObjCV.save();\n\n    ui.startReplica();\n\n    colMUser.unlock();\n    await addUserMessage(colMUser, ObjCV, -1, ObjCV.ROWID);\n    colMUser.lock();\n\n    //limpiamos\n    self[title] = \"\";\n    ObjCV = null;\n    CollCV.clear();\n    CollCV = null;\n\n    ui.refresh(\"MensajesUsuarios\", title);\n  }\n}\n\nasync function fillMessagesContent(colMUser, page, cant) {\n  var colMsg, obj, n, i, nInit, nEnd, ObjB;\n  colMsg = await appData.getCollection(\"MensajesReader\");\n  colMsg.setFilter(\"IDCHAT=\" + self.MAP_IDCHATSEL + \"\");\n  colMUser.unlock();\n  colMUser.clear();\n  await colMUser.loadAll();\n  colMsg.setSort(\"FECHA ASC\");\n  await colMsg.startBrowse();\n  while (\n    (await colMsg.getCurrentItem()) !== undefined &&\n    (await colMsg.getCurrentItem()) != null\n  ) {\n    obj = await colMsg.getCurrentItem();\n    await addUserMessage(colMUser, obj, 0, obj.ROWID);\n    await colMsg.moveNext();\n  }\n  colMsg.endBrowse();\n  colMsg.clear();\n  colMsg = null;\n  colMUser.lock();\n  ui.refresh(\"Chatear\");\n}\n\nasync function addUserMessage(colMUser, obj, index, sRowid) {\n  var omuser, queue, fecha, dia, mes, anio;\n  omuser = await colMUser.createObject();\n  colMUser.addItem(omuser);\n  omuser.FECHA = obj.FECHA;\n  omuser.USUARIOFROM = obj.USUARIOFROM;\n  omuser.USUARIOTO = obj.USUARIOTO;\n  switch (obj.TIPO) {\n    case 0:\n      omuser.MENSAJE = obj.MENSAJE;\n      break;\n    case 1:\n      omuser.MAP_FOTO = obj.MENSAJE;\n      break;\n    case 2:\n      if (obj.MENSAJE != null) {\n        var msgVoz = obj.MENSAJE.substring(obj.MENSAJE.lastIndexOf(\"/\") + 1);\n        omuser.MAP_VOZ = msgVoz;\n      }\n      break;\n    case 3:\n      omuser.MAP_ADJUNTO = obj.MENSAJE;\n      break;\n  }\n  omuser.TIPO = obj.TIPO;\n  omuser.IDCHAT = obj.IDCHAT;\n  omuser.MAP_FECHAHORA = obj.FECHA;\n\n  if (obj.USUARIOFROM == user.LOGIN) {\n    omuser.MAP_COLORVIEW = \"#A5DF00\";\n    omuser.MAP_FORECOLOR = \"#666666\";\n    omuser.MAP_FORECOLORFECHA = \"#B3FFFFFF\";\n    omuser.MAP_ESPACIO = 1;\n    //Comprobar que se ha replicado el mensaje, para mostrar mensaje enviado o no\n    // \t\tqueue=appData.getCollection(\"MasterReplicaQueue\").findObject(\"ROWID='\" + obj.ROWID.toString() + \"'\");\n    // \t\tif (queue !== undefined && queue != null) {\n    // \t\t    omuser.MAP_IMAGE=\"trasparente.png\";\n    // \t\t} else {\n    // \t\t    omuser.MAP_IMAGE=\"Icon_Enviar.png\";\n    // \t\t}\n    // \t\tqueue=null;\n  } else {\n    omuser.MAP_COLORVIEW = \"#e5e5ea\";\n    omuser.MAP_FORECOLOR = \"#000000\";\n    omuser.MAP_FORECOLORFECHA = \"#80000000\";\n    omuser.MAP_ESPACIO = 0;\n    omuser.MAP_IMAGE = \"trasparente.png\";\n  }\n  // colMUser.setVariables(\"refreshindex\",0);\n  ui.refresh(\"Chatear\");\n}\n\nfunction irGrupo(grupo) {\n  ui.showGroup(grupo, \"##RIGHTN##\", 150, \"##RIGHTN_OUT##\", 150);\n}\n\n/***\n *\n * Code from strings.js\n *\n ***/\n\nvar literales = null;\niniciarLiterales();\n\n/* Se pone en una funcion porque para que lo coja el traductor*/\nfunction iniciarLiterales() {\n  literales = {\n    /*##XONE_TRANSLATE_NEXT_LINE##*/\n    stVersionLog: \"- Version Log.\",\n    /*##XONE_TRANSLATE_NEXT_LINE##*/\n    stScreensRework: \"- Screens rework.\",\n    /*##XONE_TRANSLATE_NEXT_LINE##*/\n    stNewSup: \"- New supervisor option.\",\n    /*##XONE_TRANSLATE_NEXT_LINE##*/\n    stMustIndicateWarehouse: \"You must indicate the warehouse.\",\n  };\n}\n\n/***\n *\n * Code from funciones.js\n *\n ***/\n\nString.prototype.repeat = function(n) {\n  var aux = \"\";\n  for (var i = 0; i < n; i++) {\n    aux += this;\n  }\n  return aux;\n};\n\nvar MAP_OBJETO_HIJO = null;\n\n/* ***********************************\n         FUNCIONES DE FECHA              \n   *********************************** */\n// Hacer pad zero\nfunction addZero(i) {\n  if (i < 10) {\n    i = \"0\" + i;\n  }\n  return i;\n}\n\nfunction doAuthLogout() {\n  new OAuth2()\n    .withOptions({\n      authority: \"https://gaccess-int.gamesacorp.com/identity/\",\n      clientID: \"APP_0275_GOTMOBILITY\",\n      clientSecret: \"C7331D93-9109-4F87-B2BA-17C77711B54E\",\n      scope: \"openid profile\",\n      persistenceKey: \"key_1234\",\n      responseType: \"code id_token\",\n      redirectUri: \"com.xone.oauth2:/gamesaredirect\",\n    })\n    .logout();\n}\n\nfunction doAuthLogin() {\n  new OAuth2()\n    .withOptions({\n      authority: \"https://gaccess-int.gamesacorp.com/identity/\",\n      clientID: \"APP_0275_GOTMOBILITY\",\n      clientSecret: \"C7331D93-9109-4F87-B2BA-17C77711B54E\",\n      scope: \"openid profile\",\n      responseType: \"code id_token\",\n      persistenceKey: \"key_1234\",\n      redirectUri: \"com.xone.oauth2:/gamesaredirect\",\n    })\n    .authenticate({\n      onSuccess: function(result) {\n        console.log(result);\n      },\n      onError: function(err) {\n        console.log(err);\n      },\n    });\n}\n\nasync function doLoginNew() {\n  var params = {\n    userName: self.MAP_USER,\n    password: self.MAP_PASSWORD,\n    entryPoint: \"Menu\",\n    // entryPoint: \"EspecialChat\",\n\n    // Opcional\n    onLoginSuccessful: function() {\n      ui.showToast(\"Login OK!\");\n    },\n\n    // Opcional\n    onLoginFailed: function() {\n      ui.showToast(\"Login failed!\");\n    },\n  };\n  await appData.login(params);\n}\n\nfunction doLogout() {\n  appData.logout();\n}\n\nfunction exit() {\n  appData.exit();\n}\n\nfunction funcionesFecha() {\n  //Funciones Fecha Local\n  var d = new Date();\n  var diasSemana = new Array(\n    \"Domingo\",\n    \"Lunes\",\n    \"Martes\",\n    \"Miércoles\",\n    \"Jueves\",\n    \"Viernes\",\n    \"Sábado\"\n  );\n  var anio = d.getFullYear();\n  var mes = addZero(d.getMonth() + 1);\n  var diames = addZero(d.getDate());\n  var diasemana = d.getDay() + \", \" + diasSemana[d.getDay()];\n  var h = addZero(d.getHours());\n  var m = addZero(d.getMinutes());\n  var s = addZero(d.getSeconds());\n  var ms = d.getMilliseconds();\n  var t = d.getTime();\n  var GMTminutes = d.getTimezoneOffset();\n\n  var mensaje = \"Fecha local: \" + diames + \"/\" + mes + \"/\" + anio;\n  mensaje += \"\\nDia semana: \" + d.getDay() + \", \" + diasSemana[d.getDay()];\n  mensaje += \"\\nHora: \" + h + \":\" + m + \":\" + s + \".\" + ms;\n  mensaje += \"\\nMilisegundos desde 1970: \" + t;\n  mensaje += \"\\nDiferencia GMT minutos: \" + GMTminutes;\n\n  //Funciones Fecha UTC\n  var dUTC = new Date();\n  var anioUTC = dUTC.getUTCFullYear();\n  var mesUTC = addZero(dUTC.getUTCMonth() + 1);\n  var diamesUTC = addZero(dUTC.getUTCDate());\n  var diasemanaUTC = dUTC.getUTCDay() + \", \" + diasSemana[dUTC.getUTCDay()];\n  var hUTC = addZero(dUTC.getUTCHours());\n  var mUTC = addZero(dUTC.getUTCMinutes());\n  var sUTC = addZero(dUTC.getUTCSeconds());\n  var msUTC = dUTC.getUTCMilliseconds();\n  var tUTC = Date.UTC(anioUTC, mesUTC, diamesUTC, hUTC, mUTC, sUTC, msUTC);\n\n  var mensajeUTC = \"\\nFecha UTC: \" + diamesUTC + \"/\" + mesUTC + \"/\" + anioUTC;\n  mensajeUTC += \"\\nDia semana UTC: \" + diasemanaUTC;\n  mensajeUTC += \"\\nHora UTC: \" + hUTC + \":\" + mUTC + \":\" + sUTC + \".\" + msUTC;\n  mensajeUTC += \"\\nMilisegundos desde 1970 en UTC: \" + tUTC;\n\n  //Convertir a String y otros\n  var str = d.toString();\n  var strUTC = dUTC.toUTCString();\n  var strDate = d.toDateString();\n  var strLocaleDate = d.toLocaleString();\n  var strLocaleDateOnly = d.toLocaleDateString();\n  var strTime = d.toTimeString();\n  var strLocaleTime = d.toLocaleTimeString();\n  var strIso = d.toISOString();\n  var sJson = d.toJSON();\n\n  var mensajeString = \"\\ntoString(): \\n\" + str;\n  mensajeString += \"\\ntoUTCString(): \\n    \" + strUTC;\n  mensajeString += \"\\ntoDateString(): \" + strDate;\n  mensajeString += \"\\ntoLocaleString(): \\n\" + strLocaleDate;\n  mensajeString += \"\\ntoLocaleDateString(): \\n    \" + strLocaleDateOnly;\n  mensajeString += \"\\ntoTimeString(): \\n    \" + strTime;\n  mensajeString += \"\\ntoLocaleTimeString(): \" + strLocaleTime;\n  mensajeString += \"\\ntoISOString(): \\n    \" + strIso;\n  mensajeString += \"\\ntoJSON(): \\n    \" + sJson;\n\n  mensaje += \"\\n\" + mensajeUTC;\n  mensaje += \"\\n\" + mensajeString;\n  return mensaje;\n}\n\n/* ***********************************\n         FUNCIONES VARIAS             \n   *********************************** */\n\nasync function userMsgBox(title, msg, type) {\n  var collMsgBox, objMsgBox, nResult;\n  collMsgBox = (await appData.getCollection(\"EspecialMsgbox\")).createClone();\n  objMsgBox = await collMsgBox.createObject();\n  collMsgBox.addItem(objMsgBox);\n  objMsgBox.MAP_TITULO = title;\n  objMsgBox.MAP_MENSAJE = msg;\n  objMsgBox.MAP_TIPO = type;\n\n  nResult = await ui.msgBox(objMsgBox);\n  return nResult;\n}\n\nfunction frameScroll(e) {\n  if (e.dy <= 10 && self.MAP_SHOWOVERSCROLL === 1) {\n    self.MAP_SHOWOVERSCROLL = 0;\n    ui.getView(self).refresh(\"froverscroll\");\n  } else {\n    if (e.dy > 10 && self.MAP_SHOWOVERSCROLL === 0) {\n      self.MAP_SHOWOVERSCROLL = 1;\n      ui.getView(self).refresh(\"froverscroll\");\n    }\n  }\n}\n\nfunction EscanearMatricula(RutaImagen) {\n  var ocr = createObject(\"XOneOCR\");\n  return ocr.scanLicensePlate(RutaImagen);\n}\n\nfunction EscanearTexto(RutaImagen) {\n  var ocr = createObject(\"XOneOCR\");\n  return ocr.scanText(\n    RutaImagen,\n    \"áéíóúÁÉÍÓÚqwertyuiopasdfghjklzxcvbnñmQWERTYUIOPASDFGHJKLZXCVBNÑM\"\n  );\n}\n\n/*\n * Next an previous helper\n */\nfunction prev(obj, execNode, refresh) {\n  if (obj.MAP_GROUP > 1) goPage(obj, obj.MAP_GROUP - 1, refresh);\n}\n\nfunction next(obj, execNode, refresh) {\n  if (obj.MAP_GROUP < obj.MAP_TOTAL_PAGES)\n    goPage(obj, obj.MAP_GROUP + 1, refresh);\n}\n\nfunction goPage(obj, index, refresh) {\n  ui.showGroup(index, \"##ALPHA_IN##\", 500, \"##ALPHA_OUT##\", 500);\n  obj.MAP_GROUP = index;\n  /*if (refresh!==undefined) {\n        ui.refresh(refresh);\n    }else{\n        ui.refresh();\n    }*/\n}\n\nfunction cstr(val) {\n  if (val === undefined || val === null) return \"\";\n  return val.toString();\n}\n\nfunction formatDateTime(date, type) {\n  var hours = date.getHours();\n  var minutes = date.getMinutes();\n  var ampm = hours >= 12 ? \"pm\" : \"am\";\n  hours = hours % 12;\n  hours = hours ? hours : 12; // the hour '0' should be '12'\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\n  var strTime = hours + \":\" + minutes + \" \" + ampm;\n\n  switch (type) {\n    case 0:\n      return (\n        date.getMonth() +\n        1 +\n        \"/\" +\n        date.getDate() +\n        \"/\" +\n        date.getFullYear() +\n        \"  \" +\n        strTime\n      );\n    case 1:\n      return (\n        date.getDate() + 1 + \"/\" + date.getMonth() + \"/\" + date.getFullYear()\n      );\n    case 2:\n      return (\n        date.getDate() +\n        1 +\n        \"/\" +\n        date.getMonth() +\n        \"/\" +\n        date\n          .getFullYear()\n          .toString()\n          .substring(2, 4)\n      );\n    case 3:\n      return strTime;\n    case 4:\n      return hours + \":\" + minutes;\n  }\n  return (\n    date.getMonth() +\n    1 +\n    \"/\" +\n    date.getDate() +\n    \"/\" +\n    date.getFullYear() +\n    \"  \" +\n    strTime\n  );\n}\n\nfunction len(val) {\n  return cstr(val).length;\n}\n\nfunction Left(str, n) {\n  if (n <= 0) return \"\";\n  else if (n > String(str).length) return str;\n  else return String(str).substring(0, n);\n}\nfunction Right(str, n) {\n  if (n <= 0) return \"\";\n  else if (n > String(str).length) return str;\n  else {\n    var iLen = String(str).length;\n    return String(str).substring(iLen, iLen - n);\n  }\n}\n\nasync function testClick(e) {\n  await ui.msgBox(e.target, \"Test\", 0);\n}\n\nasync function scanAvailableNetworks() {\n  try {\n    self.MAP_LOADING = 1;\n    ui.refresh(\"frmLoading\");\n    (await self.getContents(\"ContentWifis\")).clear();\n\n    var wifiManager = new WifiManager();\n    if (wifiManager.isWifiAdapterEnabled()) {\n      onWifiNetworksFound.OBJETO = self;\n      var lstAvailable = wifiManager.scanAvailableNetworks(onWifiNetworksFound);\n      ui.showToast(\"Escaneando redes WiFi...\");\n    } else {\n      ui.executeActionAfterDelay(\"scanAvailableNetworks\", 5);\n    }\n  } catch (ex) {\n    //ui.msgBox(\"ex: \"+ex,\"aa\",0);\n  }\n}\n\nasync function onWifiNetworksFound(wifiNetworks) {\n  self = onWifiNetworksFound.OBJETO;\n  var sMessage = \"\";\n  var wifiManager = new WifiManager();\n  var orden = 1;\n  for (var i = 0; i < wifiNetworks.length; i++) {\n    //sMessage = sMessage + \"SSID: \" + wifiNetworks[i].getSsid() + \"\\n\";\n    var wifi = wifiNetworks[i];\n    var isOpen = false;\n    var coll = await self.getContents(\"ContentWifis\");\n    if (coll != null) {\n      var obj2 = coll.getItem(\"MAP_SSID\", wifi.getSsid());\n      if (!obj2) {\n        coll.lock();\n        var obj = await coll.createObject();\n        coll.addItem(obj);\n\n        if (obj) {\n          if (wifi.getNetworkSecurity() == \"OPEN\") {\n            obj.MAP_IMAGE = \"wifi-open.png\";\n            isOpen = true;\n          } else {\n            obj.MAP_IMAGE = \"wifi-lock.png\";\n            isOpen = false;\n          }\n\n          if (saberSiWifiGuardada(wifi.getSsid())) {\n            obj.MAP_ESTADO = \"Guardado\";\n            obj.MAP_ORDEN = orden;\n            orden++;\n            obj.MAP_IDESTADO = 0;\n          } else {\n            obj.MAP_ESTADO = \"\";\n            obj.MAP_ORDEN = 99999;\n            obj.MAP_IDESTADO = -1;\n          }\n\n          var wifiInfo = wifiManager.getActiveWifiInfo();\n\n          if (wifiInfo != null) {\n            if (wifiInfo.getSsid() == wifi.getSsid()) {\n              obj.MAP_ESTADO = \"Conexión establecida\";\n              if (isOpen) {\n                obj.MAP_IMAGE = \"wifi-open-conected.png\";\n              } else {\n                obj.MAP_IMAGE = \"wifi-lock-conected.png\";\n              }\n              obj.MAP_ORDEN = 0;\n              obj.MAP_IDESTADO = 1;\n            }\n          }\n\n          if (wifi.getSsid().length > 0) {\n            obj.MAP_SSID = wifi.getSsid();\n          } else {\n            obj.MAP_SSID = \"Red desconocida\";\n          }\n          obj.MAP_SECURITY = wifi.getNetworkSecurity();\n        }\n\n        coll.unlock();\n      }\n    }\n  }\n  self.MAP_LOADING = 0;\n  ui.refresh(\"ContentWifis,frmLoading\");\n\n  (await self.getContents(\"ContentWifis\")).doSort(\"MAP_ORDEN ASC\");\n  //ui.msgBox(sMessage, \"Redes\", 0);\n}\n\nfunction saberSiWifiGuardada(wifi) {\n  var wifiManager = createObject(\"WifiManager\");\n  var lstSaved = wifiManager.listSavedNetworks();\n  var sMessage = \"\";\n  for (var i = 0; i < lstSaved.length; i++) {\n    if (wifi == lstSaved[i].getSsid()) return true;\n  }\n  return false;\n}\n\n//Para mayor simplicidad, todas las diferentes líneas son tablas, que nos permiten alinear el texto más facilmente.\n//El documento es una grilla cuyo punto 0,0 es la ESQUINA INFERIOR IZQUIERDA.\n//Para mejor desarrollo, activar showGridDebug(pdf)\n//addNewLine(pdf) Añade una tabla de una línea vacía y sin bordes\nasync function GenerarPDFBasico(nameFile, pdf, createGrid) {\n  //Creamos el PDF, borramos si existe ya el fichero, le indicamos el nombre y la encriptación a utilizar\n\n  pdf.create(nameFile);\n  pdf.permissions(\"assembly\");\n  pdf.permissions(\"print\");\n  pdf.setEncryption(\"\", \"1234\", \"128bits\");\n\n  pdf.open();\n\n  pdf.setFont(\"gillsans.ttf\");\n  pdf.setFontStyle(\"normal\");\n  pdf.setAlignment(\"center\");\n  pdf.setFontSize(9);\n  pdf.setFontColor(\"#000000\");\n\n  //**************************************************************\n  // Muestra una rejilla de ayuda para posicionar cosas en el PDF\n  //**************************************************************\n  if (createGrid == 1) {\n    showGridDebug(pdf);\n  }\n\n  //********************************************\n  //    Comenzamos a pintar en el documento\n  //********************************************\n  pdf.setFont(\"helvetica\");\n  pdf.setFontSize(9);\n  pdf.setFontStyle(\"normal\");\n  pdf.setFontColor(\"#000000\");\n  pdf.addText(\n    \"Esto es un ejemplo de texto, en la posicion: \" +\n      pdf.getVerticalPosition().toString()\n  );\n  pdf.newLine();\n  pdf.addText(\n    \"Segunda Línea, en la posicion: \" + pdf.getVerticalPosition().toString()\n  );\n  pdf.newLine();\n\n  //Se especifica que vamos a crear una tabla con 3 columnas sin bordes\n  pdf.createTable(3);\n  pdf.setCellBorder(\"none\");\n  pdf.setTableWidth(100);\n  pdf.setTableCellWidths(33, 33, 33);\n  pdf.setAlignment(\"left\");\n  pdf.addCellText(\"Texto a la izquierda\");\n  pdf.setAlignment(\"center\");\n  pdf.addCellText(\"Texto centrado\");\n  pdf.setAlignment(\"right\");\n  pdf.addCellText(\"Texto a la derecha\");\n  pdf.addTable();\n\n  //Se especifica que vamos a crear una tabla con 3 columnas sin bordes\n  pdf.createTable(1);\n  //Las posibilidades para los bordes son: all, top, left, right, bottom\n  pdf.setCellBorder(\"all\");\n  //Da igual el ancho que se le indique a la tabla\n  pdf.setTableWidth(100);\n  pdf.setAlignment(\"center\");\n  pdf.setFontStyle(\"bold\");\n  pdf.setFontSize(12);\n  pdf.setFontColor(\"#FFFFFF\");\n  //Al tener la letra de color blanco, ponemos el fondo de la celda en negro\n  pdf.addCellText(\"Con las tablas es más sencillo alinear el texto\", \"#000000\");\n  pdf.setAlignment(\"left\");\n  pdf.setFontStyle(\"normal\");\n  pdf.setFontSize(10);\n  pdf.setFontColor(\"#000000\");\n  pdf.addCellText(\n    \"El ancho de una tabla NO FLOTANTE es 418, desde la posición 88 hasta la 506, da igual el ancho que se especifique para la tabla ó para las columnas\"\n  );\n  pdf.setAlignment(\"center\");\n  pdf.setFontStyle(\"bold\");\n  pdf.setFontSize(12);\n  pdf.setFontColor(\"#FFFFFF\");\n  //Al tener la letra de color blanco, ponemos el fondo de la celda en negro\n  pdf.addCellText(\n    \"El ancho de las celdas será un porcentaje con respecto a la suma de los anchos de las columnas\",\n    \"#000000\"\n  );\n  pdf.setFontColor(\"#000000\");\n  pdf.setAlignment(\"left\");\n  pdf.setFontStyle(\"normal\");\n  pdf.setFontSize(10);\n  pdf.addCellText(\n    \"Da igual el ancho que se ponga para una tabla NO FLOTANTE, el ancho de la celda será determinado mediante una regla de 3 para averiguar el porcentaje correspondiente a la cantidad asignada.\"\n  );\n  pdf.addCellText(\n    \"Por ejemplo: 3 columnas 60 de ancho para cada una:\" +\n      String.fromCharCode(10) +\n      \"SetTableCellWidths 60,60,60  ->  60+60+60 = 180 que sería el 100% de la tabla\" +\n      String.fromCharCode(10) +\n      \"Para averiguar el porcentaje, calculamos 60x100 / 180 = 33.3%.\"\n  );\n  pdf.addTable();\n\n  //Creamos una tabla con 3 columnas\n  pdf.createTable(3);\n  pdf.setTableCellWidths(60, 60, 60);\n  pdf.setAlignment(\"center\");\n  pdf.addCellText(\"SetTableCellWidths 60,60,60\");\n  pdf.addCellText(\"60+60+60=180 -> 100%\");\n  pdf.addCellText(\"60x100 / 180 = 33.3%\");\n  pdf.addTable();\n\n  pdf.createTable(1);\n  pdf.setCellBorder(\"all\");\n  pdf.setAlignment(\"center\");\n  pdf.setFontStyle(\"bold\");\n  pdf.setFontColor(\"#FFFFFF\");\n  //Al tener la letra de color blanco, ponemos el fondo de la celda en negro\n  pdf.addCellText(\n    \"Lo más sencillo será hacer coincidir los anchos de las columnas con 100 y así tendremos el porcentaje que tomará cada celda de ancho.\",\n    \"#000000\"\n  );\n  pdf.setAlignment(\"left\");\n  pdf.setFontColor(\"#000000\");\n  pdf.setFontStyle(\"normal\");\n  pdf.addCellText(\"Por ejemplo: SetTableCellWidths 20,50,15,15.\");\n  pdf.addTable();\n\n  //Creamos una tabla con 4 columnas\n  pdf.setAlignment(\"center\");\n\n  pdf.createTable(4);\n  pdf.setTableCellWidths(20, 50, 15, 15);\n  pdf.addCellText(\"20%\");\n  pdf.addCellText(\"50%\");\n  pdf.addCellText(\"15%\");\n  pdf.addCellText(\"15%\");\n  pdf.addTable();\n\n  //****************************************************\n  // Para hacer una tabla posicionada de forma absoluta\n  //****************************************************\n  //Esta tabla al pintarse no actualiza pdf.getVerticalPosition() porque se pinta \"flotando\" encima del documento\n  pdf.createTable(1);\n  // Muy importante, a la hora de hacer una tabla posicionada de forma absoluta\n  // es necesario definir previamente el ancho de la tabla.\n  pdf.setTableWidth(418);\n  pdf.setAlignment(\"center\");\n  pdf.setFontStyle(\"bold\");\n  pdf.setFontSize(12);\n  pdf.setFontColor(\"#000000\");\n  pdf.addCellText(\"Tabla 'FLOTANTE' de 418 de ancho\");\n  pdf.addTableSetXY(88, 542);\n\n  //Se especifica que vamos a crear una tabla con 2 columnas\n  pdf.setFontColor(\"#000000\");\n  pdf.setFontStyle(\"normal\");\n  pdf.setAlignment(\"left\");\n\n  pdf.createTable(2);\n  // Muy importante, a la hora de hacer una tabla posicionada de forma absoluta\n  // es necesario definir previamente el ancho de la tabla.\n  pdf.setTableWidth(340);\n  pdf.setTableCellWidths(180, 160);\n  pdf.addCellText(\n    \"Texto en tabla 'flotante', el alto de la tabla lo marcará el contenido.\"\n  );\n  pdf.setAlignment(\"center\");\n  pdf.addCellText(\n    \"Situada en:\" +\n      String.fromCharCode(10) +\n      String.fromCharCode(13) +\n      \"Eje X=120, Eje Y=500\"\n  );\n  pdf.addTableSetXY(120, 500);\n\n  pdf.createTable(3);\n  // Muy importante, a la hora de hacer una tabla posicionada de forma absoluta\n  // es necesario definir previamente el ancho de la tabla.\n  pdf.setAlignment(\"center\");\n  pdf.setTableWidth(460);\n  pdf.setTableCellWidths(30, 40, 30);\n  pdf.addCellText(\"Una flotante puede ocupar lo que se quiera.\", \"#99FFFF\");\n  pdf.addCellText(\"Y posicionarla en cualquier lugar.\", \"#99FFFF\");\n  pdf.addCellText(\"Los anchos definidos 30,40,30\", \"#99FFFF\");\n  pdf.addTableSetXY(60, 430);\n\n  //Ponemos la imagen de la flecha apuntando a la coordenada 0,0 en una posición absoluta, también \"flotando\" sobre el documento\n  pdf.addImageSetXY(\"./icons/coordenada00.png\", 0, 0);\n\n  pdf.close();\n\n  var a = await ui.msgBox(\"ABRIR PDF?\", \"PDF GENERADO\", 4);\n  if (a == 6) {\n    //Si queremos abrir el PDF una vez generado.\n    pdf.launchPDF();\n  }\n}\n\nfunction showGridDebug(pdf) {\n  var i, j;\n  //Tabla para saber las posiciones X e Y de un PDF\n\n  //Para el EJE X\n  pdf.setAlignment(\"center\");\n  pdf.setFontSize(9);\n  pdf.setFontStyle(\"bold\");\n  pdf.setFontColor(\"#0000CC\");\n  for (j = 2; j < 26; j++) {\n    i = parseInt(j * 20);\n    //Esta es la primera fila del Eje X, Arriba, Y=840\n    pdf.createTable(1);\n    pdf.setTableWidth(20);\n    pdf.addCellText(i.toString());\n    pdf.addTableSetXY(i, 840);\n    //pdf.addRectangle(PosX, posY, Ancho, Alto, Grosor, ColorFondo, ColorLinea\n    pdf.addRectangle(i, 20, 0, 820, 0, \"#FF0000\", \"#FF0000\");\n\n    //Esta es la segunda fila del Eje X, Abajo, Y=20\n    pdf.createTable(1);\n    pdf.setTableWidth(20);\n    pdf.addCellText(i.toString());\n    pdf.addTableSetXY(i, 20);\n  }\n\n  //Para el EJE Y\n  pdf.setFontColor(\"#009900\");\n  for (j = 0; j < 42; j++) {\n    i = parseInt(j * 20);\n\n    //Esta es la primera columna del Eje Y, en la izquierda X=10\n    pdf.createTable(1);\n    //pdf.addCellText(\"10,\"+i\n    pdf.setTableWidth(30);\n    pdf.addCellText(i.toString());\n    pdf.addTableSetXY(10, i);\n    //pdf.addRectangle(PosX, posY, Ancho, Alto, Grosor, ColorFondo, ColorLinea\n    pdf.addRectangle(10, i, 540, 0, 0, \"#FF0000\", \"#FF0000\");\n\n    //Esta es la segunda columna del Eje Y, en la derecha X=540\n    pdf.createTable(1);\n    pdf.setTableWidth(30);\n    //pdf.addCellText(\"540,\"+i\n    pdf.addCellText(i.toString());\n    pdf.addTableSetXY(540, i);\n  }\n\n  pdf.setFontStyle(\"normal\");\n  pdf.setFontColor(\"#000000\");\n}\n\n//PARAMETROS:\n//Pdf01 -- el objeto pdf\n//Total de lineas\n//Numero actual de linea\n//Si es final de linea.\n//Texto a poner.\nfunction AddCellTexttable(Pdf01, nColumT, nColum, isFinLine, textLine) {\n  //le quitamos todos los bordes\n  Pdf01.setCellBorder(\"none\");\n  //dibujamos la liena de arriba o de abajo dependiendo de donde estemos.\n  if (isFinLine == 0) {\n    //dibujamos top\n    Pdf01.setCellBorder(\"top\");\n  } else {\n    if (isFinLine == 1) {\n      //dibujamos bottom\n      Pdf01.setCellBorder(\"bottom\");\n    }\n  }\n\n  //if nColum = 1 then\n  //dibujamos el borde left|top si no es finline\n  //\tPdf01.setCellBorder(\"left\"\n  //end if\n\n  //if nColum = nColumT then\n  //dibujamos el borde left|top si no es finline\n  //\tPdf01.setCellBorder(\"right\"\n  //end if\n  Pdf01.addCellText(textLine);\n}\n\nfunction addNewLine(Pdf01) {\n  Pdf01.createTable(1);\n  Pdf01.setCellBorder(\"none\");\n  Pdf01.addCellText(\" \");\n  Pdf01.addTable();\n}\n\n//crearPDF\nfunction CreatePDF(nameFile, pdf) {\n  //creamos el pdf\n\n  //namefile=\"/mnt/sdcard/xone/\"+namefile\n  try {\n    appData.error.clear();\n    pdf.delete(nameFile);\n    appData.error.clear();\n  } catch (e) {}\n  pdf.permissions(\"assembly\");\n  pdf.create(nameFile);\n  pdf.setEncryption(\"\", \"1234\", \"128bits\");\n}\n\n//devolvemos la hora sin fecha\nfunction getTime(stdate) {\n  stdate = getEmptyFromNull(stdate);\n  return stdate.toString().substring(11);\n}\n\n//Para mayor simplicidad, todas las diferentes líneas son tablas, que nos permiten alinear el texto muy facilmente.\n//AddCellTexttable(Pdf01,nColumTotales,nColumActual,isFinLine,texto)\n//addNewLine(Pdf01) Añade una tabla de una línea vacía y sin bordes\nasync function GenerarPDF1(nameFile, pdf, createGrid) {\n  //Creamos el PDF, borramos si existe ya el fichero, le indicamos el nombre y la encriptación a utilizar\n  CreatePDF(nameFile, pdf);\n\n  //pdf.BeginHeader\n\n  //pdf.endHeader()\n\n  pdf.open();\n  pdf.setFont(\"gillsans.ttf\");\n  pdf.setFontStyle(\"normal\");\n\n  //**************************************************************\n  // Muestra una rejilla de ayuda para posicionar cosas en el PDF\n  //**************************************************************\n  if (createGrid == 1) {\n    showGridDebug(pdf);\n  }\n\n  //addNewLine pdf\n  //1er recuadro\n  pdf.createTable(1);\n  pdf.setTableWidth(150);\n  pdf.setAlignment(\"left\");\n  AddCellTexttable(pdf, 1, 1, 1, \"\");\n  pdf.addTable();\n\n  addNewLine(pdf);\n  pdf.createTable(1);\n  pdf.setTableWidth(150);\n  //pdf01.setTableCellWidths(450,550\n  pdf.setCellBorder(\"none\");\n  pdf.setAlignment(\"left\");\n  pdf.addCellImage(\"./icons/LogoPrint.png\", 150, 73);\n  pdf.addTable();\n\n  pdf.createTable(1);\n  pdf.setTableWidth(150);\n  pdf.setAlignment(\"right\");\n  AddCellTexttable(pdf, 1, 1, 1, \" CIF: B01234567\");\n  pdf.addTable();\n\n  //Fecha\n  pdf.createTable(2);\n  pdf.setTableWidth(150);\n  pdf.setFontStyle(\"bold\");\n  pdf.setAlignment(\"left\");\n  AddCellTexttable(pdf, 2, 1, -1, getDate(new Date()));\n  pdf.setAlignment(\"right\");\n  AddCellTexttable(pdf, 2, 1, -1, getTime(new Date()));\n  pdf.addTable();\n\n  pdf.createTable(2);\n  pdf.setFont(\"gillsans.ttf\");\n  pdf.setFontStyle(\"normal\");\n  pdf.setTableWidth(150);\n  pdf.setAlignment(\"left\");\n  AddCellTexttable(pdf, 2, 1, -1, \" Ticket: \");\n  pdf.setAlignment(\"right\");\n  AddCellTexttable(pdf, 2, 1, -1, nameFile);\n  pdf.addTable();\n\n  pdf.createTable(2);\n  pdf.setTableWidth(150);\n  pdf.setAlignment(\"left\");\n  AddCellTexttable(pdf, 2, 1, -1, \" Montador: \");\n  pdf.setAlignment(\"right\");\n  //AddCellTexttable pdf,2,1,-1,self.MAP_ENCARGADO\")\n  AddCellTexttable(pdf, 2, 1, -1, \"Manuel Chaves\");\n  pdf.addTable();\n\n  pdf.createTable(1);\n  pdf.setTableWidth(150);\n  pdf.setAlignment(\"left\");\n  AddCellTexttable(pdf, 2, 1, 1, \"\");\n  pdf.addTable();\n\n  //primer apartado\n\n  pdf.createTable(1);\n  pdf.setTableWidth(150);\n  pdf.setAlignment(\"left\");\n  AddCellTexttable(pdf, 2, 1, 0, \"\");\n  pdf.addTable();\n\n  pdf.createTable(2);\n  pdf.setTableWidth(150);\n  pdf.setAlignment(\"left\");\n  AddCellTexttable(pdf, 2, 1, -1, \" Cliente: \");\n  pdf.setAlignment(\"right\");\n  //AddCellTexttable pdf,2,1,-1,self.MAP_CLIENTE\")\n  AddCellTexttable(pdf, 2, 1, -1, \"Cliente del curso\");\n  pdf.addTable();\n\n  pdf.createTable(2);\n  pdf.setTableWidth(150);\n  pdf.setAlignment(\"left\");\n  AddCellTexttable(pdf, 2, 1, -1, \" Cod.Cliente: \");\n  pdf.setAlignment(\"right\");\n  AddCellTexttable(pdf, 2, 1, -1, \"378-522\");\n  pdf.addTable();\n\n  pdf.createTable(2);\n  pdf.setTableWidth(150);\n  pdf.setAlignment(\"left\");\n  AddCellTexttable(pdf, 2, 1, -1, \" Finca: \");\n  pdf.setAlignment(\"right\");\n  AddCellTexttable(pdf, 2, 1, -1, \"La finca 3\");\n  pdf.addTable();\n\n  pdf.createTable(2);\n  pdf.setTableWidth(150);\n  pdf.setAlignment(\"left\");\n  AddCellTexttable(pdf, 2, 1, -1, \" Cod.Proyecto: \");\n  pdf.setAlignment(\"right\");\n  AddCellTexttable(pdf, 2, 1, -1, \"123-456\");\n  pdf.addTable();\n\n  pdf.createTable(2);\n  pdf.setTableWidth(150);\n  pdf.setAlignment(\"left\");\n  AddCellTexttable(pdf, 2, 1, -1, \" N.ORDEN: \");\n  pdf.setAlignment(\"right\");\n  AddCellTexttable(pdf, 2, 1, -1, \"123456\");\n  pdf.addTable();\n\n  pdf.createTable(1);\n  pdf.setTableWidth(150);\n  pdf.setAlignment(\"left\");\n  AddCellTexttable(pdf, 2, 1, 1, \"\");\n  pdf.addTable();\n\n  //segundo apartado\n\n  pdf.createTable(3);\n  pdf.setFontStyle(\"bold\");\n  pdf.setTableCellWidths(100, 25, 25);\n  pdf.setAlignment(\"left|bottom\");\n  AddCellTexttable(pdf, 2, 1, 0, \" Tarea \");\n  AddCellTexttable(pdf, 2, 1, 0, \" Inicio \");\n  AddCellTexttable(pdf, 2, 1, 0, \" Fin \");\n  pdf.addTable();\n\n  pdf.createTable(1);\n  pdf.setFont(\"gillsans.ttf\");\n  pdf.setFontStyle(\"normal\");\n  pdf.setTableWidth(150);\n  pdf.setAlignment(\"left\");\n  AddCellTexttable(pdf, 2, 1, 1, \"\");\n  pdf.addTable();\n\n  addNewLine(pdf);\n\n  //Recorreremos con un FOR para ir poniendo las tareas, para el ejemplo las ponemos fijas\n  //set coll = this.Contents(\"@MaestroTareas\")\n  //coll.Macro(\"##MACRO1##\") = \"IDORDEN=\"+numOrden\n  //coll.LoadAll\n  //tot=coll.count\n  //if not coll is nothing then\n  //\tfor i=0 to tot\n  //\t\tset obj = coll(cint(i))\n  //\t\tpdf.createTable(3\n  //\t\tpdf.setTableCellWidths(100,25,25\n  //\t\tpdf.setAlignment(\"left\"\n  //\t\tAddCellTexttable pdf,2,1,-1,cstr(obj(\"MAP_TAREADESC\"))\n  //\t\tAddCellTexttable pdf,2,1,-1,cstr(obj(\"HORAINICIO\"))\n  //\t\tAddCellTexttable pdf,2,1,-1,cstr(obj(\"HORAFIN\"))\n  //\t\tpdf.addTable();\n  //\tnext\n  //end if\n\n  //Aqui ponemos fijo lo anterior para no necesitar Base de datos\n  pdf.createTable(3);\n  pdf.setTableCellWidths(100, 25, 25);\n  pdf.setAlignment(\"left\");\n  AddCellTexttable(pdf, 2, 1, -1, \"Tarea Numero Uno\");\n  AddCellTexttable(pdf, 2, 1, -1, \"11:45\");\n  AddCellTexttable(pdf, 2, 1, -1, \"12:00\");\n  pdf.addTable();\n\n  pdf.createTable(3);\n  pdf.setTableCellWidths(100, 25, 25);\n  pdf.setAlignment(\"left\");\n  AddCellTexttable(pdf, 2, 1, -1, \"Tarea Numero Dos\");\n  AddCellTexttable(pdf, 2, 1, -1, \"12:00\");\n  AddCellTexttable(pdf, 2, 1, -1, \"12:30\");\n  pdf.addTable();\n\n  pdf.createTable(3);\n  pdf.setTableCellWidths(100, 25, 25);\n  pdf.setAlignment(\"left\");\n  AddCellTexttable(pdf, 2, 1, -1, \"Tarea Numero Tres\");\n  AddCellTexttable(pdf, 2, 1, -1, \"12:30\");\n  AddCellTexttable(pdf, 2, 1, -1, \"13:00\");\n  pdf.addTable();\n\n  //datos del total horas.\n  pdf.createTable(2);\n  pdf.setTableCellWidths(110, 40);\n  pdf.setAlignment(\"left\");\n  AddCellTexttable(pdf, 2, 1, -1, \"Total Horas\");\n  pdf.setAlignment(\"right\");\n  //AddCellTexttable pdf,2,1,-1,cstr(round(self.TOTALHORAS\")))+\"h\"\n  AddCellTexttable(pdf, 2, 1, -1, \"1.15\" + \" h\");\n  pdf.addTable();\n\n  addNewLine(pdf);\n  addNewLine(pdf);\n\n  //datos del total.\n  //calculos del subtotal\n  pdf.createTable(2);\n  pdf.setTableCellWidths(110, 40);\n  pdf.setAlignment(\"left\");\n  //AddCellTexttable pdf,2,1,-1,\" Subtotal = \" + cstr(round(self.TOTALHORAS\"),2)) + \"h * \" + cstr(user(\"PRECIOHORA\")) + cstr(user(\"MONEDA\"))+ \"/h =\"\n  AddCellTexttable(\n    pdf,\n    2,\n    1,\n    -1,\n    \" Subtotal = \" + \"1.15\" + \"h x \" + \"40 \" + \"?\" + \"/h =\"\n  );\n  pdf.setAlignment(\"right\");\n  AddCellTexttable(pdf, 2, 1, -1, \"46 Eur\");\n  pdf.addTable();\n  //calculos gastos\n  pdf.createTable(2);\n  pdf.setTableCellWidths(110, 40);\n  pdf.setAlignment(\"left\");\n  AddCellTexttable(pdf, 2, 1, -1, \" Gastos\");\n  pdf.setAlignment(\"right\");\n  AddCellTexttable(pdf, 2, 1, -1, \"12 Eur\");\n  pdf.addTable();\n  //calculos desplazamiento\n  pdf.createTable(2);\n  pdf.setTableCellWidths(110, 40);\n  pdf.setAlignment(\"left\");\n  //AddCellTexttable pdf,2,1,-1,\" Desplazamiento = \" + cstr(round(self.UNIDADESDESPLAZ\"),2)) + \"Ud * \" + cstr(user(\"PRECIOHORA\")) + cstr(user(\"MONEDA\"))+\"/Ud =\"\n  AddCellTexttable(pdf, 2, 1, -1, \" Desplazamiento = 1 Ud * 20 Eur/Ud =\");\n  pdf.setAlignment(\"right\");\n  //AddCellTexttable pdf,2,1,-1,cstr(round(self.UNIDADESDESPLAZ\") * user(\"PRECIOHORA\"),2))\t+ cstr(user(\"MONEDA\"))\n  AddCellTexttable(pdf, 2, 1, -1, \"20 ?\");\n  pdf.addTable();\n\n  pdf.createTable(1);\n  pdf.setTableWidth(150);\n  pdf.setAlignment(\"left\");\n  AddCellTexttable(pdf, 2, 1, 1, \"\");\n  pdf.addTable();\n\n  //total\n  pdf.createTable(2);\n  pdf.setTableCellWidths(110, 40);\n  pdf.setAlignment(\"left\");\n  AddCellTexttable(pdf, 2, 1, -1, \" TOTAL \");\n  pdf.setFontStyle(\"bold\");\n  pdf.setAlignment(\"right\");\n  //AddCellTexttable pdf,2,1,-1,cstr(round(self.MAP_TOTAL\"),2)) + cstr(user(\"MONEDA\"))\n  AddCellTexttable(pdf, 2, 1, -1, \"78 ?\");\n  pdf.addTable();\n\n  addNewLine(pdf);\n\n  //CLIENTE QUE FIRMA\n  pdf.createTable(2);\n  pdf.setTableWidth(150);\n  pdf.setFont(\"gillsans.ttf\");\n  pdf.setFontStyle(\"normal\");\n  pdf.setAlignment(\"left\");\n  AddCellTexttable(pdf, 2, 1, -1, \" Cliente: \");\n  pdf.setAlignment(\"right\");\n  //AddCellTexttable pdf,2,1,-1,self.NOMBRERECEPTOR\")\n  AddCellTexttable(pdf, 2, 1, -1, \"Antonio Rodriguez López\");\n  pdf.addTable();\n\n  pdf.createTable(2);\n  pdf.setTableWidth(150);\n  pdf.setAlignment(\"left\");\n  AddCellTexttable(pdf, 2, 1, -1, \" DNI: \");\n  pdf.setAlignment(\"right\");\n  AddCellTexttable(pdf, 2, 1, -1, \"08.123.456\");\n  pdf.addTable();\n\n  pdf.createTable(1);\n  pdf.setTableWidth(150);\n  pdf.setAlignment(\"left\");\n  AddCellTexttable(pdf, 2, 1, -1, \" Firma del cliente: \");\n  pdf.addTable();\n\n  pdf.createTable(1);\n  pdf.setTableWidth(150);\n  pdf.setCellBorder(\"none\");\n  pdf.setAlignment(\"left\");\n  //pdf.addCellImage(self.FIRMACLIENTE\"),120,120\n  //Si no especificamos una ruta para el fichero de imagen, lo busca en files.\n  pdf.addCellImage(\"4b0a07e4-2213-47eb-83a1-e28d15662f0a.jpg\", 120, 120);\n  pdf.addTable();\n\n  pdf.close();\n\n  //Si queremos abrir el PDF una vez generado.\n  var a = await ui.msgBox(\"ABRIR PDF?\", \"PDF GENERADO\", 4);\n  if (a == 6) {\n    //Si queremos abrir el PDF una vez generado.\n    pdf.launchPDF();\n  }\n}\n\nasync function CrearPdf_Factura(nameFile, pdf01, createGrid) {\n  ui.updateWaitDialog(\"Generando PDF...\", 0);\n\n  try {\n    pdf01.delete(nameFile);\n  } catch (e) {}\n\n  pdf01.create(nameFile);\n  pdf01.setEncryption(\"\", \"1234\", \"128bits\");\n\n  // INICIO CABECERA\n  pdf01.beginHeader();\n\n  pdf01.createTable(1);\n  pdf01.setCellBorder(\"none\");\n  pdf01.setAlignment(\"left\");\n  pdf01.setTableCellWidths(100);\n  //pdf01.addCellImage(\"logo_cabecera_pdf.png\", 110, 40 //, 40,40\n  pdf01.addImageSetXY(\"logo_cabecera_pdf.png\", 86, 750, 80, 40);\n\n  pdf01.setFont(\"courier\");\n  pdf01.setFontSize(15);\n  pdf01.setFontColor(\"#0000AA\");\n  pdf01.setFontStyle(\"bold\");\n\n  pdf01.addCellText(\" \");\n  pdf01.addCellText(\"FACTURA:  123.123\");\n  pdf01.addCellText(\"23569   Cárnicas del Suroeste S.L.\");\n  pdf01.setFontSize(12);\n  pdf01.setFontStyle(\"normal\");\n  pdf01.addCellText(\"CIF: 08.123.123    TLF: +34 123 123 456\");\n  pdf01.addCellText(\"La dirección del cliente, 34 A  06001\");\n  pdf01.addCellText(\"MERIDA  -  BADAJOZ\");\n  pdf01.addCellText(\"ESPAÑA\");\n  pdf01.addCellText(\"FECHA: 03/02/2015\");\n  pdf01.setFontSize(7);\n  pdf01.addCellText(\n    \"Bens constantes desta factura, colocados à disposição do adquirente nesta data\"\n  );\n  pdf01.addCellText(\" \");\n  pdf01.addTable();\n\n  pdf01.createTable(3);\n  pdf01.setTableWidth(250);\n  pdf01.setTableCellWidths(25, 20, 55);\n\n  pdf01.setCellBorder(\"all\");\n  pdf01.setAlignment(\"center\");\n  pdf01.addCellText(\"FACTURA\", \"#EEEEEE\");\n  pdf01.addCellText(\"FECHA\", \"#EEEEEE\");\n  pdf01.setAlignment(\"left\");\n  pdf01.addCellText(\"FORMA PAGO\", \"#EEEEEE\");\n\n  pdf01.setAlignment(\"center\");\n  pdf01.addCellText(\"123.123\");\n  pdf01.addCellText(\"03/02/2015\");\n  pdf01.setAlignment(\"left\");\n  pdf01.addCellText(\"90 días\");\n  pdf01.addTableSetXY(90, 700);\n\n  //pdf01.addTableSetXY(90,820\n\n  pdf01.setFont(\"helvetica\");\n  pdf01.setFontSize(8);\n  pdf01.setFontColor(\"#0000AA\");\n  pdf01.createTable(7);\n  pdf01.setTableCellWidths(10, 40, 10, 10, 10, 10, 10);\n\n  pdf01.setCellBorder(\"none\");\n  pdf01.setCellBorder(\"left\");\n  pdf01.setCellBorder(\"top\");\n  pdf01.setCellBorder(\"bottom\");\n  pdf01.setAlignment(\"left\");\n  pdf01.addCellText(\"CODIGO\", \"#EEEEEE\");\n\n  pdf01.setCellBorder(\"left\");\n  pdf01.setCellBorder(\"bottom\");\n  pdf01.setCellBorder(\"top\");\n  pdf01.addCellText(\"DESCRIPCION\", \"#EEEEEE\");\n  pdf01.setAlignment(\"right\");\n  pdf01.addCellText(\"BULTOS\", \"#EEEEEE\");\n  pdf01.addCellText(\"K/U\", \"#EEEEEE\");\n  pdf01.addCellText(\"T.CANT\", \"#EEEEEE\");\n  pdf01.addCellText(\"IMPORTE\", \"#EEEEEE\");\n\n  pdf01.setCellBorder(\"left\");\n  pdf01.setCellBorder(\"right\");\n  pdf01.setCellBorder(\"bottom\");\n  pdf01.setCellBorder(\"top\");\n  pdf01.addCellText(\"TOTAL\", \"#EEEEEE\");\n  pdf01.addTable();\n\n  pdf01.endHeader();\n\n  // FIN CABECERA\n\n  // INICIO PIE\n  pdf01.beginFooter();\n  pdf01.createTable(1);\n  pdf01.setTableWidth(418);\n  pdf01.setCellBorder(\"none\");\n  pdf01.addCellImage(\"logo_pie_pdf.png\", 600, 70);\n  pdf01.setFont(\"courier\");\n  pdf01.setAlignment(\"center\");\n  pdf01.setFontSize(10);\n  pdf01.setFontStyle(\"normal\");\n  pdf01.setFontColor(\"#FFFFFF\");\n  var pagina = pdf01.getCurrentPage();\n  pdf01.addCellText(\"PAG: \" + pagina);\n  //Esto sólo funcionará en el pie de página.\n  //pdf01.ShowPageNumber, 300, 10\n  //pdf01.addTable();\n  pdf01.addTableSetXY(88, 104);\n  pdf01.endFooter();\n  // FIN PIE\n\n  pdf01.open();\n  ui.updateWaitDialog(\"Generando PDF...\", 20);\n  pdf01.newLine();\n\n  //**************************************************************\n  // Muestra una rejilla de ayuda para posicionar cosas en el PDF\n  //**************************************************************\n  if (createGrid == 1) {\n    showGridDebug(pdf01);\n  }\n\n  //pdf01.NewLine\n\n  pdf01.setAlignment(\"left\");\n  pdf01.setFontSize(9);\n  pdf01.setFontColor(\"#000000\");\n  pdf01.setCellBorder(\"none\");\n  //set coll=this.contents(\"DetallesFactura\")\n  //se hace fijo para no tener que adjuntar una base de datos con el ejemplo.\n  var i = 0;\n  //coll.loadall\n  ui.updateWaitDialog(\"Generando PDF...\", 40);\n  //BULTOSTOTAL=0\n  //for i=0 to coll.count-1\n  for (i = 0; i < 59; i++) {\n    //set obj=coll(i)\n    pdf01.createTable(7);\n    pdf01.setTableCellWidths(10, 40, 10, 10, 10, 10, 10);\n    pdf01.setCellBorder(\"none\");\n    //if i=coll.count-1 then\n    if (i == 59 || pdf01.getVerticalPosition() <= 130) {\n      //Si es el ultimo registro ponemos la linea inferior\n      pdf01.setCellBorder(\"left\");\n      pdf01.setAlignment(\"left\");\n      pdf01.setCellBorder(\"bottom\");\n      pdf01.addCellText(\"000\" + i.toString());\n      pdf01.setCellBorder(\"none\");\n      pdf01.setCellBorder(\"left\");\n      pdf01.setCellBorder(\"bottom\");\n      pdf01.addCellText(\"Pollo asado\");\n      pdf01.setAlignment(\"right\");\n      pdf01.addCellText(\"2.00\");\n      pdf01.addCellText(\"1.00\");\n      pdf01.addCellText(\"2.33\");\n      pdf01.addCellText(\"4.66\");\n      pdf01.setCellBorder(\"none\");\n      pdf01.setCellBorder(\"left\");\n      pdf01.setCellBorder(\"bottom\");\n      pdf01.setCellBorder(\"right\");\n      pdf01.addCellText(\"4.66\");\n      if (pdf01.getVerticalPosition() < 130) {\n        pdf01.newPage();\n      }\n    } else {\n      pdf01.setCellBorder(\"left\");\n      pdf01.setAlignment(\"left\");\n      pdf01.addCellText(\"000\" + i.toString());\n      //pdf01.setCellBorder(\"none\"\n      //pdf01.setCellBorder(\"left\"\n      pdf01.addCellText(\n        \"Pollo asado al vacío\" + pdf01.getVerticalPosition().toString()\n      );\n      pdf01.setAlignment(\"right\");\n      pdf01.addCellText(\"2.00\");\n      pdf01.addCellText(\"1.00\");\n      pdf01.addCellText(\"2.33\");\n      pdf01.addCellText(\"4.66\");\n\n      pdf01.setCellBorder(\"none\");\n      pdf01.setCellBorder(\"left\");\n      pdf01.setCellBorder(\"right\");\n\n      pdf01.addCellText(\"4.66\");\n    }\n    //BULTOSTOTAL=BULTOSTOTAL + coll(i)(\"MAP_CANTIDAD\")\n    pdf01.addTable();\n  }\n  ui.updateWaitDialog(\"Generando PDF...\", 90);\n  //obj = null;\n  //coll = null;\n\n  pdf01.setFontSize(7);\n  pdf01.setFontStyle(\"normal\");\n  pdf01.setFontColor(\"#000000\");\n  pdf01.addTextLine(\" \");\n  pdf01.addTextLine(\" \");\n  pdf01.addTextLine(\" \");\n  pdf01.addTextLine(\n    \"Declaro pelo presente documento que os artigos adquiridos a XXXXXX. para su expediçiao que se descreve neste documento serão agravados mo destino pelo I.V.A. dada a minha condiçao de sujeto pasivo do I.V.A. em Portugal\"\n  );\n  pdf01.setFontSize(12);\n  pdf01.setFontStyle(\"bold\");\n  pdf01.addTextLine(\" \");\n  pdf01.addText(\"EXENTO DE IVA \");\n  pdf01.setFontSize(8);\n  pdf01.setFontStyle(\"bold\");\n  pdf01.addText(\"Art. 25 de la Ley del IVA\");\n  pdf01.setFontSize(8);\n  pdf01.setFontStyle(\"normal\");\n  pdf01.addText(\"           FORMA DE PAGO: \");\n  pdf01.setFontSize(12);\n  pdf01.setFontStyle(\"bold\");\n  pdf01.addTextLine(\"Efectivo\");\n\n  pdf01.setFont(\"courier\");\n  pdf01.setFontSize(9);\n  pdf01.setFontStyle(\"normal\");\n  pdf01.setFontColor(\"#0000AA\");\n  pdf01.addText(\"BULTOS: 60\");\n\n  pdf01.setFontSize(12);\n  pdf01.setFontColor(\"#0000AA\");\n  pdf01.addTextSetX(\"TOTAL FACTURA: XXX.XX ?\", 350);\n\n  pdf01.close();\n  ui.updateWaitDialog(\"Generando PDF...\", 100);\n\n  //Si queremos abrir el PDF una vez generado.\n  var a = await ui.msgBox(\"ABRIR PDF?\", \"PDF GENERADO\", 4);\n  if (a == 6) {\n    //Si queremos abrir el PDF una vez generado.\n    pdf01.launchPDF();\n  }\n\n  //pdf01.DecryptPDF \"/mnt/sdcard/xone/testpdf01.pdf\", \"/mnt/sdcard/xone/testpdf01decrypt.pdf\", \"1234\"\n}\n\nfunction getStrFill(stProp, stRelleno, nChar) {\n  var stCad = \"\";\n  //Aquí obtenemos el valor del title del TL\n  if (stProp.length < nChar) {\n    nChar = (nChar - stProp.length) * 2;\n    stCad = stRelleno.repeat(nChar - 1);\n  }\n\n  stCad = stProp + stCad;\n  return stCad;\n}\n\n//Devolvemos \"true\" ó \"false\" como cadena según esté marcado ó no el check.\nfunction getBoolStr(stProp) {\n  if (self[stProp] == 1) {\n    return \"true\";\n  } else {\n    return \"false\";\n  }\n}\n\nfunction getEmptyFromNull(dataObject) {\n  return dataObject == null ? \"\" : dataObject;\n}\n\n//Para mayor simplicidad, todas las diferentes líneas son tablas, que nos permiten alinear el texto más facilmente.\n//El documento es una grilla cuyo punto 0,0 es la ESQUINA INFERIOR IZQUIERDA.\n//Para mejor desarrollo, activar showGridDebug(pdf)\n//addNewLine(Pdf01) Añade una tabla de una línea vacía y sin bordes\n\nvar pdfGlobal;\n\nasync function GenerarPDFChecks(nameFile, pdf, createGrid) {\n  var i = 0;\n  //Creamos el PDF, borramos si existe ya el fichero, le indicamos el nombre y la encriptación a utilizar\n  //CreatePDF nameFile,pdf\n  try {\n    pdf.delete(nameFile);\n  } catch (e) {}\n\n  pdf.create(nameFile);\n  pdf.permissions(\"assembly\");\n  pdf.permissions(\"print\");\n  pdf.setEncryption(\"\", \"1234\", \"128bits\");\n\n  pdf.open();\n\n  pdf.setFont(\"gillsans.ttf\");\n  pdf.setFontStyle(\"normal\");\n  pdf.setAlignment(\"center\");\n  pdf.setFontColor(\"#000000\");\n  pdf.setFontSize(9);\n\n  //**************************************************************\n  // Muestra una rejilla de ayuda para posicionar cosas en el PDF\n  //**************************************************************\n  if (createGrid == 1) {\n    showGridDebug(pdf);\n  }\n\n  //**********************************\n  //       PRIMER RECUADRO\n  // TEXTO INSPECCION\n  // FSI-1.4 y V.1\n  // LOGO\n  // *********************************\n\n  pdf.createTable(3);\n  pdf.setTableWidth(415);\n  pdf.setTableCellWidths(90, 235, 90);\n  pdf.addCellText(\n    (String.fromCharCode(10) + String.fromCharCode(13)).repeat(3)\n  );\n\n  pdf.setFontStyle(\"bold\");\n  pdf.setFontColor(\"#FFFFFF\");\n  pdf.setFontSize(12);\n\n  pdf.addCellText(String.fromCharCode(10) + \"INSPECCION\", \"#000000\");\n  pdf.setFontSize(10);\n  pdf.setFontColor(\"#000000\");\n  pdf.addCellText(\n    \"FSI-1.4\" + String.fromCharCode(10) + String.fromCharCode(13) + \"V.1\"\n  );\n  pdf.addTable();\n\n  //Para dejar una separación, usamos una tabla sin bordes con la letra más o menos grande para haya más o menos separación\n  pdf.setFontSize(2);\n  addNewLine(pdf);\n  pdf.setFontSize(10);\n\n  //pdf.addRectangle(PosX, posY, Ancho, Alto, Grosor, ColorFondo, ColorLinea\n  //Para la línea entre el FSI-1.4 y el V.1\n  pdf.addRectangle(408, 786, 99, 0, 1, \"#000000\", \"#000000\");\n\n  pdf.addImageSetXY(\"./icons/logo_xone.png\", 118, 770, 30, 30);\n\n  //**********************************\n  //      SEGUNDO RECUADRO\n  // Servicio, Inspector, Fecha, Hora\n  // Vigilantes asignados\n  // *********************************\n\n  pdf.setCellBorder(\"all\");\n  pdf.setFontSize(8);\n  pdf.setFontStyle(\"bold\");\n\n  //Tabla con el Servicio\n  pdf.setAlignment(\"left\");\n  pdf.createTable(2);\n  pdf.setTableWidth(415);\n  pdf.setTableCellWidths(60, 355);\n  pdf.addCellText(\"SERVICIO\");\n  pdf.addCellText(getEmptyFromNull(self.CODSERVICIO));\n  pdf.addTable();\n\n  //Tabla con el Inspector, fecha y hora\n  pdf.createTable(6);\n  pdf.setTableWidth(415);\n  pdf.setTableCellWidths(60, 178, 42, 60, 40, 35);\n  pdf.addCellText(\"INSPECTOR\");\n  pdf.setFontSize(7);\n  pdf.addCellText(getEmptyFromNull(self.MAP_USUARIO));\n  pdf.setFontSize(8);\n  pdf.addCellText(\"FECHA\");\n  pdf.addCellText(getDate(self.FECHA));\n  pdf.addCellText(\"HORA\");\n  pdf.addCellText(getEmptyFromNull(self.HORA));\n  pdf.addTable();\n\n  //Tabla con los vigilantes\n  pdf.createTable(2);\n  pdf.setTableWidth(415);\n  pdf.setTableCellWidths(60, 355);\n  pdf.addCellText(\n    \"V/S\" + String.fromCharCode(10) + String.fromCharCode(13) + \"ASIGNADOS\"\n  );\n  pdf.addCellText(\" \");\n  pdf.addTable();\n\n  //Tabla \"flotante\" con los vigilantes asignados\n  pdf.setCellBorder(\"all\");\n  pdf.setFontStyle(\"normal\");\n  pdf.setAlignment(\"left\");\n  pdf.setFontSize(10);\n  pdf.createTable(2);\n  pdf.setTableWidth(358);\n  pdf.setTableCellWidths(179, 179);\n  pdf.addCellText(\"abcdefghijklmnñopqrstuvwxyz\"); //,\"#FF0000\"\n  pdf.addCellText(\"abcdefghijklmnñopqrstuvwxyz\"); //,\"#00FF00\"\n  pdf.addCellText(\"abcdefghijklmnñopqrstuvwxyz\"); //,\"#0000FF\"\n  pdf.addCellText(\"abcdefghijklmnñopqrstuvwxyz\"); //,\"#FF0000\"\n\n  //pdf.addTableSetXY(149,727);\n  pdf.addTableSetXY(149, 736);\n\n  pdf.setFontSize(2);\n  addNewLine(pdf);\n\n  // *************************************\n  // *************************************\n  // *****************************\n  //  CONTROL DE DOCUMENTACION 1\n  // *****************************\n\n  //Nos quedamos con la posición donde se pinta la tabla contenedora para luego pintar todos los checks\n  //relativos a ésta posición\n  var posY = pdf.getVerticalPosition() - 10;\n  var interlineado = 11;\n  pdf.setCellBorder(\"all\");\n  pdf.setFontSize(8);\n  pdf.setFontStyle(\"normal\");\n  pdf.setAlignment(\"left\");\n\n  pdf.createTable(1);\n  pdf.setTableWidth(750);\n  pdf.setFont(\"frutiger.ttf\");\n  //pdf.addCellText(this.fieldPropertyValue(\"MAP_ETQ01\",\"title\"),\"#EEEEEE\" //\"CONTROL DE DOCUMENTACIÓN\"\n  pdf.addCellText(\"CONTROL DE DOCUMENTACIÓN\", \"#EEEEEE\"); //\"CONTROL DE DOCUMENTACIÓN\"\n  pdf.addCellText(\n    (String.fromCharCode(10) + String.fromCharCode(13)).repeat(4)\n  );\n  pdf.addCellText(\n    (String.fromCharCode(10) + String.fromCharCode(13)).repeat(5)\n  );\n  pdf.addTable();\n\n  pdf.setFont(\"gillsans.ttf\");\n  pdf.setCellBorder(\"none\");\n  pdf.setFontSize(9);\n  pdf.setFontStyle(\"bold\");\n  pdf.createTable(8);\n\n  //***** IMPORTANTE ******\n  //Para poder poner una tabla\ten una posición absoluta, hay que definir SetTableWidth\n  //y se le dice el ancho de la primera celda\n  //***********************\n  pdf.setTableWidth(414);\n  pdf.setTableCellWidths(220, 25, 25, 25, 79, 20, 20, 20);\n  pdf.setAlignment(\"center\");\n  pdf.addCellText(\" \"); //,\"#FF0000\"\n  pdf.addCellText(\"SI\"); //,\"#00FF00\"\n  pdf.addCellText(\"NO\"); //,\"#0000FF\"\n  pdf.addCellText(\"N/A*\"); //,\"#FF0000\"\n  pdf.addCellText(\" \"); //,\"#00FF00\"\n  pdf.addCellText(\"B\"); //,\"#0000FF\"\n  pdf.addCellText(\"M\"); //,\"#FF0000\"\n  pdf.addCellText(\"R\"); //,\"#00FF00\"\n\n  pdf.addTableSetXY(90, posY);\n\n  pdf.setFontStyle(\"normal\");\n  pdf.setAlignment(\"left\");\n  pdf.setFontColor(\"#000000\");\n  pdf.setFontSize(8);\n\n  for (i = 1; i <= 3; i++) {\n    i = parseInt(i);\n\n    pdf.createTable(2);\n\n    //***** IMPORTANTE ******\n    //Para poder poner una tabla\ten una posición absoluta, hay que definir SetTableWidth\n    //y se le dice el ancho de la primera celda\n    //***********************\n\n    pdf.setTableWidth(380);\n    pdf.setTableCellWidths(380, 100);\n\n    //pdf.addCellText(getStrFill(this.fieldPropertyValue(\"MAP_ETQ01_\"+i,\"title\"),\".\",40)\n    pdf.addCellText(getStrFill(\"Lo que sea\", \".\", 40));\n    pdf.addCellText(\"ESTADO\");\n\n    posY = posY - interlineado;\n    pdf.addTableSetXY(90, posY);\n\n    pdf.addCheckboxSetXY(\n      \" \",\n      307,\n      posY - interlineado,\n      9,\n      \"check\",\n      getBoolStr(\"MAP_01_\" + i + \"_SI\"),\n      \"true\"\n    );\n    pdf.addCheckboxSetXY(\n      \" \",\n      331,\n      posY - interlineado,\n      9,\n      \"check\",\n      getBoolStr(\"MAP_01_\" + i + \"_NO\"),\n      \"true\"\n    );\n    pdf.addCheckboxSetXY(\n      \" \",\n      354,\n      posY - interlineado,\n      9,\n      \"check\",\n      getBoolStr(\"MAP_01_\" + i + \"_NA\"),\n      \"true\"\n    );\n\n    switch (self[\"ESTADO\" + i]) {\n      case \"BIEN\":\n        pdf.addCheckboxSetXY(\n          \" \",\n          452,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"true\",\n          \"true\"\n        );\n        pdf.addCheckboxSetXY(\n          \" \",\n          471,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        pdf.addCheckboxSetXY(\n          \" \",\n          490,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        break;\n      case \"MAL\":\n        pdf.addCheckboxSetXY(\n          \" \",\n          452,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        pdf.addCheckboxSetXY(\n          \" \",\n          471,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"true\",\n          \"true\"\n        );\n        pdf.addCheckboxSetXY(\n          \" \",\n          490,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        break;\n      case \"REGULAR\":\n        pdf.addCheckboxSetXY(\n          \" \",\n          452,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        pdf.addCheckboxSetXY(\n          \" \",\n          471,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        pdf.addCheckboxSetXY(\n          \" \",\n          490,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"true\",\n          \"true\"\n        );\n        break;\n      default:\n        pdf.addCheckboxSetXY(\n          \" \",\n          452,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        pdf.addCheckboxSetXY(\n          \" \",\n          471,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        pdf.addCheckboxSetXY(\n          \" \",\n          490,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        break;\n    }\n  }\n\n  // *****************************\n  //  CONTROL DE DOCUMENTACION 2\n  // *****************************\n\n  posY = posY - 6;\n\n  pdf.setFontStyle(\"normal\");\n  pdf.setAlignment(\"left\");\n  pdf.setFontColor(\"#000000\");\n  pdf.setFontSize(8);\n\n  for (i = 1; i <= 4; i++) {\n    //Hay 4 registros\n    i = parseInt(i);\n    pdf.createTable(3);\n\n    //***** IMPORTANTE ******\n    //Para poder poner una tabla\ten una posición absoluta, hay que definir SetTableWidth\n    //y se le dice el ancho de la primera celda\n    //***********************\n\n    pdf.setTableWidth(414);\n    pdf.setTableCellWidths(402, 110, 78);\n\n    //pdf.addCellText(getStrFill(this.fieldPropertyValue(\"MAP_ETQ01_\"+cstr(i+3),\"title\"),\".\",40)\n    pdf.addCellText(getStrFill(\"Lo que sea 2\", \".\", 40));\n\n    switch (i.toString()) {\n      case \"1\":\n        pdf.addCellText(\"Fecha última revisión\");\n        if (getEmptyFromNull(self.FECHAUR4) == \"\") {\n          pdf.addCellText(\"__ / __ / ____\"); //,\"#0000FF\"\n        } else {\n          pdf.addCellText(getDate(self.FECHAUR4));\n        }\n        break;\n      case \"2\":\n        pdf.addCellText(\"Fecha última revisión\");\n        if (getEmptyFromNull(self.FECHAUR5) == \"\") {\n          pdf.addCellText(\"__ / __ / ____\"); //,\"#0000FF\"\n        } else {\n          pdf.addCellText(getDate(self.FECHAUR5));\n        }\n        break;\n      default:\n        pdf.addCellText(\"\");\n        pdf.addCellText(\"\");\n        break;\n    }\n\n    posY = posY - interlineado;\n    pdf.addTableSetXY(90, posY);\n\n    pdf.addCheckboxSetXY(\n      \" \",\n      307,\n      posY - interlineado,\n      9,\n      \"check\",\n      getBoolStr(\"MAP_01_\" + i + \"_SI\"),\n      \"true\"\n    );\n    pdf.addCheckboxSetXY(\n      \" \",\n      331,\n      posY - interlineado,\n      9,\n      \"check\",\n      getBoolStr(\"MAP_01_\" + i + \"_NO\"),\n      \"true\"\n    );\n    pdf.addCheckboxSetXY(\n      \" \",\n      354,\n      posY - interlineado,\n      9,\n      \"check\",\n      getBoolStr(\"MAP_01_\" + i + \"_NA\"),\n      \"true\"\n    );\n  }\n\n  // *****************************\n  // REVISION DE MEDIOS AUXILIARES\n  // *****************************\n\n  posY = pdf.getVerticalPosition() - 10;\n  interlineado = 12;\n\n  pdf.setCellBorder(\"all\");\n  pdf.setFontSize(8);\n  pdf.setFontStyle(\"normal\");\n  pdf.setAlignment(\"left\");\n\n  pdf.createTable(1);\n  pdf.setTableWidth(750);\n  pdf.setFont(\"frutiger.ttf\");\n  //pdf.addCellText( this.fieldPropertyValue(\"MAP_ETQ02\",\"title\"),\"#EEEEEE\" //\"REVISIÓN DE MEDIOS AUXILIARES\"\n  pdf.addCellText(\"REVISIÓN DE MEDIOS AUXILIARES\", \"#EEEEEE\"); //\"REVISIÓN DE MEDIOS AUXILIARES\"\n  pdf.addCellText(\n    (String.fromCharCode(10) + String.fromCharCode(13)).repeat(9)\n  );\n  pdf.addTable();\n\n  pdf.setFont(\"gillsans.ttf\");\n  pdf.setCellBorder(\"none\");\n  pdf.setFontSize(9);\n  pdf.setFontStyle(\"bold\");\n  pdf.setAlignment(\"center\");\n  pdf.createTable(4);\n  pdf.setTableWidth(414);\n  pdf.setTableCellWidths(324, 30, 30, 30);\n\n  pdf.addCellText(\"\"); //,\"#FF0000\"\n  pdf.addCellText(\"SI\"); //,\"#FF0000\"\n  pdf.addCellText(\"NO\"); //,\"#00FF00\"\n  pdf.addCellText(\"N/A*\"); //,\"#0000FF\"\n\n  pdf.addTableSetXY(90, posY);\n\n  pdf.setFontStyle(\"normal\");\n  pdf.setAlignment(\"left\");\n  pdf.setFontColor(\"#000000\");\n  pdf.setFontSize(9);\n\n  for (i = 1; i <= 6; i++) {\n    i = parseInt(i);\n    pdf.createTable(1);\n    pdf.setTableWidth(414);\n    //pdf.addCellText(getStrFill(this.fieldPropertyValue(\"MAP_ETQ02_\"+i,\"title\"),\".\",80)\n    pdf.addCellText(getStrFill(\"Lo que sea 3\", \".\", 80));\n    posY = posY - interlineado;\n    pdf.addTableSetXY(90, posY);\n    //pdf.addTable();\n\n    pdf.addCheckboxSetXY(\n      \" \",\n      425,\n      posY - interlineado,\n      9,\n      \"check\",\n      getBoolStr(\"MAP_02_\" + i + \"_SI\"),\n      \"true\"\n    );\n    pdf.addCheckboxSetXY(\n      \" \",\n      456,\n      posY - interlineado,\n      9,\n      \"check\",\n      getBoolStr(\"MAP_02_\" + i + \"_NO\"),\n      \"true\"\n    );\n    pdf.addCheckboxSetXY(\n      \" \",\n      485,\n      posY - interlineado,\n      9,\n      \"check\",\n      getBoolStr(\"MAP_02_\" + i + \"_NA\"),\n      \"true\"\n    );\n  }\n\n  // ********************************\n  // CUMPLIMIENTO CODIGO DEONTOLOGICO\n  // ********************************\n\n  posY = pdf.getVerticalPosition() - 10;\n  interlineado = 12;\n\n  pdf.setCellBorder(\"all\");\n  pdf.setFontSize(8);\n  pdf.setFontStyle(\"normal\");\n  pdf.setAlignment(\"left\");\n\n  pdf.createTable(1);\n  pdf.setTableWidth(750);\n  pdf.setFont(\"frutiger.ttf\");\n  //pdf.addCellText( this.fieldPropertyValue(\"MAP_ETQ03\",\"title\"),\"#EEEEEE\" //\"CUMPLIMIENTO DEONTOLÓGICO\"\n  pdf.addCellText(\"CUMPLIMIENTO DEONTOLÓGICO\", \"#EEEEEE\"); //\"CUMPLIMIENTO DEONTOLÓGICO\"\n  pdf.addCellText(\n    (String.fromCharCode(10) + String.fromCharCode(13)).repeat(3)\n  );\n  pdf.addTable();\n\n  pdf.setFont(\"gillsans.ttf\");\n  pdf.setCellBorder(\"none\");\n  pdf.setFontStyle(\"bold\");\n  pdf.setAlignment(\"center\");\n  pdf.setFontSize(9);\n  pdf.createTable(8);\n  pdf.setTableWidth(414);\n  pdf.setTableCellWidths(157, 20, 20, 20, 157, 20, 20, 20);\n  pdf.addCellText(\" \"); //,\"#FF0000\"\n  pdf.addCellText(\"B\"); //,\"#00FF00\"\n  pdf.addCellText(\"M\"); //,\"#0000FF\"\n  pdf.addCellText(\"R\"); //,\"#FF0000\"\n  pdf.addCellText(\" \"); //,\"#00FF00\"\n  pdf.addCellText(\"B\"); //,\"#0000FF\"\n  pdf.addCellText(\"M\"); //,\"#FF0000\"\n  pdf.addCellText(\"R\"); //,\"#00FF00\"\n\n  pdf.addTableSetXY(90, posY);\n\n  pdf.setFontStyle(\"normal\");\n  pdf.setAlignment(\"left\");\n  pdf.setFontColor(\"#000000\");\n  pdf.setFontSize(9);\n\n  var j;\n  for (i = 1; i <= 2; i++) {\n    //Son 4, pero al estar en 2 columnas los vamos a hacer de 2 en 2\n    i = parseInt(i);\n    j = parseInt(i * 2 + 2);\n    pdf.createTable(2);\n    //***** IMPORTANTE ******\n    //Para poder poner una tabla\ten una posición absoluta, hay que definir SetTableWidth\n    //y se le dice el ancho de la primera celda\n    //***********************\n    pdf.setTableWidth(400);\n    pdf.setTableCellWidths(210, 190);\n\n    //ESTADO4, ESTADO5, ESTADO6 y ESTADO7\n    //pdf.addCellText(getStrFill(this.fieldPropertyValue(\"ESTADO\"+cstr(i*2+2),\"title\"),\".\",34)\n    pdf.addCellText(getStrFill(\"Aa\", \".\", 34));\n    //pdf.addCellText(getStrFill(this.fieldPropertyValue(\"ESTADO\"+cstr(i*2+3),\"title\"),\".\",34)\n    pdf.addCellText(getStrFill(\"Bb\", \".\", 34));\n\n    posY = posY - interlineado;\n    pdf.addTableSetXY(96, posY);\n\n    switch (self[\"ESTADO\" + j.toString()]) {\n      case \"BIEN\":\n        pdf.addCheckboxSetXY(\n          \" \",\n          245,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"true\",\n          \"true\"\n        );\n        pdf.addCheckboxSetXY(\n          \" \",\n          264,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        pdf.addCheckboxSetXY(\n          \" \",\n          283,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        break;\n      case \"MAL\":\n        pdf.addCheckboxSetXY(\n          \" \",\n          245,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        pdf.addCheckboxSetXY(\n          \" \",\n          264,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"true\",\n          \"true\"\n        );\n        pdf.addCheckboxSetXY(\n          \" \",\n          283,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        break;\n      case \"REGULAR\":\n        pdf.addCheckboxSetXY(\n          \" \",\n          245,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        pdf.addCheckboxSetXY(\n          \" \",\n          264,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        pdf.addCheckboxSetXY(\n          \" \",\n          283,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"true\",\n          \"true\"\n        );\n        break;\n      default:\n        pdf.addCheckboxSetXY(\n          \" \",\n          245,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        pdf.addCheckboxSetXY(\n          \" \",\n          264,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        pdf.addCheckboxSetXY(\n          \" \",\n          283,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        break;\n    }\n\n    j++;\n\n    switch (self[\"ESTADO\" + j.toString()]) {\n      case \"BIEN\":\n        pdf.addCheckboxSetXY(\n          \" \",\n          452,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"true\",\n          \"true\"\n        );\n        pdf.addCheckboxSetXY(\n          \" \",\n          471,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        pdf.addCheckboxSetXY(\n          \" \",\n          490,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        break;\n      case \"MAL\":\n        pdf.addCheckboxSetXY(\n          \" \",\n          452,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        pdf.addCheckboxSetXY(\n          \" \",\n          471,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"true\",\n          \"true\"\n        );\n        pdf.addCheckboxSetXY(\n          \" \",\n          490,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        break;\n      case \"REGULAR\":\n        pdf.addCheckboxSetXY(\n          \" \",\n          452,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        pdf.addCheckboxSetXY(\n          \" \",\n          471,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        pdf.addCheckboxSetXY(\n          \" \",\n          490,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"true\",\n          \"true\"\n        );\n        break;\n      default:\n        pdf.addCheckboxSetXY(\n          \" \",\n          452,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        pdf.addCheckboxSetXY(\n          \" \",\n          471,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        pdf.addCheckboxSetXY(\n          \" \",\n          490,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        break;\n    }\n  }\n\n  // ****************************\n  //     CONTROL OPERACIONAL\n  // ****************************\n\n  posY = pdf.getVerticalPosition() - 10;\n  interlineado = 12;\n\n  pdf.setCellBorder(\"all\");\n  pdf.setFontSize(8);\n  pdf.setFontStyle(\"normal\");\n  pdf.setAlignment(\"left\");\n\n  pdf.createTable(1);\n  pdf.setTableWidth(750);\n  pdf.setFont(\"frutiger.ttf\");\n  //pdf.addCellText(this.fieldPropertyValue(\"MAP_ETQ04\",\"title\"),\"#EEEEEE\" //\"CONTROL OPERACIONAL\"\n  pdf.addCellText(\"CONTROL OPERACIONAL\", \"#EEEEEE\"); //\"CONTROL OPERACIONAL\"\n  pdf.addCellText(\n    (String.fromCharCode(10) + String.fromCharCode(13)).repeat(12)\n  );\n  pdf.addTable();\n\n  pdf.setFont(\"gillsans.ttf\");\n  pdf.setCellBorder(\"none\");\n  pdf.setFontStyle(\"bold\");\n  pdf.setAlignment(\"center\");\n  pdf.setFontSize(9);\n  pdf.createTable(4);\n  pdf.setTableWidth(414);\n  pdf.setTableCellWidths(324, 30, 30, 30);\n  pdf.addCellText(\"\"); //,\"#FF0000\"\n  pdf.addCellText(\"SI\"); //,\"#FF0000\"\n  pdf.addCellText(\"NO\"); //,\"#00FF00\"\n  pdf.addCellText(\"N/A*\"); //,\"#0000FF\"\n\n  pdf.addTableSetXY(90, posY);\n\n  pdf.setFontStyle(\"normal\");\n  pdf.setAlignment(\"left\");\n  pdf.setFontColor(\"#000000\");\n  pdf.setFontSize(9);\n\n  for (i = 1; i <= 8; i++) {\n    i = parseInt(i);\n    pdf.createTable(1);\n    pdf.setTableWidth(414);\n\n    //pdf.addCellText(getStrFill(this.fieldPropertyValue(\"MAP_ETQ04_\"+i,\"title\"),\".\",80)\n    pdf.addCellText(getStrFill(\"Lo que sea 4\", \".\", 80));\n    posY = posY - interlineado;\n    pdf.addTableSetXY(90, posY);\n\n    pdf.addCheckboxSetXY(\n      \" \",\n      425,\n      posY - interlineado,\n      9,\n      \"check\",\n      getBoolStr(\"MAP_04_\" + i + \"_SI\"),\n      \"true\"\n    );\n    pdf.addCheckboxSetXY(\n      \" \",\n      456,\n      posY - interlineado,\n      9,\n      \"check\",\n      getBoolStr(\"MAP_04_\" + i + \"_NO\"),\n      \"true\"\n    );\n    pdf.addCheckboxSetXY(\n      \" \",\n      485,\n      posY - interlineado,\n      9,\n      \"check\",\n      getBoolStr(\"MAP_04_\" + i + \"_NA\"),\n      \"true\"\n    );\n  }\n\n  // *******************************\n  // EVALUACION EFICACIA Y FORMACION\n  // *******************************\n\n  posY = pdf.getVerticalPosition() - 9;\n  interlineado = 12;\n\n  pdf.setCellBorder(\"all\");\n  pdf.setFontSize(8);\n  pdf.setFontStyle(\"normal\");\n  pdf.setAlignment(\"left\");\n  pdf.createTable(1);\n  pdf.setTableWidth(750);\n  pdf.setFont(\"frutiger.ttf\");\n  //pdf.addCellText( this.fieldPropertyValue(\"MAP_ETQ05\",\"title\"),\"#EEEEEE\" //\"EVALUACIÓN EFICACIA Y FORMACIÓN\"\n  pdf.addCellText(\"EVALUACIÓN EFICACIA Y FORMACIÓN\", \"#EEEEEE\"); //\"EVALUACIÓN EFICACIA Y FORMACIÓN\"\n  pdf.addCellText(\n    (String.fromCharCode(10) + String.fromCharCode(13)).repeat(3)\n  );\n  pdf.addTable();\n\n  pdf.setFont(\"gillsans.ttf\");\n  pdf.setCellBorder(\"none\");\n  pdf.setFontStyle(\"bold\");\n  pdf.setAlignment(\"center\");\n  pdf.setFontSize(9);\n  pdf.createTable(4);\n  pdf.setTableWidth(414);\n  pdf.setTableCellWidths(324, 30, 30, 30);\n  pdf.addCellText(\"\"); //,\"#FF0000\"\n  pdf.addCellText(\"MB\"); //,\"#FF0000\"\n  pdf.addCellText(\"B\"); //,\"#00FF00\"\n  pdf.addCellText(\"R\"); //,\"#0000FF\"\n\n  pdf.addTableSetXY(90, posY);\n\n  pdf.setFontStyle(\"normal\");\n  pdf.setAlignment(\"left\");\n  pdf.setFontColor(\"#000000\");\n  pdf.setFontSize(9);\n\n  for (i = 8; i <= 9; i++) {\n    //ESTADO8 y ESTADO9\n    i = parseInt(i);\n    pdf.createTable(1);\n    pdf.setTableWidth(414);\n    //pdf.addCellText(getStrFill(this.fieldPropertyValue(\"ESTADO\"+i,\"title\"),\".\",80)\n    pdf.addCellText(getStrFill(\"Lo que sea 5\", \".\", 80));\n    posY = posY - interlineado;\n    pdf.addTableSetXY(90, posY);\n\n    switch (self[\"ESTADO\" + i]) {\n      case \"MUY BIEN\":\n        pdf.addCheckboxSetXY(\n          \" \",\n          425,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"true\",\n          \"true\"\n        );\n        pdf.addCheckboxSetXY(\n          \" \",\n          456,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        pdf.addCheckboxSetXY(\n          \" \",\n          485,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        break;\n      case \"BIEN\":\n        pdf.addCheckboxSetXY(\n          \" \",\n          425,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        pdf.addCheckboxSetXY(\n          \" \",\n          456,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"true\",\n          \"true\"\n        );\n        pdf.addCheckboxSetXY(\n          \" \",\n          485,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        break;\n      case \"REGULAR\":\n        pdf.addCheckboxSetXY(\n          \" \",\n          425,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        pdf.addCheckboxSetXY(\n          \" \",\n          456,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        pdf.addCheckboxSetXY(\n          \" \",\n          485,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"true\",\n          \"true\"\n        );\n        break;\n      default:\n        pdf.addCheckboxSetXY(\n          \" \",\n          425,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        pdf.addCheckboxSetXY(\n          \" \",\n          456,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        pdf.addCheckboxSetXY(\n          \" \",\n          485,\n          posY - interlineado,\n          9,\n          \"check\",\n          \"false\",\n          \"true\"\n        );\n        break;\n    }\n  }\n\n  // *****************************\n  //  INSTRUCCIONES DE EMERGENCIA\n  // *****************************\n\n  posY = pdf.getVerticalPosition() - 10;\n  interlineado = 12;\n\n  pdf.setCellBorder(\"all\");\n  pdf.setFontSize(8);\n  pdf.setFontStyle(\"normal\");\n  pdf.setAlignment(\"left\");\n  pdf.createTable(1);\n  pdf.setTableWidth(750);\n  pdf.setFont(\"frutiger.ttf\");\n  //pdf.addCellText( this.fieldPropertyValue(\"MAP_ETQ06\",\"title\"),\"#EEEEEE\" //\"INSTRUCCIONES DE EMERGENCIA\"\n  pdf.addCellText(\"INSTRUCCIONES DE EMERGENCIA\", \"#EEEEEE\"); //\"INSTRUCCIONES DE EMERGENCIA\"\n  pdf.addCellText(\n    (String.fromCharCode(10) + String.fromCharCode(13)).repeat(6)\n  );\n  pdf.addTable();\n\n  pdf.setFont(\"gillsans.ttf\");\n  pdf.setCellBorder(\"none\");\n  pdf.setFontSize(9);\n  pdf.setFontStyle(\"bold\");\n  pdf.setAlignment(\"center\");\n  pdf.createTable(3);\n  pdf.setTableWidth(414);\n  pdf.setTableCellWidths(334, 40, 40);\n  pdf.addCellText(\"\"); //,\"#FF0000\"\n  pdf.addCellText(\"SI\"); //,\"#00FF00\"\n  pdf.addCellText(\"NO\"); //,\"#0000FF\"\n\n  pdf.addTableSetXY(90, posY);\n\n  pdf.setFontStyle(\"normal\");\n  pdf.setAlignment(\"left\");\n  pdf.setFontColor(\"#000000\");\n  pdf.setFontSize(9);\n\n  for (i = 1; i <= 4; i++) {\n    i = parseInt(i);\n    pdf.createTable(1);\n    pdf.setTableWidth(414);\n    //pdf.addCellText(getStrFill(this.fieldPropertyValue(\"MAP_ETQ06_\"+i,\"title\"),\".\",80)\n    pdf.addCellText(getStrFill(\"Lo que sea 6\", \".\", 80));\n    posY = posY - interlineado;\n    pdf.addTableSetXY(90, posY);\n\n    pdf.addCheckboxSetXY(\n      \" \",\n      440,\n      posY - interlineado,\n      9,\n      \"check\",\n      getBoolStr(\"MAP_06_\" + i + \"_SI\"),\n      \"true\"\n    );\n    pdf.addCheckboxSetXY(\n      \" \",\n      480,\n      posY - interlineado,\n      9,\n      \"check\",\n      getBoolStr(\"MAP_06_\" + i + \"_NO\"),\n      \"true\"\n    );\n  }\n\n  // *****************************\n  //    PREVENCION DE RIESGOS\n  // *****************************\n\n  posY = pdf.getVerticalPosition() - 11;\n  interlineado = 12;\n\n  pdf.setCellBorder(\"all\");\n  pdf.setFontSize(8);\n  pdf.setFontStyle(\"normal\");\n  pdf.setAlignment(\"left\");\n\n  pdf.createTable(1);\n  pdf.setTableWidth(750);\n  pdf.setFont(\"frutiger.ttf\");\n  //pdf.addCellText( this.fieldPropertyValue(\"MAP_ETQ07\",\"title\"),\"#EEEEEE\" //\"PREVENCIÓN DE RIESGOS\"\n  pdf.addCellText(\"PREVENCIÓN DE RIESGOS\", \"#EEEEEE\"); //\"PREVENCIÓN DE RIESGOS\"\n  pdf.addCellText(\n    (String.fromCharCode(10) + String.fromCharCode(13)).repeat(11)\n  );\n  pdf.addTable();\n\n  pdf.setFont(\"gillsans.ttf\");\n  pdf.setCellBorder(\"none\");\n  pdf.setFontStyle(\"bold\");\n  pdf.setAlignment(\"center\");\n  pdf.setFontSize(9);\n  pdf.createTable(4);\n  pdf.setTableWidth(414);\n  pdf.setTableCellWidths(351, 18, 20, 25);\n  pdf.addCellText(\"\"); //,\"#FF0000\"\n  pdf.addCellText(\"SI\"); //,\"#00FF00\"\n  pdf.addCellText(\"NO\"); //,\"#0000FF\"\n  pdf.addCellText(\"N/A*\"); //,\"#FF0000\"\n\n  pdf.addTableSetXY(90, posY);\n\n  pdf.setFontStyle(\"normal\");\n  pdf.setAlignment(\"left\");\n  pdf.setFontColor(\"#000000\");\n  pdf.setFontSize(9);\n  for (i = 1; i <= 6; i++) {\n    i = parseInt(i);\n\n    pdf.createTable(1);\n    pdf.setTableWidth(414);\n\n    var texto = \"\";\n\n    switch (i.toString()) {\n      case \"1\":\n        pdf.addCellText(\n          \"¿Existe en el Servicio la evaluación de riesgos y la planificación de actividad preventiva?\"\n        );\n        posY = posY - interlineado;\n        pdf.addTableSetXY(90, posY);\n        pdf.createTable(1);\n        pdf.setTableWidth(414);\n        texto =\n          \"¿Se evidencian las Firmas de Entrega de dichos documentos por los Trabajadores?\";\n        break;\n      case \"2\":\n        texto =\n          self.fieldPropertyValue(\"MAP_ETQ07_2\", \"title\") +\n          \" \" +\n          self.fieldPropertyValue(\"MAP_ETQ07_21\", \"title\");\n        break;\n      case \"6\":\n        texto =\n          self.fieldPropertyValue(\"MAP_ETQ07_6\", \"title\") +\n          \" \" +\n          self.fieldPropertyValue(\"MAP_ETQ07_61\", \"title\");\n        break;\n      default:\n        texto =\n          \"¿Se evidencian las Firmas de Entrega de dichos documentos por los Trabajadores?\";\n        break;\n    }\n\n    pdf.addCellText(getStrFill(texto, \".\", 85));\n\n    posY = posY - interlineado;\n    pdf.addTableSetXY(90, posY);\n\n    pdf.addCheckboxSetXY(\n      \" \",\n      445,\n      posY - interlineado,\n      9,\n      \"check\",\n      getBoolStr(\"MAP_07_\" + i + \"_SI\"),\n      \"true\"\n    );\n    pdf.addCheckboxSetXY(\n      \" \",\n      466,\n      posY - interlineado,\n      9,\n      \"check\",\n      getBoolStr(\"MAP_07_\" + i + \"_NO\"),\n      \"true\"\n    );\n    pdf.addCheckboxSetXY(\n      \" \",\n      487,\n      posY - interlineado,\n      9,\n      \"check\",\n      getBoolStr(\"MAP_07_\" + i + \"_NA\"),\n      \"true\"\n    );\n  }\n\n  pdf.setFontSize(8);\n  pdf.setCellBorder(\"none\");\n  pdf.createTable(2);\n  pdf.setTableWidth(410);\n  pdf.setTableCellWidths(40, 380);\n  pdf.addCellText(\" \");\n  pdf.addCellText(\"*N/A no aplicable\"); //,\"#00FF00\"\n\n  pdf.addTable();\n\n  // *****************************\n  //            FIRMAS\n  // *****************************\n\n  pdf.setCellBorder(\"all\");\n  pdf.setFontSize(9);\n  pdf.setFontStyle(\"bold\");\n  pdf.setAlignment(\"left\");\n  pdf.createTable(3);\n  pdf.setTableCellWidths(220, 220, 220);\n  pdf.addCellText(\n    \"Firma Inspector\" +\n      String.fromCharCode(10) +\n      String.fromCharCode(13) +\n      String.fromCharCode(10) +\n      String.fromCharCode(13) +\n      String.fromCharCode(10) +\n      String.fromCharCode(13) +\n      String.fromCharCode(10) +\n      String.fromCharCode(13)\n  );\n  pdf.addCellText(\n    \"Firma Jefe de Equipo/R. Turno\" +\n      String.fromCharCode(10) +\n      String.fromCharCode(13) +\n      String.fromCharCode(10) +\n      String.fromCharCode(13) +\n      String.fromCharCode(10) +\n      String.fromCharCode(13) +\n      String.fromCharCode(10) +\n      String.fromCharCode(13)\n  );\n  pdf.addCellText(\n    \"Firma Jefe de Servicio/Delegado\" +\n      String.fromCharCode(10) +\n      String.fromCharCode(13) +\n      String.fromCharCode(10) +\n      String.fromCharCode(13) +\n      String.fromCharCode(10) +\n      String.fromCharCode(13) +\n      String.fromCharCode(10) +\n      String.fromCharCode(13)\n  );\n\n  pdf.addTable();\n\n  //Si no especificamos una ruta para el fichero de imagen, lo busca en files.\n  if (getEmptyFromNull(self.FIRMA1).length > 0) {\n    pdf.addImageSetXY(getEmptyFromNull(self.FIRMA1), 125, 32, 50, 50);\n  }\n\n  if (getEmptyFromNull(self.FIRMA2).length > 0) {\n    pdf.addImageSetXY(getEmptyFromNull(self.FIRMA2), 265, 32, 50, 50);\n  }\n\n  if (getEmptyFromNull(self.FIRMA3).length > 0) {\n    pdf.addImageSetXY(getEmptyFromNull(self.FIRMA3), 410, 32, 50, 50);\n  }\n\n  pdf.close();\n  //Si queremos abrir el PDF una vez generado.\n  var a = await ui.msgBox(\"ABRIR PDF?\", \"PDF GENERADO\", 4);\n  if (a == 6) {\n    //Si queremos abrir el PDF una vez generado.\n    pdf.launchPDF();\n  }\n}\n\nfunction setTextStyle(Pdf01, stfont, ststyle, stalign, stsize, stcolor) {\n  //Pdf01.setFont(stfont\n  Pdf01.setFont(\"Roboto-Regular.ttf\");\n  Pdf01.setFontStyle(ststyle);\n  Pdf01.setAlignment(stalign);\n  Pdf01.setFontColor(stcolor);\n\n  //if stsize=10 then stsize=11\n  Pdf01.setFontSize(stsize);\n}\n\n//Para mayor simplicidad, todas las diferentes líneas son tablas, que nos permiten alinear el texto más facilmente.\n//El documento es una grilla cuyo punto 0,0 es la ESQUINA INFERIOR IZQUIERDA.\n//Para mejor desarrollo, activar showGridDebug(pdf)\n//addNewLine(Pdf01) Añade una tabla de una línea vacía y sin bordes\n\nasync function GenerarPDF3(nameFile, pdf, createGrid) {\n  //Creamos el PDF, borramos si existe ya el fichero, le indicamos el nombre y la encriptación a utilizar\n  //CreatePDF nameFile,pdf\n  try {\n    pdf.delete(nameFile);\n  } catch (e) {}\n\n  pdf.create(nameFile);\n  pdf.permissions(\"assembly\");\n  pdf.permissions(\"print\");\n  pdf.setEncryption(\"\", \"1234\", \"128bits\");\n\n  pdf.open();\n\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"center\", 14, \"#000000\");\n\n  //pdf.setFont(\"gillsans.ttf\"\n  //pdf.setFontStyle(\"normal\"\n  //pdf.setAlignment(\"center\"\n  //pdf.setFontColor(\"#000000\"\n  //pdf.setFontSize(normal\n\n  //**************************************************************\n  // Muestra una rejilla de ayuda para posicionar cosas en el PDF\n  //**************************************************************\n  if (createGrid == 1) {\n    showGridDebug(pdf);\n  }\n\n  //**********************************\n  //\tINICIALIZAMOS VALORES\n  //**********************************\n\n  var margenIzq = 46;\n  var margenDcho = 546;\n  var margenSup = 810;\n\n  //**********************************\n  //       CABECERA\n  // LOGO\t\tTITULO\n  // *********************************\n\n  //**********************************\n  //       \tSOLICITUD\n  // *********************************\n  margenSup = margenSup - 70; //Bajamos 70\n  pdf.createTable(1); //Num columnas\n  pdf.setCellBorder(\"none\");\n  pdf.setTableWidth(500);\n  pdf.setTableCellWidths(100);\n\n  setTextStyle(pdf, \"gillsans.ttf\", \"bold\", \"center\", 14, \"#000000\");\n  pdf.addCellText(\"SOLICITUD\", \"#FFFFFF\");\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"center\", 10, \"#000000\");\n\n  pdf.addTableSetXY(margenIzq, margenSup); //EjeX, EjeY\n\n  //Para dejar una separación, usamos una tabla sin bordes con la letra más o menos grande para haya más o menos separación\n  //\tpdf.setFontSize(2\n  //\taddNewLine(pdf)\n  //\tpdf.setFontSize(10\n\n  //**********************************\n  //       \tACTIVO FISICO\n  // *********************************\n  //Primero hacemos una tabla con 2 columnas y luego hacemos otra con 2 filas más adelante para ponerla sobre la segunda columna\n\n  margenSup = margenSup - 20; //Bajamos 20\n\n  pdf.createTable(1); //Num columnas\n  pdf.setCellBorder(\"all\");\n  pdf.setTableWidth(500);\n  pdf.setTableCellWidths(100);\n\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"left\", 12, \"#000000\");\n  pdf.addCellText(\"ACTIVO FISICO\", \"#CCCCCC\");\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"center\", 10, \"#000000\");\n\n  pdf.addTableSetXY(margenIzq, margenSup); //EjeX, EjeY\n\n  //Ahora la tabla con las 2 filas de la segunda columna\n  margenSup = margenSup - 16; //Bajamos\n\n  pdf.createTable(1); //Num columnas\n  pdf.setCellBorder(\"all\");\n  pdf.setTableWidth(500);\n  pdf.setTableCellWidths(100);\n\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"left\", 10, \"#000000\");\n  pdf.addCellText(\" Denominación: \" + \" \");\n  pdf.addCellText(\" Codigo Identificación (KKS): \" + \" \");\n\n  pdf.addTableSetXY(margenIzq, margenSup); //EjeX, EjeY\tlo ponemos 100 más adelante para que salga en la segunda columna.\n\n  //**********************************\n  //SOLICITANTE Y EJECUTOR\n  //**********************************\n\n  margenSup = margenSup - 28; //Bajamos\n\n  pdf.createTable(2); //Num columnas\n  pdf.setCellBorder(\"all\");\n  pdf.setTableWidth(500);\n  pdf.setTableCellWidths(50, 50);\n\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"left\", 10, \"#000000\");\n  pdf.addCellText(\n    \" Solicitante (Nombre y Area):\" +\n      String.fromCharCode(13) +\n      \" \" +\n      \" \" +\n      String.fromCharCode(13).repeat(1)\n  );\n  pdf.addCellText(\" Ejecutor (Nombre):\" + String.fromCharCode(13) + \" \" + \" \");\n\n  pdf.addTableSetXY(margenIzq, margenSup); //EjeX, EjeY\n\n  //**********************************\n  //ALCANCE ORDEN y ALCANCE OPERACION\n  //**********************************\n\n  margenSup = margenSup - 34; //Bajamos\n\n  //tabla vacía para poder dejar el espacio fijo\n  pdf.createTable(1); //Num columnas\n  pdf.setCellBorder(\"all\");\n  pdf.setTableWidth(500);\n  pdf.setTableCellWidths(100);\n\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"left\", 12, \"#000000\");\n  pdf.addCellText(\"ALCANCE ORDEN\", \"#CCCCCC\");\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"left\", 9, \"#000000\");\n  pdf.addCellText(String.fromCharCode(13).repeat(5));\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"left\", 12, \"#000000\");\n  pdf.addCellText(\"ALCANCE OPERACION\", \"#CCCCCC\");\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"left\", 9, \"#000000\");\n  pdf.addCellText(String.fromCharCode(13).repeat(5));\n\n  pdf.addTableSetXY(margenIzq, margenSup); //EjeX, EjeY\n\n  margenSup = margenSup - 15; //Bajamos solo un poco para dejar el titulo\n  //otra tabla en la misma posición para poner el texto\n  pdf.createTable(1); //Num columnas\n  pdf.setCellBorder(\"none\");\n  pdf.setTableWidth(500);\n  pdf.setTableCellWidths(100);\n\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"left\", 9);\n  pdf.addCellText(\" \");\n\n  pdf.addTableSetXY(margenIzq, margenSup); //EjeX, EjeY\n\n  margenSup = margenSup - 75;\n  //otra tabla en la misma posición para poner el texto\n  pdf.createTable(1); //Num columnas\n  pdf.setCellBorder(\"none\");\n  pdf.setTableWidth(500);\n  pdf.setTableCellWidths(100);\n\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"left\", 9);\n  pdf.addCellText(\" \");\n\n  pdf.addTableSetXY(margenIzq, margenSup); //EjeX, EjeY\n\n  //**********************************\n  //FECHAS\n  //**********************************\n\n  margenSup = margenSup - 58; //Bajamos\n\n  pdf.createTable(2); //Num columnas\n  pdf.setCellBorder(\"all\");\n  pdf.setTableWidth(500);\n  pdf.setTableCellWidths(50, 50);\n\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"left\", 10, \"#000000\");\n  pdf.addCellText(\" Fecha Requerida: \" + \" \");\n  pdf.addCellText(\" Duración prevista: \" + \" \");\n\n  pdf.addTableSetXY(margenIzq, margenSup); //EjeX, EjeY\n\n  //**********************************\n  // PROCEDIMIENTO ASOCIADO\n  //**********************************\n\n  margenSup = margenSup - 14; //Bajamos\n\n  pdf.createTable(1); //Num columnas\n  pdf.setCellBorder(\"all\");\n  pdf.setTableWidth(500);\n  pdf.setTableCellWidths(100);\n\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"left\", 9, \"#000000\");\n  pdf.addCellText(\n    \" PROCEDIMIENTO ASOCIADO: \" + \" \" + String.fromCharCode(13) + \" \" + \" \"\n  );\n\n  pdf.addTableSetXY(margenIzq, margenSup); //EjeX, EjeY\n\n  //**********************************\n  // TRABAJO CON RIESGO ESPECIAL\n  //**********************************\n  margenSup = margenSup - 22; //Bajamos\n\n  pdf.createTable(2); //Num columnas\n  pdf.setCellBorder(\"all\");\n  pdf.setTableWidth(500);\n  pdf.setTableCellWidths(80, 20);\n\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"left\", 12, \"#000000\");\n  pdf.addCellText(\"TRABAJO CON RIESGO ESPECIAL\", \"#CCCCCC\");\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"left\", 10, \"#000000\");\n  pdf.addCellText(\" \".repeat(9) + \"SI\" + \" \".repeat(11) + \"NO\");\n\n  pdf.addTableSetXY(margenIzq, margenSup); //EjeX, EjeY\n\n  pdf.addCheckboxSetXY(\n    \" \",\n    margenIzq + 412,\n    margenSup - 13,\n    10,\n    \"check\",\n    \"true\",\n    \"true\"\n  );\n  pdf.addCheckboxSetXY(\n    \" \",\n    margenIzq + 451,\n    margenSup - 13,\n    10,\n    \"check\",\n    \"false\",\n    \"true\"\n  );\n\n  margenSup = margenSup - 16; //Bajamos\n\n  pdf.createTable(3); //Num columnas\n  pdf.setCellBorder(\"all\");\n  pdf.setTableWidth(500);\n  pdf.setTableCellWidths(34, 33, 33);\n\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"left\", 10, \"#000000\");\n  pdf.addCellText(\" \".repeat(7) + \"Eléctrico\");\n  pdf.addCellText(\" \".repeat(7) + \"Trabajos en altura\");\n  pdf.addCellText(\" \".repeat(7) + \"Trabajos en zanjas\");\n\n  pdf.addCellText(\" \".repeat(7) + \"Espacios confinados\");\n  pdf.addCellText(\" \".repeat(7) + \"Presencia de gas\");\n  pdf.addCellText(\" \".repeat(7) + \"\");\n\n  pdf.addTableSetXY(margenIzq, margenSup); //EjeX, EjeY\n\n  pdf.addCheckboxSetXY(\n    \" \",\n    margenIzq + 6,\n    margenSup - 12,\n    10,\n    \"check\",\n    \"true\",\n    \"true\"\n  ); //CHECK Electrico\n\n  pdf.addCheckboxSetXY(\n    \" \",\n    margenIzq + 176,\n    margenSup - 12,\n    10,\n    \"check\",\n    \"true\",\n    \"true\"\n  ); //CHECK Trabajos en altura\n\n  pdf.addCheckboxSetXY(\n    \" \",\n    margenIzq + 342,\n    margenSup - 12,\n    10,\n    \"check\",\n    \"true\",\n    \"true\"\n  ); //CHECK Trabajos en zanjas\n\n  pdf.addCheckboxSetXY(\n    \" \",\n    margenIzq + 6,\n    margenSup - 26,\n    10,\n    \"check\",\n    \"true\",\n    \"true\"\n  ); //CHECK Espacios confinados\n\n  pdf.addCheckboxSetXY(\n    \" \",\n    margenIzq + 176,\n    margenSup - 26,\n    10,\n    \"check\",\n    \"true\",\n    \"true\"\n  ); //CHECK Presencia de gas\n\n  //pdf.addCheckboxSetXY(\" \", margenIzq+342, margenSup-26 , 10, \"check\", \"false\", \"true\" //CHECK pa luego\n\n  //**********************************\n  //Observaciones, precauciones...\n  //**********************************\n  margenSup = margenSup - 28; //Bajamos\n\n  pdf.createTable(1); //Num columnas\n  pdf.setCellBorder(\"all\");\n  pdf.setTableWidth(500);\n  pdf.setTableCellWidths(100);\n\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"left\", 10, \"#000000\");\n  pdf.addCellText(\n    \" Observaciones, precauciones y protección adicionales: \" +\n      String.fromCharCode(13) +\n      \" \" +\n      \" \" +\n      String.fromCharCode(13)\n  );\n\n  pdf.addTableSetXY(margenIzq, margenSup); //EjeX, EjeY\n\n  //**********************************\n  //NOTA\n  //**********************************\n  margenSup = margenSup - 45; //Bajamos\n\n  pdf.createTable(1); //Num columnas\n  pdf.setCellBorder(\"none\");\n  pdf.setTableWidth(500);\n  pdf.setTableCellWidths(100);\n\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"center\", 9, \"#FF0000\");\n  pdf.addCellText(\n    \"NOTA: SI SE MODIFICAN O AMPLIAN LAS ACTIVIDADES DESCRITAS EN EL ALCANCE DEL TRABAJO SERÁ NECESARIO REVISAR ESTE PERMISO ANTES DE CONTINUAR CON LOS TRABAJOS\"\n  );\n\n  pdf.addTableSetXY(margenIzq, margenSup); //EjeX, EjeY\n\n  //**********************************\n  // REQUERIMIENTOS\n  //**********************************\n  margenSup = margenSup - 34; //Bajamos\n\n  pdf.createTable(1); //Num columnas\n  pdf.setCellBorder(\"all\");\n  pdf.setTableWidth(500);\n  pdf.setTableCellWidths(100);\n\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"left\", 12, \"#000000\");\n  pdf.addCellText(\"REQUERIMIENTOS\", \"#CCCCCC\");\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"left\", 10, \"#000000\");\n\n  pdf.addTableSetXY(margenIzq, margenSup); //EjeX, EjeY\n\n  //**********************************\n  //Descargo y Pruebas\n  //**********************************\n  margenSup = margenSup - 16; //Bajamos\n\n  pdf.createTable(4); //Num columnas\n  pdf.setCellBorder(\"all\");\n  pdf.setTableWidth(500);\n  pdf.setTableCellWidths(20, 30, 20, 30);\n\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"left\", 10, \"#000000\");\n  pdf.addCellText(\" DESCARGO\");\n  pdf.addCellText(\" \".repeat(7) + \"SI\" + \" \".repeat(11) + \"NO\");\n  pdf.addCellText(\" PRUEBAS\");\n  pdf.addCellText(\" \".repeat(7) + \"SI\" + \" \".repeat(11) + \"NO\");\n\n  pdf.addTableSetXY(margenIzq, margenSup); //EjeX, EjeY\n\n  pdf.addCheckboxSetXY(\n    \" \",\n    margenIzq + 110,\n    margenSup - 12,\n    10,\n    \"check\",\n    \"true\",\n    \"true\"\n  ); //CHECK SI DESCARGO\n  pdf.addCheckboxSetXY(\n    \" \",\n    margenIzq + 150,\n    margenSup - 12,\n    10,\n    \"check\",\n    \"false\",\n    \"true\"\n  ); //CHECK NO DESCARGO\n\n  pdf.addCheckboxSetXY(\n    \" \",\n    margenIzq + 360,\n    margenSup - 12,\n    10,\n    \"check\",\n    \"true\",\n    \"true\"\n  ); //CHECK SI PRUEBAS\n  pdf.addCheckboxSetXY(\n    \" \",\n    margenIzq + 400,\n    margenSup - 12,\n    10,\n    \"check\",\n    \"false\",\n    \"true\"\n  ); //CHECK NO PRUEBAS\n\n  //**********************************\n  //Observaciones\n  //**********************************\n  margenSup = margenSup - 14; //Bajamos\n\n  pdf.createTable(1); //Num columnas\n  pdf.setCellBorder(\"all\");\n  pdf.setTableWidth(500);\n  pdf.setTableCellWidths(100);\n\n  pdf.addCellText(\" Observaciones:\" + String.fromCharCode(13).repeat(5));\n\n  pdf.addTableSetXY(margenIzq, margenSup); //EjeX, EjeY\n\n  margenSup = margenSup - 13; //Bajamos\n\n  pdf.createTable(1); //Num columnas\n  pdf.setCellBorder(\"none\");\n  pdf.setTableWidth(500);\n  pdf.setTableCellWidths(100);\n\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"left\", 9, \"#000000\");\n  pdf.addCellText(\" \" + \" \");\n  pdf.addTableSetXY(margenIzq, margenSup); //EjeX, EjeY\n\n  //********************************************************************\n  // CONDICIONES DEL SISTEMA REQUERIDAS POR MANTENIMIENTO\n  //********************************************************************\n  margenSup = margenSup - 51; //Bajamos\n\n  pdf.createTable(2); //Num columnas\n  pdf.setCellBorder(\"all\");\n  pdf.setTableWidth(500);\n  pdf.setTableCellWidths(80, 20);\n\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"left\", 12, \"#000000\");\n  pdf.addCellText(\n    \"CONDICIONES DEL SISTEMA REQUERIDAS POR MANTENIMIENTO\",\n    \"#CCCCCC\"\n  );\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"left\", 10, \"#000000\");\n  pdf.addCellText(\" \".repeat(8) + \"SI\" + \" \".repeat(11) + \"NO\");\n\n  pdf.addTableSetXY(margenIzq, margenSup); //EjeX, EjeY\n\n  pdf.addCheckboxSetXY(\n    \" \",\n    margenIzq + 412,\n    margenSup - 13,\n    10,\n    \"check\",\n    \"true\",\n    \"true\"\n  ); //CHECK SI\n  pdf.addCheckboxSetXY(\n    \" \",\n    margenIzq + 451,\n    margenSup - 13,\n    10,\n    \"check\",\n    \"false\",\n    \"true\"\n  ); //CHECK NO\n\n  margenSup = margenSup - 16; //Bajamos\n\n  pdf.createTable(3); //Num columnas\n  pdf.setCellBorder(\"all\");\n  pdf.setTableWidth(500);\n  pdf.setTableCellWidths(34, 33, 33);\n\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"left\", 10, \"#000000\");\n  pdf.addCellText(\" \".repeat(7) + \"Drenado\");\n  pdf.addCellText(\" \".repeat(7) + \"Despresurizado\");\n  pdf.addCellText(\" \".repeat(7) + \"Bloqueado Mecánicamente\");\n\n  pdf.addCellText(\" \".repeat(7) + \"Barrido\");\n  pdf.addCellText(\" \".repeat(7) + \"Inertizado\");\n  pdf.addCellText(\" \".repeat(7) + \"Bloqueado Eléctricamente\");\n\n  pdf.addTableSetXY(margenIzq, margenSup); //EjeX, EjeY\n\n  pdf.addCheckboxSetXY(\n    \" \",\n    margenIzq + 6,\n    margenSup - 12,\n    10,\n    \"check\",\n    \"true\",\n    \"true\"\n  ); //CHECK Drenado\n\n  pdf.addCheckboxSetXY(\n    \" \",\n    margenIzq + 176,\n    margenSup - 12,\n    10,\n    \"check\",\n    \"true\",\n    \"true\"\n  ); //CHECK Despresurizado\n\n  pdf.addCheckboxSetXY(\n    \" \",\n    margenIzq + 342,\n    margenSup - 12,\n    10,\n    \"check\",\n    \"true\",\n    \"true\"\n  ); //CHECK Bloqueado Mecánicamente\n\n  pdf.addCheckboxSetXY(\n    \" \",\n    margenIzq + 6,\n    margenSup - 26,\n    10,\n    \"check\",\n    \"true\",\n    \"true\"\n  ); //CHECK Barrido\n\n  pdf.addCheckboxSetXY(\n    \" \",\n    margenIzq + 176,\n    margenSup - 26,\n    10,\n    \"check\",\n    \"true\",\n    \"true\"\n  ); //CHECK Inertizado\n\n  pdf.addCheckboxSetXY(\n    \" \",\n    margenIzq + 342,\n    margenSup - 26,\n    10,\n    \"check\",\n    \"true\",\n    \"true\"\n  ); //CHECK Bloqueado Eléctricamente\n\n  //**********************************\n  //Observaciones\n  //**********************************\n  margenSup = margenSup - 28; //Bajamos\n\n  pdf.createTable(1); //Num columnas\n  pdf.setCellBorder(\"all\");\n  pdf.setTableWidth(500);\n  pdf.setTableCellWidths(100);\n\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"left\", 10);\n  pdf.addCellText(\n    \" Observaciones, precauciones y protección adicionales: \" +\n      String.fromCharCode(13).repeat(5)\n  );\n\n  pdf.addTableSetXY(margenIzq, margenSup); //EjeX, EjeY\n\n  margenSup = margenSup - 13; //Bajamos\n\n  pdf.createTable(1); //Num columnas\n  pdf.setCellBorder(\"none\");\n  pdf.setTableWidth(500);\n  pdf.setTableCellWidths(100);\n\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"left\", 9, \"#000000\");\n  pdf.addCellText(\" \" + \" \");\n  pdf.addTableSetXY(margenIzq, margenSup); //EjeX, EjeY\n\n  //********************************************************************\n  // ENTREGA DEL SISTEMA EN LAS CONDICIONES REQUERIDAS\n  //********************************************************************\n  margenSup = margenSup - 51; //Bajamos\n\n  pdf.createTable(2); //Num columnas\n  pdf.setCellBorder(\"all\");\n  pdf.setTableWidth(500);\n  pdf.setTableCellWidths(80, 20);\n\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"left\", 12, \"#000000\");\n  pdf.addCellText(\n    \"ENTREGA DEL SISTEMA EN LAS CONDICIONES REQUERIDAS\",\n    \"#CCCCCC\"\n  );\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"left\", 10, \"#000000\");\n  pdf.addCellText(\" \".repeat(9) + \"SI\" + \" \".repeat(11) + \"NO\");\n\n  pdf.addTableSetXY(margenIzq, margenSup); //EjeX, EjeY\n\n  pdf.addCheckboxSetXY(\n    \" \",\n    margenIzq + 412,\n    margenSup - 13,\n    10,\n    \"check\",\n    \"true\",\n    \"true\"\n  ); //CHECK SI\n  pdf.addCheckboxSetXY(\n    \" \",\n    margenIzq + 451,\n    margenSup - 13,\n    10,\n    \"check\",\n    \"false\",\n    \"true\"\n  ); //CHECK NO\n\n  //**********************************\n  //Observaciones\n  //**********************************\n  margenSup = margenSup - 16; //Bajamos\n\n  pdf.createTable(1); //Num columnas\n  pdf.setCellBorder(\"all\");\n  pdf.setTableWidth(500);\n  pdf.setTableCellWidths(100);\n\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"left\", 10);\n  pdf.addCellText(\" Observaciones: \" + String.fromCharCode(13).repeat(5));\n\n  pdf.addTableSetXY(margenIzq, margenSup); //EjeX, EjeY\n\n  margenSup = margenSup - 13; //Bajamos\n\n  pdf.createTable(1); //Num columnas\n  pdf.setCellBorder(\"none\");\n  pdf.setTableWidth(500);\n  pdf.setTableCellWidths(100);\n\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"left\", 9, \"#000000\");\n  pdf.addCellText(\" \" + \" \");\n  pdf.addTableSetXY(margenIzq, margenSup); //EjeX, EjeY\n\n  //************************************************************\t\t******************************************\n  //************************************************************\t\t******************************************\n\n  //    \t\t\t\t\t\tPonemos celdas vacías para pasar a la hoja siguiente\n\n  //************************************************************\t\t******************************************\n  // ***********************************************************\t\t******************************************\n\n  pdf.createTable(1);\n  pdf.setCellBorder(\"none\");\n  pdf.addCellText(\" \" + String.fromCharCode(13).repeat(85));\n  pdf.addTable();\n\n  //**********************************\n  //       CABECERA 2\n  // LOGO\t\tTITULO\n  // *********************************\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"center\", 14, \"#000000\");\n\n  margenIzq = 46;\n  margenDcho = 546;\n  margenSup = 810;\n\n  //Esta tabla al pintarse no actualiza pdf.GetVerticalPosition porque se pinta \"flotando\" encima del documento\n  //El alto de las celdas viene determinado por su contenido, si queremos más alto poner más String.fromCharCode(10)+String.fromCharCode(13)\n  pdf.createTable(3); //Num columnas\n\n  // Muy importante, a la hora de hacer una tabla posicionada de forma absoluta\n  // es necesario definir previamente el ancho de la tabla.\n  pdf.setCellBorder(\"all\");\n  pdf.setTableWidth(500);\n  pdf.setTableCellWidths(20, 55, 25); //La suma debe ser 100, pues son porcentajes\n  pdf.addCellText(String.fromCharCode(10).repeat(3));\n\n  setTextStyle(pdf, \"gillsans.ttf\", \"bold\", \"center\", 16, \"#000000\");\n  pdf.addCellText(\n    String.fromCharCode(13) + \"Central Termosolar \" + \" \",\n    \"#FFFFFF\"\n  );\n\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"center\", 10, \"#000000\");\n  pdf.addCellText(\n    String.fromCharCode(13) +\n      \"MECANICO\" +\n      String.fromCharCode(13).repeat(2) +\n      \"Nº OT: 4065833  -  0010\",\n    \"#99FF99\"\n  );\n\n  pdf.addTableSetXY(margenIzq, margenSup); //EjeX, EjeY\n\n  //Para la línea entre el puesto de trabajo y el numero de OT\n  //pdf.addRectangle(EjeX, EjeY, Long, 0, 1, \"ColorIni\", \"ColorFin\"\n  pdf.addRectangle(421, 780, 125, 0, 1, \"#000000\", \"#000000\");\n\n  //**********************************\n  //       \tFIRMAS\n  // *********************************\n  margenSup = margenSup - 90; //Bajamos\n\n  pdf.createTable(2); //Num columnas\n  pdf.setCellBorder(\"all\");\n  pdf.setTableWidth(500);\n  pdf.setTableCellWidths(50, 50);\n\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"left\", 12, \"#000000\");\n  pdf.addCellText(\"FIRMAS DE APERTURA\", \"#CCCCCC\");\n  pdf.addCellText(\"CONFORME\", \"#CCCCCC\");\n\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"left\", 8, \"#000000\");\n\n  pdf.addCellText(\n    String.fromCharCode(13).repeat(10) + \" Ejecutor / Nombre / Fecha / Hora\"\n  );\n\n  pdf.addCellText(\n    String.fromCharCode(13).repeat(10) +\n      \" Supervisor de turno / Nombre / Fecha / Hora\"\n  );\n\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"left\", 12, \"#000000\");\n  pdf.addCellText(\"TRABAJO FINALIZADO\", \"#CCCCCC\");\n  pdf.addCellText(\"CONFORME\", \"#CCCCCC\");\n\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"left\", 8, \"#000000\");\n\n  pdf.addCellText(\n    String.fromCharCode(13).repeat(10) + \" Ejecutor / Nombre / Fecha / Hora\"\n  );\n\n  pdf.addCellText(\n    String.fromCharCode(13).repeat(10) +\n      \" Supervisor de turno / Nombre / Fecha / Hora\"\n  );\n\n  pdf.addTableSetXY(margenIzq, margenSup); //EjeX, EjeY\n\n  //**********************************\n  //       TEXTO PIE FINAL\n  // *********************************\n  //margenSup = margenSup - 190 //Bajamos\n\n  //pdf.createTable(1  //Num columnas\n  //pdf.setCellBorder(\"none\"\n  //pdf.setTableWidth(500\n  //pdf.setTableCellWidths(100\n\n  //setTextStyle(pdf,\"gillsans.ttf\",\"normal\",\"center\",12,\"#000000\"\n  //pdf.addCellText(\"TELEFONO SALA CONTROL MAN1\"+String.fromCharCode(13)+String.fromCharCode(13)+\"682 127 278\"\n\n  //pdf.addTableSetXY(margenIzq, margenSup\t//EjeX, EjeY\n\n  pdf.close();\n\n  //Si queremos abrir el PDF una vez generado.\n  var a = await ui.msgBox(\"ABRIR PDF?\", \"PDF GENERADO\", 4);\n  if (a == 6) {\n    //Si queremos abrir el PDF una vez generado.\n    pdf.launchPDF();\n  }\n}\n\n//Para mayor simplicidad, todas las diferentes líneas son tablas, que nos permiten alinear el texto más facilmente.\n//El documento es una grilla cuyo punto 0,0 es la ESQUINA INFERIOR IZQUIERDA.\n//Para mejor desarrollo, activar showGridDebug(pdf)\n//addNewLine(Pdf01) Añade una tabla de una línea vacía y sin bordes\n\nasync function GenerarPDF3Apaisado(nameFile, pdf, createGrid) {\n  var cDesca, objDesca;\n\n  //Creamos el PDF, borramos si existe ya el fichero, le indicamos el nombre y la encriptación a utilizar\n  //CreatePDF nameFile,pdf\n  try {\n    pdf.delete(nameFile);\n  } catch (e) {}\n\n  pdf.create(nameFile, 865, 600);\n  pdf.permissions(\"assembly\");\n  pdf.permissions(\"print\");\n  pdf.setEncryption(\"\", \"1234\", \"128bits\");\n\n  pdf.open();\n\n  //**************************************************************\n  // Muestra una rejilla de ayuda para posicionar cosas en el PDF\n  //**************************************************************\n  if (createGrid == 1) {\n    showGridDebug(pdf);\n  }\n\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"center\", 14, \"#000000\");\n\n  //pdf.setFont(\"gillsans.ttf\"\n  //pdf.setFontStyle(\"normal\"\n  //pdf.setAlignment(\"center\"\n  //pdf.setFontColor(\"#000000\"\n  //pdf.setFontSize(normal\n\n  //**********************************\n  //\tINICIALIZAMOS VALORES\n  //**********************************\n\n  var margenIzq = 20;\n  var margenDcho = 845;\n  var margenSup = 600; //es apaisado\n\n  //**********************************\n  //       CABECERA\n  // LOGO\t\tTITULO\n  // *********************************\n\n  //Esta tabla al pintarse no actualiza pdf.GetVerticalPosition porque se pinta \"flotando\" encima del documento\n  //El alto de las celdas viene determinado por su contenido, si queremos más alto poner más String.fromCharCode(10)+String.fromCharCode(13)\n  margenSup = margenSup - 25; //Bajamos\n  pdf.createTable(3); //Num columnas\n  pdf.setCellBorder(\"none\");\n\n  // Muy importante, a la hora de hacer una tabla posicionada de forma absoluta\n  // es necesario definir previamente el ancho de la tabla.\n  pdf.setTableWidth(825);\n  pdf.setTableCellWidths(10, 80, 10); //La suma debe ser 100, pues son porcentajes\n  pdf.addCellText(String.fromCharCode(10).repeat(3));\n\n  setTextStyle(pdf, \"gillsans.ttf\", \"bold\", \"center\", 16, \"#000000\");\n  pdf.addCellText(\n    String.fromCharCode(13) + \"Central Termosolar \" + \" \",\n    \"#FFFFFF\"\n  );\n\n  pdf.addCellText(\" \");\n\n  pdf.addTableSetXY(margenIzq, margenSup); //EjeX, EjeY\n\n  //Para la línea entre el puesto de trabajo y el numero de OT\n  //pdf.addRectangle(EjeX, EjeY, Long, 0, 1, \"ColorIni\", \"ColorFin\"\n  //pdf.addRectangle(421, 780, 125, 0, 1, \"#000000\", \"#000000\"\n\n  //**********************************\n  //       Cajas bajo cabecera\n  // *********************************\n  //Nº Permiso\n  margenSup = margenSup - 70; //Bajamos\n  pdf.createTable(12); //Num columnas\n  pdf.setTableWidth(825);\n  pdf.setTableCellWidths(8, 1, 12, 17, 1, 35, 6, 1, 6, 6, 1, 6);\n\n  pdf.setCellBorder(\"none\");\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"right\", 9, \"#000000\");\n  pdf.addCellText(\"Nº Permiso\");\n  pdf.addCellText(\" \");\n\n  pdf.setCellBorder(\"all\");\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"left\", 9, \"#000000\");\n  pdf.addCellText(\" \" + \" - \" + \" \");\n\n  pdf.setCellBorder(\"none\");\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"right\", 9, \"#000000\");\n  pdf.addCellText(\"Supervisor de Turno / Fecha\");\n  pdf.addCellText(\" \");\n\n  pdf.setCellBorder(\"all\");\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"left\", 9, \"#000000\");\n  pdf.addCellText(\"Nombre del tio con los apellidos y la fecha\");\n\n  pdf.setCellBorder(\"none\");\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"right\", 9, \"#000000\");\n  pdf.addCellText(\"Caja\");\n  pdf.addCellText(\" \");\n\n  pdf.setCellBorder(\"all\");\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"center\", 9, \"#000000\");\n  pdf.addCellText(\" \");\n\n  pdf.setCellBorder(\"none\");\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"right\", 9, \"#000000\");\n  pdf.addCellText(\"Unidad\");\n  pdf.addCellText(\" \");\n\n  pdf.setCellBorder(\"all\");\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"center\", 9, \"#000000\");\n  pdf.addCellText(\" \");\n\n  pdf.addTableSetXY(20, margenSup); //EjeX, EjeY\n\n  //**********************************\n  //       Cabeceras content\n  // *********************************\n  margenSup = margenSup - 23; //Bajamos\n  pdf.createTable(3); //Num columnas\n  pdf.setTableWidth(825);\n  pdf.setTableCellWidths(39, 42, 19);\n  setTextStyle(pdf, \"gillsans.ttf\", \"bold\", \"center\", 10, \"#000000\");\n  pdf.setCellBorder(\"none\");\n  pdf.addCellText(\" \");\n  pdf.setCellBorder(\"all\");\n  pdf.addCellText(\"Secuencia Ejecución y pruebas\");\n  pdf.addCellText(\"Secuencia de reposición\");\n  pdf.addTableSetXY(margenIzq, margenSup); //EjeX, EjeY\n\n  margenSup = margenSup - 14; //Bajamos\n  pdf.createTable(7); //Num columnas\n  pdf.setTableWidth(825);\n  pdf.setTableCellWidths(39, 15, 9, 9, 9, 9, 10);\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"center\", 8, \"#000000\");\n  pdf.setCellBorder(\"none\");\n  pdf.addCellText(\" \");\n  pdf.setCellBorder(\"all\");\n  pdf.addCellText(\"COLOCACIÓN\");\n  pdf.addCellText(\"PREPARACIÓN\" + String.fromCharCode(13) + \"PARA PRUEBA\");\n  pdf.addCellText(\"VUELTA A\" + String.fromCharCode(13) + \"DESCARGO\");\n  pdf.addCellText(\"PREPARACIÓN\" + String.fromCharCode(13) + \"PARA PRUEBA\");\n  pdf.addCellText(\"LEVANTAMIENTO\");\n  pdf.addCellText(\"SI NO ES POSIBLE\" + String.fromCharCode(13) + \"REPONER\");\n  pdf.addTableSetXY(margenIzq, margenSup); //EjeX, EjeY\n\n  margenSup = margenSup - 20; //Bajamos\n  pdf.createTable(9); //Num columnas\n  pdf.setTableWidth(825);\n  pdf.setTableCellWidths(12, 4, 23, 15, 9, 9, 9, 9, 10);\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"center\", 8, \"#000000\");\n  pdf.setCellBorder(\"all\");\n  pdf.addCellText(\"Nº Total Tarjetas\");\n  pdf.addCellText(\" \");\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"center\", 7, \"#000000\");\n  pdf.addCellText(\" \");\n  pdf.addCellText(\"Posición en descargo\");\n  pdf.addCellText(\"Posición en 1ª prueba\");\n  pdf.addCellText(\"Posición en descargo\");\n  pdf.addCellText(\"Posición en 2ª prueba\");\n  pdf.addCellText(\"Posición reposición\");\n  pdf.addCellText(\"Reposición pendiente\");\n  pdf.addTableSetXY(margenIzq, margenSup); //EjeX, EjeY\n\n  //**********************************\n  //       \tContent Datos\n  // *********************************\n  margenSup = margenSup - 12; //Bajamos\n  pdf.createTable(16); //Num columnas\n  pdf.setCellBorder(\"all\");\n  pdf.setTableWidth(825);\n  pdf.setTableCellWidths(4, 12, 23, 4, 6, 5, 4, 5, 4, 5, 4, 5, 4, 5, 5, 5);\n\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"center\", 9, \"#000000\");\n  pdf.addCellText(\"Nº\" + String.fromCharCode(13) + \"Tarjeta\");\n  pdf.addCellText(String.fromCharCode(13) + \"KKS\");\n  pdf.addCellText(String.fromCharCode(13) + \"DESCRIPCIÓN\");\n  pdf.addCellText(\"Nº\" + String.fromCharCode(13) + \"Orden\");\n  pdf.addCellText(\"Nº\" + String.fromCharCode(13) + \"Candado\");\n  pdf.addCellText(String.fromCharCode(13) + \"Estado\");\n  pdf.addCellText(\"Nº\" + String.fromCharCode(13) + \"Orden\");\n  pdf.addCellText(String.fromCharCode(13) + \"Estado\");\n  pdf.addCellText(\"Nº\" + String.fromCharCode(13) + \"Orden\");\n  pdf.addCellText(String.fromCharCode(13) + \"Estado\");\n  pdf.addCellText(\"Nº\" + String.fromCharCode(13) + \"Orden\");\n  pdf.addCellText(String.fromCharCode(13) + \"Estado\");\n  pdf.addCellText(\"Nº\" + String.fromCharCode(13) + \"Orden\");\n  pdf.addCellText(String.fromCharCode(13) + \"Estado\");\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"center\", 7, \"#000000\");\n  pdf.addCellText(\"Otros\" + String.fromCharCode(13) + \"Descargos\");\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"center\", 9, \"#000000\");\n  pdf.addCellText(String.fromCharCode(13) + \"Estado\");\n\n  pdf.addTableSetXY(margenIzq, margenSup); //EjeX, EjeY\n\n  //**********************************\n  //       \tFIRMAS\n  // *********************************\n  margenSup = 140; //Bajamos\n  pdf.createTable(7); //Num columnas\n  pdf.setTableWidth(825);\n  pdf.setTableCellWidths(39, 15, 9, 9, 9, 9, 10);\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"right\", 9, \"#000000\");\n  pdf.setCellBorder(\"all\");\n\n  pdf.addCellText(\n    \"NOMBRE Y FIRMA DEL OPERADOR\" +\n      String.fromCharCode(13).repeat(2) +\n      \"FECHA Y HORA\"\n  );\n  pdf.addCellText(\" \");\n  pdf.addCellText(\" \");\n  pdf.addCellText(\" \");\n  pdf.addCellText(\" \");\n  pdf.addCellText(\" \");\n  pdf.addCellText(\" \");\n\n  pdf.addCellText(\n    \"NOMBRE Y FIRMA DEL SUPERVISOR DE TURNO\" +\n      String.fromCharCode(13).repeat(2) +\n      \"FECHA Y HORA\"\n  );\n  pdf.addCellText(\" \");\n  pdf.addCellText(\" \");\n  pdf.addCellText(\" \");\n  pdf.addCellText(\" \");\n  pdf.addCellText(\" \");\n  pdf.addCellText(\" \");\n  pdf.addTableSetXY(margenIzq, margenSup); //EjeX, EjeY\n\n  margenSup = margenSup - 80; //Bajamos\n  pdf.createTable(7); //Num columnas\n  pdf.setTableWidth(825);\n  pdf.setTableCellWidths(39, 15, 9, 9, 9, 9, 10);\n  setTextStyle(pdf, \"gillsans.ttf\", \"normal\", \"center\", 8, \"#000000\");\n  pdf.setCellBorder(\"none\");\n  pdf.addCellText(\" \");\n  pdf.setCellBorder(\"all\");\n  pdf.addCellText(\"COLOCACIÓN\");\n  pdf.addCellText(\"PREPARACIÓN\" + String.fromCharCode(13) + \"PARA PRUEBA\");\n  pdf.addCellText(\"VUELTA A\" + String.fromCharCode(13) + \"DESCARGO\");\n  pdf.addCellText(\"PREPARACIÓN\" + String.fromCharCode(13) + \"PARA PRUEBA\");\n  pdf.addCellText(\"LEVANTAMIENTO\");\n  pdf.addCellText(\"SI NO ES POSIBLE\" + String.fromCharCode(13) + \"REPONER\");\n  pdf.addTableSetXY(margenIzq, margenSup); //EjeX, EjeY\n\n  pdf.close();\n  //Si queremos abrir el PDF una vez generado.\n  var a = await ui.msgBox(\"ABRIR PDF?\", \"PDF GENERADO\", 4);\n  if (a == 6) {\n    //Si queremos abrir el PDF una vez generado.\n    pdf.launchPDF();\n  }\n}\n\nfunction setLanguage(lang) {\n  switch (lang) {\n    case \"es-ES\":\n      self.setFieldPropertyValue(\n        \"MAP_IDIOMA\",\n        \"title\",\n        \"Seleccione un idioma: \"\n      );\n      self.setFieldPropertyValue(\"MAP_LABEL\", \"title\", \"Etiqueta: \");\n      self.setFieldPropertyValue(\"MAP_TEXT\", \"title\", \"Texto: \");\n      self.setFieldPropertyValue(\"MAP_PASSWORD\", \"title\", \"Contraseña: \");\n      self.setFieldPropertyValue(\"MAP_TEXTAREA\", \"title\", \"Multilínea: \");\n      self.setFieldPropertyValue(\"MAP_NUMBER\", \"title\", \"Número: \");\n      self.setFieldPropertyValue(\"MAP_DECIMAL\", \"title\", \"N. Decimal: \");\n      self.setFieldPropertyValue(\"MAP_NUMTEXT\", \"title\", \"Número-Texto: \");\n      self.setFieldPropertyValue(\"MAP_DECTEXT\", \"title\", \"Decimal-Texto: \");\n      self.setFieldPropertyValue(\"MAP_DATE\", \"title\", \"Fecha: \");\n      self.setFieldPropertyValue(\"MAP_HOUR\", \"title\", \"Hora: \");\n      self.setFieldPropertyValue(\"MAP_TELEFONO\", \"title\", \"Teléfono: \");\n      self.setFieldPropertyValue(\n        \"MAP_CHECKBOX\",\n        \"title\",\n        \"Casilla de Verificacion (0/1): \"\n      );\n      self.setFieldPropertyValue(\"TIPOIDENTIFICADOR\", \"title\", \"Combo: \");\n      self.setFieldPropertyValue(\"TIPOIDENTIFICADOR2\", \"title\", \"Lupa: \");\n      self.setFieldPropertyValue(\"MAP_TEXTAT\", \"title\", \"Adjunto: \");\n      self.setFieldPropertyValue(\n        \"MAP_BT_EJEMPLO\",\n        \"title\",\n        \"Ejemplo de titulo\"\n      );\n      break;\n    case \"en-US\":\n      self.setFieldPropertyValue(\"MAP_IDIOMA\", \"title\", \"Select a language: \");\n      self.setFieldPropertyValue(\"MAP_LABEL\", \"title\", \"Tag: \");\n      self.setFieldPropertyValue(\"MAP_TEXT\", \"title\", \"Text: \");\n      self.setFieldPropertyValue(\"MAP_PASSWORD\", \"title\", \"Password: \");\n      self.setFieldPropertyValue(\"MAP_TEXTAREA\", \"title\", \"Multiline: \");\n      self.setFieldPropertyValue(\"MAP_NUMBER\", \"title\", \"Number: \");\n      self.setFieldPropertyValue(\"MAP_DECIMAL\", \"title\", \"N. Decimal: \");\n      self.setFieldPropertyValue(\"MAP_NUMTEXT\", \"title\", \"Number-Text: \");\n      self.setFieldPropertyValue(\"MAP_DECTEXT\", \"title\", \"Decimal-Text: \");\n      self.setFieldPropertyValue(\"MAP_DATE\", \"title\", \"Date: \");\n      self.setFieldPropertyValue(\"MAP_HOUR\", \"title\", \"Time: \");\n      self.setFieldPropertyValue(\"MAP_TELEFONO\", \"title\", \"Phone: \");\n      self.setFieldPropertyValue(\"MAP_CHECKBOX\", \"title\", \"Checkbox (0/1): \");\n      self.setFieldPropertyValue(\"TIPOIDENTIFICADOR\", \"title\", \"Combo: \");\n      self.setFieldPropertyValue(\"TIPOIDENTIFICADOR2\", \"title\", \"Magnifier: \");\n      self.setFieldPropertyValue(\"MAP_TEXTAT\", \"title\", \"Attachment: \");\n      self.setFieldPropertyValue(\"MAP_BT_EJEMPLO\", \"title\", \"Attachment: \");\n      break;\n    case \"pt-PT\":\n      self.setFieldPropertyValue(\n        \"MAP_IDIOMA\",\n        \"title\",\n        \"Selecionar um idioma: \"\n      );\n      self.setFieldPropertyValue(\"MAP_LABEL\", \"title\", \"Etiqueta: \");\n      self.setFieldPropertyValue(\"MAP_TEXT\", \"title\", \"Texto: \");\n      self.setFieldPropertyValue(\"MAP_PASSWORD\", \"title\", \"Senha: \");\n      self.setFieldPropertyValue(\"MAP_TEXTAREA\", \"title\", \"Multilina: \");\n      self.setFieldPropertyValue(\"MAP_NUMBER\", \"title\", \"Número: \");\n      self.setFieldPropertyValue(\"MAP_DECIMAL\", \"title\", \"N. Decimal: \");\n      self.setFieldPropertyValue(\"MAP_NUMTEXT\", \"title\", \"Número-Texto: \");\n      self.setFieldPropertyValue(\"MAP_DECTEXT\", \"title\", \"Decimal-Texto: \");\n      self.setFieldPropertyValue(\"MAP_DATE\", \"title\", \"Data: \");\n      self.setFieldPropertyValue(\"MAP_HOUR\", \"title\", \"Hora: \");\n      self.setFieldPropertyValue(\"MAP_TELEFONO\", \"title\", \"Teléfono: \");\n      self.setFieldPropertyValue(\n        \"MAP_CHECKBOX\",\n        \"title\",\n        \"Caixa de verificação (0/1): \"\n      );\n      self.setFieldPropertyValue(\"TIPOIDENTIFICADOR\", \"title\", \"Combo: \");\n      self.setFieldPropertyValue(\"TIPOIDENTIFICADOR2\", \"title\", \"Lupa: \");\n      self.setFieldPropertyValue(\"MAP_TEXTAT\", \"title\", \"Anexo: \");\n      self.setFieldPropertyValue(\"MAP_BT_EJEMPLO\", \"title\", \"Attachment: \");\n      break;\n    case \"ru\":\n      self.setFieldPropertyValue(\"MAP_IDIOMA\", \"title\", \"Выбрать язык : \");\n      self.setFieldPropertyValue(\"MAP_LABEL\", \"title\", \"тег: \");\n      self.setFieldPropertyValue(\"MAP_TEXT\", \"title\", \"текст: \");\n      self.setFieldPropertyValue(\"MAP_PASSWORD\", \"title\", \"пароль: \");\n      self.setFieldPropertyValue(\"MAP_TEXTAREA\", \"title\", \"многострочный: \");\n      self.setFieldPropertyValue(\"MAP_NUMBER\", \"title\", \"номер: \");\n      self.setFieldPropertyValue(\"MAP_DECIMAL\", \"title\", \"N. Десятичная: \");\n      self.setFieldPropertyValue(\"MAP_NUMTEXT\", \"title\", \"номер-текст: \");\n      self.setFieldPropertyValue(\"MAP_DECTEXT\", \"title\", \"Десятичная-текст: \");\n      self.setFieldPropertyValue(\"MAP_DATE\", \"title\", \"дата: \");\n      self.setFieldPropertyValue(\"MAP_HOUR\", \"title\", \"время: \");\n      self.setFieldPropertyValue(\"MAP_TELEFONO\", \"title\", \"телефон: \");\n      self.setFieldPropertyValue(\"MAP_CHECKBOX\", \"title\", \"флажок (0/1): \");\n      self.setFieldPropertyValue(\"TIPOIDENTIFICADOR\", \"title\", \"Combo: \");\n      self.setFieldPropertyValue(\n        \"TIPOIDENTIFICADOR2\",\n        \"title\",\n        \"Увеличительное стекло: \"\n      );\n      self.setFieldPropertyValue(\"MAP_TEXTAT\", \"title\", \"приложенный: \");\n      self.setFieldPropertyValue(\"MAP_BT_EJEMPLO\", \"title\", \"Пример названия\");\n      break;\n  }\n}\n\nfunction DevolverIframeVideoYoutube(sUrlYoutube, objeto) {\n  if (sUrlYoutube == \"\") {\n    ui.showToast(\"Error, URL de youtube inválida\");\n    return \"\";\n  }\n  var longitud = sUrlYoutube.length;\n  var urlIndice = sUrlYoutube.indexOf(\"watch?v=\", 1);\n  if (urlIndice != -1) {\n    //Es una URL completa. Parseamos y sacamos el código.\n    if (urlIndice >= longitud) {\n      //ui.ShowToast \"Error, URL de youtube inválida\", \"Error\", 0\n      return \"\";\n    }\n    sUrlYoutube = sUrlYoutube.substring(urlIndice + 8, longitud);\n    //Vemos si hay más parámetros después del código del vídeo,\n    //para ignorarlos.\n    var urlIndiceSiguenteParametro = sUrlYoutube.indexOf(\"&\", 1);\n    if (urlIndiceSiguenteParametro > -1) {\n      //No hay parámetros, cogemos desde aquí hasta el final nos vale.\n      //}else{\n      //Hay parámetros. La posición del primer parámetro la hemos calculado\n      //a partir del InStr, así que se la sumamos para coger la posición\n      //en la cadena completa.\n      sUrlYoutube = sUrlYoutube.substring(1, urlIndiceSiguenteParametro - 1);\n    }\n    //objeto(\"MAP_IMG_FIJACAPITULO\")=\"https://www.youtube.com/embed/\" + sUrlYoutube + \"?rel=0&autoplay=1\"\n    //objeto.MAP_IMG_FIJACAPITULO = sUrlYoutube;\n    //Concatenamos el iframe.\n    return (\n      \"<iframe id='video' type='text/html' width='100%' height='100%' src='https://www.youtube.com/embed/\" +\n      sUrlYoutube +\n      \"?rel=0&autoplay=0' frameborder='0'/>\"\n    );\n  } else {\n    //objeto.MAP_IMG_FIJACAPITULO = sUrlYoutube;\n    return (\n      \"<iframe id='video' type='text/html' width='100%' height='100%' src='\" +\n      sUrlYoutube +\n      \"?rel=0&autoplay=0' frameborder='0'/>\"\n    );\n  }\n}\n\nfunction doRegisterNewFingerprint() {\n  var params = {\n    onSuccess: function(result) {\n      var sPublicKey = result.getPublicKey();\n      if (user.PUBLICKEY != sPublicKey) {\n        user.PUBLICKEY = sPublicKey;\n        user.save();\n        ui.showToast(\n          \"Autenticación por huella dactilar habilitada para usuario \" +\n            user.LOGIN\n        );\n        appData.failWithMessage(-11888, \"##EXIT##\");\n      } else {\n        ui.showToast(\"Ya está registrado!\");\n        appData.failWithMessage(-11888, \"##EXIT##\");\n      }\n    },\n    onFailure: function(nError, sErrorMessage) {\n      if (nError == undefined) {\n        if (\n          ui.msgBox(\n            \"Huella no registrada. Añada una nueva en los ajustes de seguridad del dispositivo , ¿Quiere hacerlo ahora?\",\n            \"¡Información!\",\n            4\n          ) == 6\n        ) {\n          fingerprintManager.launchFingerprintSettings();\n        }\n      } else {\n        ui.showToast(\n          \"Error huella dactilar.\\nCódigo: \" +\n            nError +\n            \"\\nMensaje: \" +\n            sErrorMessage\n        );\n      }\n    },\n  };\n  fingerprintManager.setCallback(params);\n  fingerprintManager.listen();\n  ui.showToast(\"Pase su dedo por el lector de huellas dactilares\");\n}\n\nfunction doRegisterNewFingerprintIOS() {\n  var params = {\n    onSuccess: function(result) {\n      var sPublicKey = result.getPublicKey();\n      if (user.PUBLICKEY != sPublicKey) {\n        user.PUBLICKEY = sPublicKey;\n        user.save();\n        ui.showToast(\n          \"Autenticación por huella dactilar habilitada para usuario \" +\n            user.LOGIN\n        );\n      } else {\n        ui.showToast(\"Ya está registrado!\");\n      }\n    },\n    onFailure: function(nError, sErrorMessage) {\n      //if (nError == undefined) {\n      //\tif(ui.msgBox(\"Huella no registrada. Añada una nueva en los ajustes de seguridad del dispositivo , ¿Quiere hacerlo ahora?\",\"¡Información!\",4) == 6 ){\n      //\t    fingerprintManager.launchFingerprintSettings();\n      //\t}\n      //} else {\n      ui.showToast(\n        \"Error huella dactilar.\\nCódigo: \" +\n          nError +\n          \"\\nMensaje: \" +\n          sErrorMessage\n      );\n      //}\n    },\n  };\n  fingerprintManager.setCallback(params);\n  fingerprintManager.launch();\n}\n\nfunction doFingerprintAuth() {\n  var params = {\n    onSuccess: function(result) {\n      var sPublicKey = result.getPublicKey();\n      var obj = getUserByPublicKey(sPublicKey);\n      if (obj == null) {\n        ui.showToast(\"Huella no asignada a ningun usuario.\");\n        fingerprintManager.listen();\n      } else {\n        fingerprintManager.stopListening();\n        hacerLogin(obj.LOGIN, obj.PWD);\n      }\n    },\n    onFailure: function(nError, sErrorMessage) {\n      if (nError == undefined) {\n        ui.showToast(\n          \"Huella no registrada. Entre en la aplicacion y asigne la huella al usuario.\"\n        );\n      } else {\n        ui.showToast(\n          \"Error huella dactilar.\\nCódigo: \" +\n            nError +\n            \"\\nMensaje: \" +\n            sErrorMessage\n        );\n      }\n      if (nError === 10) {\n        // Cancelado por el usuario\n        fingerprintManager.stopListening();\n      } else {\n        fingerprintManager.listen();\n      }\n    },\n  };\n  fingerprintManager.setCallback(params);\n  fingerprintManager.listen();\n}\n\nfunction doFingerprintAuthIOS() {\n  var params = {\n    onSuccess: function(result) {\n      var sPublicKey = result.getPublicKey();\n      var obj = getUserByPublicKey(sPublicKey);\n      if (obj == null) {\n        ui.showToast(\"Huella no asignada a ningun usuario.\");\n      } else {\n        hacerLogin(obj.LOGIN, obj.PWD);\n      }\n    },\n    onFailure: function(nError, sErrorMessage) {\n      if (nError == undefined) {\n        ui.showToast(\n          \"Huella no registrada. Entre en la aplicacion y asigne la huella al usuario.\"\n        );\n      } else {\n        ui.showToast(\n          \"Error huella dactilar.\\nCódigo: \" +\n            nError +\n            \"\\nMensaje: \" +\n            sErrorMessage\n        );\n      }\n    },\n  };\n  fingerprintManager.setCallback(params);\n  fingerprintManager.launch();\n}\n\nasync function hacerLogin(usuario, contrasenna) {\n  var collUser = await appData.getCollection(\"Usuarios\");\n  var objUser = await collUser.findObject(\"LOGIN='\" + usuario.toString() + \"'\");\n  if (objUser !== undefined && objUser != null) {\n    if (objUser.PWD == contrasenna) {\n      self[\"MAP_T_ERROR\"] = \"\";\n      ui.refresh(\"MAP_T_ERROR\");\n      await doLogin(usuario, contrasenna);\n    } else {\n      self[\"MAP_T_ERROR\"] = \"Usuario o contraseña incorrectos.\";\n      ui.refresh(\"MAP_T_ERROR,frmError\");\n    }\n  } else {\n    self[\"MAP_T_ERROR\"] = \"Usuario o contraseña incorrectos.\";\n    ui.refresh(\"MAP_T_ERROR,frmError\");\n  }\n}\n\nfunction getOS() {\n  return appData.getGlobalMacro(\"##DEVICE_OS##\");\n}\n\nasync function doLogin(user, pass) {\n  var params = {\n    userName: user,\n    password: pass,\n    entryPoint: \"Menu\",\n\n    // Opcional\n    //onLoginSuccessful: function() {\n    //    ui.showToast(\"Login OK!\");\n    //},\n\n    // Opcional\n    //onLoginFailed: function() {\n    //    ui.showToast(\"Login failed!\");\n    //}\n  };\n  await appData.login(params);\n}\n\nasync function getUserByPublicKey(sPublicKey) {\n  var collUsuarios = await appData.getCollection(\"Usuarios\");\n  return await collUsuarios.findObject(\"PUBLICKEY = '\" + sPublicKey + \"'\");\n}\n\nfunction testReplica() {\n  var sResult = replica.testConnection();\n  ui.showToast(\"Connection: \" + sResult);\n\n  sResult = replica.testAuthentication();\n  ui.showToast(\"Authentication: \" + sResult);\n}\n\nfunction doDRCamera() {\n  var obj = self;\n\n  ui.startCamera({\n    width: 640,\n    onSuccess: function(imgFile) {\n      obj.setFieldPropertyValue(\"DIBUJO\", \"img\", imgFile);\n      ui.refresh();\n    },\n    onCancelled: function() {},\n  });\n}\n\n/***\n *\n * Code from eventos.js\n *\n ***/\n\n// Por script\nasync function jstestClick(e) {\n  var c;\n  if (e.data.msg) {\n    await ui.msgBox(\n      e.target + \": \" + e.data.msg,\n      e.data.title + \" \" + e.data.collName,\n      0\n    );\n    if (e.data.collName != null) {\n      if (e.data.collName.length > 0) {\n        c = await appData.getCollection(e.data.collName);\n      }\n    }\n  } else {\n    await ui.msgBox(\"Abre el objeto \" + e.data, \"Titulo\", 0);\n    if (e.data != null) {\n      if (e.data.length > 0) {\n        c = await appData.getCollection(e.data);\n      }\n    }\n  }\n  var obj = await c.createObject();\n  c.addItem(obj);\n  appData.pushValue(obj);\n}\n\n//manejar errores del tipo WEB\nfunction handleError(e) {\n  //if (e.messageLevel == \"ERROR\") {\n  //    ui.msgBox(\"Nivel: \" + e.messageLevel + \"\\nMensaje: \" + e.message + \"\\nLínea: \" + e.lineNumber + \"\\nID fuente: \" + e.sourceId, \"Error WebView\", 0);\n  //}\n}\n\nfunction eventoOnTextChanged(evento) {\n  //ui.showToast(\"onTextChanged! target: \" + evento.target + \"\\nObjItem: \" + evento.objItem + \"\\nTecla pulsada: \" + evento.keyPressed + \"\\noldText: \" + evento.oldText + \"\\nnewText: \" + evento.newText);\n  self[\"MAP_DESCRIPCIONEVENTO\"] =\n    \"onTextChanged! target: \" +\n    evento.target +\n    \"\\nObjItem: \" +\n    evento.objItem +\n    \"\\nTecla pulsada: \" +\n    evento.keyPressed +\n    \"\\noldText: \" +\n    evento.oldText +\n    \"\\nnewText: \" +\n    evento.newText;\n  ui.getView(self).refresh(\"MAP_DESCRIPCIONEVENTO\");\n}\n\nasync function FiltraMarcados(e) {\n  self.MAP_BUSCAR_TEXT = e.newText;\n  await self.executeNode(\"applyfilter\");\n}\n\nfunction eventoOnFocusChanged(evento) {\n  //ui.showToast(\"onFocusChanged! target: \" + evento.target + \"\\nObjItem: \" + evento.objItem + \"\\nTiene foco: \" + evento.isFocused);\n  self.MAP_DESCRIPCIONEVENTO =\n    \"onFocusChanged! target: \" +\n    evento.target +\n    \"\\nObjItem: \" +\n    evento.objItem +\n    \"\\nTiene foco: \" +\n    evento.isFocused;\n  ui.getView(self).refresh(\"MAP_DESCRIPCIONEVENTO\");\n}\n\nfunction eventoOnFocusChanged3(evento) {\n  self.MAP_DESCRIPCIONEVENTO3 =\n    \"onFocusChanged! target: \" +\n    evento.target +\n    \"\\nObjItem: \" +\n    evento.objItem +\n    \"\\nTiene foco: \" +\n    evento.isFocused;\n  ui.getView(self).refresh(\"MAP_DESCRIPCIONEVENTO3\");\n}\n\n// Por attributo en el nodo\nasync function jstestClickNode(e, data) {\n  var c;\n  if (data.msg) {\n    await ui.msgBox(\n      e.target + \": \" + data.msg,\n      data.title + \" \" + data.collName,\n      0\n    );\n    c = await appData.getCollection(data.collName);\n  } else {\n    await ui.msgBox(\"Abre el objeto \" + data, \"Titulo\", 0);\n    c = await appData.getCollection(data);\n  }\n  var obj = await c.createObject();\n  c.addItem(obj);\n  appData.pushValue(obj);\n}\nfunction scrollArrow(e, miparam) {\n  if (miparam == 1) {\n    if (e.dy <= 10 && self.MAP_VALORVER == 1) {\n      self.MAP_VALORVER = 0;\n      ui.getView(self).refresh(\"frmblotante\");\n    } else if (e.dy > 10 && self.MAP_VALORVER == 0) {\n      self.MAP_VALORVER = 1;\n      ui.getView(self).refresh(\"frmblotante\");\n    }\n  } else {\n    if (e.dy <= 10 && self.MAP_ATTSHOWOVERSCROLL == 1) {\n      self.MAP_ATTSHOWOVERSCROLL = 0;\n      ui.getView(self).refresh(\"attfroverscroll\");\n    } else if (e.dy > 10 && self.MAP_ATTSHOWOVERSCROLL == 0) {\n      self.MAP_ATTSHOWOVERSCROLL = 1;\n      ui.getView(self).refresh(\"attfroverscroll\");\n    }\n  }\n}\n\n// Esta funcion es llamada por el evento sys-message de la colección empresas\nasync function sysMessage(codigo, message) {\n  var cadena = \"\";\n  switch (codigo) {\n    case 1000:\n      cadena =\n        \" Actualización descargándose (un mensaje por cada actualización).\";\n      break;\n\n    case 1001:\n      cadena = \" Actualización aplicada (un mensaje por cada actualización).\";\n      break;\n\n    case 1002:\n      cadena =\n        \" Se han aplicado todas las actualizaciones (al comprobar las actualizaciones puede haber más de una, éste se invoca al aplicar todas).\";\n      break;\n\n    case 1003:\n      /* Provisionamiento seguro. */\n      /* Declarar el nodo sys-message requiere que este caso lo controle el programador,\n\t\t\t/* es responsabilidad del programador limpiar la cola de réplica y cerrar la aplicación.\n\t\t\t/* ************************ */\n\n      await ui.msgBox(\n        \"Advertencia, se ha programado una actualización de base de datos. Se van a replicar todos los datos y se cerrará la aplicación.\",\n        \"Mensaje\",\n        0\n      );\n      var bResult = replica.processReplicatorQueue(liveResponse);\n      if (bResult) {\n        //ui.msgBox(\"Cola de salida del replicador procesada correctamente. Cerrando aplicación.\", \"Mensaje\", 0);\n        appData.failWithMessage(-11888, \"##EXITAPP##\");\n      } else {\n        ui.showToast(\"Error al procesar la cola de salida\");\n        //Ojo, hay que volver a intentarlo ó hacer una repetitiva, tenemos que replicar lo que haya en el disposivo antes de salir.\n      }\n      break;\n  }\n}\n\n/***\n *\n * Code from funciones_perifericos.js\n *\n ***/\n\nasync function EnviarMail(adjunto) {\n  var men = \"\";\n  if (self.MAP_CORREO.length === 0)\n    men = \"Es obligatorio indicar el correo de destino\";\n\n  if (self.MAP_ASUNTO.length === 0 && men.length === 0)\n    men = \"Es obligatorio indicar el asunto del correo\";\n\n  if (self.MAP_CUERPO.length === 0 && men.length === 0)\n    men = \"Es obligatorio indicar el cuerpo del correo\";\n\n  if (men.length === 0) {\n    if (adjunto === \"NO\") {\n      var ok = await ui.msgBox(\"¿Desea adjuntar un fichero?\", \"Aviso\", 4);\n      if (ok === 6) {\n        self.MAP_VISIBLE = 1;\n        ui.refresh(\"MAP_TEXTAT,boton0,boton1\");\n      } else {\n        ui.sendMail(\n          self.MAP_CORREO,\n          \"direccion_con_copia@xone.es\",\n          self.MAP_ASUNTO,\n          self.MAP_CUERPO,\n          \"\"\n        );\n      }\n    } else {\n      if (self.MAP_TEXTAT.length === 0)\n        await ui.msgBox(\n          \"Error: Es Obligatorio indicar el fichero adjunto\",\n          \"AVISO\",\n          0\n        );\n      else\n        ui.sendMail(\n          self.MAP_CORREO,\n          \"direccion_con_copia@xone.es\",\n          self.MAP_ASUNTO,\n          self.MAP_CUERPO,\n          self.MAP_TEXTAT\n        );\n    }\n  } else {\n    await ui.msgBox(\"Error: \" + men, \"AVISO\", 0);\n  }\n}\n\nasync function CodigoBarras() {\n  var men = \"\";\n  if (self.MAP_TIPOCB.length === 0)\n    men = \"Es obligatorio indicar el tipo de codigo de barras a leer\";\n\n  if (self.MAP_CHECKBOX1 === 0 && self.MAP_CHECKBOX2 === 0)\n    men = \"Es obligatorio indicar la aplicacion a utilizar\";\n\n  if (men.length === 0) {\n    if (self.MAP_CHECKBOX1 === 1) ui.startScanner(\"\", self.MAP_TIPOCB, \"\");\n    else ui.startScanner(\"quickmark\", self.MAP_TIPOCB, \"\");\n  } else {\n    await ui.msgBox(\"Error: \" + men, \"AVISO\", 0);\n  }\n}\n\n/***\n *\n * Code from funcionesCamara.js\n *\n ***/\n\nfunction takePicture() {\n  let control = getControl(\"MAP_CAMERA\");\n  if (!control) {\n    return;\n  }\n  var params = {\n    filename: \"test.jpg\",\n    saveToGallery: true,\n    width: 360,\n    height: 360,\n    onFinished: function(sFileName) {\n      if (!sFileName) {\n        ui.showToast(\"Error de cámara\");\n      } else {\n        ui.showToast(\"Abriendo nueva foto...\");\n        ui.openFile(sFileName);\n      }\n    },\n  };\n  control.takePicture(params);\n}\n\nfunction record() {\n  let control = getControl(\"MAP_CAMERA\");\n  if (!control) {\n    return;\n  }\n\n  var currentObj = self;\n  let params = {\n    quality: self.MAP_CAMERA_QUALITY,\n    maxDuration: 10000, // Milisegundos\n    //maxFileSize : 10485760, // Bytes\n    withMicAudio: true,\n    onFinished: function(sFileName) {\n      self.MAP_RECORDING = 0;\n      ui.refresh(\n        \"MAP_START_RECORDING,MAP_STOP_RECORDING,MAP_START_PREVIEW,MAP_STOP_PREVIEW\"\n      );\n      if (!sFileName) {\n        ui.showToast(\"Error de cámara\");\n      } else {\n        ui.showToast(\"Nuevo vídeo...\");\n        ui.openFile(sFileName);\n      }\n    },\n  };\n  control.record(params);\n  self.MAP_RECORDING = 1;\n  ui.refresh(\n    \"MAP_START_RECORDING,MAP_STOP_RECORDING,MAP_START_PREVIEW,MAP_STOP_PREVIEW\"\n  );\n}\n\nfunction stopRecording() {\n  let control = getControl(\"MAP_CAMERA\");\n  if (!control) {\n    return;\n  }\n  control.stopRecording();\n}\n\nfunction startPreview() {\n  let control = getControl(\"MAP_CAMERA\");\n  if (!control) {\n    return;\n  }\n  control.startPreview();\n}\n\nfunction stopPreview() {\n  let control = getControl(\"MAP_CAMERA\");\n  if (!control) {\n    return;\n  }\n  control.stopPreview();\n}\n\nfunction isOpened() {\n  let control = getControl(\"MAP_CAMERA\");\n  if (!control) {\n    return;\n  }\n  let bOpened = control.isCameraOpened();\n  ui.showToast(\"Abierta: \" + bOpened);\n}\n\nfunction isAutoFocus() {\n  let control = getControl(\"MAP_CAMERA\");\n  if (!control) {\n    return;\n  }\n  let bAutoFocus = control.isAutoFocus();\n  ui.showToast(\"Autofoco: \" + bAutoFocus);\n}\n\nasync function getSupportedAspectRatios() {\n  let control = getControl(\"MAP_CAMERA\");\n  if (!control) {\n    return;\n  }\n  let allAspectRatios = control.getSupportedAspectRatios();\n  let sMessage = \"Relaciones de aspecto soportadas: \";\n  for (let i = 0; i < allAspectRatios.length; i++) {\n    sMessage = sMessage + \"\\n\" + allAspectRatios[i];\n  }\n  await ui.msgBox(sMessage, \"Mensaje\", 0);\n}\n\nfunction doSetOnCodeScanned() {\n  let control = getControl(\"MAP_CAMERA\");\n  if (!control) {\n    return;\n  }\n  control.setOnCodeScanned(function(evento) {\n    let nResult = ui.msgBox(\n      \"Valor: \" + evento.data + \"\\nTipo: \" + evento.type,\n      \"¿Código OK?\",\n      4\n    );\n    if (nResult == 6) {\n      return true;\n    } else {\n      return false;\n    }\n  });\n}\n\n/**\n * Modifica el comportamiento de flash de la cámara.\n *\n * Valores posibles:\n * 1) on: Siempre encendido al tomar una foto\n * 2) off: Siempre apagado al tomar una foto\n * 3) torch: Siempre encendido\n * 4) auto: Encendido o apagado al tomar una foto dependiendo de lo que diga el\n * sensor de luz\n * 5) red_eye: Encendido o apagado al tomar una foto dependiendo de lo que diga\n * el sensor de luz, en un modo especial que reduce los ojos rojos\n */\nfunction doSetFlashMode(sFlashMode) {\n  let control = getControl(\"MAP_CAMERA\");\n  if (!control) {\n    return;\n  }\n  control.setFlashMode(sFlashMode);\n}\n\nfunction doToggleFlashMode() {\n  let control = getControl(\"MAP_CAMERA\");\n  if (!control) {\n    return;\n  }\n  let sFlashMode = control.getFlashMode();\n  if (sFlashMode == \"on\") {\n    control.setFlashMode(\"off\");\n    self.setFieldPropertyValue(\"MAP_TOGGLE_FLASH_MODE\", \"img\", \"flash-off.png\");\n  } else if (sFlashMode == \"off\") {\n    control.setFlashMode(\"auto\");\n    self.setFieldPropertyValue(\n      \"MAP_TOGGLE_FLASH_MODE\",\n      \"img\",\n      \"flash-auto.png\"\n    );\n  } else if (sFlashMode == \"auto\") {\n    control.setFlashMode(\"torch\");\n    self.setFieldPropertyValue(\n      \"MAP_TOGGLE_FLASH_MODE\",\n      \"img\",\n      \"flash-torch.png\"\n    );\n  } else if (sFlashMode == \"torch\") {\n    control.setFlashMode(\"on\");\n    self.setFieldPropertyValue(\"MAP_TOGGLE_FLASH_MODE\", \"img\", \"flash-on.png\");\n  }\n  ui.refresh(\"MAP_TOGGLE_FLASH_MODE\");\n}\n\nfunction doToggleCamera() {\n  let control = getControl(\"MAP_CAMERA\");\n  if (!control) {\n    return;\n  }\n  let sCamera = control.getCamera();\n  if (sCamera == \"front\") {\n    control.setCamera(\"back\");\n  } else if (sCamera == \"back\") {\n    control.setCamera(\"front\");\n  }\n}\n\nfunction doToggleAutoFocus() {\n  let control = getControl(\"MAP_CAMERA\");\n  if (!control) {\n    return;\n  }\n  control.setAutoFocus(!control.isAutoFocus());\n}\n","import { computed, watch } from \"@vue/runtime-core\";\nimport { XoneDataObject } from \"./appData/core/XoneDataObject\";\nimport AppDataHandler from \"./AppDataHandler\";\n\nclass XoneViewsHandler {\n\t/**\n\t * _instance\n\t * @type {XoneViewsHandler}\n\t */\n\tstatic _instance;\n\n\t/**\n\t * views\n\t * @type {Map<string, XoneView>}\n\t */\n\tviewsMap = new Map();\n\n\tconstructor() {\n\t\tif (XoneViewsHandler._instance) return XoneViewsHandler._instance;\n\t\tXoneViewsHandler._instance = this;\n\t}\n\n\t/**\n\t * Add View\n\t * @param {XoneView} xoneView\n\t */\n\taddView(xoneView) {\n\t\tthis.viewsMap.set(xoneView.getXoneDataObject().getHashId(), xoneView);\n\t}\n\n\t/**\n\t * Get View\n\t * @param {XoneDataObject} xoneDataObject\n\t * @returns {XoneView}\n\t */\n\tgetView(xoneDataObject) {\n\t\treturn this.viewsMap.has(xoneDataObject.getHashId()) ? this.viewsMap.get(xoneDataObject.getHashId()) : null;\n\t}\n\n\t/**\n\t * cleanRemovedViews\n\t */\n\tcleanRemovedViews() {\n\t\tconst xoneHashIds = computed(() => AppDataHandler.getBreadcrumbs().map((e) => e.xoneHashId));\n\t\twatch(\n\t\t\t() => xoneHashIds.value.length,\n\t\t\t() =>\n\t\t\t\tArray.from(this.viewsMap.keys()).forEach((e) => {\n\t\t\t\t\tif (!xoneHashIds.value.includes(e)) this.viewsMap.delete(e);\n\t\t\t\t})\n\t\t);\n\t}\n}\n\n/**\n * @type {XoneViewsHandler}\n */\nconst xoneViewsHandler = new XoneViewsHandler();\n\n// Monitorice and clean removed views\nPromise.resolve().then(() => xoneViewsHandler.cleanRemovedViews());\n\nexport const getView = (/** @type {XoneDataObject} */ xoneDataObject) => xoneViewsHandler.getView(xoneDataObject);\n\nexport class XoneView {\n\t/**\n\t * bindedEvents\n\t * @type {Array<object>}\n\t */\n\t_bindedEvents = [];\n\n\t/**\n\t * @type {XoneDataObject}\n\t */\n\t_xoneDataObject;\n\n\t/**\n\t * constructor\n\t * @param {XoneDataObject} xoneDataObject\n\t */\n\tconstructor(xoneDataObject) {\n\t\tthis._xoneDataObject = xoneDataObject;\n\t\txoneViewsHandler.addView(this);\n\t}\n\n\tget bindedEvents() {\n\t\treturn this._bindedEvents;\n\t}\n\n\t/**\n\t * addControl\n\t * @param {XoneControl} control\n\t */\n\taddControl(control) {\n\t\tthis[control.name] = control;\n\t}\n\n\tgetXoneDataObject() {\n\t\treturn this._xoneDataObject;\n\t}\n\n\t/**\n\t * Bind event\n\t * @param  {...string} Args\n\t */\n\tbind(...Args) {\n\t\tif (!Args || Args.length < 3) return console.error(\"Error calling bind method. You need 3 arguments at least.\");\n\n\t\tlet bindedEvent = this._bindedEvents.find((e) => e.field === Args[0] && e.eventName === Args[1].toString().toLowerCase());\n\n\t\tif (!bindedEvent)\n\t\t\tbindedEvent = {\n\t\t\t\tfieldName: Args[0],\n\t\t\t\teventName: Args[1].toString().toLowerCase(),\n\t\t\t};\n\n\t\tif (Args.length === 3) bindedEvent.action = Args[2];\n\t\telse {\n\t\t\tbindedEvent.params = Args[2];\n\t\t\tbindedEvent.action = Args[3];\n\t\t}\n\n\t\t// Add event bind\n\t\tthis._bindedEvents.push(bindedEvent);\n\t}\n\n\t/**\n\t * exit current view\n\t */\n\texit() {\n\t\tAppDataHandler.clearBreadcrumbsFromXoneHashId(this._xoneDataObject[\"_XoneHashId\"]);\n\t}\n\n\t/**\n\t * Refresh\n\t * @param  {...any} Props\n\t */\n\trefresh(...Props) {\n\t\tconst props = Props.length === 1 ? Props[0].toString().split(\",\") : Props;\n\t\tprops.forEach((/** @type {*} */ e) => {\n\t\t\tif (this[e]?.refresh) this[e].refresh();\n\t\t});\n\t\tif (Props.length === 0)\n\t\t\tObject.values(this).forEach((e) => {\n\t\t\t\tif (!e) return;\n\t\t\t\tif (e.refresh) e.refresh();\n\t\t\t});\n\t}\n\n\t/**\n\t * Refresh All\n\t */\n\trefreshAll() {\n\t\tthis.refresh();\n\t}\n\n\t/**\n\t * refreshValue\n\t * @param {*} Props\n\t */\n\trefreshValue = (Props) => {\n\t\tthis.refresh(Props);\n\t};\n}\n\nexport class XoneControl {\n\t/**\n\t * @type {string}\n\t */\n\tname;\n\n\t/**\n\t * @type {HTMLElement}\n\t */\n\telement;\n\n\trefresh = () => {};\n\n\trefreshValue = () => {};\n\n\t/**\n\t * constructor\n\t * @param {string} name\n\t * @param {HTMLElement} [element]\n\t */\n\tconstructor(name, element = null) {\n\t\tthis.name = name;\n\n\t\twhile (element && !element.classList.contains(\"xone-prop\") && !element.classList.contains(\"xone-frame\")) element = element.parentElement;\n\n\t\tthis.element = element;\n\t}\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./SelectedControl.vue?vue&type=style&index=0&id=19398d98&scoped=true&lang=css\"","import { Exception } from \"../../Exceptions/Exception\";\nimport NumberUtils from \"../../Utils/NumberUtils\";\nimport ObjUtils from \"../../Utils/ObjUtils\";\nimport StringUtils from \"../../Utils/StringUtils\";\nexport default class XoneGPSResulset {\n    /**\n     *\n     */\n    constructor(connection, Sentence, options) {\n        this.m_stringData = [\"Valor prueba texto\", \"Texto corto\", \"0002346\", \"Otro texto\", \"Un texto mas largo de prueba\", \"Mas texto\"];\n        this.m_maxRows = 100;\n        this.m_keys = [];\n        this.isResultset = true;\n        this.m_connection = connection;\n        this.m_nIterate = -1;\n        this.m_sentence = Sentence;\n        this.m_options = options;\n        this.m_data = [];\n        this.m_maxRows = this.m_data.length;\n        this.m_keys = [];\n        // this.m_parsed=new SqlParser(\"ROWID\");\n        // this.m_parsed.ParseSqlString(strCmd)\n    }\n    async populate(options) {\n        var result = await this.m_connection.fetchDataAsync(this.m_sentence, options || this.m_options);\n        if (result.hasError == true) {\n            throw new Exception(result.err);\n        }\n        this.m_data = Array.isArray(result.data) ? result.data : [];\n        this.m_maxRows = this.m_data.length;\n        this.m_keys = this.m_maxRows == 0 ? [] : Object.keys(this.m_data[0]);\n        return this;\n    }\n    getBytes(fld) {\n        return null;\n    }\n    getColumnCount() {\n        return this.m_maxRows == 0 ? 0 : this.m_keys.length;\n    }\n    getColumnTypes() {\n        return [1, 2, 3, 4, 5, 6, 7, 8];\n    }\n    getColumnName(ordinal) {\n        return this.m_maxRows == 0 ? 0 : this.m_keys[ordinal];\n    }\n    getData() {\n        return this.m_data;\n    }\n    close() {\n        this.m_nIterate = -1;\n        this.m_data = null;\n        this.m_maxRows = 0;\n    }\n    resolverField(fld) {\n        if (typeof fld == \"number\")\n            return this.m_keys[fld];\n        return fld;\n    }\n    getValue(fld, nType) {\n        switch (nType) {\n            case 0: // Numero\n                return NumberUtils.SafeToInt(this.m_data[this.m_nIterate][this.resolverField(fld)]);\n            case 2:\n                return NumberUtils.SafeToDouble(this.m_data[this.m_nIterate][this.resolverField(fld)]);\n            case 3:\n                return ObjUtils.SafeToDate(this.m_data[this.m_nIterate][this.resolverField(fld)]);\n            default:\n                return StringUtils.SafeToString(this.m_data[this.m_nIterate][this.resolverField(fld)]);\n        }\n    }\n    getString(fld) {\n        return this.getValue(fld, 1);\n    }\n    getInt(fld) {\n        return this.getValue(fld, 0);\n    }\n    getDate(fld) {\n        return this.getValue(fld, 3);\n    }\n    get PageLen() {\n        var _a, _b;\n        return ((_b = (_a = this.m_options) === null || _a === void 0 ? void 0 : _a.page) === null || _b === void 0 ? void 0 : _b.length) || -1;\n    }\n    get PageCache() {\n        var _a, _b;\n        return ((_b = (_a = this.m_options) === null || _a === void 0 ? void 0 : _a.page) === null || _b === void 0 ? void 0 : _b.cache) || -1;\n    }\n    async next() {\n        // if (this.PageLen > 0) {\n        //     if (this.PageCache > 0) {\n        //     } else {\n        //         await this.populate();\n        //     }\n        // }\n        return ++this.m_nIterate < this.m_maxRows;\n    }\n    async EOF() {\n        return this.m_nIterate >= this.m_maxRows;\n    }\n    async moveTo(position) {\n        return position == this.m_maxRows || (this.m_nIterate = position) == this.m_maxRows;\n    }\n}\n\n//# sourceMappingURL=XoneGPSResulset.js.map\n","import ObjUtils from \"../../Utils/ObjUtils\";\nimport XoneGPSResulset from \"./XoneGPSResulset\";\nexport default class XoneGPSConnection {\n    /**\n     *\n     */\n    constructor() {\n        this.m_sentence = \"Select STATUS,LATITUD,LONGITUD,ALTITUD,RUMBO,FGPS,HGPS,VELOCIDAD,SATELITES from GPS\";\n        let a = 1;\n    }\n    getTestResult() {\n        return {\n            hasError: false,\n            data: [\n                {\n                    ID: 1, STATUS: 1, LATITUD: 38.886524, LONGITUD: -7.003800, ALTITUD: Math.floor(Math.random() * (1000 - 1)) + 1, RUMBO: Math.floor(Math.random() * (360 - 1)) + 1, FGPS: new Date(), HGPS: ObjUtils.SafeToHours(), VELOCIDAD: Math.floor(Math.random() * (200 - 1)) + 1, SATELITES: Math.floor(Math.random() * (8 - 1)) + 1\n                }\n            ]\n        };\n    }\n    async countAsync(Sentence, ...args) {\n        return await new Promise(resolve => 10);\n    }\n    /**\n     * Este es el lugar donde hay que llenar los datos del GPS, se supone que es lo que lo devuelve asincrono\n     * Alejandro debe completar esta funcion\n     * @param Sentence\n     * @param data\n     */\n    async fetchDataAsync(Sentence, data) {\n        return this.getTestResult();\n    }\n    async executeQueryAsync(Sentence, ...args) {\n        // var parser = new SqlParser(\"ROWID\");\n        // parser.ParseSqlString(Sentence as string);\n        // var data: IDataOptions = {\n        //     action: \"select\",\n        //     where: parser.GetWhereSentence(),\n        //     sort: parser.getOrderBySentence()\n        //     //page: args.length>2?args[2]:{}\n        // };\n        // data = { ...data, ...args[0] };\n        var rs = new XoneGPSResulset(this, Sentence);\n        return await rs.populate();\n    }\n    executeUpdateAsync(Sentence) {\n        throw new Error(\"Method not implemented.\");\n    }\n    async executeNonQuery(data) {\n        return {\n            hasError: false,\n            data: [{\n                    result: 1\n                }]\n        };\n    }\n    async executeAsync(Sentence, MaxRows, ...args) {\n        return await this.executeNonQuery();\n    }\n    executeQuery(Sentence) {\n        return new XoneGPSResulset(this, this.m_sentence);\n    }\n    createStatement() {\n        throw new Error(\"Method not implemented.\");\n    }\n    isClosed() {\n        throw new Error(\"Method not implemented.\");\n    }\n    commit() {\n        throw new Error(\"Method not implemented.\");\n    }\n    beginTrans() {\n        throw new Error(\"Method not implemented.\");\n    }\n    rollback() {\n        throw new Error(\"Method not implemented.\");\n    }\n    execute(parameter, MaxRows) {\n        throw new Error(\"Method not implemented.\");\n    }\n    executeUpdate(Sentence) {\n        throw new Error(\"Method not implemented.\");\n    }\n    executeOperation(OperType, tableName, values, whereClause) {\n        throw new Error(\"Method not implemented.\");\n    }\n    getDBMS() {\n        throw new Error(\"Method not implemented.\");\n    }\n    outerJoinsSupported() {\n        throw new Error(\"Method not implemented.\");\n    }\n    acceptsParsedSentences() {\n        throw new Error(\"Method not implemented.\");\n    }\n    acceptsEmptyQueries() {\n        throw new Error(\"Method not implemented.\");\n    }\n    LastRowsAffected() {\n        throw new Error(\"Method not implemented.\");\n    }\n    LastInsertedRowId() {\n        throw new Error(\"Method not implemented.\");\n    }\n    cancelProcesses(flags) {\n        throw new Error(\"Method not implemented.\");\n    }\n    setCryptoData(cryptoData) {\n        throw new Error(\"Method not implemented.\");\n    }\n    getCryptoData() {\n        throw new Error(\"Method not implemented.\");\n    }\n    cryptoSupported() {\n        throw new Error(\"Method not implemented.\");\n    }\n    getTokenFromAuth(login, pass) {\n        throw new Error(\"Method not implemented.\");\n    }\n}\n\n//# sourceMappingURL=XoneGPSConnection.js.map\n","import XoneConnectionData from \"../XoneConnectionData\";\nimport XoneGPSConnection from \"./XoneGPSConnection\";\nexport default class XoneGPSConnectionData extends XoneConnectionData {\n    /**\n     * Crea una conexión a base de datos\n     *\n     * @param Name  Nombre de la conexión.\n     * @param Owner Aplicación a la cual pertenece esta conexión.\n     */\n    constructor(context, Name, Owner) {\n        super(Name, Owner);\n        this.m_context = context;\n        this.m_connection = null;\n        // K11101001: Utilizar SESSIONID numérico para mejorar el rendimiento de la maquinaria.\n        // this.m_nSessionIdCounter = new AtomicLong(0);\n        // // A14011501: Optimizaciones para obtener claves numéricas de conexiones sqlite y demás.\n        // this.m_nLastInsertedId = new ThreadLocal<>();\n        // this.m_nLastRecordsAffected = new ThreadLocal<>();\n        // this.m_strLastInsertedTable = new ThreadLocal<>();\n        // // TODO ADD TAG\n        // // Nos creamos el holder para el statement...\n        // this.m_stmt = {}; // new ThreadLocal<>();\n    }\n    /**\n     * TRUE si el DBMS soporta la sintaxis TOP x\n     *\n     * @return Esta función posiblemente no se redefina en esta plataforma.\n     */\n    TopAllowed() {\n        return false;\n    }\n    /**\n     * TRUE si el DBMS soporta la sintaxis LIMIT x\n     *\n     * @return Mirar arriba plis.\n     */\n    LimitAllowed() {\n        return false;\n    }\n    /**\n     * TRUE si la conexión tiene caracteres para escapear cadenas de caracteres.\n     *\n     * @return Devuelve TRUE si hay caracteres en la lista para sustituir.\n     */\n    HasEscapeChars() {\n        return false;\n    }\n    /**\n     * A11092601: Modificaciones para mejorar el soporte de conexiones remotas y demás.\n     * Devuelve TRUE si la conexión acepta sentencias SQL parseadas para su ejecución o para queries.\n     *\n     * @return\n     */\n    acceptsParsedSentences() {\n        return false;\n    }\n    acceptsEmptyQueries() {\n        return false;\n    }\n    /**\n     * A11092601: Modificaciones para mejorar el soporte de conexiones remotas y demás.\n     * Devuelve TRUE si la conexión permite recuperar un ID autonumérico dado un ROWID.\n     *\n     * @return\n     */\n    retrievesAutonumericKeys() {\n        return false;\n    }\n    /**\n     * Obtiene una conexión física a la fuente de datos que encapsula esta clase. Es de obligatoria redefinición por los derivados de esta clase.\n     *\n     * @return Devuelve una nueva conexión de datos (o la misma si solo se emplea una)\n     * @throws Exception\n     */\n    GetNewConnection(ReadOnly) {\n        //require(\"./XoneGPSConnection\");\n        return this.m_connection = new XoneGPSConnection();\n    }\n    GetCurrentConnection(ReadOnly = false) {\n        if (this.m_connection !== null)\n            return this.m_connection;\n        return this.GetNewConnection(ReadOnly);\n    }\n    /**\n     * Crea un conjunto de datos sin conexión original. Para ello crea una local y la devuelve como\n     * parte del conjunto que la cierra cuando lo cierran a él\n     *\n     * @param Sentence Sentencia SQL que se ejecuta para obtener el conjunto de datos.\n     * @return Devuelve un conjunto de datos o NULL si algo falla.\n     * @throws Exception\n     */\n    /// public CreateRecordset(Sentence:string): IResultSet {\n    //     return this.CreateRecordset(null, Sentence);\n    // }\n    /**\n     * A11092601: Modificaciones para mejorar el soporte de conexiones remotas y demás.\n     * Ejecuta una sentencia SQL parseada que devuelve datos.\n     *\n     * @param Sentence\n     * @return\n     * @throws Exception\n     */\n    /// public CreateRecordset(Sentence:any): IResultSet{\n    //     return this.CreateRecordset(null, Sentence);\n    // }\n    /**\n     * Crea un objeto de acceso a datos (recordset) para leer los datos de un objeto\n     *\n     * @param Connection Conexión que se quiere usar para abrir la fuente de datos. NULL para crear una local y usarla solamente para esta función.\n     * @param Sentence   Setencia SQL (SELECT) que se quiere ejecutar para abrir la fuente de datos.\n     * @param MaxRows    Máximo de registros para no usar el que tiene por defecto la clase.\n     * @return Devuelve el conjunto de datos creado o NULL si algo falla.\n     * @throws Exception\n     */\n    /// public abstract CreateRecordset(Connection Connection, String Sentence, int MaxRows): IResultSet;\n    /**\n     * A11092601: Modificaciones para mejorar el soporte de conexiones remotas y demás.\n     * Esta implementación permite la ejecución de sentencias SQL parseadas con anterioridad.\n     *\n     * @param Connection\n     * @param Sentence\n     * @param MaxRows\n     * @return\n     * @throws Exception\n     */\n    /// public abstract ResultSet CreateRecordset(Connection: IConnection | string, ...args?:any) throws Exception;\n    /*\n     * TODO ADD TAG 17042014: Luis Un recordset a partir de la clase de parametros\n     */\n    CreateRecordset(Connection, ...args) {\n        if (typeof Connection == 'string') {\n            return this.GetCurrentConnection().executeQuery(Connection);\n        }\n        return null;\n    }\n    async CreateRecordsetAsync(Connection, ...args) {\n        try {\n            if (typeof Connection == 'string') {\n                let cn = this.GetCurrentConnection();\n                return await cn.executeQueryAsync(Connection, ...args);\n            }\n        }\n        catch (ex) {\n            console.error(ex);\n        }\n        return null;\n    }\n    /**\n     * Crea un objeto de acceso a datos (recordset) para leer los datos de un objeto\n     *\n     * @param Connection Conexión que se quiere usar para abrir la fuente de datos. NULL para crear una local y usarla solamente para esta función.\n     * @param Sentence   Setencia SQL (SELECT) que se quiere ejecutar para abrir la fuente de datos.\n     * @return Devuelve el conjunto de datos creado o NULL si algo falla.\n     * @throws Exception\n     */\n    //public abstract ResultSet CreateRecordset(Connection Connection, String Sentence) throws Exception;\n    /**\n     * A11092601: Modificaciones para mejorar el soporte de conexiones remotas y demás.\n     * Ejecuta una sentencia SQL parseada que devuelve datos.\n     *\n     * @param conn\n     * @param Sentence\n     * @return\n     * @throws Exception\n     */\n    /// public abstract ResultSet CreateRecordset(Connection conn, SqlParser Sentence) throws Exception;\n    /**\n     * Ejecuta una sentencia SQL dentro de la conexión que manipula este objeto. No lleva conexión física como parámetro porque crea una temporal, trabaja con ella y la cierra.\n     * <p>\n     * K11092601: ExecuteSqlString y similares deben devolver un objeto, que puede ser ResultSet.\n     * Cambiar el tipo de resultado.\n     *\n     * @param Sentence Sentencia SQL que se quiere ejecutar.\n     * @return Devuelve TRUE si la ejecución de la sentencia SQL es correcta.\n     * @throws Exception\n     */\n    // public ExecuteSqlString(Sentence: string): any {\n    //     return ExecuteSqlString(null, Sentence, true);\n    // }\n    /**\n     * A10090601:\tIncluir el mecanismo de réplica selectiva por colecciones a la maquinaria.\n     * Ejecuta un SQL sin replicar\n     * <p>\n     * K11092601: ExecuteSqlString y similares deben devolver un objeto, que puede ser ResultSet.\n     * Cambiar el tipo de resultado.\n     */\n    // public Object ExecuteLocalSqlString(String Sentence) throws Exception {\n    //     return ExecuteSqlString(null, Sentence, false);\n    // }\n    /**\n     * A11092601: Modificaciones para mejorar el soporte de conexiones remotas y demás.\n     * Ejecuta una sentencia SQL parseada con réplica.\n     * <p>\n     * K11092601: ExecuteSqlString y similares deben devolver un objeto, que puede ser ResultSet.\n     * Cambiar el tipo de resultado.\n     *\n     * @param Sentence\n     * @return\n     * @throws Exception\n     */\n    // public Object ExecuteParsedSql(SqlParser Sentence) throws Exception {\n    //     return ExecuteParsedSql(null, Sentence, true);\n    // }\n    /**\n     * Ejecuta una sentencia SQL dentro de la conexión que manipula este objeto.\n     * A10090601:\tIncluir el mecanismo de réplica selectiva por colecciones a la maquinaria.\n     * Un parámetro para decir si replica.\n     * <p>\n     * K11092601: ExecuteSqlString y similares deben devolver un objeto, que puede ser ResultSet.\n     * Cambiar el tipo de resultado\n     *\n     * @param Connection Conexión de datos que se quiere usar para ejecutar la sentencia. NULL para crear una temporal, ejecutar la sentencia y cerrarla.\n     * @param Sentence   Sentencia SQL que se va a ejecutar.\n     * @param Replicate  TRUE si replica.\n     * @return Devuelve TRUE si la sentencia se ejecuta correctamente.\n     * @throws SQLException\n     * @throws Exception\n     */\n    ExecuteSqlString(Connection, Sentence, Replicate) {\n        return {};\n    }\n    /*\n     * TODO ADD TAG 17042014: Luis Un recordset a partir de la clase de parametros\n     */\n    async CountAsync(Connection, ...args) {\n        if (typeof Connection == 'string') {\n            return await this.GetCurrentConnection().countAsync(Connection, ...args);\n        }\n        return null;\n    }\n    async ExecuteSqlStringAsync(Connection, Sentence, Replicate, ...args) {\n        return await this.GetCurrentConnection().executeAsync(Sentence, 100, ...args);\n    }\n    /**\n     * A11092601: Modificaciones para mejorar el soporte de conexiones remotas y demás.\n     * Esta implementación opcional permite ejecutar una sentencia SQL parseada en vez de una cadena SQL.\n     * <p>\n     * K11092601: ExecuteSqlString y similares deben devolver un objeto, que puede ser ResultSet.\n     * Cambiar el tipo de resultado.\n     *\n     * @param Connection\n     * @param Sentence\n     * @param Replicate\n     * @return\n     * @throws SQLException\n     * @throws Exception\n     */\n    ExecuteParsedSql(Connection, Sentence, Replicate) {\n        return {};\n    }\n    async ExecuteParsedSqlAsync(Connection, Sentence, Replicate, ...args) {\n        throw new Error(\"Method not implemented.\");\n    }\n    /**\n     * Reemplaza el valor del operador específico dentro de la cadena SQL que se pasa como parámetro.\n     *\n     * @param Collection Colección con la que se está trabajando.\n     * @param Sentence   Sentencia SQL o cadena en la cual se quiere sustituir el operador.\n     * @param OperName   Nombre del operador que se quiere sustituir.\n     * @return Devuelve la sentencia original con el operador sustituido.\n     * @throws Exception\n     */\n    ReplaceCustomOper(Collection, Sentence, OperName) {\n        return Sentence;\n    }\n    /**\n     * Inserta una sentencia TOP dentro del SQL que se pasa como parámetro. Colocada aquí para mantener compatibilidad de interfaces\n     * pero no se implementará en esta plataforma.\n     *\n     * @param Sentence Sentencia SQL que se quiere modificar.\n     * @param Rows     Cantidad de filas que se quiere limitar en el TOP x o LIMIT x\n     * @return La misma sentencia pasada como parámetro.\n     */\n    InsertTop(Sentence, Rows) {\n        return Sentence;\n    }\n    /**\n     * Dado un nombre de campo lo formatea usando los caracteres de inicio y fin de campo.\n     *\n     * @param FieldName Nombre del campo a formatear.\n     * @return Devuelve el nombre del campo encerrado en sus secuencias de inicio y fin de campo.\n     */\n    QuoteFieldName(FieldName) {\n        return FieldName;\n    }\n    /**\n     * Dado un nombre de tabla u otro tipo de objeto de base de datos, lo devuelve formateado con su prefijo si este está definido.\n     *\n     * @param ObjectName Nombre de tabla u objeto en general de la base de datos para arreglar con el prefijo.\n     * @return Devuelve el nombre de objeto ya desarrollado con su prefijo si aplica.\n     */\n    // public String FixObjectName(String ObjectName):string {\n    //     return FixObjectName(ObjectName, null);\n    // }\n    /**\n     * Dada una cadena sustituye los caracteres para los cuales se hayan definido secuencias de escape por dichas secuencias.\n     *\n     * @param Value Cadena en la cual se van a sustituir los caracteres por secuencias de escape.\n     * @return Devuelve la cadena original con los caracteres sustituidos por sus secuencias de escape.\n     */\n    EscapeString(Value) {\n        if (Value.startsWith('\\''))\n            return Value;\n        return `\\'${Value}\\'`;\n    }\n    /**\n     * Genera un ROWID para la conexión actual. Emplea los criterios de número de tabla, MID, DBID, etc.\n     *\n     * @param TableName Nombre de la tabla para la cual se quiere generar el ROWID.\n     * @return Devuelve un ROWID respetando los valores de réplica y el tamaño del campo ROWID.\n     */\n    //public GenerateRowId(TableName:string):string {return Guid.create().toString();}\n    /**\n     * Desarrolla el valor de un objeto y lo devuelve como cadena lista para insertar en un SQL o un filtro\n     *\n     * @param Value Valor que se quiere desarrollar. Se usará la máscara de fecha de la conexión.\n     * @return CAdena representando el valor del objeto para escribir en una sentencia SQL o un filtro de datos.\n     */\n    // public DevelopObjectValue(Value:any):string {\n    //     return DevelopObjectValue(Value, true);\n    // }\n    /**\n     * Esta función se emplea para cerrar conexiones locales si es que las tiene. No necesariamente tiene por qué\n     * usarse para terminar la clase, simplemente cuando se quiera cerrar o destruir los objetos locales.\n     */\n    Terminate() { }\n    /**\n     * Si el DBMS soporta left outer joins\n     */\n    IsOuterJoinSupported() { return false; }\n    /**\n     * A11092601: Modificaciones para mejorar el soporte de conexiones remotas y demás.\n     * Devuelve una clave numérica dada una tabla y un ROWID. Permite abstraer la obtención de la clave autonumérica\n     * en conexiones que no son offline.\n     *\n     * @param TableName\n     * @param RowIdFieldName\n     * @return\n     * @throws Exception\n     */\n    RetrieveNumericKey(TableName, KeyName, RowIdFieldName, RowId) { return 0; }\n    /**\n     * A11092601: Modificaciones para mejorar el soporte de conexiones remotas y demás.\n     * Esta función permite calcular si un ROWID es único dentro de la conexión de datos.\n     *\n     * @param tableName\n     * @param RowID\n     * @return\n     * @throws Exception\n     */\n    isUniqueRowID(tableName, RowID) { return true; }\n    // A11120701: Mecanismo para exponer el DBMS de una conexión.\n    // Expone el tipo de DBMS que tiene debajo esta conexión. Obligatorio implementar.\n    getDbmsTag() { return \"test\"; }\n    ;\n}\n\n//# sourceMappingURL=XoneGPSConnectionData.js.map\n","export const UI_ATTRIBUTES = {\n\tcoll: {\n\t\tcellEvenColor: \"cell-even-color\",\n\t\tcellOddColor: \"cell-odd-color\",\n\t\tcellSelectedBgColor: \"cell-selected-bgcolor\",\n\t\tgroupSwipe: \"group-swipe\",\n\t\tloadAll: \"loadall\",\n\t\tname: \"name\",\n\t\tnoTab: \"notab\",\n\t\ttabBgColor: \"tab-bgcolor\",\n\t\ttabBPadding: \"tab-bpadding\",\n\t\ttabFontSize: \"tab-fontsize\",\n\t\ttabForecolor: \"tab-forecolor\",\n\t\ttabLPadding: \"tab-lpadding\",\n\t\ttabRPadding: \"tab-rpadding\",\n\t\ttabSelectedForecolor: \"tab-selected-forecolor\",\n\t\ttabTPadding: \"tab-tpadding\",\n\t},\n\tgroup: {\n\t\talign: \"align\",\n\t\tbgColor: \"bgcolor\",\n\t\tbMargin: \"bmargin\",\n\t\tborderCornerRadius: \"border-corner-radius\",\n\t\tbPadding: \"bpadding\",\n\t\tdrawerOrientation: \"drawer-orientation\",\n\t\televation: \"elevation\",\n\t\tfixed: \"fixed\",\n\t\tforeColor: \"forecolor\",\n\t\theight: \"height\",\n\t\tid: \"id\",\n\t\timage: { value: [\"imgbk\", \"img\", \"image\", \"path\"] },\n\t\tkeepAspectRatio: \"keep-aspect-ratio\",\n\t\tlMargin: \"lmargin\",\n\t\tlPadding: \"lpadding\",\n\t\tname: \"name\",\n\t\tonFocus: \"onfocus\",\n\t\torientation: \"orientation\",\n\t\trMargin: \"rmargin\",\n\t\trPadding: \"rpadding\",\n\t\ttMargin: \"tmargin\",\n\t\ttPadding: \"tpadding\",\n\t\twidth: \"width\",\n\t},\n\tframe: {\n\t\talign: \"align\",\n\t\tanimationIn: \"animation-in\",\n\t\tanimationOut: \"animation-out\",\n\t\tbgColor: \"bgcolor\",\n\t\tbMargin: \"bmargin\",\n\t\tborderColor: \"border-color\",\n\t\tborderCornerRadius: \"border-corner-radius\",\n\t\tborderWidth: \"border-width\",\n\t\tbPadding: \"bpadding\",\n\t\tdisableVisible: \"disablevisible\",\n\t\televation: \"elevation\",\n\t\tfloating: \"floating\",\n\t\tforeColor: \"forecolor\",\n\t\tframebox: \"framebox\",\n\t\theight: \"height\",\n\t\thref: \"href\",\n\t\timage: { value: [\"imgbk\", \"img\", \"image\", \"path\"] },\n\t\tkeepAspectRatio: \"keep-aspect-ratio\",\n\t\tleft: \"left\",\n\t\tlMargin: \"lmargin\",\n\t\tlPadding: \"lpadding\",\n\t\tmapCol: \"mapcol\",\n\t\tmapFld: \"mapfld\",\n\t\tminHeight: \"min-height\",\n\t\tminWidth: \"min-width\",\n\t\tname: \"name\",\n\t\tnewLine: \"newline\",\n\t\tonClick: \"onclick\",\n\t\tonScroll: \"onscroll\",\n\t\trMargin: \"rmargin\",\n\t\trPadding: \"rpadding\",\n\t\tscroll: \"scroll\",\n\t\tscrollOrientation: \"scroll-orientation\",\n\t\ttMargin: \"tmargin\",\n\t\ttop: \"top\",\n\t\ttPadding: \"tpadding\",\n\t\tviewMode: \"viewmode\",\n\t\twidth: \"width\",\n\t\twrap: \"wrap\",\n\t},\n\tprop: {\n\t\talign: \"align\",\n\t\tallowedExtensions: \"allowed-extensions\",\n\t\tautosave: \"autosave\",\n\t\tautoslideDelay: \"autoslide-delay\",\n\t\tbgColor: \"bgcolor\",\n\t\tbMargin: \"bmargin\",\n\t\tborderColor: \"border-color\",\n\t\tborderCornerRadius: \"border-corner-radius\",\n\t\tborderWidth: \"border-width\",\n\t\tbPadding: \"bpadding\",\n\t\tbreadcrumbFontSize: { value: [\"breadcrumb-fontsize\", \"breadcrumbs-fontsize\", \"breadcumb-fontsize\"] },\n\t\tbreadcrumbForeColor: { value: [\"breadcrumb-forecolor\", \"breadcrumbs-forecolor\", \"breadcumb-forecolor\"] },\n\t\tbreadcrumbSelectedFontSize: { value: [\"breadcrumb-selected-fontsize\", \"breadcrumbs-selected-fontsize\", \"breadcumb-selected-fontsize\"] },\n\t\tbreadcrumbSelectedForeColor: {\n\t\t\tvalue: [\"breadcrumb-selected-forecolor\", \"breadcrumbs-selected-forecolor\", \"breadcumb-selected-forecolor\"],\n\t\t},\n\t\tbuttonOption: \"button-option\",\n\t\tcalendarViewMode: \"calendar-viewmode\",\n\t\tcellBgColor: \"cell-bgcolor\",\n\t\tcellBorderColor: \"cell-border-color\",\n\t\tcellEvenColor: \"cell-even-color\",\n\t\tcellForeColor: \"cell-forecolor\",\n\t\tcellOddColor: \"cell-odd-color\",\n\t\tcellOtherMonthBgColor: \"cell-other-month-bgcolor\",\n\t\tcellSelectedBgColor: \"cell-selected-bgcolor\",\n\t\tcellSelectedBorderColor: \"cell-selected-border-color\",\n\t\tcellSelectedForeColor: \"cell-selected-forecolor\",\n\t\tcheckType: \"check-type\",\n\t\tcontents: \"contents\",\n\t\tdisableEdit: \"disableedit\",\n\t\tdisableVisible: \"disablevisible\",\n\t\teditInRow: \"edit-inrow\",\n\t\televation: \"elevation\",\n\t\tfieldSize: \"fieldsize\",\n\t\tfixedText: \"fixed-text\",\n\t\tfloating: \"floating\",\n\t\tfloatingTooltip: \"floating-tooltip\",\n\t\tfluidLoad: \"fluid-load\",\n\t\tfontBold: \"fontbold\",\n\t\tfontSize: \"fontsize\",\n\t\tforeColor: \"forecolor\",\n\t\tgalleryColumns: \"gallery-columns\",\n\t\theight: \"height\",\n\t\thref: \"href\",\n\t\timage: { value: [\"img\", \"image\", \"path\", \"imgbk\"] },\n\t\timgChecked: \"img-checked\",\n\t\timgCheckedDisabled: \"img-checked-disabled\",\n\t\timgHeight: \"img-height\",\n\t\timgUnchecked: \"img-unchecked\",\n\t\timgUncheckedDisabled: \"img-unchecked-disabled\",\n\t\timgWidth: \"img-width\",\n\t\tkeepAspectRatio: \"keep-aspect-ratio\",\n\t\tlabelBox: \"labelbox\",\n\t\tlabelwidth: \"labelwidth\",\n\t\tleft: \"left\",\n\t\tlines: \"lines\",\n\t\tlinkedField: \"linkedfield\",\n\t\tlinkedTo: \"linkedto\",\n\t\tlMargin: \"lmargin\",\n\t\tlocked: \"locked\",\n\t\tlPadding: \"lpadding\",\n\t\tmask: \"mask\",\n\t\tmethod: \"method\",\n\t\tminHeight: \"min-height\",\n\t\tminWidth: \"min-width\",\n\t\tname: \"name\",\n\t\tnewLine: \"newline\",\n\t\tonClick: \"onclick\",\n\t\tonEditorAction: \"oneditoraction\",\n\t\tonFocusChanged: \"onfocuschanged\",\n\t\tonScroll: \"onscroll\",\n\t\tonTextChanged: \"ontextchanged\",\n\t\tpaginationSize: \"pagination-size\",\n\t\tpostOnchange: \"postonchange\",\n\t\tradioGroup: \"radio-group\",\n\t\treadOnly: \"readonly\",\n\t\trMargin: \"rmargin\",\n\t\trowsPerPage: \"rows-per-page\",\n\t\trPadding: \"rpadding\",\n\t\tshowInline: \"showinline\",\n\t\tshowInlineKeyboard: \"showinline-keyboard\",\n\t\tsize: \"size\",\n\t\ttextAlign: \"text-align\",\n\t\ttextBgColor: \"text-bgcolor\",\n\t\ttextBgColorDisabled: \"text-bgcolor-disabled\",\n\t\ttextBorder: \"text-border\",\n\t\ttextBorderBottom: \"text-border-bottom\",\n\t\ttextBorderLeft: \"text-border-left\",\n\t\ttextBorderRight: \"text-border-right\",\n\t\ttextBorderTop: \"text-border-top\",\n\t\ttextOverflow: \"text-overflow\",\n\t\ttextFontSize: \"text-fontsize\",\n\t\ttextForeColor: { value: [\"text-forecolor\", \"textfore-color\"] },\n\t\ttextForeColorDisabled: \"text-forecolor-disabled\",\n\t\ttitle: { value: [\"title\", \"caption\"] },\n\t\ttMargin: \"tmargin\",\n\t\ttooltip: \"tooltip\",\n\t\ttooltipColor: { value: [\"expanded-hint-color\", \"floating-tooltip-color\"] },\n\t\ttooltipForecolor: \"tooltip-forecolor\",\n\t\ttop: \"top\",\n\t\ttPadding: \"tpadding\",\n\t\ttype: \"type\",\n\t\tviewMode: \"viewmode\",\n\t\tvisible: \"visible\",\n\t\tweekdaysLongname: \"weekdays-longname\",\n\t\twidth: \"width\",\n\t\twrap: \"wrap\",\n\t},\n};\nexport const COLOR_ATTRIBUTES = [\n\t\"borderColor\",\n\t\"bgColor\",\n\t\"cellBgColor\",\n\t\"cellBorderColor\",\n\t\"cellForeColor\",\n\t\"cellOtherMonthBgColor\",\n\t\"cellSelectedBgColor\",\n\t\"cellSelectedBorderColor\",\n\t\"cellSelectedForeColor\",\n\t\"foreColor\",\n\t\"textBgColor\",\n\t\"textBgColorDisabled\",\n\t\"textForeColor\",\n\t\"textForeColorDisabled\",\n\t\"breadcrumbForeColor\",\n\t\"breadcrumbSelectedForeColor\",\n];\nexport const FAST_ATTR_RESOLVER = (() => {\n\tconst obj = {};\n\tconst fetchFastAttrResolver = ([normalized, original]) => {\n\t\tif (typeof normalized === \"object\" && normalized.value) normalized = normalized.value[0];\n\t\tif (typeof original === \"object\" && original.value) return original.value.forEach((e) => (obj[e] = normalized));\n\t\tobj[original] = normalized;\n\t};\n\tObject.entries(UI_ATTRIBUTES.coll).forEach(fetchFastAttrResolver);\n\tObject.entries(UI_ATTRIBUTES.frame).forEach(fetchFastAttrResolver);\n\tObject.entries(UI_ATTRIBUTES.prop).forEach(fetchFastAttrResolver);\n\treturn obj;\n})();\n","import NumberUtils from \"../Utils/NumberUtils\";\nimport ObjUtils from \"../Utils/ObjUtils\";\nimport TextUtils from \"../Utils/TextUtils\";\nimport { Utils } from \"../Utils/Utils\";\nimport { UI_ATTRIBUTES, COLOR_ATTRIBUTES, FAST_ATTR_RESOLVER } from \"./UIAttributes\";\nexport default class UITransform {\n    //#region Transformaciones para el UI PWA\n    static getLayout(Source, parent, visibility) {\n        let result = { attributes: this.getPropAttributes(Source, parent) };\n        if (parent.hasChildNodes()) {\n            let type = Object.prototype.hasOwnProperty.call(UI_ATTRIBUTES, parent.getName()) ? \"controls\" : \"others\";\n            result[type] = [];\n            parent\n                .getChildren()\n                .forEach((element) => (!element.getName().equalsIgnoreCase(Utils.PROP_NAME) ||\n                (NumberUtils.SafeToInt(Source.NodePropertyValue(Utils.PROP_NAME, element.getAttrValue(Utils.PROP_ATTR_NAME), Utils.PROP_ATTR_VISIBLE), 1) &\n                    visibility) >\n                    0) &&\n                result[type].push(this.getLayout(Source, element, visibility)));\n        }\n        return result;\n    }\n    static async getLayoutAsync(Source, parent, visibility) {\n        let result = { attributes: this.getPropAttributes(Source, parent) };\n        if (parent.hasChildNodes()) {\n            let type = Object.prototype.hasOwnProperty.call(UI_ATTRIBUTES, parent.getName()) ? \"controls\" : \"others\";\n            result[type] = [];\n            for (const element of parent.getChildren()) {\n                (!element.getName().equalsIgnoreCase(Utils.PROP_NAME) ||\n                    (NumberUtils.SafeToInt(Source.NodePropertyValue(Utils.PROP_NAME, element.getAttrValue(Utils.PROP_ATTR_NAME), Utils.PROP_ATTR_VISIBLE), 1) &\n                        visibility) >\n                        0) &&\n                    result[type].push(this.getLayout(Source, element, visibility));\n                await new Promise((resolve) => setTimeout(() => resolve(), 1));\n            }\n        }\n        return result;\n    }\n    static getPropAttributes(Source, Value, type = Utils.PROP_NAME) {\n        let node;\n        let PropName;\n        if (typeof Value == \"string\") {\n            node = Source.getNode(type, Utils.PROP_ATTR_NAME, Value);\n            PropName = Value;\n        }\n        else {\n            node = Value;\n            PropName = node.getAttrValue(Utils.PROP_ATTR_NAME);\n            type = node.getName();\n        }\n        let isPropNode = type.equalsIgnoreCase(Utils.PROP_NAME);\n        if (ObjUtils.IsNothing(node))\n            return {};\n        let result = { node: type };\n        for (const key in UI_ATTRIBUTES[type]) {\n            if (Object.prototype.hasOwnProperty.call(UI_ATTRIBUTES[type], key)) {\n                const element = UI_ATTRIBUTES[type][key];\n                try {\n                    const AttrValue = this.developValue(Source, isPropNode, type, PropName, element); //\n                    if (!TextUtils.isEmpty(AttrValue)) {\n                        result[key] = this.normailzeWebAttribute(key, AttrValue);\n                    }\n                }\n                catch (e) {\n                    console.error(e);\n                }\n            }\n        }\n        return result;\n    }\n    static developValue(Source, isPropNode, PropType, PropName, element) {\n        if (typeof element == \"string\")\n            return this.getValue(Source, isPropNode, PropType, PropName, element);\n        let retDefault = this.evaluateMacro(Source, \"default\" in element ? element[\"default\"] : \"\");\n        let retValue = \"\";\n        if (\"value\" in element) {\n            if (Array.isArray(element[\"value\"])) {\n                retValue = this.getArrayValue(Source, isPropNode, PropType, PropName, element[\"value\"]);\n            }\n            else {\n                retValue = this.getValue(Source, isPropNode, PropType, PropName, element[\"value\"]);\n            }\n        }\n        return TextUtils.isEmpty(retValue) ? retDefault : retValue;\n    }\n    static getArrayValue(Source, isPropNode, PropType, PropName, element) {\n        let retValue = \"\";\n        for (let i = 0; i < element.length && TextUtils.isEmpty((retValue = this.getValue(Source, isPropNode, PropType, PropName, element[i]))); i++) {\n            // if (!TextUtils.isEmpty(retValue=this.getValue(Source,node,PropType,PropName,element[i])))\n            //   break;\n        }\n        return retValue;\n    }\n    static getValue(Source, isPropNode, PropType, PropName, AttrName) {\n        return isPropNode ? Source.FieldPropertyValue(PropName, AttrName) : Source.NodePropertyValue(PropType, PropName, AttrName);\n    }\n    static normalizeWebColor(value) {\n        if (!value.startsWith(\"##\") && value.startsWith(\"#\") && value.length > 7) {\n            return \"#\" + value.substr(value.length - 6, 6) + value.substr(1, value.length - 7).padStart(2, \"0\");\n        }\n        return value;\n    }\n    static normailzeWebAttribute(AttrName, value) {\n        if (COLOR_ATTRIBUTES.indexOf(AttrName) >= 0) {\n            return this.normalizeWebColor(value);\n        }\n        return value;\n    }\n    static evaluateMacro(Source, macro) {\n        if (!macro.startsWith(\"##\"))\n            return macro;\n        if (macro.equals(\"##COMPANYCOLOR##\"))\n            return Source.getOwnerApp().getAppNode().attrs.companycolor || Utils.DEFAULT_BGCOLOR;\n        if (macro.equals(\"##COMPANYFORECOLOR##\"))\n            return Source.getOwnerApp().getAppNode().attrs.forecolor || Utils.DEFAULT_FORECOLOR;\n        return macro;\n    }\n    //#endregion\n    //#region FieldPropertyValue\n    static resolvedAttrName(AttrName) {\n        if (FAST_ATTR_RESOLVER.hasOwnProperty(AttrName))\n            return FAST_ATTR_RESOLVER[AttrName];\n        return AttrName;\n    }\n    static setLayoutFieldPropertyValue(value, node, name, attrXoneName, attrValue) {\n        const attrs = value === null || value === void 0 ? void 0 : value.attributes;\n        const attrName = UITransform.resolvedAttrName(attrXoneName);\n        if (attrs && attrs.node == node && attrs.name == name) {\n            if (attrs.hasOwnProperty(attrName))\n                attrs[attrName] = attrValue;\n            else {\n                // TODO: Luis esto ver con alejandro como se agrega una nueva\n                attrs[attrName] = attrValue;\n            }\n            return true;\n        }\n        else if ((value === null || value === void 0 ? void 0 : value.controls) && Array.isArray(value.controls)) {\n            for (let index = 0; index < value.controls.length; index++) {\n                if (UITransform.setLayoutFieldPropertyValue(value.controls[index], node, name, attrXoneName, attrValue))\n                    return true;\n            }\n        }\n        return false;\n    }\n}\nUITransform.m_fastResolver = {};\n\n//# sourceMappingURL=UITransform.js.map\n","import IllegalArgumentException from \"../Exceptions/IllegalArgumentException\";\nimport TextUtils from \"./TextUtils\";\nexport class Utils {\n    static isDebuggable(m_context) {\n        return false;\n    }\n    static DebugLog(tag, text) {\n    }\n    static formatKey(nodeName, defaultAttr, defaultAttrValue) {\n        return \"##\" + nodeName + \"##\" + defaultAttr + \"##\" + defaultAttrValue + \"##\";\n    }\n    static CheckNullParameters(sFunctionName, ...FunctionParams) {\n        if (FunctionParams == null) {\n            throw new IllegalArgumentException(\"Error de ejecución. Faltan parámetros para '\" + sFunctionName + \"'\");\n        }\n    }\n    static CheckIncorrectParamCount(sFunctionName, FunctionParams, nExpectedCount) {\n        if (FunctionParams == null) {\n            if (nExpectedCount == 0) {\n                return;\n            }\n            throw new IllegalArgumentException(\"Error de ejecución. Número incorrecto de parámetros para '\" + sFunctionName + \"'\");\n        }\n        if (FunctionParams.length != nExpectedCount) {\n            throw new IllegalArgumentException(\"Error de ejecución. Número incorrecto de parámetros para '\" + sFunctionName + \"'\");\n        }\n    }\n    static CheckIncorrectParamRange(sFunctionName, FunctionParams, nMinimumParameterCount, nMaximumParameterCount) {\n        if (FunctionParams == null) {\n            if (nMinimumParameterCount == 0) {\n                return;\n            }\n            throw new IllegalArgumentException(\"Error de ejecución. Número incorrecto de parámetros para '\" + sFunctionName + \"'\");\n        }\n        if (FunctionParams.length < nMinimumParameterCount) {\n            throw new IllegalArgumentException(\"Error de ejecución. Número incorrecto de parámetros para '\" + sFunctionName + \"'\");\n        }\n        if (FunctionParams.length > nMaximumParameterCount && nMaximumParameterCount != -1) {\n            throw new IllegalArgumentException(\"Error de ejecución. Número incorrecto de parámetros para '\" + sFunctionName + \"'\");\n        }\n    }\n    static setLastAppExecutedField(m_context, sUserName, arg2) {\n        // TODO: Luis buscar un mecanismo para persistir datos en el navegador\n    }\n    static getThrowableMessage(t) {\n        if (t == null) {\n            return Utils.EMPTY_STRING;\n        }\n        let sExceptionMessage = t.getClass().getSimpleName();\n        let sMessage = t.getMessage();\n        if (!TextUtils.isEmpty(sMessage)) {\n            sExceptionMessage = sExceptionMessage + \"(): \" + sMessage;\n        }\n        return sExceptionMessage;\n    }\n}\nUtils.DEFAULT_BGCOLOR = \"#FFB22C1B\";\nUtils.DEFAULT_FORECOLOR = \"#FF000000\";\nUtils.FAIL_EXITAPP = \"##EXITAPP##\";\nUtils.FAIL_EXIT = \"##EXIT##\";\nUtils.FAIL_LOGIN = \"##LOGIN_START##\";\nUtils.MACRO_LOGIN_START = Utils.FAIL_LOGIN;\nUtils.MACRO_LOGIN_USERCOLL = \"##LOGIN_USERCOLL##\";\nUtils.MACRO_LOGIN_NEWUSER = \"##LOGIN_NEWUSER##\";\nUtils.MACRO_LOGIN_NEWPASS = \"##LOGIN_NEWPASS##\";\nUtils.MACRO_LOGIN_COLL_OBJECT_INDEX = \"##LOGIN_COLL_OBJECT_INDEX##\";\nUtils.MACRO_STARTREPLICA = \"##STARTREPLICA##\";\nUtils.TAG_DATABASE_LOG = \"XOneDatabase\";\nUtils.PROP_ATTR_EMBED = \"embed\";\n// Valores por defecto\nUtils.PROP_DEFAULT_FIELDSIZE = 14;\nUtils.PROP_DEFAULT_LABELWIDTH = 10;\nUtils.PROP_DEFAULT_CONTENTLINES = 10;\nUtils.TRUE_VALUE = \"true\";\nUtils.FALSE_VALUE = \"false\";\nUtils.DEFAUT_FILES_PATH = \"files/\";\nUtils.DATE_SEPARATOR = \"/\";\nUtils.HOUR_SEPARATOR = \":\";\nUtils.DANISH_HOUR_SEPARATOR = \"\\\\.\";\n// Valores para los lastexcuted app\nUtils.LAST_EXECUTED_APP_FILE_NAME = \"lastexecuted.ini\";\nUtils.LAST_EXECUTED_APP_FIELD_NAME = \"appname\";\nUtils.LAST_EXECUTED_USER_FIELD_NAME = \"user\";\nUtils.LICENSE_FIELD_NAME = \"License\";\nUtils.SERVER_FIELD_NAME = \"ServerADDR\";\nUtils.TAG_FRAMEWORK = \"XOneFramewrok\";\nUtils.TAG_MAPPINGFILE = \"mappings\";\nUtils.TAG_APPNODE = \"app.xml\";\nUtils.EMPTY_STRING = \"\";\nUtils.PROP_NAME = \"prop\";\nUtils.PROP_ATTR_FRAME = \"frame\";\nUtils.PROP_ATTR_CONTENTNAME = \"contents\";\nUtils.PROP_ATTR_GROUP = \"group\";\nUtils.PROP_ATTR_NAME = \"name\";\nUtils.PROP_ATTR_VISIBLE = \"visible\";\nUtils.PROP_ATTR_TITLE = \"title\";\nUtils.PROP_ATTR_INDEX = \"index\";\nUtils.PROP_ATTR_TYPE = \"type\";\n// Mascaras de bits\nUtils.MASK_EDIT_VISIBLE = 1;\nUtils.MASK_LIST_VISIBLE = 2;\nUtils.MASK_CONTENT_VISIBLE = 4;\nUtils.MASK_DROPDOWN_VISIBLE = 8;\n// Macros\nUtils.MACRO_DEFAULT = \"##DEFAULT##\";\nUtils.MACRO_TAG = \"##\";\n// Cadenas de la colección\nUtils.COLL_COLLPROPS = \"collprops\";\nUtils.COLL_COLL = \"coll\";\nUtils.COLL_LOGIN_COLL = \"login-coll\";\nUtils.COLL_LOGOFF_COLL = \"logoff-coll\";\nUtils.PLATFORM_NAME = \"platform\";\n\n//# sourceMappingURL=Utils.js.map\n","import \"../Extensions/Extensions\";\nimport { XoneDataCollection } from \"./XoneDataCollection\";\nimport Hashtable from \"../Collections/HashMap/Hashtable\";\nimport TextUtils from \"../Utils/TextUtils\";\nimport { Utils } from \"../Utils/Utils\";\nimport XoneMessageHolder from \"./Localization/XoneMessageHolder\";\nimport XoneConnectionData from \"../Connection/XoneConnectionData\";\nimport ObjectDeveloper from \"../Utils/ObjectDeveloper\";\nimport StringBuilder from \"../Utils/StringBuilder\";\nimport StringUtils from \"../Utils/StringUtils\";\n//import DotNetJSONDocument from \"../Xml/JSONImpl/DotNetJSONDocument\";\nimport ConnectionStringUtils from \"../Utils/ConnectionStringUtils\";\nimport IllegalArgumentException from \"../Exceptions/IllegalArgumentException\";\nimport { Exception } from \"../Exceptions/Exception\";\nimport IllegalStateException from \"../Exceptions/IllegalStateException\";\nimport XmlUtils from \"../Utils/XmlUtils\";\nimport XOneJavascript from \"../XoneScripts/XOneJavascript\";\nimport ScriptContext from \"../XoneScripts/ScriptContext\";\nimport { XoneMessageKeys } from \"../Exceptions/XoneMessageKeys\";\nimport XoneGenericException from \"../Exceptions/XoneGenericException\";\nimport NullPointerException from \"../Exceptions/NullPointerException\";\nimport XoneCssParser from \"./CSS/XoneCssParser\";\nimport XmlDocument from \"../Xml/JSONImpl/XmlDocument\";\nimport NumberUtils from \"../Utils/NumberUtils\";\nimport FileLoaderNodeJS from \"../Manager/FileLoaderNodeJS\";\nimport FileLoaderBrowser from \"../Manager/FileLoaderBrowser\";\nimport { XoneError } from \"./XoneError\";\nimport XoneWebCoreConnectionData from \"../Connection/WebCore/XoneWebCoreConnectionData\";\n\nexport class XoneApplication {\n\t/**\n\t *\n\t */\n\tconstructor() {\n\t\tthis.m_lstCollections = new Hashtable();\n\t\tthis.m_lstCollPropValueCaches = new Hashtable();\n\t\t/**\n\t\t * K12050901: Permitir activar o desactivar las caches de valores de atributos.\n\t\t */\n\t\tthis.m_bCacheAttrValues = true; // TRUE si se cachean los atributos...\n\t\tthis.exports = {};\n\t\tUtils.DebugLog(Utils.TAG_FRAMEWORK, \"A new AppData is being instantiated.\");\n\t\tthis.m_strPlatform = \"web\";\n\t\t// En principio sería el que se pase desde fuera... si no viene ninguno seremos nosotros\n\t\tthis._objectID = Symbol(\"XoneApplication\");\n\t\t// if (null ==(m_loader =FileLoader))\n\t\t// \tm_loader =this;\n\t\t// m_context=context;\n\t\t// A13080702: Adicionar el PushValueAndExit de la mollejada para propagar a los demás.\n\t\tthis.m_PushExit = false;\n\t\t// A11081001: Implementación de CreateObject y su infraestructura para crear objetos en scripts.\n\t\t// m_factory =Factory;\n\t\t// Y ahora inicializar el resto de variables.\n\t\t// Por defecto donde está la DLL...\n\t\t//////m_strAppPath = Path.GetDirectoryName(Assembly.GetExecutingAssembly().CodeBase).Replace(\"file:\\\\\", \"\");\n\t\tthis.m_strAppName = \"XOne Android  Application\";\n\t\t// La lista de conexiones\n\t\tthis.m_lstConnections = new Hashtable();\n\t\t// Por defecto tenemos todas las colecciones de la aplicación\n\t\t//////m_strCollectionFilter = \"//mp:collprops/mp:coll\";\n\t\t// Crear la lista de colecciones\n\t\tthis.m_lstCollections = new Hashtable();\n\t\t// Crear la lista de nombres de colecciones de sistema\n\t\tthis.m_lstSysCollNames = new Hashtable();\n\t\t// Crear la lista de caches de cualificación de campos\n\t\tthis.m_lstQualifyCaches = new Hashtable();\n\t\t// Crear el desarrollador de objetos\n\t\tthis.m_objectDeveloper = new ObjectDeveloper();\n\t\t// Datemask por defecto\n\t\t// TODO SACAR EL DATEMASK DEL DISPOSITIVO O COGER UNO POR DEFECTO\n\t\t//////m_strDatemask = CultureInfo.CurrentCulture.DateTimeFormat.ShortDatePattern.ToLower();\n\t\t// Inicializa la consola con una cadena vacía\n\t\t// O11042501: Utilizar un StringBuilder para la consola de AppData.\n\t\t// En realidad usamos un string builder vacío.\n\t\tthis.m_strConsole = new StringBuilder();\n\t\t// Inicializa el stack de parámetros pra PushValue y PopValue\n\t\tthis.m_lstParamStack = new Array();\n\t\t// TODO COGER EL DATEMASK DEL SISTEMA\n\t\t//////m_strSysDatemask = StringUtils.NormalizeDateMask(CultureInfo.CurrentCulture.DateTimeFormat.ShortDatePattern);\n\t\t// Crear el error para mantener la compatibilidad con versiones anteriores\n\t\t//m_error = new ThreadLocal<>();\n\t\t//m_currentContext = new ThreadLocal<>();\n\t\t//\n\t\t// Implementación de la maquinaria de scripting\n\t\t// Objetos propios usados para que esta clase se comporte como un scripting host.\n\t\t//m_classTypeInfoList = new Hashtable<>();\n\t\t// M11011001:\tIncluir macros globales y evaluación de dichas macros para IMEI y demás.\n\t\t// Macros globales para sustituir en los SQLs y demás\n\t\tthis.m_lstGlobalMacros = new Hashtable();\n\t\t// A10051901:   Componentes de depuración y modificación de maquinaria XOne para depurar.\n\t\t// Inicializar el puerto de depuración con un valor por defecto.\n\t\tthis.m_nDebugPort = 7797;\n\t\t// Por defecto la maquinaria se estará ejecutando, claro.\n\t\t// m_smState =new Semaphore(1);\n\t\t// K12060701: Modificaciones para permitir multithreading en los scripts y depuración.\n\t\t// Ahora esto es a nivel de threads\n\t\t//////m_state = EngineDebugState.Running;\n\t\tthis.m_dbgLocker = new Object(); // Esto lo vamos a usar para sincronizar los threads.\n\t\t// m_lstDebugContexts = new ArrayList<>();\n\t\t// m_debugCtx = new ThreadLocal<>();\n\t\t// m_debugCtx.set(new CXoneDebugContext(CXoneDebugContext.MAIN_THREAD_NAME));\n\t\t// getDebugContext().setState(EngineDebugState.Running);\n\t\t// m_lstDebugContexts.add(getDebugContext());\n\t\t// // Crea la lista con las definiciones de puntos de ruptura.\n\t\t// m_lstBreakpointLists = new ArrayList<>();\n\t\t// // F11051803: Modificaciones para solucionar problemas de depuración en la maquinaria.\n\t\t// // Con dos cojines.. inicializamos a cero...\n\t\t// m_aiScriptDepth =new AtomicInteger(0);\n\t\t// ////m_aiScriptDepth.set(0);\n\t\t// // M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n\t\tthis.m_messages = new XoneMessageHolder(\"EN\");\n\t\t// A11070701: Introducción de los CSS en la maquinaria para poder parametrizar el mappings.\n\t\t// Crear la lista de CSS y demás cositas necesarias para que funcione.\n\t\tthis.m_lstCssList = new Array();\n\t\tthis.m_lstCollPropUndefinedValues = new Hashtable();\n\t\t// M11072901: Modificaciones al mecanismo de CSS para adaptarse a condiciones visuales.\n\t\t// Lista para almacenar las hojas por condiciones de ejecución.\n\t\tthis.m_lstConditionCssList = new Hashtable();\n\t\tthis.m_strFixedVisualCondition = this.m_strVisualConditions = \"\";\n\t\t// M11111701: Protección de colecciones abiertas por error en scripts.\n\t\tthis.m_lstOpenColls = new Array();\n\t\t// Para ala compatibilidad con las otras plataformas\n\t\tthis.bIsCharWidthCompatibility = false;\n\t\tthis.bIsImageValuePriorized = false;\n\t\t// O13030601: Optimizaciones en la búsqueda de CSS para atributos.\n\t\t// Crear la lista de condiciones visuales parseadas\n\t\tthis.m_lstVisualCondDescriptors = new Hashtable();\n\t\t// O13061901: Cachear los scripts que no están en ficheros include.\n\t\t// Lista de scripts parseados que no son includes\n\t\tthis.m_lstCachedScripts = new Hashtable();\n\t\t// A13080701: Permitir objetos globales de script adicionados desde fuera.\n\t\tthis.m_globalItems = new Hashtable();\n\t\t// TODO ADD TAG\n\t\t// Por defecto mantenemos esta banderilla a true porque asumimos que la va a usar\n\t\t// un framework que la necesita. Se puede poner a false a nivel de aplicación.\n\t\tthis.m_bLoadLayouts = true;\n\t\t//this.m_lstRunningThreads.clear();\n\t\tthis.m_nOperIdLength = 150;\n\t\tthis.m_nRowIdLength = 100;\n\t\tthis.m_lstCollExceptions = XoneApplication.getCollExceptions();\n\t\tthis.m_lstPropExceptions = XoneApplication.getPropExceptions();\n\t\tthis.m_error = new Array();\n\t\tthis.m_isBrowser = !(typeof global !== \"undefined\" && {}.toString.call(global) == \"[object global]\");\n\t\tif (this.isBrowser) {\n\t\t\tthis.m_loader = new FileLoaderBrowser();\n\t\t} else {\n\t\t\tthis.m_loader = new FileLoaderNodeJS();\n\t\t}\n\t\t// if (this.m_isBrowser)\n\t\t//     Object.defineProperty(window,\"appData\", {\n\t\t//         value:this\n\t\t//     });\n\t\t// else\n\t\t//     Object.defineProperty(global,\"appData\", {\n\t\t//         value:this\n\t\t//     });\n\t}\n\t// Solo para identificar que una instancia es la aplicacion\n\tget isApplication() {\n\t\treturn true;\n\t}\n\tstatic getCollExceptions() {\n\t\treturn Array.from([\"connection\", \"objname\", \"updateobj\", \"progid\", \"stringkey\", \"loadall\", \"withopen\", \"idfieldname\", \"useextdata\"]);\n\t}\n\tstatic getPropExceptions() {\n\t\treturn Array.from([\"mapcol\", \"mapfld\", \"bit\", \"formula\", \"name\", \"group\", \"frame\", \"type\", \"linkedto\", \"linkedfield\"]);\n\t}\n\tgetSysDatemask() {\n\t\treturn \"ymd\";\n\t}\n\tisDebugMode() {\n\t\treturn false;\n\t}\n\taddEvaluatedAttributesList(sCollectionName, sKey) {\n\t\tif (this.m_lstEvaluatedAttributes == null) {\n\t\t\tthis.m_lstEvaluatedAttributes = new Hashtable();\n\t\t}\n\t\tif (!this.m_lstEvaluatedAttributes.containsKey(sCollectionName)) {\n\t\t\tthis.m_lstEvaluatedAttributes.put(sCollectionName, new Array());\n\t\t}\n\t\tthis.m_lstEvaluatedAttributes.get(sCollectionName).push(sKey);\n\t}\n\tGetWeekDayName(n) {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tcurrentContext() {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tget isBrowser() {\n\t\treturn this.m_isBrowser;\n\t}\n\t// M11111701: Protección de colecciones abiertas por error en scripts.\n\t// Una nueva colección abierta\n\tAddOpenColl(Collection) {\n\t\tif (!this.m_lstOpenColls.contains(Collection)) this.m_lstOpenColls.push(Collection);\n\t}\n\t// M11111701: Protección de colecciones abiertas por error en scripts.\n\t// Elimina la colección de la lista de colecciones abiertas\n\tRemoveOpenColl(Collection) {\n\t\tif (this.m_lstOpenColls.contains(Collection)) this.m_lstOpenColls.remove(Collection);\n\t}\n\t// public RunScript(strFunctionName: any, strLang: string, strScript: string, ctx: ScriptContext,...Arguments): any {\n\t//     __SCRIPT_WRAPPER(this,this.m_ui,ctx.getObjectHost(),strScript, Arguments);\n\t//     // Object.defineProperties(global, {\n\t//     //     \"self\" : {\n\t//     //         value : ctx.getObjectHost(),\n\t//     //         writable : false,\n\t//     //         enumerable : false,\n\t//     //         configurable : true\n\t//     //     },\n\t//     //     \"selfColl\" : {\n\t//     //         value : ctx.getCollectionHost(),\n\t//     //         writable : false,\n\t//     //         enumerable : false,\n\t//     //         configurable : true\n\t//     //     }\n\t//     // });\n\t//     // require(\"../Code/LoginColl.js\");\n\t//     // // let obj=Object.setPrototypeOf(this.exports.LoginColl_JSWRAPPER,this.exports.__XONE_ISOLATE);\n\t//     // // let b=Object.create(obj);\n\t//     // this.__extends(this.exports.LoginColl_JSWRAPPER,this.exports.__XONE_ISOLATE);\n\t//     // let execContext=new this.exports.__XONE_ISOLATE(ctx.getObjectHost());\n\t//     // let a=execContext.calcular();\n\t//     // this.exports[\"LoginColl_JSWRAPPER\"][\"create\"].call(ctx.getObjectHost());\n\t// }\n\tasync RunScriptAsyncNOFunc(strFunctionName, strLang, strScript, ctx, ...Arguments) {\n\t\t// let f=require(\"../xone/source/scripts/__LoginColl__.js\");\n\t\t// let g=require(\"../xone/source/scripts/__SCRIPT_WRAPPER__.js\");\n\t\t// f={...f,...g};\n\t\t// var c=new f.__SCRIPT_WRAPPERASYNC(this, this.m_ui, ctx.getObjectHost(), \"LoginColl_create_1\", Arguments);\n\t\t// f[\"LoginColl_create_1\"]();\n\t\tlet s = \"(async () => {\\n\" + strScript + \"\\n})()\";\n\t\tconsole.log(\"FunctionCall: \", strFunctionName);\n\t\tconsole.log(\"Script: \", s);\n\t\tawait this.__SCRIPT_WRAPPERASYNC(this, this.getUser(), this.m_ui, ctx.getObjectHost(), ctx.getCollectionHost(), s, Arguments);\n\t\treturn true;\n\t\t// Object.defineProperties(global, {\n\t\t//     \"self\" : {\n\t\t//         value : ctx.getObjectHost(),\n\t\t//         writable : false,\n\t\t//         enumerable : false,\n\t\t//         configurable : true\n\t\t//     },\n\t\t//     \"selfColl\" : {\n\t\t//         value : ctx.getCollectionHost(),\n\t\t//         writable : false,\n\t\t//         enumerable : false,\n\t\t//         configurable : true\n\t\t//     }\n\t\t// });\n\t\t// require(\"../Code/LoginColl.js\");\n\t\t// // let obj=Object.setPrototypeOf(this.exports.LoginColl_JSWRAPPER,this.exports.__XONE_ISOLATE);\n\t\t// // let b=Object.create(obj);\n\t\t// this.__extends(this.exports.LoginColl_JSWRAPPER,this.exports.__XONE_ISOLATE);\n\t\t// let execContext=new this.exports.__XONE_ISOLATE(ctx.getObjectHost());\n\t\t// let a=execContext.calcular();\n\t\t// this.exports[\"LoginColl_JSWRAPPER\"][\"create\"].call(ctx.getObjectHost());\n\t}\n\tasync RunScriptAsync(strFunctionName, strLang, strScript, ctx, Arguments, argsName, argsValue) {\n\t\t// let f=require(\"../xone/source/scripts/__LoginColl__.js\");\n\t\t// let g=require(\"../xone/source/scripts/__SCRIPT_WRAPPER__.js\");\n\t\t// f={...f,...g};\n\t\t// var c=new f.__SCRIPT_WRAPPERASYNC(this, this.m_ui, ctx.getObjectHost(), \"LoginColl_create_1\", Arguments);\n\t\t// f[\"LoginColl_create_1\"]();\n\t\tlet s = \"(async () => {\\n\" + strScript + \"\\n})()\";\n\t\tconsole.log(\"FunctionCall: \", strFunctionName);\n\t\tconsole.log(\"Script: \", s);\n\t\tawait this.__SCRIPT_WRAPPERASYNC(this, this.m_ui, ctx.getObjectHost(), ctx.getCollectionHost(), this.getUser(), strScript, argsValue);\n\t\treturn true;\n\t\t// Object.defineProperties(global, {\n\t\t//     \"self\" : {\n\t\t//         value : ctx.getObjectHost(),\n\t\t//         writable : false,\n\t\t//         enumerable : false,\n\t\t//         configurable : true\n\t\t//     },\n\t\t//     \"selfColl\" : {\n\t\t//         value : ctx.getCollectionHost(),\n\t\t//         writable : false,\n\t\t//         enumerable : false,\n\t\t//         configurable : true\n\t\t//     }\n\t\t// });\n\t\t// require(\"../Code/LoginColl.js\");\n\t\t// // let obj=Object.setPrototypeOf(this.exports.LoginColl_JSWRAPPER,this.exports.__XONE_ISOLATE);\n\t\t// // let b=Object.create(obj);\n\t\t// this.__extends(this.exports.LoginColl_JSWRAPPER,this.exports.__XONE_ISOLATE);\n\t\t// let execContext=new this.exports.__XONE_ISOLATE(ctx.getObjectHost());\n\t\t// let a=execContext.calcular();\n\t\t// this.exports[\"LoginColl_JSWRAPPER\"][\"create\"].call(ctx.getObjectHost());\n\t}\n\t__extendStatics(d, b) {\n\t\treturn (\n\t\t\tObject.setPrototypeOf ||\n\t\t\t({ __proto__: [] } instanceof Array &&\n\t\t\t\tfunction (d, b) {\n\t\t\t\t\td.__proto__ = b;\n\t\t\t\t}) ||\n\t\t\tfunction (d, b) {\n\t\t\t\tfor (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t\t\t}\n\t\t);\n\t}\n\t__extends(d, b) {\n\t\tObject.setPrototypeOf(d, b);\n\t\t// function __() { this.constructor = d; }\n\t\t// d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t}\n\t// let __extends = (this && this.__extends) || (function () {\n\t//     var extendStatics = function (d, b) {\n\t//         extendStatics = Object.setPrototypeOf ||\n\t//             ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n\t//             function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n\t//         return extendStatics(d, b);\n\t//     };\n\t//     return function (d, b) {\n\t//         extendStatics(d, b);\n\t//         function __() { this.constructor = d; }\n\t//         d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t//     };\n\t// })();\n\tgetDefaultLanguage() {\n\t\treturn \"javascript\";\n\t}\n\tgetPlatform() {\n\t\treturn this.m_strPlatform;\n\t}\n\tGetClassName(strProgId) {\n\t\treturn strProgId;\n\t}\n\tCheckClassName(strClassName) {\n\t\treturn strClassName;\n\t}\n\tgetIdColl() {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\tgetCurrentCompany() {\n\t\treturn this.getCurrentEnterprise();\n\t}\n\tgetUserIdColl() {\n\t\treturn this.m_strUserIdColl;\n\t}\n\tgetUser() {\n\t\treturn this.m_user;\n\t}\n\tgetCurrency() {\n\t\treturn this.m_currency;\n\t}\n\tgetEntIdLevel() {\n\t\treturn this.m_strEntIdLevel;\n\t}\n\tgetEntIdColl() {\n\t\treturn this.m_strEntIdColl;\n\t}\n\tgetEntIdOwner() {\n\t\treturn this.m_strEntIdOwner;\n\t}\n\tgetUserInterface() {\n\t\t// Devolver el UI\n\t\treturn this.m_ui;\n\t}\n\t/**\n\t * Asigna valor al objeto que se usará para gestionar el UI de la aplicación.\n\t * @param value\t\tNuevo objeto de UI de la aplicación.\n\t * @throws XoneGenericException\n\t */\n\tsetUserInterface(value) {\n\t\tthis.m_ui = value;\n\t}\n\t/**\n\t * Adiciona una conexión de datos a la lista interna de conexiones\n\t * @param Connection\t\t\tConexión que se quiere adicionar a la lista.\n\t * @return\t\t\t\t\t\tTRUE si la conexión se ha añadido correctamente.\n\t */\n\tAddConnection(Connection) {\n\t\t// Adicionar la conexión a la lista\n\t\t// F10080902: Cuando se adiciona una conexión, verificar si es nula.\n\t\t// Aquí habrá que comprobar si es nula, claro\n\t\tif (Connection != null) this.m_lstConnections.put(Connection.getName(), Connection);\n\t\treturn true;\n\t}\n\t/**\n\t * Crea una conexión de datos. Las conexiones pueden ser de base de datos, remotas, etc.\n\t * @param NodeData\t\t\t\tNodo XML para construir la conexión, la cual saca de aquí sus datos. Si se pasa NULL se crea una conexión principal.\n\t * @return\t\t\t\t\t\tDevuelve la nueva conexión recién creada o NULL si algo falla.\n\t */\n\tCreateConnection(NodeData) {\n\t\tlet strName = null;\n\t\tlet cn = null;\n\t\t//\n\t\t// Si no viene nodo, estamos creando la central\n\t\tif (NodeData != null) strName = NodeData.getAttrValue(Utils.PROP_ATTR_NAME);\n\t\tif (StringUtils.IsEmptyString(strName)) strName = XoneConnectionData.MAIN_CONNECTION;\n\t\t// Buscar qué conexión es la que tenemos que crear, para ello posiblemente haya\n\t\t// que parsear la cadena de conexión para sacar las características de la conexión\n\t\tif (NodeData == null) {\n\t\t\tcn = new XoneWebCoreConnectionData(this.m_context, strName, this); // TODO: Esto es el real XoneDbConnectionData(m_context, strName, this);\n\t\t\t/*\n\t\t\t * TODO ADD TAG 04/05/2015 Juan Carlos:\n\t\t\t * Aplicando estos nuevos atributos del license.ini.\n\t\t\t */\n\t\t\tif (strName.localeCompare(XoneConnectionData.MAIN_CONNECTION) == 0) {\n\t\t\t\tcn.setOperIdLength(this.m_nOperIdLength);\n\t\t\t\tcn.setRowIdLength(this.m_nRowIdLength);\n\t\t\t}\n\t\t} else {\n\t\t\t// Tenemos que averiguar qué tipo de conexión es\n\t\t\t// A11022301:\tFunciones, clases y demás necesarias para trabajar con conexiones remotas.\n\t\t\t// Analizar la cadena de conexión.\n\t\t\tconst strConnString = NodeData.getAttrValue(\"connstring\");\n\t\t\t//Juan Carlos. Errores en el parseo de la cadena de conexión. Lo cambio.\n\t\t\tconst parsedConnectionString = ConnectionStringUtils.parseConnectionString(strConnString);\n\t\t\tlet strProvider = parsedConnectionString.get(\"provider\");\n\t\t\tif (!TextUtils.isEmpty(strProvider)) {\n\t\t\t\tif (strProvider.compareToIgnoreCase(\"cgsoft remote provider\") == 0 || strProvider.compareToIgnoreCase(\"xone remote provider\") == 0) {\n\t\t\t\t\tlet strProgID = parsedConnectionString.get(\"progid\");\n\t\t\t\t\tif (strProgID.compareToIgnoreCase(\"CGSSocketCE.ConnectCE\") == 0) {\n\t\t\t\t\t\tlet GPSConnectionData = require(\"../Connection/GPSConnection/XoneGPSConnectionData\");\n\t\t\t\t\t\tcn = new GPSConnectionData.default(this.m_context, strName, this);\n\t\t\t\t\t} else if (strProgID.compareToIgnoreCase(\"CGSRSS.CProxy\") == 0) {\n\t\t\t\t\t\t//cn = new CXoneRSSConnectionData(strName, this,this.m_context);\n\t\t\t\t\t} else if (strProgID.compareToIgnoreCase(\"CGSProxy.CProxy\") == 0) {\n\t\t\t\t\t\t//cn = new CXoneRemoteConnectionData(strName, this);\n\t\t\t\t\t} else if (strProgID.indexOf(\"JSONConnection\") >= 0) {\n\t\t\t\t\t\tlet JSONConnectionData = require(\"../Connection/JSONConnection/XoneJSONConnectionData\");\n\t\t\t\t\t\tcn = new JSONConnectionData.default(this.m_context, strName, this);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//cn = new CXoneReflectionConnectionData(strProgID,strName, this, this.m_context);\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (cn != null && this.m_user != null) {\n\t\t\t\t\t\t\t\tcn.addExtendedProperty(\"xoneuser\", this.m_user.GetRawStringField(\"LOGIN\"));\n\t\t\t\t\t\t\t\tcn.addExtendedProperty(\"xonepass\", this.m_user.GetRawStringField(\"PWD\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\t\tex.printStackTrace();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (cn == null) {\n\t\t\t\t\tcn = new XoneWebCoreConnectionData(this.m_context, strName, this); // TODO: Esto es el real new CXoneRemoteConnectionData (strName, this);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// 12/01/2018 Juan Carlos\n\t\t\t// Alguien se olvidó de leer y asignar el atributo datemask del <connection>.\n\t\t\tif (cn != null) {\n\t\t\t\tconst sDateMask = NodeData.getAttrValue(\"datemask\");\n\t\t\t\tif (!TextUtils.isEmpty(sDateMask)) {\n\t\t\t\t\tcn.setDatemask(sDateMask);\n\t\t\t\t}\n\t\t\t\t// Tag 23041801 Luis Para poder agregar en la conexion a traves de atributos el rowidfieldname y el sqlfieldname\n\t\t\t\tconst sRowidFieldName = NodeData.getAttrValue(\"rowidfieldname\");\n\t\t\t\tif (!TextUtils.isEmpty(sRowidFieldName)) {\n\t\t\t\t\tcn.setRowIdFieldName(sRowidFieldName);\n\t\t\t\t}\n\t\t\t\tconst sSqlFieldName = NodeData.getAttrValue(\"sqlfieldname\");\n\t\t\t\tif (!TextUtils.isEmpty(sSqlFieldName)) {\n\t\t\t\t\tcn.setSqlFieldName(sSqlFieldName);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Si no hemos creado ninguna, la creamos ahora...\n\t\t\tif (cn == null) cn = new XoneWebCoreConnectionData(this.m_context, strName, this); // TODO: Esto es el real XoneDbConnectionData(this.m_context, strName, this);\n\t\t} // Tenemos que averiguar qué tipo de conexión es\n\t\t// Pasar el nodo de datos a la conexión para que se busque la vida\n\t\t// A11111101: Soportar plataformas a nivel de nodos de conexión.\n\t\t// Asignar la plataforma\n\t\tcn.SetPlatform(this.m_strPlatform);\n\t\tcn.setNodeData(NodeData);\n\t\t// Si es la conexión principal, le pasamos el IsReplicating de la aplicación\n\t\tif (cn.getName().equals(XoneConnectionData.MAIN_CONNECTION)) {\n\t\t\t// Pasarle las cosas que históricamente estaban a nivel de aplicación\n\t\t\tcn.setIsReplicating(this.m_bIsReplicating);\n\t\t\tcn.setDatemask(this.m_strDatemask);\n\t\t} // Pasarle las cosas que históricamente estaban a nivel de aplicación\n\t\t// TODO ADD TAG\n\t\t// Verificar que tenga datemask...\n\t\tif (StringUtils.IsEmptyString(cn.getDatemask())) {\n\t\t\t// Poner la de la aplicación\n\t\t\tcn.setDatemask(this.m_strDatemask);\n\t\t} // Poner la de la aplicación\n\t\t// Si es la conexión principal, comprobar si hay InitMasterData anterior\n\t\tif (cn.getName().equals(XoneConnectionData.MAIN_CONNECTION)) {\n\t\t\t// Setear los datos\n\t\t\tif (this.m_nMasterMid > 0) {\n\t\t\t\t// Tiene valores\n\t\t\t\tcn.setMID(this.m_nMasterMid);\n\t\t\t\tcn.setDBID(this.m_nMasterMid);\n\t\t\t\tcn.setIsReplicating(true);\n\t\t\t} // Tiene valores\n\t\t} // Setear los datos\n\t\treturn cn;\n\t}\n\tLoadConnection(Data) {\n\t\tconst cn = this.CreateConnection(Data);\n\t\tif (cn == null) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.AddConnection(cn);\n\t}\n\tgetConnection(ConnectionName = null) {\n\t\tlet strName = ConnectionName;\n\t\tif (StringUtils.IsEmptyString(ConnectionName)) strName = XoneConnectionData.MAIN_CONNECTION;\n\t\t// Buscar la conexión en la lista\n\t\tif (!this.m_lstConnections.containsKey(strName)) return null;\n\t\t// Devolverla\n\t\treturn this.m_lstConnections.get(strName);\n\t}\n\tasync login(...FunctionParams) {\n\t\tconst sFunctionName = \"Login\";\n\t\tUtils.CheckNullParameters(sFunctionName, FunctionParams);\n\t\tUtils.CheckIncorrectParamCount(sFunctionName, FunctionParams, 1);\n\t\tconst jsObject = FunctionParams[0];\n\t\tconst sUserName = StringUtils.SafeToString(jsObject[\"userName\"], null);\n\t\tconst sPassword = StringUtils.SafeToString(jsObject[\"password\"], null);\n\t\tconst bIsGoogleSignOn = StringUtils.ParseBoolValue(jsObject[\"isGoogleSignOn\"], false);\n\t\tconst sEntryPointCollection = StringUtils.SafeToString(jsObject[\"entryPoint\"], this.getEntryPointCollection(this.getCurrentVisualConditions()));\n\t\tconst onLoginSuccessful = jsObject[\"onLoginSuccessful\"];\n\t\tconst onLoginFailed = jsObject[\"onLoginFailed\"];\n\t\tconst onLoginCallResults = jsObject[\"onLoginCallResults\"];\n\t\t// amiyares 20/08/2021: Agregamos opción de ignorar entry point\n\t\tconst ignoreEntryPoint = jsObject[\"ignoreEntryPoint\"];\n\t\tif (!bIsGoogleSignOn) {\n\t\t\tif (sUserName == null) {\n\t\t\t\tthrow new IllegalArgumentException(sFunctionName + \"(): Null user name parameter\");\n\t\t\t}\n\t\t\tif (sPassword == null) {\n\t\t\t\tthrow new IllegalArgumentException(sFunctionName + \"(): Null password parameter\");\n\t\t\t}\n\t\t}\n\t\tif (!ignoreEntryPoint) {\n\t\t\tif (TextUtils.isEmpty(sEntryPointCollection)) {\n\t\t\t\tthrow new IllegalArgumentException(sFunctionName + \"(): Empty entry point parameter\");\n\t\t\t}\n\t\t\tconst dataCollEntryPoint = await this.getCollection(sEntryPointCollection);\n\t\t\tif (dataCollEntryPoint == null) {\n\t\t\t\tthrow new IllegalArgumentException(sFunctionName + \"(): Entry point collection \" + sEntryPointCollection + \" not found\");\n\t\t\t}\n\t\t\tthis.setOverridenEntryPoint(sEntryPointCollection);\n\t\t}\n\t\tconst user = this.getUser();\n\t\tif (user != null) {\n\t\t\tUtils.DebugLog(Utils.TAG_FRAMEWORK, sFunctionName + \"(): User is already logged in\");\n\t\t}\n\t\t// if (bIsGoogleSignOn) {\n\t\t//     IStartActivityForResult lastEditView = app.getLastEditView();\n\t\t//     if (lastEditView == null) {\n\t\t//         throw new IllegalStateException(sFunctionName + \"(): No edit view is visible, cannot perform Google Sign In\");\n\t\t//     }\n\t\t//     GoogleSignInTask gsoTask = new GoogleSignInTask(lastEditView);\n\t\t//     GoogleSignInAccount result = gsoTask.get();\n\t\t//     sUserName = result.getEmail();\n\t\t//     if (onLoginCallResults != null) {\n\t\t//         HashMap<String, Object> mapRuntimeObjects = getXOneScriptObjects();\n\t\t//         XOneJavascript.run(m_context, onLoginCallResults, mapRuntimeObjects, gsoTask);\n\t\t//         return;\n\t\t//     }\n\t\t// }\n\t\ttry {\n\t\t\tlet loggedUser = await this.logonUser(sUserName, sPassword, Utils.EMPTY_STRING);\n\t\t\t// ca.then(async (loggedUser)=>{\n\t\t\tlet loginException = null;\n\t\t\tlet ctx = new ScriptContext(null);\n\t\t\tconst mapRuntimeObjects = await this.getXOneScriptObjects(ctx);\n\t\t\tif (loggedUser != null) {\n\t\t\t\tUtils.setLastAppExecutedField(this.m_context, sUserName, this.m_strAppName + \"##\" + Utils.LAST_EXECUTED_USER_FIELD_NAME);\n\t\t\t\tif (onLoginSuccessful != null) {\n\t\t\t\t\tXOneJavascript.run(this, onLoginSuccessful, ctx, mapRuntimeObjects);\n\t\t\t\t}\n\t\t\t\tif (ignoreEntryPoint) return loggedUser;\n\t\t\t\tthis.m_ui.launchEntryPoint();\n\t\t\t} else if (onLoginFailed != null) {\n\t\t\t\tlet sMessage;\n\t\t\t\tif (loginException != null) {\n\t\t\t\t\tsMessage = Utils.getThrowableMessage(loginException);\n\t\t\t\t} else {\n\t\t\t\t\tsMessage = \"Login failed\";\n\t\t\t\t}\n\t\t\t\t//XOneJavascript.run(onLoginFailed, sMessage);\n\t\t\t\tawait XOneJavascript.runAsync(this, onLoginFailed, ctx, mapRuntimeObjects, null, sMessage);\n\t\t\t}\n\t\t\treturn loggedUser;\n\t\t} catch (ex) {\n\t\t\t// console.log(ex);\n\t\t\tconsole.error(\"Login failed\");\n\t\t\tonLoginFailed === null || onLoginFailed === void 0 ? void 0 : onLoginFailed.call(); // Alejandro 19/05/2021\n\t\t\treturn null;\n\t\t}\n\t\t// let loginException: Exception = null;\n\t\t// let loggedUser:XoneDataObject;\n\t\t// try {\n\t\t//     loggedUser =await this.logonUser(sUserName, sPassword, Utils.EMPTY_STRING);\n\t\t// } catch (ex) {\n\t\t//     loginException = ex;\n\t\t//     loggedUser = null;\n\t\t// }\n\t\t// return loggedUser;\n\t}\n\tasync getXOneScriptObjects(scriptContext) {\n\t\tconst mapRuntimeObjects = new Hashtable();\n\t\tmapRuntimeObjects.put(\"appData\", this);\n\t\tlet injectJavaObject = this.getUserInterface();\n\t\tif (injectJavaObject != null) {\n\t\t\tmapRuntimeObjects.put(\"ui\", injectJavaObject);\n\t\t}\n\t\tif (this.m_user != null) {\n\t\t\tmapRuntimeObjects.put(\"user\", this.m_user);\n\t\t}\n\t\t//mapRuntimeObjects.put(\"err\", this.getError());\n\t\tif (scriptContext != null) {\n\t\t\tinjectJavaObject = scriptContext.getObjectHost();\n\t\t\tif (injectJavaObject != null) {\n\t\t\t\tmapRuntimeObjects.put(\"self\", injectJavaObject);\n\t\t\t}\n\t\t\tinjectJavaObject = await scriptContext.getCollectionHost();\n\t\t\tif (injectJavaObject != null) {\n\t\t\t\tmapRuntimeObjects.put(\"selfDataColl\", injectJavaObject);\n\t\t\t}\n\t\t\tlet params = scriptContext.GetParams();\n\t\t\tif (params != null) {\n\t\t\t\tlet paramsNames = null;\n\t\t\t\twhile ((paramsNames = params.next()) != null) {\n\t\t\t\t\tmapRuntimeObjects.put(paramsNames.value[0], paramsNames.value[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn mapRuntimeObjects;\n\t}\n\tasync logonUser(UserName, Password, errorMessage, silentMode = false) {\n\t\t// Primero buscamos la colección de usuarios... el nombre se puede cambiar\n\t\t// en el nodo de inicialización\n\t\tlet usercol = await this.getSysCollection(\"Usuarios\");\n\t\t// M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n\t\tif (usercol == null)\n\t\t\t////throw new Exception(\"No se encuentra la colección de usuarios para buscar el usuario que se ha pedido conectar.\");\n\t\t\t// A12080601: Incluir un mensaje de error personalizado en LogonUser.\n\t\t\tthrow new Exception(this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_APP_LOGONNOUSERCOLL, errorMessage));\n\t\t// TODO: Luis Esto es lo unico que se me ocurre para que no espere Authentication las llamadas online\n\t\t// if (usercol.getConnection() instanceof CXoneReflectionConnectionData)\n\t\t// \tusercol.getConnection().addExtendedProperty(\"logincall\", \"true\");\n\t\t// Buscamos el usuario que nos piden\n\t\tconst objuser = await usercol.get(\"LOGIN\", UserName);\n\t\tusercol.getConnection().removeExtendedProperty(\"logincall\");\n\t\tif (objuser == null) {\n\t\t\t// Error\n\t\t\t// M11051201: Mecanismo para soporte multilenguaje en los componentes y demás cosas.\n\t\t\t////throw new Exception(\"No se encuentra el usuario con LOGIN='\" + UserName + \"' para cargarlo.\");\n\t\t\t// A12080601: Incluir un mensaje de error personalizado en LogonUser.\n\t\t\tlet s = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_APP_LOGONUSERNOTFOUND, errorMessage);\n\t\t\ts = s.replace(\"{0}\", UserName);\n\t\t\tthrow new Exception(s);\n\t\t} // Error\n\t\t// Si el objeto implementa la interfaz adecuada, usarla\n\t\tif (!silentMode) {\n\t\t\t// TODO: Luis Para modo silencioso, sin pass\n\t\t\tlet validator = null;\n\t\t\tif (Object.prototype.hasOwnProperty.call(objuser, \"ValidateUserCredentials\")) validator = objuser;\n\t\t\tif (validator != null) {\n\t\t\t\t// Efectuar la validación\n\t\t\t\tlet objparams = [Password];\n\t\t\t\tif (!validator.ValidateUserCredentials(objparams)) return null;\n\t\t\t} // Efectuar la validación\n\t\t\telse {\n\t\t\t\t// Verificar la clave... en esta implementación es comparar y nada mais\n\t\t\t\tlet strUserPwd = objuser.get(\"PWD\");\n\t\t\t\tif (StringUtils.IsEmptyString(Password)) {\n\t\t\t\t\t// La del usuario debería ser vacía también\n\t\t\t\t\tif (!StringUtils.IsEmptyString(strUserPwd)) return null; // Error\n\t\t\t\t} // La del usuario debería ser vacía también\n\t\t\t\telse {\n\t\t\t\t\t// Comparar\n\t\t\t\t\tif (!Password.equals(strUserPwd)) return null;\n\t\t\t\t} // Comparar\n\t\t\t} // Verificar la clave... en esta implementación es comparar y nada mais\n\t\t}\n\t\t// Al menos el usuario está bien... ahora buscar la empresa...\n\t\tthis.m_user = objuser;\n\t\t// if (usercol.getConnection() instanceof CXoneReflectionConnectionData) {\n\t\t// \ttry {\n\t\t// \t\tif (this.m_user!=null) {\n\t\t// \t\t\tusercol.getConnection().addExtendedProperty(\"xoneuser\",this.m_user.GetRawStringField(\"LOGIN\"));\n\t\t// \t\t\tusercol.getConnection().addExtendedProperty(\"xonepass\",this.m_user.GetRawStringField(\"PWD\"));\n\t\t// \t\t}\n\t\t// \t} catch (e) {\n\t\t// \t\te.printStackTrace();\n\t\t// \t}\n\t\t// }\n\t\tlet objcomp = await objuser.ObjectItem(\"IDEMPRESA\");\n\t\tif (objcomp == null) return objuser;\n\t\t// Cargar la empresa\n\t\tthis.LoadCompanyData(objcomp);\n\t\treturn objuser;\n\t}\n\tGetSysCollName(SysName) {\n\t\t// Si no está en lista, es que no se ha traducido, luego es el que se ha pasado\n\t\tif (!this.m_lstSysCollNames.containsKey(SysName)) return SysName;\n\t\t// De lo contrario, devolvemos el traducido\n\t\treturn this.m_lstSysCollNames.get(SysName);\n\t}\n\tasync getSysCollection(CollName) {\n\t\treturn await this.getCollection(this.GetSysCollName(CollName));\n\t}\n\taddLoginCollection(loginCollection, loginCollectionDefault) {\n\t\tif (this.mapLoginCollections == null) {\n\t\t\tthis.mapLoginCollections = new Hashtable();\n\t\t}\n\t\tXmlUtils.getValuesByConditions(this.mapLoginCollections, loginCollection, loginCollectionDefault);\n\t}\n\tgetLoginCollectionName(condition) {\n\t\tif (!StringUtils.IsEmptyString(condition)) {\n\t\t\tlet lst = this.getCurrentVisualConditionsDescriptors();\n\t\t\tfor (let s in lst) {\n\t\t\t\tif (this.mapLoginCollections.containsKey(s)) {\n\t\t\t\t\treturn this.mapLoginCollections.get(s);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t/// ALEJANDRO FG - APRENDIENDO - 22/02/2017\n\t\t// He cambiado el orden para que si esta definido el nuevo modo , pues este prevalezca sobre el viejo,\n\t\t// tal y como hace el entrypoint\n\t\tif (this.mapLoginCollections.containsKey(Utils.MACRO_DEFAULT)) {\n\t\t\tlet sLoginColl = this.mapLoginCollections.get(Utils.MACRO_DEFAULT);\n\t\t\tif (!TextUtils.isEmpty(sLoginColl)) {\n\t\t\t\treturn sLoginColl;\n\t\t\t}\n\t\t}\n\t\tlet loginCollNode = this.getConfigFile()\n\t\t\t.SelectSingleNode(Utils.COLL_COLLPROPS)\n\t\t\t.SelectSingleNode(Utils.COLL_COLL, Utils.COLL_LOGIN_COLL, Utils.TRUE_VALUE);\n\t\tif (loginCollNode != null) {\n\t\t\treturn loginCollNode.getAttrValue(Utils.PROP_ATTR_NAME);\n\t\t}\n\t\treturn null;\n\t}\n\t// ADD Tag Luis Ahora puede haber varios entrypoint en dependencia de las condiciones como en el style\n\taddEntryPointCollection(entryPointCollection, entryPointDefault) {\n\t\tif (this.mapEntryPointCollections == null) {\n\t\t\tthis.mapEntryPointCollections = new Hashtable();\n\t\t}\n\t\tXmlUtils.getValuesByConditions(this.mapEntryPointCollections, entryPointCollection, entryPointDefault);\n\t}\n\tgetEntryPointCollection(sCondition) {\n\t\tif (!TextUtils.isEmpty(this.sOverridenEntryPointCollection)) {\n\t\t\treturn this.sOverridenEntryPointCollection;\n\t\t}\n\t\tif (!StringUtils.IsEmptyString(sCondition)) {\n\t\t\tlet lstVisualConditions = this.getCurrentVisualConditionsDescriptors();\n\t\t\tfor (let sVisualCondition in lstVisualConditions) {\n\t\t\t\tif (this.mapEntryPointCollections.containsKey(sVisualCondition)) {\n\t\t\t\t\treturn this.mapEntryPointCollections.get(sVisualCondition);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (this.mapEntryPointCollections.containsKey(Utils.MACRO_DEFAULT)) {\n\t\t\treturn this.mapEntryPointCollections.get(Utils.MACRO_DEFAULT);\n\t\t}\n\t\treturn null;\n\t}\n\tsetOverridenEntryPoint(sEntryPointCollection) {\n\t\tthis.sOverridenEntryPointCollection = sEntryPointCollection;\n\t}\n\tlogout(...FunctionParams) {\n\t\tconst sFunctionName = \"Logout\";\n\t\tconst user = this.getUser();\n\t\tif (user == null) {\n\t\t\tthrow new IllegalStateException(sFunctionName + \"(): User is not logged in\");\n\t\t}\n\t\tconst userCollection = user.getOwnerCollection();\n\t\tif (userCollection != null) {\n\t\t\tuserCollection.Clear();\n\t\t}\n\t\tthis.m_user = null;\n\t\tthis.clearCompanyData();\n\t\t// TODO: ver como se hace esto\n\t\t// IXoneAndroidApp app = getAndroidApp();\n\t\t// if (app != null) {\n\t\t//     app.returnToLogin();\n\t\t// }\n\t}\n\tasync IniciarApp(codePath, scriptWrapper, fileManager, connString) {\n\t\tthis.setAppPath(codePath);\n\t\tthis.__SCRIPT_WRAPPERASYNC = scriptWrapper;\n\t\tthis.m_fileManager = fileManager;\n\t\tconst appXml = await fileManager.readFileAsync(this.m_strAppPath + \"/\" + Utils.TAG_APPNODE);\n\t\tthis.m_jsonConfigFile = await fileManager.readFileAsync(this.m_strAppPath + \"/\" + Utils.TAG_MAPPINGFILE + \".xne\");\n\t\tthis.LoadConfigFile(this.m_strAppPath, appXml, this.m_jsonConfigFile, true, 2);\n\t\tthis.Initialize(connString);\n\t}\n\t/**\n\t * Inicializa la aplicacion. Se le pasa una cadena de conexion para pasarle a la conexion principal de la aplicacion. Si la conexion principal no existe, la crea.\n\t * @param ConnString\t\t\tCadena de conexion para pasarle a la conexion principal. Si ya tenoa una voa nodo APP, se sustituye por esta.\n\t * @return\t\t\t\t\t\tDevuelve TRUE si la inicializacion es correcta. FALSE si falla algo que no dispare excepciones.\n\t * @throws Exception\n\t */\n\tInitialize(ConnString = Utils.EMPTY_STRING) {\n\t\t// Crear un wrapper de UI si no lo han puesto ya\n\t\tif (this.m_ui == null)\n\t\t\tthis.m_ui = {\n\t\t\t\tstartReplica: function () {},\n\t\t\t\tshowToast: function (...args) {},\n\t\t\t\tlaunchEntryPoint: function (...args) {},\n\t\t\t\tmsgBox: function (...args) {},\n\t\t\t\tstartGps: function (...args) {},\n\t\t\t}; // new XoneUserInterface (this);\n\t\t// Buscamos la conexion principal\n\t\tlet mainConn = this.getConnection();\n\t\tif (mainConn == null) {\n\t\t\t// Adicionar la nueva\n\t\t\t// M11051201: Mecanismo para soporte multilenguaje en los componentes y demos cosas.\n\t\t\tif (null == (mainConn = this.CreateConnection(null)))\n\t\t\t\t////throw new Exception(\"No se puede crear la conexion principal. Posiblemente haya un problema de memoria.\");\n\t\t\t\tthrow new XoneGenericException(\n\t\t\t\t\t-9000,\n\t\t\t\t\tthis.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_APP_CANNOTCREATEMAINCONN, \"Cannot create main connection. Possible cause: memory error.\")\n\t\t\t\t);\n\t\t\tmainConn.setConnString(ConnString);\n\t\t\t// Si hay prefijo definido, lo ponemos ahora\n\t\t\tif (!StringUtils.IsEmptyString(this.m_strObjectPrefix)) mainConn.setPrefix(this.m_strObjectPrefix);\n\t\t\tthis.AddConnection(mainConn);\n\t\t} // Adicionar la nueva\n\t\telse {\n\t\t\t// Si no tiene cadena de conexion, ponerla\n\t\t\tif (StringUtils.IsEmptyString(mainConn.getConnString())) mainConn.setConnString(ConnString);\n\t\t} // Si no tiene cadena de conexion, ponerla\n\t\t// Solamente pedir una conexion fosica... si falla es que hay problemas de inicializacion\n\t\tlet conn = mainConn.GetNewConnection(true);\n\t\tif (conn == null) {\n\t\t\t// Error\n\t\t\t// M11051201: Mecanismo para soporte multilenguaje en los componentes y demos cosas.\n\t\t\t////throw new Exception(\"No se puede abrir una conexion para '\" + mainConn.getConnString() + \"'\");\n\t\t\tlet s = this.m_messages.GetMessage(XoneMessageKeys.SYS_MSG_APP_OPENCONNERROR, \"Cannot open connection. ConnString='{0}'\");\n\t\t\ts = s.replace(\"{0}\", mainConn.getConnString());\n\t\t\tthrow new XoneGenericException(-9001, s);\n\t\t} // Error\n\t\t// Cerrar la conexion\n\t\t//////conn.close();\n\t\t// TODO ADD TAG Moviendo el loadinclude\n\t\t// Inicializacion completada...\n\t\treturn (this.m_bIsReady = true);\n\t}\n\tLoadConfigFile(executionPath, appSource, Source, useTranslation, version) {\n\t\t// A14102301: Incroporación de un mecanismo de control de integridad para desarrollos.\n\t\t// Si estamos en este modo, el mappings tiene que cuadrar... si no, pal carajo...\n\t\t// Solo si la maquinaria se ha activado\n\t\t// if (m_checker != null && !m_checker.checkFileIntegrity(executionPath, m_strAppPath)) {\n\t\t//     return null;\n\t\t// }\n\t\t// Ahora se debe guardar la version con la que se esta trabajando que se usara en las colecciones al cargarla\n\t\tthis.m_nVersionMapping = version;\n\t\tlet doc = XmlDocument.getInstance();\n\t\tdoc.Deserialize(null, executionPath, Source, useTranslation);\n\t\tthis.m_xmlConfigFile = doc.getRootNode();\n\t\t//require(\"../Code/scripts/funciones.js\");\n\t\t// Luis: El nodo app, en el mundo nuevo\n\t\t// puede venir en un archivo externo\n\t\t// En ese caso lo mas seguro es que ya lo tengamos cargado\n\t\tif (appSource != null) {\n\t\t\tif (!this.LoadAppFile(executionPath, appSource, useTranslation)) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else if (!this.LoadAppNode(this.m_xmlConfigFile.SelectSingleNode(\"app\"))) {\n\t\t\treturn null;\n\t\t}\n\t\t// // Los include ahora aqui\n\t\t// // Cargar los ficheros include que están a nivel global (a nivel de colección) y\n\t\t// // almacenarlos en las listas correspondientes...\n\t\t// if (m_lstIncludeFiles == null) {\n\t\t//     if (!LoadIncludeFiles(m_xmlAppNode)) {\n\t\t//         throw new XoneGenericException(-11015, \"Cannot load script files. Check include node.\");\n\t\t//     }\n\t\t// }\n\t\t// LoadSecurityConfigFiles(m_xmlAppNode, executionPath, useTranslation);\n\t\t// // 20/09/2019\n\t\t// LoadAppMachineLearningFile();\n\t\t// Completo\n\t\treturn doc;\n\t}\n\t/**\n\t * Carga el fichero app.xml que es el nuevo formato de integrar las cosas de la app\n\t * @param Source\t\t\t\tStream del cual se leerán los datos del fichero mappings. El framework tendrá que buscarse la vida para abrirlo.\n\t * @return\t\t\t\t\t\tDevuelve TRUE si la carga del mappings ha sido correcta.\n\t * @throws Exception\n\t */\n\tLoadAppFile(executionPath, Source, useTranslation) {\n\t\t// A14102301: Incorporación de un mecanismo de control de integridad para desarrollos.\n\t\t// Si estamos en este modo, el mappings tiene que cuadrar... si no, pal carajo...\n\t\t// TODO: Luis para mas adelante\n\t\t// if (m_checker !=null)\n\t\t// {// Solo si la maquinaria se ha activado\n\t\t//     if (!m_checker.checkFileIntegrity(executionPath, m_strAppPath))\n\t\t//         return false;\n\t\t// }// Solo si la maquinaria se ha activado\n\t\t//LittleEndianDataInputStream s =new LittleEndianDataInputStream(Source);\n\t\t//XmlDocument doc =new XmlDocument();\n\t\tlet xmlDocument = XmlDocument.getInstance();\n\t\txmlDocument.Deserialize(null, executionPath, Source, useTranslation);\n\t\t/*\n\t\t * 26/02/2018 Juan Carlos\n\t\t * Al convertir algunos proyectos con el Cloud Studio, el nodo app puede ser la raíz\n\t\t * directamente. Eso no lo veo mal pero esto no lo tenía en cuenta.\n\t\t */\n\t\tlet rootNode = xmlDocument.getRootNode();\n\t\tthis.m_xmlAppNode = rootNode.SelectSingleNode(\"app\");\n\t\tif (this.m_xmlAppNode == null) {\n\t\t\tif (rootNode.getName().equals(\"app\")) {\n\t\t\t\tthis.m_xmlAppNode = rootNode;\n\t\t\t}\n\t\t}\n\t\t// Luis: El nodo app, en el mundo nuevo\n\t\t// puede venir en un archivo externo\n\t\t// En ese caso lo mas seguro es que ya lo tengamos cargado\n\t\treturn this.LoadAppNode(this.m_xmlAppNode);\n\t}\n\t/**\n\t *  Busca el nodo app dentro del fichero mappings y carga su contenido\n\t * @throws Exception\n\t */\n\tLoadAppNode(xapp) {\n\t\t// De entrada si no hay mappings, no podemos hacer nada\n\t\t//if (m_xmlConfigFile == null)\n\t\t//    return false;\n\t\t//XmlNode xapp = m_xmlConfigFile.SelectSingleNode(\"app\");\n\t\tif (xapp == null) return true; // No tenemos nodo app\n\t\t// A10120301:\tModificaciones para guardar y exponer el nodo app para uso del framework.\n\t\t// Guardamos aquí el nodo por lo que pueda ser...\n\t\tthis.m_xmlAppNode = xapp;\n\t\tthis.m_xmlAppNode.getAttrValue(\"version\");\n\t\t// Buscar el nombre de la aplicación si es que viene\n\t\tlet str = XmlUtils.getNodeAttr(xapp, \"name\");\n\t\tif (!StringUtils.IsEmptyString(str)) this.m_strAppName = str;\n\t\tthis.m_strDefaultLanguage = StringUtils.SafeToString(XmlUtils.getNodeAttr(xapp, \"default-language\"), \"VBScript\");\n\t\t// A12042503: Mecanismo para registrar un modo debug global en la aplicación.\n\t\tthis.m_bDebug = StringUtils.ParseBoolValue(XmlUtils.getNodeAttr(xapp, \"debug\"), false);\n\t\t// 26/06/2018\n\t\tthis.m_bSqlProfilerMode = StringUtils.ParseBoolValue(XmlUtils.getNodeAttr(xapp, \"sql-profiler\"), false);\n\t\t/*\n\t\t * 05/07/2017\n\t\t * Dejar esto permanentemente ralentizaba un cojón algunas aplicaciones en el framework\n\t\t * debug, le hago un atributo y lo desactivo por defecto.\n\t\t */\n\t\tthis.m_bLogMemoryUsage = StringUtils.ParseBoolValue(XmlUtils.getNodeAttr(xapp, \"log-memory-usage\"), false);\n\t\tlet sScriptOptimizationLevel = XmlUtils.getNodeAttr(xapp, \"script-optimization-level\");\n\t\tif (TextUtils.isEmpty(sScriptOptimizationLevel)) {\n\t\t\tif (Utils.isDebuggable(this.m_context)) {\n\t\t\t\tthis.m_nScriptOptimizationLevel = -1;\n\t\t\t} else {\n\t\t\t\tthis.m_nScriptOptimizationLevel = 9;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.m_nScriptOptimizationLevel = NumberUtils.SafeToInt(sScriptOptimizationLevel, 9);\n\t\t}\n\t\t// Filtramos valores inválidos\n\t\tif (this.m_nScriptOptimizationLevel < -1) {\n\t\t\tthis.m_nScriptOptimizationLevel = -1;\n\t\t} else if (this.m_nScriptOptimizationLevel > 13) {\n\t\t\tthis.m_nScriptOptimizationLevel = 13;\n\t\t}\n\t\t// TODO: Luis esto en web no tiene sentido, solo lo dejo como referencia\n\t\t// let sMaxDexFiles = XmlUtils.getNodeAttr(xapp, \"max-dex-files\");\n\t\t// this.m_nMaxDexFiles = NumberUtils.SafeToInt(sMaxDexFiles);\n\t\t// M09072901:\tPermitir que se puedan traducir los joins a formato where en blackberry\n\t\t// Leer aquí si hay que traducir los joins o no\n\t\t// En principio en BB esto hay que hacerlo siempre, por lo que el valor por defecto es TRUE\n\t\t// TODO SI ESTO HACE FALTA LO USAREMOS ALGÚN DÍA\n\t\t////str =XmlUtils.GetNodeAttr(xapp, \"xlat-joins\");\n\t\t////if (!StringUtils.IsEmptyString(str))\n\t\t////\tm_bTranslateJoins =StringUtils.ParseBoolValue(str, true);\n\t\t// Buscar las conexiones que haya declaradas dentro del nodo de aplicación\n\t\t// F13022106: Sacar la versión de la aplicación del nodo app al cargarlo. Setear macro global.\n\t\t// Versión de la aplicación\n\t\tif (StringUtils.IsEmptyString((str = XmlUtils.getNodeAttr(xapp, \"version\")))) str = \"1.0\";\n\t\tthis.setGlobalMacro(\"##VERSION##\", str);\n\t\t// Buscar las conexiones que haya declaradas dentro del nodo de aplicación\n\t\tlet xcns = xapp.SelectNodes(\"connection\");\n\t\tlet cn;\n\t\tfor (let i = 0; i < xcns.count(); i++) {\n\t\t\t// Cada definición\n\t\t\tlet xc = xcns.get(i);\n\t\t\tcn = this.CreateConnection(xc);\n\t\t\tif (cn != null) this.AddConnection(cn);\n\t\t} // Cada definición\n\t\tif (!StringUtils.IsEmptyString((str = XmlUtils.getNodeAttr(xapp, \"prefix\")))) {\n\t\t\t// Ponerle prefijo a la conexión principal\n\t\t\tif (null == (cn = this.getConnection())) {\n\t\t\t\t// No existe la principal, crearla\n\t\t\t\tif (null == (cn = this.CreateConnection(null))) return false;\n\t\t\t\tthis.AddConnection(cn);\n\t\t\t} // No existe la principal, crearla\n\t\t\t// Ponerle el prefijo\n\t\t\tcn.setPrefix(str);\n\t\t} // Ponerle prefijo a la conexión principal\n\t\t// A12021601: Permitir que una conexión incluya el selective-replication en su declaración.\n\t\t// SelectiveReplication a nivel de nodo app para iniciar la aplicación.\n\t\t// TODO: Luis Ver si esto es necesario mas adelante\n\t\t//setSelectiveReplication (StringUtils.ParseBoolValue (xapp.getAttrValue (\"selective-replication\"), false));\n\t\t// Cargar los nombres de colecciones de sistema que se cambien\n\t\txcns = xapp.SelectNodes(\"syscoll-name\");\n\t\tfor (let i = 0; i < xcns.count(); i++) {\n\t\t\t// Los nodos indican sustituciones de nombres de colecciones de sistema\n\t\t\tlet xn = xcns.get(i);\n\t\t\tlet strSysName = XmlUtils.getNodeAttr(xn, \"system-name\");\n\t\t\tlet strCollName = XmlUtils.getNodeAttr(xn, \"collection-name\");\n\t\t\tif (!StringUtils.IsEmptyString(strSysName) && !StringUtils.IsEmptyString(strCollName)) this.m_lstSysCollNames.put(strSysName, strCollName);\n\t\t} // Los nodos indican sustituciones de nombres de colecciones de sistema\n\t\t// A11070701: Introducción de los CSS en la maquinaria para poder parametrizar el mappings.\n\t\t// Cargar los CSS que haya definidos en la aplicación\n\t\txcns = xapp.SelectNodes(\"style\");\n\t\tfor (let i = 0; i < xcns.count(); i++) {\n\t\t\t// Cada CSS lo adicionamos a la lista\n\t\t\tlet xn = xcns.get(i);\n\t\t\t//TODO ADD TAG Juan Carlos, respetar el atributo encoding en los CSS.\n\t\t\tlet strCharsetEncoding = xn.getAttrValue(\"encoding\");\n\t\t\tlet strName = xn.getAttrValue(\"url\");\n\t\t\t// M11072901: Modificaciones al mecanismo de CSS para adaptarse a condiciones visuales.\n\t\t\t// La condición de carga.\n\t\t\tlet strCondition = xn.getAttrValue(\"conditions\");\n\t\t\t/*\n\t\t\t * 27/07/2018\n\t\t\t * Nuevo atributo strict-mode que obliga a tener un CSS bien formado. Sirve para avisar\n\t\t\t * de errores gordos como la falta de un punto y coma (esto provocaba que se le dieran\n\t\t\t * valores erróneos al framework). Se deja por defecto a false porque hay muchas apps\n\t\t\t * que ya dependen del comportamiento antiguo, que dejaba pasar CSSs rotos.\n\t\t\t *\n\t\t\t * Usar este atributo también requiere escapear como en la web los dos puntos si se\n\t\t\t * usan como valor de un atributo en CSS, pues se usa como separador.\n\t\t\t * Por ejemplo, title:Hola:Mundo; debe escribirse como title:Hola\\:Mundo;\n\t\t\t */\n\t\t\tlet bStrictMode = StringUtils.ParseBoolValue(xn.getAttrValue(\"strict-mode\"), false);\n\t\t\t// A14102301: Incorporación de un mecanismo de control de integridad para desarrollos.\n\t\t\t// Verificar el fichero si es que vale la cosa\n\t\t\t// TODO: Luis ver si esto es necesario\n\t\t\t// if (m_checker !=null)\n\t\t\t// {// Verificar\n\t\t\t//     if (!m_checker.checkFileIntegrity(strName, this.m_strAppPath))\n\t\t\t//         return false;\n\t\t\t// }// Verificar\n\t\t\tlet css = this.LoadAndSaveNewCssFile(strName, strCharsetEncoding, bStrictMode);\n\t\t\t// TODO: Luis ver si esto del cacheado aqui tiene sentido\n\t\t\t// File fUnparsedCss = new File(m_loader.getIncludeFilePath(strName, mIsEncryptFiles));\n\t\t\t// File fCachedCss = new File(GetCachedCssDirectory(), strName);\n\t\t\t// XoneCssParser css;\n\t\t\t// if (!fCachedCss.exists()) {\n\t\t\t//     // No hay CSS serializado en disco, parsearlo por primera vez y guardarlo.\n\t\t\t//     css = LoadAndSaveNewCssFile(fUnparsedCss, fCachedCss, strName, strCharsetEncoding, bStrictMode);\n\t\t\t// } else {\n\t\t\t//     try {\n\t\t\t//         // Restauramos el CSS.\n\t\t\t//         PersistableBundleCompat bundle = PersistableBundleCompat.restoreFromBinaryFile(fCachedCss, XoneCssParser.PARCELABLE_VERSION);\n\t\t\t//         String sCachedCssCrc = bundle.getString(XoneCssParser.BUNDLE_KEY_CRC);\n\t\t\t//         String sUnparsedCssCrc = Utils.getFileChecksum(fUnparsedCss, \"crc\", false);\n\t\t\t//         if (TextUtils.equals(sCachedCssCrc, sUnparsedCssCrc)) {\n\t\t\t//             // El checksum del original no ha cambiado. Devolverlo tal cual.\n\t\t\t//             css = bundle.getParcelable(XoneCssParser.BUNDLE_KEY_DATA);\n\t\t\t//             if (css.isStrictMode() != bStrictMode) {\n\t\t\t//                 /*\n\t\t\t//                  * El cacheado tenía strict-mode pero el nodo dice que no o viceversa.\n\t\t\t//                  * Volver a parsear.\n\t\t\t//                  */\n\t\t\t//                 css = LoadAndSaveNewCssFile(fUnparsedCss, fCachedCss, strName, strCharsetEncoding, bStrictMode);\n\t\t\t//             }\n\t\t\t//         } else {\n\t\t\t//             // El checksum del original es distinto. Parsearlo de nuevo y guardarlo.\n\t\t\t//             css = LoadAndSaveNewCssFile(fUnparsedCss, fCachedCss, strName, strCharsetEncoding, bStrictMode);\n\t\t\t//         }\n\t\t\t//     } catch (CssParseException ex) {\n\t\t\t//         throw ex;\n\t\t\t//     } catch (Exception ex) {\n\t\t\t//         /*\n\t\t\t//          * Error al deserializar el fichero. La versión del fichero que espera este\n\t\t\t//          * framework es distinta a la guardada. Borramos el cacheado y reintentamos\n\t\t\t//          * parseo. Podría ocurrir también si se ha actualizado el SO. Eso en particular\n\t\t\t//          * nunca lo he visto ocurrir.\n\t\t\t//          */\n\t\t\t//         ex.printStackTrace();\n\t\t\t//         if (!fCachedCss.delete()) {\n\t\t\t//             throw new IOException(\"Cannot delete cached CSS file!\");\n\t\t\t//         }\n\t\t\t//         css = LoadAndSaveNewCssFile(fUnparsedCss, fCachedCss, strName, strCharsetEncoding, bStrictMode);\n\t\t\t//     }\n\t\t\t// }\n\t\t\t// Adicionar a la lista (si aplica, claro)\n\t\t\tif (StringUtils.IsEmptyString(strCondition)) {\n\t\t\t\tthis.m_lstCssList.push(css);\n\t\t\t} else {\n\t\t\t\t// De lo contrario tiene condición\n\t\t\t\t// M11072901: Modificaciones al mecanismo de CSS para adaptarse a condiciones visuales.\n\t\t\t\tlet list = this.m_lstConditionCssList.get(strCondition);\n\t\t\t\tif (list == null) {\n\t\t\t\t\t// Crear y adicionar\n\t\t\t\t\tlist = new Array();\n\t\t\t\t\tthis.m_lstConditionCssList.put(strCondition, list);\n\t\t\t\t}\n\t\t\t\tlist.push(css);\n\t\t\t}\n\t\t\t// En cualquiera de los casos tenemos CSS\n\t\t\tthis.m_bHasStylesheets = true;\n\t\t}\n\t\tthis.addEntryPointCollection(this.m_xmlAppNode.selectSingleNode(\"entry-point\"), this.m_xmlAppNode.getAttrValue(\"entry-point\"));\n\t\tthis.addLoginCollection(this.m_xmlAppNode.selectSingleNode(\"login-coll\"), this.m_xmlAppNode.getAttrValue(\"login-coll\"));\n\t\t// Completo\n\t\treturn true;\n\t}\n\tLoadAndSaveNewCssFile(strName, strCharsetEncoding, bStrictMode) {\n\t\treturn this.LoadNewCssFile(strName, strCharsetEncoding, bStrictMode);\n\t\t// PersistableBundleCompat bundle = new PersistableBundleCompat();\n\t\t// String sUnparsedCssCrc = Utils.getFileChecksum(fUnparsedCss, \"crc\", false);\n\t\t// bundle.putString(XoneCssParser.BUNDLE_KEY_CRC, sUnparsedCssCrc);\n\t\t// bundle.putParcelable(XoneCssParser.BUNDLE_KEY_DATA, css);\n\t\t// bundle.saveToBinaryFile(fCachedCss, XoneCssParser.PARCELABLE_VERSION);\n\t\t// return css;\n\t}\n\tLoadNewCssFile(strName, strCharsetEncoding, bStrictMode) {\n\t\tlet is = this.m_loader.LoadFile(this.getSourcePath(strName), this.mIsEncryptFiles);\n\t\tif (is == null) {\n\t\t\tthrow new XoneGenericException(-100, \"File not Found: \" + strName);\n\t\t}\n\t\ttry {\n\t\t\treturn new XoneCssParser(strName, is, strCharsetEncoding, bStrictMode);\n\t\t} catch (e) {\n\t\t\t/*\n\t\t\t * Juan Carlos\n\t\t\t * Cambio el mensaje. Esto puede no ser un error de sintaxis, y si no lo es puede\n\t\t\t * confundir al programador.\n\t\t\t */\n\t\t\tlet sMessage = Utils.getThrowableMessage(e);\n\t\t\tthrow new XoneGenericException(-100, e, \"Error loading CSS file: \" + strName + \"\\r\\n\" + sMessage);\n\t\t}\n\t}\n\tasync getCollection(name) {\n\t\tif (TextUtils.isEmpty(name)) {\n\t\t\t//throw new IllegalArgumentException(\"Empty collection name argument in appData.getCollection()\");\n\t\t}\n\t\t//let a=import(CollName)\n\t\t// Si la tiene en lista, la devuelve tal cual...\n\t\tif (this.m_lstCollections.containsKey(name)) {\n\t\t\tlet dataCollection = this.m_lstCollections.get(name);\n\t\t\tif (dataCollection == null) {\n\t\t\t\tUtils.DebugLog(\n\t\t\t\t\tUtils.TAG_FRAMEWORK,\n\t\t\t\t\t\"AppData.GetCollection(): Collection list contains a key for \" + name + \" but it is null. AppData hashCode: \" + this.hashCode()\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn dataCollection;\n\t\t}\n\t\t// Si no la tiene, intenta cargarla\n\t\treturn await this.LoadCollection(name);\n\t}\n\tasync LoadCollection(CollName) {\n\t\t// Si tiene definido un filtro de collprops, aplicarlo para buscar la coleccion en el mappings\n\t\tlet xc = null;\n\t\t// Dentro de la lista de colecciones, buscar la que nos interesa\n\t\t// Buscar el collprops\n\t\t// F11081101: Si se pide GetCollection sin haber cargado el mappings hay mooa.\n\t\t// Si el mappings es null entonces nos explotamos...\n\t\tif (this.m_xmlConfigFile == null) {\n\t\t\tif (TextUtils.isEmpty(CollName)) {\n\t\t\t\tUtils.DebugLog(\n\t\t\t\t\tUtils.TAG_FRAMEWORK,\n\t\t\t\t\t\"AppData.LoadCollection(): Error loading collection, empty collection name parameter, mappings xml object is null. AppData hashCode: \"\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tUtils.DebugLog(\n\t\t\t\t\tUtils.TAG_FRAMEWORK,\n\t\t\t\t\t\"AppData.LoadCollection(): Error loading collection \" + CollName + \", mappings xml object is null. AppData hashCode: \" + this.hashCode()\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\t// const collProps = this.m_xmlConfigFile.SelectSingleNode(\"collprops\"); // this.m_jsonConfigFile.xml?.collprops;\n\t\t// if (collProps !== null)\n\t\t//     xc = collProps.coll?.find( x=> x[\"@name\"]===CollName);\n\t\tconst collProps = this.m_xmlConfigFile.SelectSingleNode(\"collprops\");\n\t\tif (collProps != null) xc = collProps.SelectSingleNode(\"coll\", \"name\", CollName);\n\t\tlet result = null;\n\t\tlet version = 2;\n\t\tif (xc == null) {\n\t\t\t// No se encuentra la coleccion\n\t\t\t// F11051802: No se pueden incluir referencias nulas en un hashtable.\n\t\t\t// this.m_lstCollections.put(CollName, null);\n\t\t\t// A12062601: Modificar el picaoto para no tener que incluir la coleccion en el mappings.\n\t\t\t// Tratamos de buscarla fuera como Collname.xml\n\t\t\tresult = await this.LoadExternalCollection(CollName);\n\t\t\tif (null == result) {\n\t\t\t\tUtils.DebugLog(\n\t\t\t\t\tUtils.TAG_FRAMEWORK,\n\t\t\t\t\t\"AppData.LoadCollection(): Collection \" + CollName + \" not found as an external file. AppData hashCode: \" + this.hashCode()\n\t\t\t\t);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\txc = result.second;\n\t\t\tversion = result.first;\n\t\t} // No se encuentra la coleccion\n\t\t// Ahora tenemos que construir la coleccion\n\t\tif (this.m_lstCollections.containsKey(CollName)) return this.m_lstCollections.get(CollName);\n\t\tconst coll = new XoneDataCollection(this, xc, version);\n\t\t// Incluirla en la lista y devolverla\n\t\tthis.m_lstCollections.put(CollName, coll);\n\t\t// Si no se pueden cargar los datos bosicos, nos largamos\n\t\tif (!(await coll.Load())) {\n\t\t\tthis.m_lstCollections.delete(CollName);\n\t\t\tUtils.DebugLog(\n\t\t\t\tUtils.TAG_FRAMEWORK,\n\t\t\t\t\"AppData.LoadCollection(): Collection \" + CollName + \" found but DataCollection.Load() failed. AppData hashCode: \" + this.hashCode()\n\t\t\t);\n\t\t\treturn null;\n\t\t}\n\t\treturn coll;\n\t}\n\tasync LoadExternalCollection(name) {\n\t\tvar _a;\n\t\tvar file = await this.m_fileManager.readFileAsync(this.m_strAppPath + \"/\" + name + \".xne\");\n\t\tconst doc = XmlDocument.getInstance();\n\t\tdoc.Deserialize(null, this.m_strAppPath, file, true);\n\t\tlet node;\n\t\tif (!((_a = node = doc.getRootNode()) === null || _a === void 0 ? void 0 : _a.getName().equals(\"coll\")))\n\t\t\tnode = doc.getRootNode().SelectSingleNode(\"coll\");\n\t\treturn { first: 2, second: node }; //JSON.parse(file.toString())};\n\t}\n\thashCode() {\n\t\treturn this._objectID.toString();\n\t}\n\tgetCompany() {\n\t\treturn this.m_company;\n\t}\n\tGetCollPropValueCache(CollName, NodeType = \"coll\", NodeName = \"values\") {\n\t\tif (!this.m_bCacheAttrValues) return null;\n\t\tlet collCache;\n\t\t// F13022103: La gestión de caches de atributos debe tener en cuenta la concurrencia.\n\t\t// Esto puede ser problemático si hay múltiples accesos\n\t\t//synchronized (this.m_lstCollPropValueCaches)\n\t\t{\n\t\t\tif (TextUtils.isEmpty(CollName)) {\n\t\t\t\t/*\n\t\t\t\t * 09/07/2018 Juan Carlos\n\t\t\t\t * Esto puede ocurrir por accidente y no es recuperable, así que mejor lanzar una\n\t\t\t\t * excepción clara.\n\t\t\t\t */\n\t\t\t\tthrow new Exception(\"Empty collection name parameter passed to GetCollPropValueCache\");\n\t\t\t}\n\t\t\tif (!this.m_lstCollPropValueCaches.containsKey(CollName)) {\n\t\t\t\t// No existe\n\t\t\t\tcollCache = new Hashtable();\n\t\t\t\tthis.m_lstCollPropValueCaches.put(CollName, collCache);\n\t\t\t} // No existe\n\t\t\t// F13022103: La gestión de caches de atributos debe tener en cuenta la concurrencia.\n\t\t\t// Quitamos el else y cogemos siempre el que haya.... fuera nuestro o no...\n\t\t\tcollCache = this.m_lstCollPropValueCaches.get(CollName);\n\t\t}\n\t\t// Ahora buscamos la colección de tipos de nodo\n\t\tlet nodeTypeCache;\n\t\t// F13022103: La gestión de caches de atributos debe tener en cuenta la concurrencia.\n\t\t//synchronized (collCache)\n\t\t{\n\t\t\tif (!collCache.containsKey(NodeType)) {\n\t\t\t\t// No existe\n\t\t\t\tnodeTypeCache = new Hashtable();\n\t\t\t\tcollCache.put(NodeType, nodeTypeCache);\n\t\t\t} // No existe\n\t\t\t// F13022103: La gestión de caches de atributos debe tener en cuenta la concurrencia.\n\t\t\t// Quitamos el else y cogemos el que haya... que haber tiene que haber...\n\t\t\tnodeTypeCache = collCache.get(NodeType);\n\t\t}\n\t\t// Ahora el nombre del nodo\n\t\tlet nodeNameCache;\n\t\t// F13022103: La gestión de caches de atributos debe tener en cuenta la concurrencia.\n\t\t//synchronized (nodeTypeCache)\n\t\t{\n\t\t\tif (TextUtils.isEmpty(NodeName)) {\n\t\t\t\t/*\n\t\t\t\t * 09/07/2018 Juan Carlos\n\t\t\t\t * Esto puede ocurrir por accidente y no es recuperable, así que mejor lanzar una\n\t\t\t\t * excepción clara.\n\t\t\t\t */\n\t\t\t\tthrow new NullPointerException(\"Empty node name parameter passed to GetCollPropValueCache\");\n\t\t\t}\n\t\t\tif (!nodeTypeCache.containsKey(NodeName)) {\n\t\t\t\t// No existe\n\t\t\t\tnodeNameCache = new Hashtable();\n\t\t\t\tnodeTypeCache.put(NodeName, nodeNameCache);\n\t\t\t} // No existe\n\t\t\t// F13022103: La gestión de caches de atributos debe tener en cuenta la concurrencia.\n\t\t\t// Quitamos el else y cogemos el que haya sea de quien sea\n\t\t\tnodeNameCache = nodeTypeCache.get(NodeName);\n\t\t}\n\t\t// Finalmente devolvemos lo que sea\n\t\treturn nodeNameCache;\n\t}\n\tGetCollPropUndefinedValues(CollName) {\n\t\t// K12050901: Permitir activar o desactivar las caches de valores de atributos.\n\t\tif (!this.m_bCacheAttrValues) return null;\n\t\tif (this.m_lstCollPropUndefinedValues == null) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this.m_lstCollPropUndefinedValues.containsKey(CollName)) return this.m_lstCollPropUndefinedValues.get(CollName);\n\t\tlet cache = new Array();\n\t\tthis.m_lstCollPropUndefinedValues.put(CollName, cache);\n\t\treturn cache;\n\t}\n\tgetMessageHolder() {\n\t\treturn this.m_messages;\n\t}\n\tgetConfigFile() {\n\t\treturn this.m_xmlConfigFile;\n\t}\n\t/**\n\t * O13030601: Optimizaciones en la búsqueda de CSS para atributos.\n\t * Pica la cadenilla de condiciones visuales y le hace un trabajillo de acondicionamiento para\n\t * que no haya que parsear las cadenas en cada llamada.\n\t */\n\tParseVisualConditions() {\n\t\t// Lo primero es ver si ya esta condición está seteada\n\t\tconst strTmp = this.m_strVisualConditions.trim();\n\t\tif (StringUtils.IsEmptyString(strTmp)) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.m_lstVisualCondDescriptors.containsKey(strTmp)) {\n\t\t\treturn;\n\t\t}\n\t\t// De lo contrario hay que parsear...\n\t\tconst parts = this.m_strVisualConditions.split(\":\");\n\t\t// Y ahora con esto hay que hacer combinaciones válidas...\n\t\tlet nStart = 0,\n\t\t\tnEnd = parts.length - 1;\n\t\tconst lstCombinations = new Array();\n\t\twhile (nStart <= nEnd) {\n\t\t\tthis.CreateVisualCombinations(parts, nStart++, nEnd--, lstCombinations);\n\t\t}\n\t\tthis.m_lstVisualCondDescriptors.put(strTmp, lstCombinations);\n\t}\n\t/// <summary>\n\t/// O13030601: Optimizaciones en la búsqueda de CSS para atributos.\n\t/// Dada una lista de partes de condiciones visuales arma combinaciones válidas para buscar CSS dentro de las listas\n\t/// de condiciones visuales que se cargaron al inicio de la aplicación.\n\t/// </summary>\n\t/// <param name=\"Parts\">Arreglo de cadenas con los pedazos que forman la combinación a analizar.</param>\n\t/// <param name=\"StartIndex\">Indice (0-based) en el cual se comienza a armar la combinación.</param>\n\t/// <param name=\"EndIndex\">Indice (0-based) en el que termina la combinación.</param>\n\t/// <param name=\"Destination\">Lista en la que se colocan las combinaciones.</param>\n\tCreateVisualCombinations(Parts, StartIndex, EndIndex, Destination) {\n\t\t// Lo primero es quitar por el final\n\t\tlet sb;\n\t\t// Caso especial... si son iguales es solo ese\n\t\tif (StartIndex == EndIndex) {\n\t\t\t// Uno y nos vamos\n\t\t\tif (!Destination.contains(Parts[StartIndex])) Destination.push(Parts[StartIndex]);\n\t\t\treturn;\n\t\t} // Uno y nos vamos\n\t\tlet nStart = StartIndex,\n\t\t\tnEnd = EndIndex;\n\t\t// La segunda vuelta la damos de atrás palantre...\n\t\twhile (nEnd >= StartIndex) {\n\t\t\t// Primera vuelta\n\t\t\tsb = new StringBuilder();\n\t\t\tfor (let i = nEnd; i >= StartIndex; i--) {\n\t\t\t\t// Adicionar\n\t\t\t\tif (!sb.isEmpty()) sb.insert(0, \":\");\n\t\t\t\tsb.insert(0, Parts[i]);\n\t\t\t} // Adicionar\n\t\t\tlet sTmp = Utils.EMPTY_STRING;\n\t\t\tif (!Destination.contains((sTmp = sb.toString()))) Destination.push(sTmp);\n\t\t\tnEnd--;\n\t\t} // Primera vuelta\n\t\twhile (nStart <= EndIndex) {\n\t\t\t// Segunda vuelta\n\t\t\tsb = new StringBuilder();\n\t\t\tfor (let i = nStart; i <= EndIndex; i++) {\n\t\t\t\t// Componer\n\t\t\t\tif (!sb.isEmpty()) sb.append(\":\");\n\t\t\t\tsb.append(Parts[i]);\n\t\t\t} // Componer\n\t\t\tlet sTmp = Utils.EMPTY_STRING;\n\t\t\tif (!Destination.contains((sTmp = sb.toString()))) Destination.push(sTmp);\n\t\t\tnStart++;\n\t\t} // Segunda vuelta\n\t}\n\tsetVisualConditions(Value, IsFixed) {\n\t\tconst strValue = Value || Utils.EMPTY_STRING;\n\t\tif (IsFixed) this.m_strFixedVisualCondition = this.m_strVisualConditions = strValue;\n\t\telse this.m_strVisualConditions = this.m_strFixedVisualCondition + \":\" + strValue;\n\t\t// Limpiar las caches de atributillos\n\t\tthis.m_lstCollPropValueCaches.clear();\n\t\tthis.m_lstCollPropUndefinedValues.clear();\n\t\t// F13061907: Limpieza de caches de atributos a nivel de objeto en caso de tenerlas.\n\t\t// Limpiar las caches locales de los objetos.\n\t\tthis.m_lstCollections.values().forEach((coll) => {\n\t\t\t// TODO: Limpiar la cache de cadaobjeto\n\t\t\tfor (var i = 0; i < coll.getCount(); i++) coll.get(i).then((value) => value.ClearCaches());\n\t\t});\n\t\t// while (enm.hasMoreElements())\n\t\t// {// Recorrer y limpiar\n\t\t// \tString key =enm.nextElement();\n\t\t//     XoneDataCollection c =this.m_lstCollections.get(key);\n\t\t//     for (long i = 0; i < c.getCount(); i++)\n\t\t//         c.get(i).ClearCaches();\n\t\t// }// Recorrer y limpiar\n\t\t// O13030601: Optimizaciones en la búsqueda de CSS para atributos.\n\t\t// Ahora nos parseamos las condiciones visuales que haya para usarlas así.\n\t\tthis.ParseVisualConditions();\n\t}\n\t/**\n\t * ADD TAG Luis\n\t * Leer el visual conditions\n\t *\n\t * @return\n\t */\n\tgetCurrentVisualConditions() {\n\t\treturn this.m_strVisualConditions;\n\t}\n\tgetVisualConditionsDescriptors() {\n\t\treturn this.m_lstVisualCondDescriptors;\n\t}\n\tgetCurrentVisualConditionsDescriptors() {\n\t\tif (this.m_lstVisualCondDescriptors.containsKey(this.m_strVisualConditions)) {\n\t\t\treturn this.m_lstVisualCondDescriptors.get(this.m_strVisualConditions);\n\t\t}\n\t\treturn null;\n\t}\n\tgetAppPath() {\n\t\treturn this.m_strAppPath;\n\t}\n\tgetSourcePath(FileName) {\n\t\treturn this.m_strAppPath + \"/\" + FileName;\n\t}\n\tsetAppPath(value) {\n\t\tthis.m_strAppPath = this.m_strFilesPath = value;\n\t\t// A12051002: Agregar FilesPath a la aplicación para manejarlo en los scripts.\n\t\t// Calcular FilePath...\n\t\tif (!this.m_strFilesPath.endsWith(\"/\")) this.m_strFilesPath += \"/\";\n\t\tthis.m_strFilesPath += Utils.DEFAUT_FILES_PATH;\n\t}\n\tsetApplicationName(value) {\n\t\tthis.m_strAppName = value;\n\t}\n\t// M2021022001: Luis Vamos a setear condiciones visuales con las macros para no hacer el trabajo dos veces\n\tupdateVisualConditionsFromMacro(MacroName, MacroValue) {\n\t\tswitch (MacroName) {\n\t\t\tcase \"##CURRENT_ORIENTATION##\":\n\t\t\t\tthis.setVisualConditions(MacroValue, false);\n\t\t\t\tbreak;\n\t\t\tcase \"##CURRENT_SIZE##\":\n\t\t\t\tthis.setVisualConditions(MacroValue, false);\n\t\t\t\tbreak;\n\t\t\tcase \"##DEVICE_OS##\":\n\t\t\t\tthis.setVisualConditions(MacroValue, true);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t// M11011001:\tIncluir macros globales y evaluación de dichas macros para IMEI y demás.\n\t// Funciones para obtener y setear una macro global\n\tsetGlobalMacro(MacroName, MacroValue) {\n\t\tif (this.m_lstGlobalMacros == null) this.m_lstGlobalMacros = new Hashtable();\n\t\tthis.m_lstGlobalMacros.put(MacroName, MacroValue);\n\t\tthis.updateVisualConditionsFromMacro(MacroName, MacroValue);\n\t}\n\t/// M11011001:\tIncluir macros globales y evaluación de dichas macros para IMEI y demás.\n\t// Devuelve el valor de una macro global\n\tgetGlobalMacro(MacroName) {\n\t\tif (this.m_lstGlobalMacros == null) return null;\n\t\t// Si no está en lista, NULL patrás\n\t\tif (!this.m_lstGlobalMacros.containsKey(MacroName)) return null;\n\t\treturn this.m_lstGlobalMacros.get(MacroName);\n\t}\n\tGetAllGlobalMacros() {\n\t\tlet mapCopy = new Hashtable();\n\t\tif (this.m_lstGlobalMacros == null || this.m_lstGlobalMacros.length <= 0) {\n\t\t\treturn mapCopy;\n\t\t}\n\t\tthis.m_lstGlobalMacros.entrySet().forEach((entry) => mapCopy.put(entry[0], entry[1]));\n\t\t// Set<Entry<String, String>> entries = m_lstGlobalMacros.entrySet();\n\t\t// for (Entry<String, String> entry : entries) {\n\t\t//     String sKey = entry.getKey();\n\t\t//     String sValue = entry.getValue();\n\t\t//     mapCopy.put(sKey, sValue);\n\t\t// }\n\t\treturn mapCopy;\n\t}\n\t/**\n\t *  Carga los datos de la empresa actual\n\t *  @param Company\t\t\t\tEmpresa que se quiere setear como activa.\n\t *  @return\t\t\t\t\t\tDevuelve TRUE si los datos de la empresa se cargan correctamente.\n\t */\n\tLoadCompanyData(Company) {\n\t\t//\n\t\t// Estas acciones solamente tienen sentido en caso de que el manejo sea interno\n\t\t// Si el programador lo esto manipulando desde fuera, no deben tocarse sus datos\n\t\t// Por eso son los dos IFES que vienen debajo...\n\t\t// Si haboa otra empresa tenemos que soltarla. Ya se vero mos\n\t\t// alante por quo...\n\t\tif (!this.m_bExternalEntIdColl) this.m_strEntIdColl = null;\n\t\tif (!this.m_bExternalEntIdLevel) this.m_strEntIdLevel = null; // Cadena de empresas por encima y al nivel de esta\n\t\t//\n\t\tif (!this.m_bExternalEntIdOwner) this.m_strEntIdOwner = null; // Empresa propietaria\n\t\tif ((this.m_company = Company) != null) {\n\t\t\t// Algo tiene\n\t\t\tthis.m_strEntTable = Company.getObjectName();\n\t\t\tthis.m_strEntPk = Company.getIdFieldName();\n\t\t\t// K11010501:\tModificaciones para la version 1.5 de Android.\n\t\t\tthis.m_nEntPkType = StringUtils.ParseBoolValue(Company.getOwnerCollection().CollPropertyValue(\"stringkey\"), false) ? 1 : 0;\n\t\t\t//\n\t\t\t// Prepara la cadenilla con las empresas que conforman el\n\t\t\t// grupo de esta empresa y sus hijos\n\t\t\t// Generar las cadenas que se usaron para los filtros\n\t\t\tif (!this.m_bExternalEntIdColl) this.m_strEntIdColl = this.GenerateEntIdColl(this.m_company.GetObjectIdString(true));\n\t\t\t//\n\t\t\t// Prepara la cadena con las empresas que eston al mismo nivel que esta\n\t\t\t// y las que eston por encima\n\t\t\tif (!this.m_bExternalEntIdLevel) this.m_strEntIdLevel = this.GenerateEntIdLevel(this.m_company.GetObjectIdString(true));\n\t\t\t//\n\t\t\tif (!this.m_bExternalEntIdOwner) this.m_strEntIdOwner = this.GenerateEntIdOwner();\n\t\t} // Algo tiene\n\t\t// Almacenar la empresa\n\t\tthis.m_company = Company;\n\t\t// Sacar la moneda de la empresa\n\t\t//this.m_currency = this.m_company.ObjectItem(\"IDMONEDA\");\n\t\t// Seoalar en la empresa el ID del usuario a la forma antigua...\n\t\tif (this.m_user != null) this.m_company.put(\"MAP_IDCURRENTUSER\", this.m_user.getId());\n\t\t// Completo\n\t}\n\tGenerateEntIdOwner() {\n\t\treturn Utils.EMPTY_STRING;\n\t}\n\tGenerateEntIdLevel(arg0) {\n\t\treturn this.m_company.get(\"ID\");\n\t}\n\tGenerateEntIdColl(arg0) {\n\t\treturn this.m_company.get(\"ID\");\n\t}\n\t/**\n\t * Elimina la empresa actual.\n\t */\n\tclearCompanyData() {\n\t\tthis.m_strEntIdColl = null;\n\t\tthis.m_strEntIdLevel = null;\n\t\tthis.m_strEntIdOwner = null;\n\t\tthis.m_company = null;\n\t\tthis.m_strEntTable = null;\n\t\tthis.m_strEntPk = null;\n\t\tthis.m_nEntPkType = 0;\n\t\tthis.m_currency = null;\n\t}\n\t/// Evalúa la macro cuyo nombre se pasa como parámetro.\n\t/// <param name=\"MacroName\">Nombre de la macro que se quiere evaluar.</param>\n\tEvaluateMacro(MacroName) {\n\t\tconst FunctionName = \"XoneApplication::EvaluateMacro\";\n\t\tif (this.m_lstGlobalMacros.containsKey(MacroName)) return this.m_lstGlobalMacros.get(MacroName);\n\t\tif (MacroName.startsWith(\"##USER_\")) return !this.m_user ? \"\" : this.m_user.ReplaceFieldValueMacros(MacroName, \"##USER_\");\n\t\tif (MacroName.equals(\"##ENTID##\")) return !this.m_company ? \"0\" : StringUtils.SafeToString(this.m_company.get(\"ID\"));\n\t\tif (MacroName.startsWith(\"##ENT_\")) return !this.m_company ? \"\" : this.m_company.ReplaceFieldValueMacros(MacroName, \"##ENT_\", false);\n\t\t//\n\t\t// Habrá que mirar otros...\n\t\treturn MacroName;\n\t}\n\t// M11011001:\tIncluir macros globales y evaluación de dichas macros para IMEI y demás.\n\t// Para sustituir macros globales\n\tPrepareSqlString(Sentence) {\n\t\t// Pos eso... si no tiene macros, pa qué revisar\n\t\tif (!Sentence.contains(\"##\")) return Sentence;\n\t\tthis.m_lstGlobalMacros.entries.forEach((value, key) => (Sentence = Sentence.replace(key, value)));\n\t\t// Enumeration<String> enm =this.m_lstGlobalMacros.keys();\n\t\t// String strTmp =Sentence;\n\t\t// while (enm.hasMoreElements())\n\t\t// {// Revisar cada una\n\t\t// \tString strName;\n\t\t// \tString strValue;\n\t\t// \tstrName =enm.nextElement();\n\t\t// \tstrValue =m_lstGlobalMacros.get(strName);\n\t\t// \tstrTmp =strTmp.replaceAll(strName, strValue);\n\t\t// }// Revisar cada una\n\t\t// Una vez terminado, devolver lo que sea\n\t\t// De lo contrario, la cadena con las sustituciones\n\t\treturn this.PrepareUserMacrosSqlString(Sentence);\n\t}\n\t// TODO: Luis\n\tPrepareUserMacrosSqlString(Sentence) {\n\t\t// Pos eso... si no tiene macros, pa qué revisar\n\t\tif (!Sentence.contains(\"##USER_\")) return Sentence;\n\t\ttry {\n\t\t\treturn this.m_user.ReplaceFieldValueMacros(Sentence, \"##USER_\");\n\t\t} catch (e) {\n\t\t\treturn Sentence;\n\t\t}\n\t}\n\t/**\n\t *\n\t * @param FileName\n\t * @param ClassName\n\t * @return\n\t */\n\tFindStylesheetByFileAndClassName(FileName, ClassName) {\n\t\tlet lstCssParsers = new Array();\n\t\tthis.m_lstCssList.forEach((cssParser) => {\n\t\t\tlet sName = cssParser.getName();\n\t\t\tif (FileName.compareTo(sName) == 0) {\n\t\t\t\tlstCssParsers.push(cssParser);\n\t\t\t}\n\t\t});\n\t\t// for (let cssParser in this.m_lstCssList) {\n\t\t//     let sName = cssParser.getName();\n\t\t//     if (FileName.compareTo(sName) == 0) {\n\t\t//         lstCssParsers.add(cssParser);\n\t\t//     }\n\t\t// }\n\t\treturn this.FindStylesheetByClassNameList(ClassName, lstCssParsers);\n\t}\n\t/**\n\t * A11070701: Introducción de los CSS en la maquinaria para poder parametrizar el mappings.\n\t * Obtiene una hoja de estilo basado en el nombre de clase que se pasa. Las hojas de estilo últimas\n\t * redefinen a las primeras, por lo que la búsqueda empieza de atrás hacia adelante.\n\t * Opera recursivamente para aquellos estilos que tengan herencia.\n\t *\n\t * @param ClassName\t\tSelector de clase para buscar el estilo\n\t * @param AttrName\t\tNombre del atributo cuyo valor se quiere obtener.\n\t * @return\t\t\t\tDevuelve un estilo que contenga este atributo o NULL.\n\t */\n\tFindStylesheetByClassName(ClassName, AttrName) {\n\t\t// O12060701: Excepciones en la gestión de atributos para no buscarlos en los CSS.\n\t\t// Las excepciones no las buscamos\n\t\tif (ClassName.startsWith(\"coll.\") || ClassName.equals(\"coll\")) {\n\t\t\t// Colección\n\t\t\tif (this.m_lstCollExceptions.contains(AttrName)) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else if (ClassName.startsWith(\"prop.\") || ClassName.equals(\"prop\")) {\n\t\t\t// Prop\n\t\t\tif (this.m_lstPropExceptions.contains(AttrName)) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\tlet lstCssParsers;\n\t\tlet css;\n\t\t// M11072901: Modificaciones al mecanismo de CSS para adaptarse a condiciones visuales.\n\t\t// Lo primero que tenemos que hacer es ver si tenemos condiciones visuales. En este\n\t\t// caso tendremos que buscar primero en la lista apropiada.\n\t\tif (!StringUtils.IsEmptyString(this.m_strVisualConditions)) {\n\t\t\t// Buscar en esta lista\n\t\t\tif (this.m_lstConditionCssList != null && this.m_lstConditionCssList.length > 0) {\n\t\t\t\tlet str = this.m_strVisualConditions.trim();\n\t\t\t\tlet lstDescriptors = this.m_lstVisualCondDescriptors.get(str);\n\t\t\t\tif (lstDescriptors == null) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tfor (let index = 0; index < lstDescriptors.length; index++) {\n\t\t\t\t\tconst sDescriptor = lstDescriptors[index];\n\t\t\t\t\tif (this.m_lstConditionCssList.containsKey(sDescriptor)) {\n\t\t\t\t\t\t// Si encontramos lo que sea, nos vamos\n\t\t\t\t\t\tlstCssParsers = this.m_lstConditionCssList.get(sDescriptor);\n\t\t\t\t\t\tif (null != (css = this.FindStylesheetByClassAttrList(ClassName, AttrName, lstCssParsers))) {\n\t\t\t\t\t\t\treturn css;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Si llegamos aquí es que no hay condiciones visuales o que no han redefinido nada\n\t\tcss = this.FindStylesheetByClassAttrList(ClassName, AttrName, this.m_lstCssList);\n\t\treturn css;\n\t}\n\tFindStylesheetByClassAttrList(ClassName, AttrName, listCss) {\n\t\tif (listCss == null) {\n\t\t\treturn null;\n\t\t}\n\t\tlet k = listCss.length;\n\t\twhile (k > 0) {\n\t\t\t// Empezamos por el finalll\n\t\t\tk--;\n\t\t\tlet css = listCss[k];\n\t\t\tlet rule = css.getRuleBySelector(ClassName);\n\t\t\tif (rule != null) {\n\t\t\t\t// Bueno... al menos existe\n\t\t\t\tif (rule.contains(AttrName)) return rule;\n\t\t\t\t// De lo contrario puede que sea hija de otro que sí lo implemente\n\t\t\t\tif (rule.contains(\"extends\")) {\n\t\t\t\t\t// Ver cuál es la base\n\t\t\t\t\tlet strBase = rule.getRuleValue(\"extends\");\n\t\t\t\t\tlet base = this.FindStylesheetByClassName(strBase, AttrName);\n\t\t\t\t\tif (base != null) return base;\n\t\t\t\t} // Ver cuál es la base\n\t\t\t} // Bueno... al menos existe\n\t\t} // Empezamos por el finalll\n\t\t// Estoooo no lo tenemos o no hay stylesheets.\n\t\treturn null;\n\t}\n\tFindStylesheetByClassNameList(ClassName, CssList) {\n\t\tlet k = CssList.length;\n\t\twhile (k > 0) {\n\t\t\tk--;\n\t\t\tlet css = CssList[k];\n\t\t\tlet rule = css.getRuleBySelector(ClassName);\n\t\t\tif (rule != null) {\n\t\t\t\treturn rule;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\t/**\n\t * A11070701: Introducción de los CSS en la maquinaria para poder parametrizar el mappings.\n\t *\n\t * @return\t\tTRUE si en la aplicación hay al menos un CSS cargado.\n\t */\n\thasStylesheets() {\n\t\t// M11072901: Modificaciones al mecanismo de CSS para adaptarse a condiciones visuales.\n\t\t// Ahora tenemos el valor cacheado.\n\t\treturn this.m_bHasStylesheets;\n\t}\n\t/**\n\t * Devuelve la lista de cualificación de campos de la colección cuyo nombre se pasa como parámetro.\n\t * @param CollName\t\tNombre de la colección cuya lista de cualificación se quiere obtener.\n\t * @return\t\t\t\tDevuelve una tabla de cache para la colección cuyo nombre se pasa como parámetro.\n\t */\n\tGetQualifyCache(CollName) {\n\t\t// Si ya la tiene, devolverla\n\t\tif (this.m_lstQualifyCaches.containsKey(CollName)) return this.m_lstQualifyCaches.get(CollName);\n\t\t// De lo contrario crearla\n\t\tlet cache = new Hashtable();\n\t\tthis.m_lstQualifyCaches.put(CollName, cache);\n\t\treturn cache;\n\t}\n\t/**\n\t * F09052004:\tModificación de las interfaces para implementar manejo de errores.\n\t * Implementación de la función para registrar el error de ejecución a nivel de script.\n\t * Se utiliza la variable de error XOne para almacenar estos datos.\n\t */\n\tRegisterError(Code, Description) {\n\t\t// K12060701: Modificaciones para permitir multithreading en los scripts y depuración.\n\t\t// Gestionar las variables de error a nivel de thread\n\t\tlet error = this.getError();\n\t\tif (error == null) {\n\t\t\treturn;\n\t\t}\n\t\terror.setNumber(Code);\n\t\terror.setDescription(Description);\n\t\terror.setFailedSql(null);\n\t}\n\t/**\n\t * @return\t\t\tExpone el objeto de error de esta aplicación\n\t */\n\tgetError() {\n\t\t// K12060701: Modificaciones para permitir multithreading en los scripts y depuración.\n\t\t// Para gestionar esto de manera que sea independiente para cada thread.\n\t\tif (this.m_error == null) {\n\t\t\treturn null;\n\t\t}\n\t\tlet error = this.m_error.pop();\n\t\tif (error == null) {\n\t\t\t// Lo creamos ahora\n\t\t\terror = new XoneError();\n\t\t\tthis.m_error.push(error);\n\t\t} // Lo creamos ahora\n\t\treturn error;\n\t}\n\tContainsError() {\n\t\tif (this.m_error == null) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.m_error.length > 0;\n\t}\n\tgetAppNode() {\n\t\treturn this.m_xmlAppNode;\n\t}\n\tbind() {}\n\tcreateCollection(Name, SourceNode = null, version) {\n\t\tlet strCollName = Name;\n\t\tif (StringUtils.IsEmptyString(strCollName) && SourceNode) strCollName = SourceNode.getAttrValue(Utils.PROP_ATTR_NAME);\n\t\tif (StringUtils.IsEmptyString(strCollName)) return null;\n\t\t// Crearla siempre... si ya hay otra habrá que machacarla\n\t\tlet coll;\n\t\tif (this.m_lstCollections.containsKey(strCollName)) {\n\t\t\t// Existe\n\t\t\tcoll = this.m_lstCollections.get(strCollName);\n\t\t\tthis.m_lstCollections.delete(strCollName);\n\t\t} // Existe\n\t\tlet collProps = this.m_xmlConfigFile.SelectSingleNode(Utils.COLL_COLLPROPS);\n\t\tif (collProps == null) return null;\n\t\t// Buscamos el nodo en cuestión, si existe tendremos que reemplazarlo...\n\t\tlet oldNode = collProps.SelectSingleNode(Utils.COLL_COLL, Utils.PROP_ATTR_NAME, strCollName);\n\t\tif (oldNode != null) collProps.replaceChild(oldNode, SourceNode);\n\t\telse collProps.addChild(SourceNode, SourceNode.getName(), Utils.PROP_ATTR_NAME, strCollName);\n\t\t// Ahora tenemos que construir la colección\n\t\tcoll = new XoneDataCollection(this, SourceNode, version);\n\t\t// Si no se pueden cargar los datos básicos, nos largamos\n\t\tif (!coll.Load()) return null;\n\t\t// Incluirla en la lista y devolverla\n\t\tthis.m_lstCollections.put(strCollName, coll);\n\t\treturn coll;\n\t}\n\t/**\n\t * @return\t\t\tDevuelve TRUE si la aplicación tiene activa la réplica selectiva (solo modifican la cola las colecciones marcadas)\n\t */\n\tgetSelectiveReplication() {\n\t\treturn this.m_bSelectiveReplication;\n\t}\n\t/**\n\t * Asigna valor a la bandera que indica si la aplicación tiene activa la réplica selectiva.\n\t * @param value\t\tTRUE para habilitar la réplica selectiva, FALSE para usar réplica normal (todo replica)\n\t */\n\tsetSelectiveReplication(value) {\n\t\tthis.m_bSelectiveReplication = value;\n\t}\n\tcreateObject(sClassId) {\n\t\t// TODO: Luis esto son los creadores de objetos\n\t\treturn {};\n\t}\n\tdecryptString(value) {}\n\tencryptString(value) {}\n\terror() {}\n\texecuteSql(sql) {}\n\tfailWithMessage(Code, Message) {\n\t\t/// K12060701: Modificaciones para permitir multithreading en los scripts y depuración.\n\t\t// Las variables de error van por threads.\n\t\tswitch (Message) {\n\t\t\tcase Utils.FAIL_EXITAPP:\n\t\t\t\tthis.getUserInterface().exitApp();\n\t\t\t\tbreak;\n\t\t\tcase Utils.FAIL_EXIT:\n\t\t\t\tthis.getUserInterface().exit();\n\t\t\t\tbreak;\n\t\t\tcase Utils.FAIL_LOGIN:\n\t\t\t\tthis.getUserInterface().login();\n\t\t\t\tbreak;\n\t\t\tcase Utils.MACRO_STARTREPLICA:\n\t\t\t\tthis.getUserInterface().startReplica();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlet error = this.getError();\n\t\t\t\terror.setNumber(Code);\n\t\t\t\terror.setDescription(Message);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\tgetAllowedEnterprises() {}\n\tgetAllowedUsers() {}\n\tgetCollectionCount() {\n\t\treturn this.m_lstCollections.length;\n\t}\n\tgetConnString() {}\n\tgetCurrentEnterprise() {\n\t\treturn this.m_company;\n\t}\n\tgetFilesPath() {\n\t\treturn this.m_strFilesPath;\n\t}\n\tgetReplicationId() {}\n\tgetReservedObject() {}\n\tisReplicating() {}\n\tpopValue() {}\n\tpushValue(objData) {\n\t\tthis.m_ui.openEditView(objData);\n\t}\n\tpushValueAndExit(objData) {}\n\tregisterPush() {}\n\tsafeRound(value) {}\n\tsetConnString(param0) {}\n\tsetIsReplicating(booleano) {}\n\tvariantToString(param0) {}\n\twriteConsoleString(param0) {}\n}\n\n//# sourceMappingURL=XoneApplication.js.map\n","import { __SCRIPT_WRAPPER, __SCRIPT_WRAPPERASYNC } from \"../xone/source/scripts/__SCRIPT_WRAPPER__.js\";\nexport default class XOneJavascript {\n    static run(appData, script, ctx, mapRuntimeObjects, Arguments, sMessage = \"\") {\n        __SCRIPT_WRAPPER(appData, appData.getUserInterface(), ctx.getObjectHost(), script, Arguments);\n    }\n    static async runAsync(appData, script, ctx, mapRuntimeObjects, Arguments, sMessage = \"\") {\n        return __SCRIPT_WRAPPERASYNC(appData, appData.getUserInterface(), ctx.getObjectHost(), script, Arguments);\n    }\n}\n\n//# sourceMappingURL=XOneJavascript.js.map\n"],"sourceRoot":""}