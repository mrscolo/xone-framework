<?xml version="1.0" encoding="iso-8859-15"?>
<coll name="EspecialSonidos" title="XoneCollvacia" sql="" objname="" updateobj="" progid="" special="true" group-swipe="true">
  <group name="HEADER" id="10" class="groupfixed_header">
    <frame name="frmtitulo" class="frmsuperior">
      <prop name="SALIR" type="B" class="btvolversuper" />
      <prop name="MENU" type="TL" class="tlsuper" title="PERIFERICOS" />
      <prop name="MAP_COLORACTIVO" type="T" visible="0" />
    </frame>
  </group>
  <group name="FOOTER" id="0" class="groupfixed_footer">
    <prop name="MAP_GROUP" type="N" visible="0" />
    <prop name="MAP_TOTAL_PAGES" type="N" visible="0" />
    <frame name="FLOAT_FOOTER_FRAME" class="frmsuperior">
      <prop name="MAP_LAST" type="B" img="last.png" title="Anterior" onclickx="javascript:prev(self,'ir');" method="ExecuteNode(anterior)" forecolor="#FFFFFF" width="45%" height="80%" labelwidth="1" imgsel="last-sel.png" disablevisible="MAP_GROUP=1" />
      <prop name="MAP_LAST_EMPTY" type="B" bgcolor="#00000000" width="45%" height="80%" labelwidth="1" newline="false" disablevisible="MAP_GROUP&gt;1" />
      <prop name="MAP_NEXT" type="B" img="next.png" title="Siguiente " onclickx="javascript:next(self,'ir');" method="ExecuteNode(siguiente)" forecolor="#FFFFFF" width="45%" height="80%" labelwidth="1" newline="false" lmargin="6%" imgsel="next-sel.png" disablevisible="MAP_GROUP=##FLD_MAP_TOTAL_PAGES##" />
    </frame>
  </group>
  <group name="Group1_Reproducir" id="1" onfocus="ExecuteNode(onfocusgrupo(1))">
    <prop name="MAP_ETQ11" type="TL" class="classtl" title="REPRODUCIR SONIDO" tmargin="20p" />
    <!--
		  <prop name="MAP_LINEASEPARAR1" type="B" bgcolor="#333333" visible="1" labelwidth="0" width="640p" lmargin="40p" height="5p" tmargin="5p" bmargin="2p" locked="true" />
		  -->
    <frame name="borde" width="98%" lmargin="1%" height="600p" forecolor="#333333" framebox="true" tmargin="20p">
      <prop name="SonidosNotificaciones" type="Z" contents="SonidosNotificaciones" width="96%" height="580p" lmargin="2%" tmargin="10p" />
      <contents name="SonidosNotificaciones" src="ContentSonidosNotificaciones" />
    </frame>
    <prop name="MAP_SONIDO" type="T" visible="0" />
    <prop name="MAP_VOLUMEN" type="N" visible="0" class="classcheck" title="Sonido" />
    <prop name="MAP_VIBRACION" type="N" visible="0" class="classcheck" title="Vibrar" />
    <prop name="MAP_IMGVOLUMEN" type="T" visible="0" />
    <prop name="MAP_IMGVIBRACION" type="T" visible="0" />
    <prop name="MAP_ID" type="N" visible="0" />
    <prop name="MAP_BANDERA" type="N" visible="0" />
    <prop name="MAP_TLSONIDO" type="TL" class="classtl" title="Sonido Seleccionado:" tmargin="20p" />
    <prop name="MAP_BTSONIDOSEL" type="T" width="65%" height="90p" lmargin="5%" tmargin="20p" labelwidth="0" />
    <prop name="MAP_BTPLAYSEL" type="B" width="90p" height="90p" lmargin="5%" tmargin="20p" img="play.png" disablevisible="MAP_SONIDO=''" newline="false" method="ExecuteNode(playsound)" />
    <prop name="MAP_TLOPCIONES" type="TL" class="classtl" title="Opciones de Reproducción:" tmargin="20p" />
    <frame name="frm_opciones" width="90%" lmargin="5%">
      <prop name="MAP_BTVOLUMEN" type="B" title="" width="90p" height="90p" method="ExecuteNode(setvolumen)" img="##FLD_MAP_IMGVOLUMEN##" />
      <prop name="MAP_BTVIBRACION" type="B" title="" lmargin="5%" width="90p" height="90p" method="ExecuteNode(setvibracion)" img="##FLD_MAP_IMGVIBRACION##" newline="false" />
      <prop name="MAP_BTBORRAR" type="B" title="" lmargin="5%" width="90p" height="90p" method="ExecuteNode(borrar)" img="../icons/cancelar.png" newline="false" />
      <prop name="MAP_REPETICIONES" type="T" lmargin="3%" floating-tooltip="true" tooltip="Repeticiones" width="250p" height="90p" newline="false" />
    </frame>
  </group>
  <group name="Group2_Grabacion" id="2" onfocus="ExecuteNode(onfocusgrupo(2))">
    <prop name="MAP_ET21" type="TL" class="classtl" title="Grabadora de Sonidos" />
    <!-- Props invisibles: 
			MAP_RECORD_ON:		Vale 0 cuando estamos listos para grabar y 99 cuando estemos grabando.
			MAP_RECORD_FILE:	Nombre del fichero con la grabación, toma su nombre automáticamente.
			MAP_IMGBOTONAUDIO:	Valdra un nombre u otro dependiendo de la imagen que queramos mostrar en el botón.
		-->
    <prop name="MAP_RECORD_ON" type="N" visible="0" />
    <prop name="MAP_RECORD_FILE" type="T" visible="0" />
    <prop name="MAP_IMGBOTONAUDIO" type="T" visible="0" />
    <frame name="frm_grabacion" width="96%" align="center" tmargin="20p">
      <prop name="MAP_ET22" type="TL" title="Iniciar ó Detener grabación" width="70%" />
      <prop name="MAP_BOTONGRABAR" lmargin="20p" width="90p" height="90p" newline="false" img="##FLD_MAP_IMGBOTONAUDIO##" method="executenode(grabacion('REC'))" labelwidth="0" type="B" />
    </frame>
    <prop name="MAP_ET23" type="TL" class="classtl" title="Fichero Generado:" tmargin="20p" />
    <prop name="MAP_ET24" type="TL" title="No se ha grabado ningún fichero." lmargin="20p" tmargin="20p" width="80%" disablevisible="AUDIO&lt;&gt;''" />
    <prop name="AUDIO" type="T" labelwidth="0" lmargin="20p" tmargin="20p" width="80%" height="90p" onchange="refresh(MAP_ET24,MAP_BOTONAUDIOPLAY,MAP_TITULOGRABACION,MAP_BOTONSAVE)" />
    <prop name="MAP_BOTONAUDIOPLAY" newline="false" lmargin="20p" tmargin="20p" width="90p" height="90p" img="play.png" disablevisible="AUDIO=''" method="executenode(grabacion('STOP'))" labelwidth="0" type="B" />
    <prop name="MAP_TITULOGRABACION" type="T" labelwidth="6" lmargin="20p" tmargin="40p" width="80%" title="Nombre:" text-border="true" disablevisible="AUDIO=''" />
    <prop name="MAP_BOTONSAVE" newline="false" lmargin="20p" tmargin="20p" width="90p" height="90p" img="grabar.png" disablevisible="AUDIO=''" method="executenode(save)" labelwidth="0" type="B" />
  </group>
  <after-edit>
    <action name="setval" field="MAP_GROUP" value="1" />
    <action name="setval" field="MAP_TOTAL_PAGES" value="2" />
    <action name="setval" field="MAP_VOLUMEN" value="1" />
    <action name="setval" field="MAP_VIBRACION" value="1" />
    <action name="setval" field="MAP_IMGVOLUMEN" value="sonido_on.png" />
    <action name="setval" field="MAP_IMGVIBRACION" value="vibracion_on.png" />
    <action name="setval" field="MAP_SONIDO" value="" />
    <action name="setval" field="MAP_BTSONIDOSEL" value="No hay sonido seleccionado" />
    <action name="setval" field="MAP_RECORD_ON" value="0" />
    <action name="setval" field="MAP_IMGBOTONAUDIO" value="record.png" />
    <action name="setval" field="AUDIO" value="" />
    <action name="setval" field="MAP_REPETICIONES" value="1" />
  </after-edit>
  <!-- ************************************************** -->
  <!--    ACCIONES DE LA PESTAÑA DE REPRODUCIR SONIDOS    -->
  <!-- ************************************************** -->
  <setvolumen refresh="false">
    <action name="runscript">
      <script language="javascript">
				if (self.MAP_VOLUMEN==1) {
					self.MAP_VOLUMEN=0;
					self.MAP_IMGVOLUMEN="sonido_off.png";
					ui.showToast("Sonido Desactivado");
				}
				else {
					self.MAP_VOLUMEN=1;
					self.MAP_IMGVOLUMEN="sonido_on.png";				
					ui.showToast("Sonido Activo, Compruebe el volumen de su dispositivo.");
				}
				ui.refresh("MAP_BTVOLUMEN");
	    	</script>
    </action>
  </setvolumen>
  <setvibracion refresh="false">
    <action name="runscript">
      <script language="javascript">
				if (self.MAP_VIBRACION==1) {
					self.MAP_VIBRACION=0;
					self.MAP_IMGVIBRACION="vibracion_off.png";
					ui.showToast("Vibración Desactivada");
				}
				else {
					self.MAP_VIBRACION=1;
					self.MAP_IMGVIBRACION="vibracion_on.png";				
					ui.showToast("Vibración Activa");
				}
				ui.refresh("MAP_BTVIBRACION");	
	    	</script>
    </action>
  </setvibracion>
  <playsound show-wait-dialog="false">
    <action name="runscript">
      <script language="javascript">
				var bVibrate;
				if (self.MAP_VIBRACION == 1) {
					bVibrate = true;
				} else {
				    bVibrate = false;
				}
				/**
				 * Parámetros:
				 * 1) Ruta del archivo de sonido (si es relativa, por defecto
				 * busca en la carpeta files)
				 * 2) Número de repeticiones de la reproducción
				 */
				ui.playSound(self.MAP_SONIDO, self.MAP_REPETICIONES);
				if (bVibrate) {
				    ui.vibrate("3000,3000,3000,3000");
				}
			</script>
    </action>
  </playsound>
  <borrar show-wait-dialog="false">
    <action name="runscript">
      <script language="javascript" async="true">
				var collCont = await self.getContents("SonidosNotificaciones");
	            if ( collCont != null || collCont != "undefined"){
		            var obj = createObject("FileManager");
		            //sonido = "/storage/sdcard0/xone/app_AllbyXOne/files/"+self.MAP_SONIDO")
		            var sonido = self.MAP_SONIDO;
		           	//ui.ShowToast sonido
		            //sonido = replace(sonido,right(sonido, 4),"")
		            //ui.ShowToast sonido
		            var res = obj.fileExists(sonido);
					if ( res == 0 ){
						  obj.delete(sonido);
						  //si se pasa una cadena borra el id 
						  //si se pasa un entero borra el indice del array del contents (Empieza por 0)
						  collCont.deleteItem(self.MAP_ID.toString());
						  self.MAP_BTSONIDOSEL = "";
						  self.MAP_SONIDO = "";
					}else{
						await ui.msgBox("El audio no existe","Aviso",0);
					}
		          	ui.getView(self).refresh("SonidosNotificaciones");
	            }
			</script>
    </action>
  </borrar>
  <!-- ************************************************** -->
  <!--   ACCIONES DE LA PESTAÑA DE GRABACION DE SONIDOS   -->
  <!-- ************************************************** -->
  <grabacion>
    <action name="runscript">
      <param name="accion" />
      <script language="javascript" async="true">
			if ( accion == "REC" ){
				//Si pulsamos el boton de grabacion 
				// 1.- Preguntamos si ya estabamos grabando para parar la grabacion.
				// 2.- Ponemos como imagen la de grabar por si quiere hacer otra grabacion
				if ( self.MAP_RECORD_ON == 99){
					ui.stopAudioRecord();  
					self.MAP_RECORD_ON = 0;
					self.MAP_IMGBOTONAUDIO = "record.png";
					ui.refresh("MAP_BOTONGRABAR");
				}else{
					//Si no estábamos grabando, ponemos la bandera de que estamos grabando a 99 y ponemos el icono de parar grabación		
					self.MAP_RECORD_ON = 99;
					self.MAP_IMGBOTONAUDIO = "stop.png";
					ui.refresh("MAP_BOTONGRABAR");
					//Las opciones del "ui.StartAudioRecord" son: 
					// 1.- Nodo a ejecutar tras la grabacion
					// 2.- Campo destino con el nombre del fichero
					// 3.- Duracion maxima de la grabacion expresada en segundos (0 - Sin limite, hasta que la paremos nosotros.)
					ui.startAudioRecord("onrecordfinished","MAP_RECORD_FILE", 0);
				}
			}else{
				if ( self.AUDIO.length == 0){
					await ui.msgBox("No existe audio para reproducir.","Aviso",0);
				}else{
					// Si en el ultimo parametro ponemos -1 se reproduce indefinidamente.					
					ui.playSoundAndVibrate(self.AUDIO.toString(),"",1);
				}
			}				
		</script>
    </action>
  </grabacion>
  <onrecordfinished>
    <action name="runscript">
      <script language="javascript">
          		//Ponemos la bandera de grabacion a 0
          		//Ponemos en "AUDIO" el fichero generado
          		//Ponemos la imagen del boton de grabacion en "REC" de nuevo para que puede iniciar otra grabacion.
          		self.MAP_RECORD_ON = 0;
                self.AUDIO = self.MAP_RECORD_FILE;
				self.MAP_IMGBOTONAUDIO = "record.png";
				ui.refresh("MAP_ET24,MAP_BOTONGRABAR,AUDIO,MAP_BOTONAUDIOPLAY,MAP_TITULOGRABACION,MAP_BOTONSAVE");
              </script>
    </action>
  </onrecordfinished>
  <save>
    <action name="runscript">
      <script language="javascript" async="true">
					if (self.MAP_TITULOGRABACION!="") {
						var coll = await appData.getCollection("ContentSonidosNotificaciones");
						var obj = await coll.createObject();
	
						coll.addItem(obj);
	
						obj.TITULO=self.MAP_TITULOGRABACION;
						obj.SONIDO=self.AUDIO;
					 
				        await obj.save();
				        
				        //Refrescamos el contents (el name del prop type Z)
				        ui.refresh("SonidosNotificaciones");
				        ui.showToast("El sonido "+self.MAP_TITULOGRABACION+", se ha grabado correctamente, puede reproducirlo tambien en la primera pestaña");
					}
					else {
						await ui.msgBox("Escriba un nombre para el sonido","Error",0);
					}
			</script>
    </action>
  </save>
  <!-- ************************************************** -->
  <!--      ACCIONES DE ANTERIOR, SIGUIENTE Y SALIR       -->
  <!-- ************************************************** -->
  <onfocusgrupo show-wait-dialog="false" refresh="false">
    <action name="runscript">
      <param name="index" />
      <script language="javascript">
      		self.MAP_GROUP = index;
      		ui.refresh("MAP_LAST,MAP_LAST_EMPTY,MAP_NEXT");
		</script>
    </action>
  </onfocusgrupo>
  <ir show-wait-dialog="false">
    <action name="runscript">
      <param name="index" />
      <script language="javascript">
      		ui.showGroup(index,"##ALPHA_IN##",500,"##ALPHA_OUT##",500);
      		self.MAP_GROUP = index;
		</script>
    </action>
  </ir>
  <anterior show-wait-dialog="false">
    <action name="runscript">
      <script language="javascript" async="true">
      		if( self.MAP_GROUP &gt; 1 ){
      			var index = self.MAP_GROUP - 1;
      			await self.executeNode("ir", index);
      		}
		</script>
    </action>
  </anterior>
  <siguiente show-wait-dialog="false">
    <action name="runscript">
      <script language="javascript" async="true">
      		if (self.MAP_GROUP &lt; self.MAP_TOTAL_PAGES) {
      			//var index = self.MAP_GROUP + 1;
      			if (self.MAP_GROUP+1==2) {
      				//Vaciamos los campos de la grabadora de sonidos si hubieran estado rellenos previamente
      				self.AUDIO="";
      				self.MAP_TITULOGRABACION="";
      				//ui.refresh("AUDIO,MAP_TITULOGRABACION");
      			}
      			await self.executeNode("ir",self.MAP_GROUP + 1);
      		}
		</script>
    </action>
  </siguiente>
  <onback show-wait-dialog="false">
    <action name="runscript">
      <script language="javascript">
				appData.failWithMessage(-11888,"##EXIT##");
			</script>
    </action>
  </onback>
</coll>