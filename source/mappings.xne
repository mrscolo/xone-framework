<?xml version="1.0" encoding="iso-8859-15"?>
<xml>
  <collprops type="general">
    <coll name="Empresas" title="la empresa" sql="select t1.ID,t1.CODIGO   from ##PREF##empresa t1" shadow="false" objname="empresa" updateobj="empresa" progid="ASGestion.CASEmpresa" 
    fontsize="9" nomenmask="8" editwidth="101" editheight="97" filter="" sort="">
    <group name="General" id="1">
        <prop name="CODIGO" visible="3" type="N" fieldsize="4" autosearch="true" />
        <prop name="NOMBRE" visible="3" type="T" size="100" fieldsize="24" />
    </group>
    
      <include file="funciones_calendario.js" language="javascript" />
      <include file="pdf.js" language="javascript" />
      <include file="funciones_varias.js" language="javascript" />
      <!--<include file="funciones_varias.vbs" language="vbscript" />-->
      <include file="eventos.js" language="javascript" />
      <include file="funciones.js" language="javascript" encoding="UTF-8" />
      <include file="funcionesCamara.js" language="javascript" encoding="UTF-8" />
      <include file="funciones_openStreetMap.js" language="javascript" encoding="UTF-8" />
      
    <onlogon>
        <action name="Macro" type="runscript">
          <script language="javascript">
          	// Inicializamos la variable global a cero, para cuando tengamos que utilizarla mas adelante
          	appData.getCurrentEnterprise().setVariables("MIUBICACION",0);
          	appData.getCurrentEnterprise().setVariables("LATITUD",0);
			appData.getCurrentEnterprise().setVariables("LONGITUD",0);		
          </script>
        </action>
    </onlogon>
    
    <!-- El framework ya se encarga de gestionar la provisión segura, pero si queremos personalizar los mensajes 
        ó capturar el evento para hacer algo, el nodo <sys-message> es el lugar para hacerlo.
        En éste evento, nos vienen los códigos de evento del XOneLive y actuaremos en consecuencia.
        
        ¡¡¡ OJO !!!!
        
        Si se define el nodo sys-message, aunque no se contemplen todos los casos, el framework dejará el control al programador,
        esto es especialmente problemático con la provisión segura, ya que será el programador el encargado de asegurarse de que se replica toda la información.
    -->
    <sys-message>
    	<action name="runscript">
    		<param name="codigo" />
    		<param name="message" />
    		<!-- Este parámetro liveResponse en iOS aún no está implementado
    		<param name="liveResponse" />
    		-->
		    <param name="liveResponse"/>
    		<script language="javascript">
    			sysMessage(codigo,message);
    		</script>
    	</action>
    </sys-message>

</coll>
    <coll name="Usuarios" title="el usuario" sql="select t1.ID,t1.IDEMPRESA,t1.LOGIN,t1.PWD,t1.NOMBRE   from ##PREF##usuarios t1" shadow="false" 
objname="usuarios" updateobj="usuarios" progid="ASGestion.CASUser" dropdown="true" editwidth="101" editheight="97" fontsize="9" filter="" sort="">
      <group name="General" id="1">
        <prop name="IDEMPRESA" visible="0" type="N" mapcol="Empresas" mapfld="ID" />
        <prop name="LOGIN" visible="3" type="T" fieldsize="10" fixed-text="true" size="10" />
        <prop name="PWD" type="T" fieldsize="10" fixed-text="true" size="10" />
        <prop name="NOMBRE" visible="3" type="T" fieldsize="30" fixed-text="true" size="30" />
        <prop name="USERTYPE" type="T" fieldsize="30" fixed-text="true" size="50" />
      </group>
      <create>
        <action name="setval" field="IDEMPRESA" value="##ENTID##" />
      </create>
    </coll>
  </collprops>
</xml>